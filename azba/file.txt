===== .\.update =====
{
"target": "staging,production",
"addons": "custom_invoice_templates, az_account_payments"
}


===== .\file.txt =====


===== .\onefile.tx =====
===== .\.update =====
{
"target": "staging,production",
"addons": "custom_invoice_templates, az_account_payments"
}


===== .\onefile.tx =====


===== .\advanced_pos_reports\__init__.py =====
from . import wizard
from . import models

===== .\advanced_pos_reports\__manifest__.py =====
# -*- coding: utf-8 -*-
######################################################################################
#
#    Cybrosys Technologies Pvt. Ltd.
#
#    Copyright (C) 2022-TODAY Cybrosys Technologies(<https://www.cybrosys.com>).
#    Author: Cybrosys Techno Solutions(<https://www.cybrosys.com>)
#
#    This program is under the terms of the Odoo Proprietary License v1.0 (OPL-1)
#    It is forbidden to publish, distribute, sublicense, or sell copies of the Software
#    or modified copies of the Software.
#
#    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
#    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
#    ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
#    DEALINGS IN THE SOFTWARE.
#
########################################################################################

{
    'name': 'Advanced POS Reports',
    'version': '15.0.1.0.0',
    'summary': """Generates Various Reports From POS Screen and From Reporting Menu""",
    'description': """Generates various reports like Sales summary, top selling products / categories / 
                      customers report, ongoing sessions report, posted sessions report under reporting menu, """,
    'category': 'Sale',
    'author': 'Cybrosys Techno Solutions',
    'company': 'Cybrosys Techno Solutions',
    'maintainer': 'Cybrosys Techno Solutions',
    'depends': ['point_of_sale', 'pos_sale'],
    'website': 'https://www.cybrosys.com',
    'data': [
        'security/ir.model.access.csv',
        'wizard/pos_sale_details.xml',
        'wizard/top_selling.xml',
        'wizard/ongoing_session.xml',
        'wizard/posted_session.xml',
        'wizard/top_selling.xml',
        'views/reports.xml',
        'views/report_pos_saledetails.xml',
        'views/report_pos_posted_session.xml',
        'views/report_pos_ongoing_session.xml',
        'views/report_pos_top_selling_products.xml',
        'views/report_pos_top_selling_categories.xml',
        'views/report_pos_top_selling_customers.xml',
    ],
    'assets': {
        'point_of_sale.assets': [
            'advanced_pos_reports/static/src/js/ControlButtons/PaymentSummaryButton.js',
            'advanced_pos_reports/static/src/js/ControlButtons/ProductSummaryButton.js',
            'advanced_pos_reports/static/src/js/ControlButtons/CategorySummaryButton.js',
            'advanced_pos_reports/static/src/js/ControlButtons/LocationSummaryButton.js',
            'advanced_pos_reports/static/src/js/ControlButtons/OrderSummaryButton.js',
            'advanced_pos_reports/static/src/js/ControlButtons/SessionSummaryButton.js',
            'advanced_pos_reports/static/src/js/Popups/LocationSummaryPopup.js',
            'advanced_pos_reports/static/src/js/Popups/CategorySummaryPopup.js',
            'advanced_pos_reports/static/src/js/Popups/OrderSummaryPopup.js',
            'advanced_pos_reports/static/src/js/Popups/PaymentSummaryPopup.js',
            'advanced_pos_reports/static/src/js/Popups/ProductSummaryPopup.js',
            'advanced_pos_reports/static/src/js/Popups/SessionSummaryPopup.js',
            'advanced_pos_reports/static/src/js/ReceiptScreen/LocationSummaryReceiptScreen.js',
            'advanced_pos_reports/static/src/js/ReceiptScreen/CategorySummaryReceiptScreen.js',
            'advanced_pos_reports/static/src/js/ReceiptScreen/OrderSummaryReceiptScreen.js',
            'advanced_pos_reports/static/src/js/ReceiptScreen/PaymentSummaryReceiptScreen.js',
            'advanced_pos_reports/static/src/js/ReceiptScreen/ProductSummaryReceiptScreen.js',
            'advanced_pos_reports/static/src/js/ReceiptScreen/SessionSummaryReceiptScreen.js',
            'advanced_pos_reports/static/src/js/Receipts/OrderSummaryReceipt.js',
            'advanced_pos_reports/static/src/js/Receipts/PaymentSummaryReceipt.js',
            'advanced_pos_reports/static/src/js/Receipts/ProductSummaryReceipt.js',
            'advanced_pos_reports/static/src/js/Receipts/CategorySummaryReceipt.js',
            'advanced_pos_reports/static/src/js/Receipts/SessionSummaryReceipt.js',
            'advanced_pos_reports/static/src/js/Receipts/LocationSummaryReceipt.js',
            'advanced_pos_reports/static/src/css/advanced_report.css',
        ],
        'web.assets_qweb': [
            'advanced_pos_reports/static/src/xml/**/*',
        ],
    },
    'images': ['static/description/banner.png'],
    'license': 'OPL-1',
    'installable': True,
    'auto_install': False,
    'application': False,
}


===== .\advanced_pos_reports\models\pos_ongoing_session_report.py =====
from odoo import api, fields, models
from odoo.osv.expression import AND


class ReportPosOngoing(models.AbstractModel):
    _name = 'report.advanced_pos_reports.report_pos_ongoing_session'

    def get_ongoing_sessions_details(self, session_ids=False):
        domain = [('state', '=', 'opened')]
        if session_ids:
            domain = AND([domain, [('id', 'in', session_ids)]])
        sessions = self.env['pos.session'].search(domain)
        amount_total_without_tax = 0
        amount_total_tax = 0
        amount_total_return = 0
        orders = []
        for session in sessions:
            for order in session.order_ids.filtered(lambda x:x.state in ['paid', 'done', 'invoiced']):
                orders.append(order.id)
                currency = order.pricelist_id.currency_id
                amount_tax = currency.round(sum(order._amount_line_tax(line, order.fiscal_position_id) for line in order.lines))
                amount_untaxed = currency.round(sum(line.price_subtotal for line in order.lines))
                amount_return = sum(payment.amount < 0 and payment.amount or 0 for payment in order.payment_ids)
                amount_total_without_tax += amount_untaxed
                amount_total_tax += amount_tax
                amount_total_return += amount_return
        order_ids = self.env["pos.order"].search([('id', 'in', orders)])
        user_currency = self.env.company.currency_id

        total = 0.0
        for order in order_ids:
            if user_currency != order.pricelist_id.currency_id:
                total += order.pricelist_id.currency_id._convert(
                    order.amount_total, user_currency, order.company_id, order.date_order or fields.Date.today())
            else:
                total += order.amount_total
            currency = order.session_id.currency_id

        categories = []
        if order_ids:
            self.env.cr.execute("""SELECT category.name,
            sum(price_subtotal_incl) as amount FROM pos_order_line AS line,
            pos_category AS category, product_product AS product INNER JOIN
            product_template AS template ON product.product_tmpl_id = template.id WHERE line.product_id = product.id
            AND template.pos_categ_id = category.id
            AND line.order_id IN %s GROUP BY category.name """, (tuple(order_ids.ids),))
            categories = self.env.cr.dictfetchall()

        payment_ids = self.env["pos.payment"].search([('pos_order_id', 'in', order_ids.ids)]).ids
        if payment_ids:
            self.env.cr.execute("""
                SELECT method.name, sum(amount) total
                FROM pos_payment AS payment,
                     pos_payment_method AS method
                WHERE payment.payment_method_id = method.id
                    AND payment.id IN %s
                GROUP BY method.name
            """, (tuple(payment_ids),))
            payments = self.env.cr.dictfetchall()
        else:
            payments = []
        amount_total = amount_total_without_tax + amount_tax
        return {
            'sessions': sessions,
            'categories': categories,
            'today': fields.Datetime.now(),
            'total_paid': user_currency.round(total),
            'amount_total_without_tax': amount_total_without_tax,
            'amount_total_tax': amount_total_tax,
            'amount_return': amount_total_return,
            'amount_total': total,
            'payments': payments
        }

    @api.model
    def _get_report_values(self, docids, data=None):
        data = dict(data or {})
        data.update(self.get_ongoing_sessions_details(data['session_ids']))
        return data

===== .\advanced_pos_reports\models\pos_order.py =====
import logging
from odoo import models

_logger = logging.getLogger(__name__)


class PosOrder(models.Model):
    _inherit = 'pos.order'

    def get_category_summary(self, order_ids):
        orders = self.env['pos.order'].search([('id', 'in', order_ids)])
        categories = []
        if orders:
            self.env.cr.execute("""SELECT category.name, sum(price_subtotal_incl) as amount, 
                sum(qty) as qty FROM pos_order_line AS line INNER JOIN
                product_product AS product ON line.product_id = product.id INNER JOIN
                product_template AS template ON product.product_tmpl_id = template.id 
                INNER JOIN pos_category as category ON template.pos_categ_id = category.id 
                WHERE line.order_id IN %s GROUP BY category.name """, (tuple(orders.ids),))
            categories = self.env.cr.dictfetchall()
        return categories

    def get_product_summary(self, order_ids):
        orders = self.env['pos.order'].search([('id', 'in', order_ids)])
        if orders:
            self.env.cr.execute("""
                SELECT product.id, template.name, product.default_code as code, sum(qty) as qty
                FROM product_product AS product,
                     pos_order_line AS line, product_template AS template
                WHERE product.id = line.product_id AND template.id = product.product_tmpl_id
                    AND line.order_id IN %s
                GROUP BY product.id, template.name, template.default_code
            """, (tuple(orders.ids),))
            product_summary = self.env.cr.dictfetchall()
        else:
            product_summary = []
        return product_summary

    def get_order_summary(self, order_ids):
        orders = self.env['pos.order'].search([('id', 'in', order_ids)])
        order_summary = []
        for order in orders:
            order_summary.append(
                {'order_name': order.name, 'state': dict(self._fields['state'].selection).get(order.state),
                 'date_order': order.date_order, 'amount_total': order.amount_total})
        return order_summary


class PosPayment(models.Model):
    _inherit = 'pos.payment'

    def get_payment_summary(self, order_ids):
        orders = self.env['pos.order'].search([('id', 'in', order_ids)])
        payment_ids = self.env["pos.payment"].search([('pos_order_id', 'in', orders.ids)]).ids
        if payment_ids:
            self.env.cr.execute("""
                SELECT method.name, sum(amount) total
                FROM pos_payment AS payment,
                     pos_payment_method AS method
                WHERE payment.payment_method_id = method.id
                    AND payment.id IN %s
                GROUP BY method.name
                """, (tuple(payment_ids),))
            payments_summary = self.env.cr.dictfetchall()
        else:
            payments_summary = []
        return payments_summary


class PosSession(models.Model):
    _inherit = 'pos.session'

    def get_session_summary(self, session):
        if session:
            session = self.env['pos.session'].search([('id', '=', session)])
            order_ids = session.order_ids
            if order_ids:
                self.env.cr.execute("""
                    SELECT product.id, template.name, product.default_code as code, sum(qty) as qty, sum(line.price_subtotal_incl) as total
                    FROM product_product AS product,
                         pos_order_line AS line, product_template AS template
                    WHERE product.id = line.product_id AND template.id = product.product_tmpl_id
                        AND line.order_id IN %s
                    GROUP BY product.id, template.name, template.default_code
                    """, (tuple(order_ids.ids),))
                product_summary = self.env.cr.dictfetchall()
                payment_ids = self.env["pos.payment"].search([('pos_order_id', 'in', order_ids.ids)]).ids
                if payment_ids:
                    self.env.cr.execute("""
                                        SELECT method.name, sum(amount) total
                                        FROM pos_payment AS payment,
                                             pos_payment_method AS method
                                        WHERE payment.payment_method_id = method.id
                                            AND payment.id IN %s
                                        GROUP BY method.name
                                    """, (tuple(payment_ids),))
                    payments_summary = self.env.cr.dictfetchall()
                else:
                    payments_summary = []
            else:
                product_summary = []
                payments_summary = []
            session_summary = {
                'session_name': session.name,
                'start_date': session.start_at,
                'end_date': session.stop_at,
                'opening_balance': session.cash_register_balance_start,
                'closing_balance': session.cash_register_balance_end_real,
                'product_summary': product_summary,
                'payments_summary': payments_summary
            }
        return session_summary


class PosConfig(models.Model):
    _inherit = 'pos.config'

    def get_location_summary(self, location_id):
        location_quant = self.env['stock.quant'].search(
            [('location_id', '=', int(location_id))])
        location_summary = []
        for quant in location_quant.filtered(lambda x: x.product_id.available_in_pos):
            values = {
                'product_id': quant.product_id.id,
                'product': quant.product_id.name,
                'quantity': quant.available_quantity,
            }
            location_summary.append(values)
        return location_summary


===== .\advanced_pos_reports\models\pos_posted_session_report.py =====
# -*- coding: utf-8 -*-


from odoo import api, fields, models, tools, _

from odoo.osv.expression import AND


class ReportPosPosted(models.AbstractModel):
    _name = 'report.advanced_pos_reports.report_pos_posted_session'

    def get_posted_sessions_details(self, session_ids=False):
        domain = [('state', '=', 'closed')]
        if session_ids:
            domain = AND([domain, [('id', 'in', session_ids)]])
        sessions = self.env['pos.session'].search(domain)
        amount_total_without_tax = 0
        amount_total_tax = 0
        amount_total_return = 0
        orders = []
        for session in sessions:
            for order in session.order_ids.filtered(lambda x: x.state in ['paid', 'done', 'invoiced']):
                orders.append(order.id)
                currency = order.pricelist_id.currency_id
                amount_tax = currency.round(
                    sum(order._amount_line_tax(line, order.fiscal_position_id) for line in order.lines))
                amount_untaxed = currency.round(sum(line.price_subtotal for line in order.lines))
                amount_return = sum(payment.amount < 0 and payment.amount or 0 for payment in order.payment_ids)
                amount_total_without_tax += amount_untaxed
                amount_total_tax += amount_tax
                amount_total_return += amount_return
        order_ids = self.env["pos.order"].search([('id', 'in', orders)])
        user_currency = self.env.company.currency_id

        total = 0.0
        for order in order_ids:
            if user_currency != order.pricelist_id.currency_id:
                total += order.pricelist_id.currency_id._convert(
                    order.amount_total, user_currency, order.company_id, order.date_order or fields.Date.today())
            else:
                total += order.amount_total
            currency = order.session_id.currency_id

        categories = []
        if order_ids:
            self.env.cr.execute("""SELECT category.name,
                sum(price_subtotal_incl) as amount FROM pos_order_line AS line,
                pos_category AS category, product_product AS product INNER JOIN
                product_template AS template ON product.product_tmpl_id = template.id WHERE line.product_id = product.id
                AND template.pos_categ_id = category.id
                AND line.order_id IN %s GROUP BY category.name """, (tuple(order_ids.ids),))
            categories = self.env.cr.dictfetchall()

        payment_ids = self.env["pos.payment"].search([('pos_order_id', 'in', order_ids.ids)]).ids
        if payment_ids:
            self.env.cr.execute("""
                    SELECT method.name, sum(amount) total
                    FROM pos_payment AS payment,
                         pos_payment_method AS method
                    WHERE payment.payment_method_id = method.id
                        AND payment.id IN %s
                    GROUP BY method.name
                """, (tuple(payment_ids),))
            payments = self.env.cr.dictfetchall()
        else:
            payments = []

        return {
            'sessions': sessions,
            'categories': categories,
            'today': fields.Datetime.now(),
            'total_paid': user_currency.round(total),
            'amount_total_without_tax': amount_total_without_tax,
            'amount_total_tax': amount_total_tax,
            'amount_return': amount_total_return,
            'amount_total': total,
            'payments': payments
        }

    @api.model
    def _get_report_values(self, docids, data=None):
        data = dict(data or {})
        data.update(self.get_posted_sessions_details(data['session_ids']))
        return data


===== .\advanced_pos_reports\models\pos_sale_report.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.
import logging
from datetime import timedelta
from functools import partial
from itertools import groupby

import psycopg2
import pytz
import re

from odoo import api, fields, models, tools, _
from odoo.tools import float_is_zero, float_round, float_repr, float_compare
from odoo.exceptions import ValidationError, UserError
from odoo.http import request
from odoo.osv.expression import AND
import base64

_logger = logging.getLogger(__name__)


class ReportSaleDetails(models.AbstractModel):
    _name = 'report.advanced_pos_reports.report_pos_saledetails'
    _description = 'Point of Sale Details'

    @api.model
    def get_sale_details(self, date_start=False, date_stop=False, user_ids=False):
        domain = [('state', 'in', ['paid', 'invoiced', 'done'])]

        if date_start:
            date_start = fields.Datetime.from_string(date_start)
        else:
            user_tz = pytz.timezone(self.env.context.get('tz') or self.env.user.tz or 'UTC')
            today = user_tz.localize(fields.Datetime.from_string(fields.Date.context_today(self)))
            date_start = today.astimezone(pytz.timezone('UTC'))

        if date_stop:
            date_stop = fields.Datetime.from_string(date_stop)
            if (date_stop < date_start):
                date_stop = date_start + timedelta(days=1, seconds=-1)
        else:
            date_stop = date_start + timedelta(days=1, seconds=-1)

        domain = AND([domain,
                      [('date_order', '>=', fields.Datetime.to_string(date_start)),
                       ('date_order', '<=', fields.Datetime.to_string(date_stop))]
                      ])

        orders = self.env['pos.order'].search(domain)
        orders_summary = []
        amount_total = 0
        amount_tax = 0
        for user in user_ids:
            total_sales = 0
            total_tax = 0
            orders_list = []
            payments = []
            categories = []
            for order in orders.filtered(lambda x:x.user_id.id == user.id):
                total_sales += order.amount_total
                total_tax += order.amount_tax
                amount_total += order.amount_total
                amount_tax += order.amount_tax
                orders_list.append(order.id)
            if orders_list:
                payment_ids = self.env["pos.payment"].search([('pos_order_id', 'in', orders_list)]).ids
                if payment_ids:
                    self.env.cr.execute("""
                        SELECT method.name, sum(amount) total
                        FROM pos_payment AS payment,
                             pos_payment_method AS method
                        WHERE payment.payment_method_id = method.id
                            AND payment.id IN %s
                        GROUP BY method.name
                    """, (tuple(payment_ids),))
                    payments = self.env.cr.dictfetchall()
                else:
                    payments = []
                categ = self.env.cr.execute("""SELECT category.name,
                    sum(price_subtotal_incl) as amount FROM pos_order_line AS line,
                    pos_category AS category, product_product AS product INNER JOIN
                    product_template AS template ON product.product_tmpl_id = template.id 
                    WHERE line.product_id = product.id
                    AND template.pos_categ_id = category.id
                    AND line.order_id IN %s
                    GROUP BY category.name ORDER BY amount DESC
                    """, (tuple(orders_list),))
                categories = self.env.cr.dictfetchall()
            orders_summary.append({'user': user.name, 'total_sales': total_sales, 'tax': total_tax,
                                   'gross_total': total_sales, 'payments': payments, 'categories': categories})
        user_currency = self.env.company.currency_id

        return {
            'currency_precision': user_currency.decimal_places,
            'order_summary': orders_summary,
            'users': user_ids,
            'company_name': self.env.company.name,
            'amount_total_without_tax': amount_total - amount_tax,
            'amount_tax': amount_tax
        }

    @api.model
    def _get_report_values(self, docids, data=None):
        data = dict(data or {})
        users = self.env['res.users'].browse(data['user_ids'])
        data.update(self.get_sale_details(data['date_start'], data['date_stop'], users))
        return data


===== .\advanced_pos_reports\models\pos_top_selling_categories.py =====
from odoo import api, fields, models, tools, _
from odoo.osv.expression import AND


class ReportPosCategories(models.AbstractModel):
    _name = 'report.advanced_pos_reports.report_pos_top_selling_categories'

    def get_top_selling_categories_details(self, no_of_categories=False, start_date=False, end_date=False):
        order_ids = self.env["pos.order"].search([('date_order', '>=', start_date),
                                                  ('date_order', '<=', end_date), ('state', 'in', ['paid', 'done', 'invoiced'])])
        user_currency = self.env.company.currency_id
        if order_ids:
            self.env.cr.execute("""SELECT category.name,
                sum(price_subtotal_incl) as amount FROM pos_order_line AS line,
                pos_category AS category, product_product AS product INNER JOIN
                product_template AS template ON product.product_tmpl_id = template.id WHERE line.product_id = product.id
                AND template.pos_categ_id = category.id
                AND line.order_id IN %s
                GROUP BY category.name ORDER BY amount DESC LIMIT %s
                """, (tuple(order_ids.ids), no_of_categories))
            categories = self.env.cr.dictfetchall()
        return {
            'categories': categories or [],
            'today': fields.Datetime.now(),
            'start_date': start_date,
            'end_date': end_date
        }

    @api.model
    def _get_report_values(self, docids, data=None):
        data = dict(data or {})
        data.update(self.get_top_selling_categories_details(data['no_of_categories'], data['start_date'],
                                                      data['end_date']))
        return data

===== .\advanced_pos_reports\models\pos_top_selling_customers.py =====
from odoo import api, fields, models


class ReportPosCustomers(models.AbstractModel):
    _name = 'report.advanced_pos_reports.report_pos_top_selling_customers'

    def get_top_selling_customers_details(self, no_of_customers=False, start_date=False, end_date=False):
        order_ids = self.env["pos.order"].search([('date_order', '>=', start_date),
                                                  ('date_order', '<=', end_date),
                                                  ('state', 'in', ['paid', 'done', 'invoiced'])])
        user_currency = self.env.company.currency_id
        if order_ids:
            self.env.cr.execute("""SELECT partner.id, partner.name,
                            sum(amount_total) as amount FROM pos_order, res_partner AS partner 
                            WHERE partner.id= pos_order.partner_id AND pos_order.id IN %s 
                            GROUP BY partner.id, partner.name ORDER BY amount DESC LIMIT %s 
                            """, (tuple(order_ids.ids), no_of_customers))
            customers = self.env.cr.dictfetchall()
        return {
            'customers': customers or [],
            'today': fields.Datetime.now(),
            'start_date': start_date,
            'end_date': end_date
        }

    @api.model
    def _get_report_values(self, docids, data=None):
        data = dict(data or {})
        data.update(self.get_top_selling_customers_details(data['no_of_customers'], data['start_date'],
                                                           data['end_date']))
        return data


===== .\advanced_pos_reports\models\pos_top_selling_products.py =====
from odoo import api, fields, models, tools, _
from odoo.osv.expression import AND


class ReportPosProducts(models.AbstractModel):
    _name = 'report.advanced_pos_reports.report_pos_top_selling_products'

    def get_top_selling_products_details(self, no_of_products=False, start_date=False, end_date=False):
        order_ids = self.env["pos.order"].search([('date_order', '>=', start_date),
                                                  ('date_order', '<=', end_date), ('state', 'in', ['paid', 'done', 'invoiced'])])
        user_currency = self.env.company.currency_id
        categories = []
        if order_ids:
            self.env.cr.execute("""
                                SELECT product.id, template.name, uom.name AS uom, product.default_code as code, sum(qty) as qty, sum(line.price_subtotal_incl) as total
                                FROM product_product AS product,
                                     pos_order_line AS line, product_template AS template , uom_uom AS uom
                                WHERE product.id = line.product_id AND template.id = product.product_tmpl_id AND uom.id = template.uom_id
                                    AND line.order_id IN %s
                                GROUP BY product.id, template.name, template.default_code, uom.name ORDER BY qty DESC LIMIT %s
                                """, (tuple(order_ids.ids), no_of_products))
            product_summary = self.env.cr.dictfetchall()
        return {
            'products': product_summary,
            'today': fields.Datetime.now(),
            'start_date': start_date,
            'end_date': end_date
        }

    @api.model
    def _get_report_values(self, docids, data=None):
        data = dict(data or {})
        data.update(self.get_top_selling_products_details(data['no_of_products'], data['start_date'],
                                                      data['end_date']))
        return data

===== .\advanced_pos_reports\models\__init__.py =====
from . import pos_sale_report
from . import pos_posted_session_report
from . import pos_ongoing_session_report
from . import pos_order
from . import pos_top_selling_products
from . import pos_top_selling_categories
from . import pos_top_selling_customers



===== .\advanced_pos_reports\security\ir.model.access.csv =====
id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
access_pos_sale_details_wizard,access.pos.sale.details.wizard,model_pos_sale_details_wizard,point_of_sale.group_pos_manager,1,1,1,0
access_pos_sale_top_selling_wizard,access.pos.sale.top.selling.wizard,model_pos_sale_top_selling,point_of_sale.group_pos_manager,1,1,1,0
access_pos_sale_ongoing,access.pos.sale.ongoing.wizard,model_pos_sale_ongoing_wizard,point_of_sale.group_pos_manager,1,1,1,0
access_pos_sale_posted,access.pos.sale.posted.wizard,model_pos_sale_posted_wizard,point_of_sale.group_pos_manager,1,1,1,0


===== .\advanced_pos_reports\static\description\index.html =====
<div class="container" style="padding: 1rem !important; margin-bottom: 1rem !important;">
  <div class="row">
    <div class="col-sm-12 col-md-12 col-lg-12 d-flex justify-content-between" style="border-bottom: 1px solid #d5d5d5;">
      <div class="my-3">
        <img src="./assets/icons/logo.png" style="width: auto !important; height: 40px !important;">
      </div>
      <div class="my-3 d-flex align-items-center">
        <div
          style="background-color: #7C7BAD !important; color: #fff !important; font-weight: 600 !important; padding: 5px 15px 8px !important; margin: 0 5px !important;">
          <i class="fa fa-check mr-1"></i>Community
        </div>
        <div
          style="background-color: #875A7B !important; color: #fff !important; font-weight: 600 !important; padding: 5px 15px 8px !important; margin: 0 5px !important;">
          <i class="fa fa-check mr-1"></i>Enterprise
        </div>

      </div>
    </div>
  </div>
</div>

<div class="container" style="padding: 0rem 1.5rem 4rem !important">
  <div class="row" style="height: 900px !important;">
    <div class="col-sm-12 col-md-12 col-lg-12"
      style="padding: 4rem 1rem !important; background-color: #714B67 !important; height: 600px !important; border-radius: 20px !important;">
      <h1
        style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #FFFFFF !important;  font-size: 3.5rem !important; text-align: center !important;">
        Advanced POS Reports</h1>
      <p
        style="font-family: 'Montserrat', sans-serif !important; font-weight: 300 !important; color: #FFFFFF !important;  font-size: 1.4rem !important; text-align: center !important;">
        A Module for printing various POS Reports
      </p>
      <img src="./assets/screenshots/hero.gif" class="img-responsive" width="100%" height="auto" />
    </div>
  </div>

  <div class="row">
    <div class="col-md-12" style="border-bottom: 1px solid #d5d5d5 !important; margin-bottom: 2rem !important">
      <h2
        style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #714B67 !important; font-size: 1.5rem !important;">
        <i class="fa fa-compass mr-2"></i>Explore this module
      </h2>
      <div class="row">
        <div class="col-md-6">
          <a href="#overview" style="text-decoration: none !important;">
            <div class="row"
              style="background-color: #f5f2f5 !important; border-radius: 10px !important; margin: 1rem !important; padding: 1.5em !important; height: 100px !important;">
              <div class="col-8">
                <h3
                  style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #714B67 !important; font-size: 1.2rem !important;">
                  Overview</h3>
                <p
                  style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #714B67 !important; font-size: 0.9rem !important;">
                  Learn more about this module</p>
              </div>
              <div class="col-4 text-right d-flex justify-content-end align-items-center">
                <i class="fa fa-chevron-right" style="color: #714B67 !important;"></i>
              </div>
            </div>
          </a>
        </div>
        <div class="col-md-6">
          <a href="#features" style="text-decoration: none !important;">
            <div class="row"
              style="background-color: #f5f2f5 !important; border-radius: 10px !important; margin: 1rem !important; padding: 1.5em !important; height: 100px !important;">
              <div class="col-8">
                <h3
                  style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #714B67 !important; font-size: 1.2rem !important;">
                  Features</h3>
                <p
                  style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #714B67 !important; font-size: 0.9rem !important;">
                  View features of this module</p>
              </div>
              <div class="col-4 text-right d-flex justify-content-end align-items-center">
                <i class="fa fa-chevron-right" style="color: #714B67 !important;"></i>
              </div>
            </div>
          </a>
        </div>
        <div class="col-md-6">
          <a href="#screenshots" style="text-decoration: none !important;">
            <div class="row"
              style="background-color: #f5f2f5 !important; border-radius: 10px !important; margin: 1rem !important; padding: 1.5em !important; height: 100px !important;">
              <div class="col-8">
                <h3
                  style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #714B67 !important; font-size: 1.2rem !important;">
                  Screenshots</h3>
                <p
                  style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #714B67 !important; font-size: 0.9rem !important;">
                  See key screenshots of this module</p>
              </div>
              <div class="col-4 text-right d-flex justify-content-end align-items-center">
                <i class="fa fa-chevron-right" style="color: #714B67 !important;"></i>
              </div>
            </div>
          </a>
        </div>
      </div>
    </div>

  </div>

  <div class="row" id="overview">
    <div class="col-md-12" style="border-bottom: 1px solid #d5d5d5 !important; margin: 2rem 0 !important">
      <h2
        style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #714B67 !important; font-size: 1.5rem !important;">
        <i class="fa fa-pie-chart mr-2"></i>Overview
      </h2>
    </div>

    <div class="col-mg-12 pl-3">
      <p
        style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #282F33 !important; font-size: 1rem !important; line-height: 30px !important;">
        In the Advanced POS Reports app, can print various reports like Location Summary, Session Summary, Category Summary,etc. from POS Screen. Sales summary, Top Selling products/ categories / customers report, Ongoing Sessions Report, Posted Sessions Report from the reporting menu.</p>
    </div>
    </p>

  </div>


  <div class="row" id="features">
    <div class="col-md-12" style="border-bottom: 1px solid #d5d5d5 !important; margin: 2rem 0 !important">
      <h2
        style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #714B67 !important; font-size: 1.5rem !important;">
        <i class="fa fa-star mr-2"></i>Features
      </h2>
    </div>

    <div class="col-md-6 pl-3 py-3 d-flex">
      <div>
        <img src="assets/icons/check.png">
      </div>
      <div>
        <h4
          style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
          Sale Summary report prints user wise sales details</h4>
      </div>
    </div>

    <div class="col-md-6 pl-3 py-3 d-flex">
      <div>
        <img src="assets/icons/check.png">
      </div>
      <div>
        <h4
          style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
          Ongoing session report gives a summary of ongoing sessions</h4>
      </div>
    </div>

    <div class="col-md-6 pl-3 py-3 d-flex">
      <div>
        <img src="assets/icons/check.png">
      </div>
      <div>
        <h4
          style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
          Posted session report summarizes the posted sessions de
        </h4>
      </div>
    </div>

    <div class="col-md-6 pl-3 py-3 d-flex">
      <div>
        <img src="assets/icons/check.png">
      </div>
      <div>
        <h4
          style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
          Top selling Products / Categories / Customers Reports</h4>
      </div>
    </div>

    <div class="col-md-6 pl-3 py-3 d-flex">
      <div>
        <img src="assets/icons/check.png">
      </div>
      <div>
        <h4
          style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
          Payment Summary from POS Screen to get payment details of current session/ All sessions within a period
        </h4>
      </div>
    </div>

    <div class="col-md-6 pl-3 py-3 d-flex">
      <div>
        <img src="assets/icons/check.png">
      </div>
      <div>
        <h4
          style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
          Order Summary from POS Screen to get all order details of current session/ All sessions within a period
        </h4>
      </div>
    </div>

    <div class="col-md-6 pl-3 py-3 d-flex">
      <div>
        <img src="assets/icons/check.png">
      </div>
      <div>
        <h4
          style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
          Category from POS Screen to get category wise sale details current session/ All sessions within a period
        </h4>
      </div>
    </div>

  </div>

  <div class="row" id="screenshots">
    <div class="col-md-12" style="border-bottom: 1px solid #d5d5d5 !important; margin: 2rem 0 !important">
      <h2
        style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #714B67 !important; font-size: 1.5rem !important;">
        <i class="fa fa-image mr-2"></i>Screenshots
      </h2>
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Payment Summary from POS Screen</h4>
      <img src="assets/screenshots/pos_report_16.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Payment Summary of Selected dates</h4>
      <img src="assets/screenshots/pos_report_17.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Payment Summary of current session</h4>
      <img src="assets/screenshots/pos_report_18.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <img src="assets/screenshots/pos_report_19.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Category Summary from POS Screen</h4>
      <img src="assets/screenshots/pos_report_20.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Category Summary of Selected dates</h4>
      <img src="assets/screenshots/pos_report_21.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Category Summary of current session</h4>
      <img src="assets/screenshots/pos_report_22.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <img src="assets/screenshots/pos_report_23.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-2">
      <h4 class="mt-2"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Reporting Menu</h4>
      <p
        style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #282F33 !important; font-size: 1rem !important;">
        The list of custom reports</p>
      <img src="assets/screenshots/pos_report_1.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Sales summary</h4>
      <p
        style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #282F33 !important; font-size: 1rem !important;">
        User can print user wise sales summary within a period.
      </p>
      <img src="assets/screenshots/pos_report_2.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Sales summary Report</h4>
      <img src="assets/screenshots/pos_report_4.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <img src="assets/screenshots/pos_report_5.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Top Selling Products</h4>
      <img src="assets/screenshots/pos_report_3.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Generated Report</h4>
      <img src="assets/screenshots/pos_report_6.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Top Selling Categories</h4>
      <img src="assets/screenshots/pos_report_7.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Generated Report</h4>
      <img src="assets/screenshots/pos_report_8.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>


    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Top Selling Customers</h4>
      <img src="assets/screenshots/pos_report_9.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Generated Report</h4>
      <img src="assets/screenshots/pos_report_10.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>


    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Ongoing Sessions Report</h4>
      <img src="assets/screenshots/pos_report_11.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Generated Ongoing Sessions report</h4>
      <img src="assets/screenshots/pos_report_12.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Posted Sessions report</h4>
      <img src="assets/screenshots/pos_report_13.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Generated Posted Sessions report</h4>
      <img src="assets/screenshots/pos_report_14.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <img src="assets/screenshots/pos_report_14_1.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Products Summary</h4>
      <img src="assets/screenshots/pos_report_24.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Products Summary of Selected dates</h4>
      <img src="assets/screenshots/pos_report_25.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Products Summary of current session</h4>
      <img src="assets/screenshots/pos_report_26.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <img src="assets/screenshots/pos_report_27.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Order Summary</h4>
      <img src="assets/screenshots/pos_report_28.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>
    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Order Summary of Selected dates</h4>
      <img src="assets/screenshots/pos_report_29.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Order Summary of current session</h4>
      <img src="assets/screenshots/pos_report_30.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <img src="assets/screenshots/pos_report_31.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Location Summary</h4>
      <img src="assets/screenshots/pos_report_32.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>
    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Generated Location Summary</h4>
      <img src="assets/screenshots/pos_report_33.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Sessions Summary</h4>
      <img src="assets/screenshots/pos_report_34.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Generated Sessions Summary</h4>
      <img src="assets/screenshots/pos_report_35.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

  </div>
  <!-- SUGGESTED PRODUCTS -->
  <div class="row">
    <div class="col-lg-12 d-flex flex-column justify-content-center"
      style="text-align: center; padding: 2.5rem 1rem !important;">
      <h2 style="color: #212529 !important;">Suggested Products</h2>
      <hr
        style="border: 3px solid #714B67 !important; background-color: #714B67 !important; width: 80px !important; margin-bottom: 2rem !important;" />

      <div id="demo1" class="row carousel slide" data-ride="carousel">
        <!-- The slideshow -->
        <div class="carousel-inner">
          <div class="carousel-item active" style="min-height:0px">
            <div class="col-xs-12 col-sm-4 col-md-4 mb16 mt16" style="float:left">
              <a href="https://apps.odoo.com/apps/modules/15.0/export_stockinfo_xls/" target="_blank">
                <div style="border-radius:10px">
                  <img class="img img-responsive center-block"
                    style="border-top-left-radius:10px; border-top-right-radius:10px"
                    src="./assets/modules/export_image.png">
                </div>
              </a>
            </div>
            <div class="col-xs-12 col-sm-4 col-md-4 mb16 mt16" style="float:left">
              <a href="https://apps.odoo.com/apps/modules/15.0/custom_gantt_view/" target="_blank">
                <div style="border-radius:10px">
                  <img class="img img-responsive center-block"
                    style="border-top-left-radius:10px; border-top-right-radius:10px"
                    src="./assets/modules/gantt_image.png">
                </div>
              </a>
            </div>
            <div class="col-xs-12 col-sm-4 col-md-4 mb16 mt16" style="float:left">
              <a href="https://apps.odoo.com/apps/modules/15.0/sales_credit_limit/" target="_blank">
                <div style="border-radius:10px">
                  <img class="img img-responsive center-block"
                    style="border-top-left-radius:10px; border-top-right-radius:10px"
                    src="./assets/modules/credit_image.png">
                </div>
              </a>
            </div>
          </div>
          <div class="carousel-item" style="min-height:0px">
            <div class="col-xs-12 col-sm-4 col-md-4 mb16 mt16" style="float:left">
              <a href="https://apps.odoo.com/apps/modules/15.0/base_account_budget/" target="_blank">
                <div style="border-radius:10px">
                  <img class="img img-responsive center-block"
                    style="border-top-left-radius:10px; border-top-right-radius:10px"
                    src="./assets/modules/budget_image.png">
                </div>
              </a>
            </div>
            <div class="col-xs-12 col-sm-4 col-md-4 mb16 mt16" style="float:left">
              <a href="https://apps.odoo.com/apps/modules/15.0/product_to_quotation/" target="_blank">
                <div style="border-radius:10px">
                  <img class="img img-responsive center-block"
                    style="border-top-left-radius:10px; border-top-right-radius:10px"
                    src="./assets/modules/quotation_image.png">
                </div>
              </a>
            </div>
            <div class="col-xs-12 col-sm-4 col-md-4 mb16 mt16" style="float:left">
              <a href="https://apps.odoo.com/apps/modules/15.0/employee_documents_expiry/" target="_blank">
                <div style="border-radius:10px">
                  <img class="img img-responsive center-block"
                    style="border-top-left-radius:10px; border-top-right-radius:10px"
                    src="./assets/modules/employee_image.png">
                </div>
              </a>
            </div>
          </div>
        </div>
        <!-- Left and right controls -->
        <a class="carousel-control-prev" href="#demo1" data-slide="prev" style="left:-25px;width: 35px;color: #000;">
          <span class="carousel-control-prev-icon"><i class="fa fa-chevron-left" style="font-size:24px"></i></span> </a>
        <a class="carousel-control-next" href="#demo1" data-slide="next" style="right:-25px;width: 35px;color: #000;">
          <span class="carousel-control-next-icon"><i class="fa fa-chevron-right" style="font-size:24px"></i></span>
        </a>
      </div>
    </div>
  </div>
  <!-- END OF SUGGESTED PRODUCTS -->

  <!-- OUR SERVICES -->
  <section class="container" style="margin-top: 6rem !important;">
    <div class="row">
      <div class="col-lg-12 d-flex flex-column justify-content-center align-items-center">
        <h2 style="color: #212529 !important;">Our Services</h2>
        <hr
          style="border: 3px solid #714B67 !important; background-color: #714B67 !important; width: 80px !important; margin-bottom: 2rem !important;" />
      </div>

      <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
        <div class="d-flex justify-content-center align-items-center mx-3 my-3"
          style="background-color: #1dd1a1 !important; border-radius: 15px !important; height: 80px; width: 80px;">
          <img src="assets/icons/cogs.png" class="img-responsive" height="48px" width="48px">
        </div>
        <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
          Odoo
          Customization</h6>
      </div>

      <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
        <div class="d-flex justify-content-center align-items-center mx-3 my-3"
          style="background-color: #ff6b6b !important; border-radius: 15px !important; height: 80px; width: 80px;">
          <img src="assets/icons/wrench.png" class="img-responsive" height="48px" width="48px">
        </div>
        <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
          Odoo
          Implementation</h6>
      </div>

      <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
        <div class="d-flex justify-content-center align-items-center mx-3 my-3"
          style="background-color: #6462CD !important; border-radius: 15px !important; height: 80px; width: 80px;">
          <img src="assets/icons/lifebuoy.png" class="img-responsive" height="48px" width="48px">
        </div>
        <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
          Odoo
          Support</h6>
      </div>


      <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
        <div class="d-flex justify-content-center align-items-center mx-3 my-3"
          style="background-color: #ffa801 !important; border-radius: 15px !important; height: 80px; width: 80px;">
          <img src="assets/icons/user.png" class="img-responsive" height="48px" width="48px">
        </div>
        <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
          Hire
          Odoo
          Developer</h6>
      </div>

      <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
        <div class="d-flex justify-content-center align-items-center mx-3 my-3"
          style="background-color: #54a0ff  !important; border-radius: 15px !important; height: 80px; width: 80px;">
          <img src="assets/icons/puzzle.png" class="img-responsive" height="48px" width="48px">
        </div>
        <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
          Odoo
          Integration</h6>
      </div>

      <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
        <div class="d-flex justify-content-center align-items-center mx-3 my-3"
          style="background-color: #6d7680 !important; border-radius: 15px !important; height: 80px; width: 80px;">
          <img src="assets/icons/update.png" class="img-responsive" height="48px" width="48px">
        </div>
        <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
          Odoo
          Migration</h6>
      </div>


      <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
        <div class="d-flex justify-content-center align-items-center mx-3 my-3"
          style="background-color: #786fa6 !important; border-radius: 15px !important; height: 80px; width: 80px;">
          <img src="assets/icons/consultation.png" class="img-responsive" height="48px" width="48px">
        </div>
        <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
          Odoo
          Consultancy</h6>
      </div>

      <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
        <div class="d-flex justify-content-center align-items-center mx-3 my-3"
          style="background-color: #f8a5c2 !important; border-radius: 15px !important; height: 80px; width: 80px;">
          <img src="assets/icons/training.png" class="img-responsive" height="48px" width="48px">
        </div>
        <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
          Odoo
          Implementation</h6>
      </div>

      <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
        <div class="d-flex justify-content-center align-items-center mx-3 my-3"
          style="background-color: #e6be26 !important; border-radius: 15px !important; height: 80px; width: 80px;">
          <img src="assets/icons/license.png" class="img-responsive" height="48px" width="48px">
        </div>
        <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
          Odoo
          Licensing Consultancy</h6>
      </div>
    </div>
  </section>
  <!-- END OF END OF OUR SERVICES -->

  <!-- OUR INDUSTRIES -->
  <section class="container" style="margin-top: 6rem !important;">
    <div class="row">
      <div class="col-lg-12 d-flex flex-column justify-content-center align-items-center">
        <h2 style="color: #212529 !important;">Our Industries</h2>
        <hr
          style="border: 3px solid #714B67 !important; background-color: #714B67 !important; width: 80px !important; margin-bottom: 2rem !important;" />
      </div>

      <div class="col-lg-3">
        <div class="my-4 d-flex flex-column justify-content-center"
          style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
          <img src="./assets/icons/trading-black.png" class="img-responsive mb-3" height="48px" width="48px">
          <h5 style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
            Trading
          </h5>
          <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
            Easily procure
            and
            sell your products</p>
        </div>
      </div>

      <div class="col-lg-3">
        <div class="my-4 d-flex flex-column justify-content-center"
          style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
          <img src="./assets/icons/pos-black.png" class="img-responsive mb-3" height="48px" width="48px">
          <h5 style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
            POS
          </h5>
          <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
            Easy
            configuration
            and convivial experience</p>
        </div>
      </div>

      <div class="col-lg-3">
        <div class="my-4 d-flex flex-column justify-content-center"
          style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
          <img src="./assets/icons/education-black.png" class="img-responsive mb-3" height="48px" width="48px">
          <h5 style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
            Education
          </h5>
          <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
            A platform for
            educational management</p>
        </div>
      </div>

      <div class="col-lg-3">
        <div class="my-4 d-flex flex-column justify-content-center"
          style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
          <img src="./assets/icons/manufacturing-black.png" class="img-responsive mb-3" height="48px" width="48px">
          <h5 style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
            Manufacturing
          </h5>
          <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
            Plan, track and
            schedule your operations</p>
        </div>
      </div>

      <div class="col-lg-3">
        <div class="my-4 d-flex flex-column justify-content-center"
          style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
          <img src="./assets/icons/ecom-black.png" class="img-responsive mb-3" height="48px" width="48px">
          <h5 style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
            E-commerce &amp; Website
          </h5>
          <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
            Mobile
            friendly,
            awe-inspiring product pages</p>
        </div>
      </div>

      <div class="col-lg-3">
        <div class="my-4 d-flex flex-column justify-content-center"
          style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
          <img src="./assets/icons/service-black.png" class="img-responsive mb-3" height="48px" width="48px">
          <h5 style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
            Service Management
          </h5>
          <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
            Keep track of
            services and invoice</p>
        </div>
      </div>

      <div class="col-lg-3">
        <div class="my-4 d-flex flex-column justify-content-center"
          style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
          <img src="./assets/icons/restaurant-black.png" class="img-responsive mb-3" height="48px" width="48px">
          <h5 style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
            Restaurant
          </h5>
          <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
            Run your bar or
            restaurant methodically</p>
        </div>
      </div>

      <div class="col-lg-3">
        <div class="my-4 d-flex flex-column justify-content-center"
          style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
          <img src="./assets/icons/hotel-black.png" class="img-responsive mb-3" height="48px" width="48px">
          <h5 style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
            Hotel Management
          </h5>
          <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
            An
            all-inclusive
            hotel management application</p>
        </div>
      </div>

    </div>
  </section>

  <!-- END OF END OF OUR INDUSTRIES -->

  <!-- FOOTER -->
  <!-- Footer Section -->
  <section class="container" style="margin: 5rem auto 2rem;">
    <div class="row" style="max-width:1540px;">
      <div class="col-lg-12 d-flex flex-column justify-content-center align-items-center">
        <h2 style="color: #212529 !important;">Need Help?</h2>
        <hr
          style="border: 3px solid #714B67 !important; background-color: #714B67 !important; width: 80px !important; margin-bottom: 2rem !important;" />
      </div>
    </div>

    <!-- Contact Cards -->
    <div class="row d-flex justify-content-center align-items-center"
      style="max-width:1540px; margin: 0 auto 2rem auto;">

      <div class="col-lg-12" style="padding: 0rem 3rem 2rem; border-radius: 10px; margin-right: 3rem; ">

        <div class="row mt-4">
          <div class="col-lg-6">
            <a href="mailto:odoo@cybrosys.com" target="_blank" class="btn btn-block mb-2 deep_hover"
              style="text-decoration: none;  background-color: #4d4d4d; color: #FFF;  border-radius: 4px;"><i
                class="fa fa-envelope mr-2"></i>odoo@cybrosys.com</a>
          </div>
          <div class="col-lg-6">
            <a href="https://api.whatsapp.com/send?phone=918606827707" target="_blank"
              class="btn btn-block mb-2 deep_hover"
              style="text-decoration: none;  background-color: #25D366; color: #FFF;  border-radius: 4px;"><i
                class="fa fa-whatsapp mr-2"></i>+91 86068 27707</a>
          </div>
        </div>
      </div>

    </div>
    <!-- End of Contact Cards -->
  </section>
  <!-- Footer -->
  <section class="oe_container" style="padding: 2rem 3rem 1rem;">
    <div class="row" style="max-width:1540px; margin: 0 auto; margin-right: 3rem; ">
      <!-- Logo -->
      <div class="col-lg-12 d-flex justify-content-center align-items-center" style="margin-top: 3rem;">
        <img src="https://www.cybrosys.com/images/logo.png" width="200px" height="auto" />
      </div>
      <!-- End of Logo -->
      <div class="col-lg-12">
        <hr
          style="margin-top: 3rem;background: linear-gradient(90deg, rgba(2,0,36,0) 0%, rgba(229,229,229,1) 33%, rgba(229,229,229,1) 58%, rgba(0,212,255,0) 100%); height: 2px; border-style: none;">
        <!-- End of Footer Section -->
      </div>
    </div>
  </section>
  <!-- END OF FOOTER -->

</div>

===== .\advanced_pos_reports\static\src\css\advanced_report.css =====



===== .\advanced_pos_reports\static\src\js\ControlButtons\CategorySummaryButton.js =====
odoo.define('advanced_pos_reports.CategorySummaryButton', function (require) {
    'use strict';

    const PosComponent = require('point_of_sale.PosComponent');
    const ProductScreen = require('point_of_sale.ProductScreen');
    const Registries = require('point_of_sale.Registries');
    const { useListener } = require('web.custom_hooks');

    class CategorySummaryButton extends PosComponent {
        constructor() {
            super(...arguments);
            useListener('click', this._onClick);
        }
        _onClick() {
            this.showPopup('CategorySummaryPopup', { title: 'Category Summary', });
        }
    }
    CategorySummaryButton.template = 'advanced_pos_reports.CategorySummaryButton';

    ProductScreen.addControlButton({
        component: CategorySummaryButton,
        condition: function () {
            return true;
        },
    });

    Registries.Component.add(CategorySummaryButton);

    return CategorySummaryButton;
});

===== .\advanced_pos_reports\static\src\js\ControlButtons\LocationSummaryButton.js =====
odoo.define('advanced_pos_reports.LocationSummaryButton', function (require) {
    'use strict';

    const PosComponent = require('point_of_sale.PosComponent');
    const ProductScreen = require('point_of_sale.ProductScreen');
    const Registries = require('point_of_sale.Registries');
    const { useListener } = require('web.custom_hooks');

    class LocationSummaryButton extends PosComponent {
        constructor() {
            super(...arguments);
            useListener('click', this._onClick);
        }
        async _onClick() {
            var locations = await this.rpc({
                   model: 'stock.location',
                    method: 'search_read',
                     args: [[['usage', '=', 'internal']]],
                });
            this.showPopup('LocationSummaryPopup', { title: 'Location Summary', locations: locations });
        }
    }
    LocationSummaryButton.template = 'advanced_pos_reports.LocationSummaryButton';

    ProductScreen.addControlButton({
        component: LocationSummaryButton,
        condition: function () {
            return true;
        },
    });

    Registries.Component.add(LocationSummaryButton);

    return LocationSummaryButton;
});

===== .\advanced_pos_reports\static\src\js\ControlButtons\OrderSummaryButton.js =====
odoo.define('advanced_pos_reports.OrderSummaryButton', function (require) {
    'use strict';

    const PosComponent = require('point_of_sale.PosComponent');
    const ProductScreen = require('point_of_sale.ProductScreen');
    const Registries = require('point_of_sale.Registries');
    const { useListener } = require('web.custom_hooks');

    class OrderSummaryButton extends PosComponent {
        constructor() {
            super(...arguments);
            useListener('click', this._onClick);
        }
        _onClick() {
            this.showPopup('OrderSummaryPopup', { title: 'Order Summary', });
//            const customer = this.env.pos.get_order().get_client();
//            const searchDetails = customer ? { fieldName: 'CUSTOMER', searchTerm: customer.name } : {};
//            this.trigger('close-popup');
//            this.showScreen('TicketScreen', {
//                ui: { filter: 'SYNCED', searchDetails },
//                destinationOrder: this.env.pos.get_order(),
//            });
        }
    }
    OrderSummaryButton.template = 'advanced_pos_reports.OrderSummaryButton';

    ProductScreen.addControlButton({
        component: OrderSummaryButton,
        condition: function () {
            return true;
        },
    });

    Registries.Component.add(OrderSummaryButton);

    return OrderSummaryButton;
});

===== .\advanced_pos_reports\static\src\js\ControlButtons\PaymentSummaryButton.js =====
odoo.define('advanced_pos_reports.PaymentSummaryButton', function (require) {
    'use strict';

    const PosComponent = require('point_of_sale.PosComponent');
    const ProductScreen = require('point_of_sale.ProductScreen');
    const Registries = require('point_of_sale.Registries');
    const { useListener } = require('web.custom_hooks');

    class PaymentSummaryButton extends PosComponent {
        constructor() {
            super(...arguments);
            useListener('click', this._onClick);
        }
        _onClick() {
            this.showPopup('PaymentSummaryPopup', { title: 'Payment Summary', });
        }
    }
    PaymentSummaryButton.template = 'advanced_pos_reports.PaymentSummaryButton';

    ProductScreen.addControlButton({
        component: PaymentSummaryButton,
        condition: function () {
            return true;
        },
    });

    Registries.Component.add(PaymentSummaryButton);

    return PaymentSummaryButton;
});

===== .\advanced_pos_reports\static\src\js\ControlButtons\ProductSummaryButton.js =====
odoo.define('advanced_pos_reports.ProductSummaryButton', function (require) {
    'use strict';

    const PosComponent = require('point_of_sale.PosComponent');
    const ProductScreen = require('point_of_sale.ProductScreen');
    const Registries = require('point_of_sale.Registries');
    const { useListener } = require('web.custom_hooks');

    class ProductSummaryButton extends PosComponent {
        constructor() {
            super(...arguments);
            useListener('click', this._onClick);
        }
        _onClick() {
            this.showPopup('ProductSummaryPopup', { title: 'Product Summary', });
//            const customer = this.env.pos.get_order().get_client();
//            const searchDetails = customer ? { fieldName: 'CUSTOMER', searchTerm: customer.name } : {};
//            this.trigger('close-popup');
//            this.showScreen('TicketScreen', {
//                ui: { filter: 'SYNCED', searchDetails },
//                destinationOrder: this.env.pos.get_order(),
//            });
        }
    }
    ProductSummaryButton.template = 'advanced_pos_reports.ProductSummaryButton';

    ProductScreen.addControlButton({
        component: ProductSummaryButton,
        condition: function () {
            return true;
        },
    });

    Registries.Component.add(ProductSummaryButton);

    return ProductSummaryButton;
});

===== .\advanced_pos_reports\static\src\js\ControlButtons\SessionSummaryButton.js =====
odoo.define('advanced_pos_reports.SessionSummaryButton', function (require) {
    'use strict';

    const PosComponent = require('point_of_sale.PosComponent');
    const ProductScreen = require('point_of_sale.ProductScreen');
    const Registries = require('point_of_sale.Registries');
    const { useListener } = require('web.custom_hooks');

    class SessionSummaryButton extends PosComponent {
        constructor() {
            super(...arguments);
            useListener('click', this._onClick);
        }
        async _onClick() {
            var sessions = await this.rpc({
                   model: 'pos.session',
                    method: 'search_read',
                    args: [[]],
                });
            this.showPopup('SessionSummaryPopup', { title: 'Session Summary', sessions: sessions});
        }
    }
    SessionSummaryButton.template = 'advanced_pos_reports.SessionSummaryButton';

    ProductScreen.addControlButton({
        component: SessionSummaryButton,
        condition: function () {
            return true;
        },
    });

    Registries.Component.add(SessionSummaryButton);

    return SessionSummaryButton;
});

===== .\advanced_pos_reports\static\src\js\Popups\CategorySummaryPopup.js =====
odoo.define('advanced_pos_reports.CategorySummaryPopup', function(require) {
    'use strict';

    const { useState } = owl.hooks;
    const AbstractAwaitablePopup = require('point_of_sale.AbstractAwaitablePopup');
    const Registries = require('point_of_sale.Registries');
    const { _lt } = require('@web/core/l10n/translation');

    class CategorySummaryPopup extends AbstractAwaitablePopup {
        constructor() {
            super(...arguments);
            this.state = useState({
                current_session: false,
                start_date: "",
                end_date: "",
            });
        }
        click_is_session(){
            var is_session = $('#is_current_session').is(':checked');
            if(is_session){
                $("#date_section").hide();
            }
            else{
                $("#date_section").show();
            }
        }
        async confirm(event) {
            var is_session = this.state.current_session;
            var start_date = this.state.start_date || '';
            var end_date = this.state.end_date || '';
            var order = this.env.pos.get_order()['sequence_number']
            var domain = []
            if(is_session){
                domain = [['session_id', '=', this.env.pos.pos_session.id]]
            }
            else{
                domain = [['date_order', '>=', start_date + ' 00:00:00'], ['date_order', '<=', end_date +  ' 23:59:59']]
            }
            var orders = await this.rpc({
				model: 'pos.order',
				method: 'search',
				args: [domain],
				});
            var order_ids = []
            $.each(orders,function(index,value){
                order_ids.push(value)
            });
            var categories = await this.rpc({
				model: 'pos.order',
				method: 'get_category_summary',
				args: [order, order_ids],
				});
            this.showScreen('CategorySummaryReceiptScreen', { categories: categories, start_date: start_date, end_date: end_date});
            super.confirm();
        }
    }
    CategorySummaryPopup.template = 'CategorySummaryPopup';
    CategorySummaryPopup.defaultProps = {
        confirmText: _lt('Print'),
        cancelText: _lt('Cancel'),
        array: [],
        isSingleItem: false,
    };

    Registries.Component.add(CategorySummaryPopup);

    return CategorySummaryPopup;
});


===== .\advanced_pos_reports\static\src\js\Popups\LocationSummaryPopup.js =====
odoo.define('advanced_pos_reports.LocationSummaryPopup', function(require) {
    'use strict';

    const { useState } = owl.hooks;
    const AbstractAwaitablePopup = require('point_of_sale.AbstractAwaitablePopup');
    const Registries = require('point_of_sale.Registries');
    const { _lt } = require('@web/core/l10n/translation');

    class LocationSummaryPopup extends AbstractAwaitablePopup {
        constructor() {
            super(...arguments);
            this.state = useState({
                selected_value: ''
            });
        }
        async confirm(event) {
            var location = this.state.selected_value;
            var locations = await this.rpc({
				model: 'pos.config',
				method: 'get_location_summary',
				args: [this.config_id, location],
				});
            this.showScreen('LocationSummaryReceiptScreen', { locations: locations});
            super.confirm();
        }
    }
    LocationSummaryPopup.template = 'LocationSummaryPopup';
    LocationSummaryPopup.defaultProps = {
        confirmText: _lt('Print'),
        cancelText: _lt('Cancel'),
        array: [],
        isSingleItem: false,
    };

    Registries.Component.add(LocationSummaryPopup);

    return LocationSummaryPopup;
});


===== .\advanced_pos_reports\static\src\js\Popups\OrderSummaryPopup.js =====
odoo.define('advanced_pos_reports.OrderSummaryPopup', function(require) {
    'use strict';

    const { useState, useRef } = owl.hooks;
    const AbstractAwaitablePopup = require('point_of_sale.AbstractAwaitablePopup');
    const Registries = require('point_of_sale.Registries');
    const { _lt } = require('@web/core/l10n/translation');

    class OrderSummaryPopup extends AbstractAwaitablePopup {
        constructor() {
            super(...arguments);
            this.state = useState({
                current_session: false,
                start_date: "",
                end_date: "",
                status: '' || 'draft' || 'paid' || 'done' || 'invoiced' || 'cancel',
            });
        }
        click_is_session(){
            var is_session = $('#is_current_session').is(':checked');
            if(is_session){
                $("#date_section").hide();
            }
            else{
                $("#date_section").show();
            }
        }
        async confirm(event) {
            var is_session = this.state.current_session;
            var start_date = this.state.start_date || '';
            var end_date = this.state.end_date || '';
            var status = this.state.status;
            var order = this.env.pos.get_order()['sequence_number']
            var domain = []
            if(is_session){
                domain = [['session_id', '=', this.env.pos.pos_session.id]]
                if(status){
                    domain = [['session_id', '=', this.env.pos.pos_session.id], ['state', '=', status]]
                }
            }
            else{
                domain = [['date_order', '>=', start_date + ' 00:00:00'],
                          ['date_order', '<=', end_date +  ' 23:59:59']]
                if(status){
                    domain = [['date_order', '>=', start_date + ' 00:00:00'],
                          ['date_order', '<=', end_date +  ' 23:59:59'],
                          ['state', '=', status]]
                }
            }
            var orders_ids = await this.rpc({
				model: 'pos.order',
				method: 'search',
				args: [domain],
				});
            var order_ids = []
            $.each(orders_ids,function(index,value){
                order_ids.push(value)
            });
            var orders = await this.rpc({
				model: 'pos.order',
				method: 'get_order_summary',
				args: [order, order_ids],
				});
            this.showScreen('OrderSummaryReceiptScreen', { orders: orders, start_date: start_date, end_date: end_date});
            super.confirm();
        }
    }
    OrderSummaryPopup.template = 'OrderSummaryPopup';
    OrderSummaryPopup.defaultProps = {
        confirmText: _lt('Print'),
        cancelText: _lt('Cancel'),
        array: [],
        isSingleItem: false,
    };

    Registries.Component.add(OrderSummaryPopup);

    return OrderSummaryPopup;
});


===== .\advanced_pos_reports\static\src\js\Popups\PaymentSummaryPopup.js =====
odoo.define('advanced_pos_reports.PaymentSummaryPopup', function(require) {
    'use strict';

    const { useState } = owl.hooks;
    const AbstractAwaitablePopup = require('point_of_sale.AbstractAwaitablePopup');
    const Registries = require('point_of_sale.Registries');
    const { _lt } = require('@web/core/l10n/translation');

    class PaymentSummaryPopup extends AbstractAwaitablePopup {

        constructor() {
            super(...arguments);
            this.state = useState({
                current_session: false,
                start_date: "",
                end_date: "",
                summary: '' || 'sales_person' || 'journal',
            });
        }
        click_is_session(){
            var is_session = $('#is_current_session').is(':checked');
            if(is_session){
                $("#date_section").hide();
            }
            else{
                $("#date_section").show();
            }
        }
        async confirm(event) {
            var is_session = this.state.current_session;
            var start_date = this.state.start_date || '';
            var end_date = this.state.end_date || '';
            var summary_type = this.state.summary;
            var order = this.env.pos.get_order()['sequence_number']
            var is_user = false;
            if(summary_type === 'sales_person'){
                is_user = true
            }
            var domain = []
            if(is_session){
                domain = [['session_id', '=', this.env.pos.pos_session.id]]
                if(summary_type == 'sales_person'){
                    domain = [['session_id', '=', this.env.pos.pos_session.id], ['user_id', '=', this.env.pos.user.id]]
                }
            }
            else{
                domain = [['date_order', '>=', start_date + ' 00:00:00'],
                          ['date_order', '<=', end_date +  ' 23:59:59']]
                if(summary_type == 'sales_person'){
                    domain = [['date_order', '>=', start_date + ' 00:00:00'],
                              ['date_order', '<=', end_date +  ' 23:59:59'],
                              ['user_id', '=', this.env.pos.user.id]]
                }
            }
            var orders = await this.rpc({
				model: 'pos.order',
				method: 'search',
				args: [domain],
				});
            var order_ids = []
            $.each(orders,function(index,value){
                order_ids.push(value)
            });
            var payment_summary = await this.rpc({
				model: 'pos.payment',
				method: 'get_payment_summary',
				args: [order, order_ids],
				});
            this.showScreen('PaymentSummaryReceiptScreen', { payment_summary: payment_summary, start_date: start_date, end_date: end_date, is_user: is_user });
            super.confirm();
        }
    }
    PaymentSummaryPopup.template = 'PaymentSummaryPopup';
    PaymentSummaryPopup.defaultProps = {
        confirmText: _lt('Print'),
        cancelText: _lt('Cancel'),
        array: [],
        isSingleItem: false,
    };

    Registries.Component.add(PaymentSummaryPopup);

    return PaymentSummaryPopup;
});


===== .\advanced_pos_reports\static\src\js\Popups\ProductSummaryPopup.js =====
odoo.define('advanced_pos_reports.ProductSummaryPopup', function(require) {
    'use strict';

    const { useState } = owl.hooks;
    const AbstractAwaitablePopup = require('point_of_sale.AbstractAwaitablePopup');
    const Registries = require('point_of_sale.Registries');
    const { _lt } = require('@web/core/l10n/translation');

    class ProductSummaryPopup extends AbstractAwaitablePopup {
        constructor() {
            super(...arguments);
            this.state = useState({
                current_session: false,
                start_date: "",
                end_date: ""
            });
        }
        click_is_session(){
            var is_session = $('#is_current_session').is(':checked');
            if(is_session){
                $("#date_section").hide();
            }
            else{
                $("#date_section").show();
            }
        }
        async confirm(event) {
            var is_session = this.state.current_session;
            var start_date = this.state.start_date || '';
            var end_date = this.state.end_date || '';
            var order = this.env.pos.get_order()['sequence_number']
            var domain = []
            if(is_session){
                domain = [['session_id', '=', this.env.pos.pos_session.id]]
            }
            else{
                domain = [['date_order', '>=', start_date + ' 00:00:00'],
                          ['date_order', '<=', end_date +  ' 23:59:59']]
            }
            var orders = await this.rpc({
				model: 'pos.order',
				method: 'search',
				args: [domain],
				});
            var order_ids = []
            $.each(orders,function(index,value){
                order_ids.push(value)
            });
            var products = await this.rpc({
				model: 'pos.order',
				method: 'get_product_summary',
				args: [order, order_ids],
				});
            this.showScreen('ProductSummaryReceiptScreen', { products: products, start_date: start_date, end_date: end_date});
            super.confirm();
        }
    }
    ProductSummaryPopup.template = 'ProductSummaryPopup';
    ProductSummaryPopup.defaultProps = {
        confirmText: _lt('Print'),
        cancelText: _lt('Cancel'),
        array: [],
        isSingleItem: false,
    };

    Registries.Component.add(ProductSummaryPopup);

    return ProductSummaryPopup;
});


===== .\advanced_pos_reports\static\src\js\Popups\SessionSummaryPopup.js =====
odoo.define('advanced_pos_reports.SessionSummaryPopup', function(require) {
    'use strict';

    const { useState } = owl.hooks;
    const AbstractAwaitablePopup = require('point_of_sale.AbstractAwaitablePopup');
    const Registries = require('point_of_sale.Registries');
    const { useAutoFocusToLast } = require('point_of_sale.custom_hooks');
    const { _lt } = require('@web/core/l10n/translation');

    class SessionSummaryPopup extends AbstractAwaitablePopup {
        constructor() {
            super(...arguments);
            this.state = useState({
                selected_value: ''
            });
        }
        async confirm(event) {
            var session = this.state.selected_value;
            var session_summary = await this.rpc({
				model: 'pos.session',
				method: 'get_session_summary',
				args: [this.env.pos.pos_session.id, session],
				});
            this.showScreen('SessionSummaryReceiptScreen', { session_summary: session_summary});
            super.confirm();
        }
    }
    SessionSummaryPopup.template = 'SessionSummaryPopup';
    SessionSummaryPopup.defaultProps = {
        confirmText: _lt('Print'),
        cancelText: _lt('Cancel'),
        array: [],
        isSingleItem: false,
    };

    Registries.Component.add(SessionSummaryPopup);

    return SessionSummaryPopup;
});


===== .\advanced_pos_reports\static\src\js\Receipts\CategorySummaryReceipt.js =====
odoo.define('advanced_pos_reports.CategorySummaryReceipt', function(require) {
    'use strict';

    const PosComponent = require('point_of_sale.PosComponent');
    const Registries = require('point_of_sale.Registries');

    class CategorySummaryReceipt extends PosComponent {
        constructor() {
            super(...arguments);
            this._categorySummaryEnv = this.props.categories
        }
        get categories() {
            return this._categorySummaryEnv;
        }
        get company() {
            return this.env.pos.company;
        }
        get cashier() {
            return this.env.pos.get_cashier();
        }
    }
    CategorySummaryReceipt.template = 'CategorySummaryReceipt';

    Registries.Component.add(CategorySummaryReceipt);

    return CategorySummaryReceipt;
});


===== .\advanced_pos_reports\static\src\js\Receipts\LocationSummaryReceipt.js =====
odoo.define('advanced_pos_reports.LocationSummaryReceipt', function(require) {
    'use strict';

    const PosComponent = require('point_of_sale.PosComponent');
    const Registries = require('point_of_sale.Registries');

    class LocationSummaryReceipt extends PosComponent {
        constructor() {
            super(...arguments);
            this._locationSummaryEnv = this.props.locations
        }
        get locations() {
            return this._locationSummaryEnv;
        }
        get company() {
            return this.env.pos.company;
        }
        get cashier() {
            return this.env.pos.get_cashier();
        }
    }
    LocationSummaryReceipt.template = 'LocationSummaryReceipt';

    Registries.Component.add(LocationSummaryReceipt);

    return LocationSummaryReceipt;
});


===== .\advanced_pos_reports\static\src\js\Receipts\OrderSummaryReceipt.js =====
odoo.define('advanced_pos_reports.OrderSummaryReceipt', function(require) {
    'use strict';

    const PosComponent = require('point_of_sale.PosComponent');
    const Registries = require('point_of_sale.Registries');

    class OrderSummaryReceipt extends PosComponent {
        constructor() {
            super(...arguments);
            this._orderSummaryEnv = this.props.orders
        }
        get orders() {
            return this._orderSummaryEnv;
        }
        get company() {
            return this.env.pos.company;
        }
        get cashier() {
            return this.env.pos.get_cashier();
        }
        getDate(order) {
            return moment(order.date_order).format('MM-DD-YYYY');
        }
    }
    OrderSummaryReceipt.template = 'OrderSummaryReceipt';

    Registries.Component.add(OrderSummaryReceipt);

    return OrderSummaryReceipt;
});


===== .\advanced_pos_reports\static\src\js\Receipts\PaymentSummaryReceipt.js =====
odoo.define('advanced_pos_reports.PaymentSummaryReceipt', function(require) {
    'use strict';

    const PosComponent = require('point_of_sale.PosComponent');
    const Registries = require('point_of_sale.Registries');

    class PaymentSummaryReceipt extends PosComponent {
        constructor() {
            super(...arguments);
            this._paymentSummaryEnv = this.props.payment_summary
        }
        get payment_summary() {
            return this._paymentSummaryEnv;
        }
        get company() {
            return this.env.pos.company;
        }
        get cashier() {
            return this.env.pos.get_cashier();
        }
//        getDate(order) {
//            return moment(order.date_order).format('MM-DD-YYYY');
//        }
    }
    PaymentSummaryReceipt.template = 'PaymentSummaryReceipt';

    Registries.Component.add(PaymentSummaryReceipt);

    return PaymentSummaryReceipt;
});


===== .\advanced_pos_reports\static\src\js\Receipts\ProductSummaryReceipt.js =====
odoo.define('advanced_pos_reports.ProductSummaryReceipt', function(require) {
    'use strict';

    const PosComponent = require('point_of_sale.PosComponent');
    const Registries = require('point_of_sale.Registries');

    class ProductSummaryReceipt extends PosComponent {
        constructor() {
            super(...arguments);
            this._productSummaryEnv = this.props.products
        }
        get products() {
            return this._productSummaryEnv;
        }
        get company() {
            return this.env.pos.company;
        }
        get cashier() {
            return this.env.pos.get_cashier();
        }
    }
    ProductSummaryReceipt.template = 'ProductSummaryReceipt';

    Registries.Component.add(ProductSummaryReceipt);

    return ProductSummaryReceipt;
});


===== .\advanced_pos_reports\static\src\js\Receipts\SessionSummaryReceipt.js =====
odoo.define('advanced_pos_reports.SessionSummaryReceipt', function(require) {
    'use strict';

    const PosComponent = require('point_of_sale.PosComponent');
    const Registries = require('point_of_sale.Registries');

    class SessionSummaryReceipt extends PosComponent {
        constructor() {
            super(...arguments);
            this._sessionSummaryEnv = this.props.session_summary
        }
        get session_summary() {
            return this._sessionSummaryEnv;
        }
        get company() {
            return this.env.pos.company;
        }
        get cashier() {
            return this.env.pos.get_cashier();
        }
    }
    SessionSummaryReceipt.template = 'SessionSummaryReceipt';

    Registries.Component.add(SessionSummaryReceipt);

    return SessionSummaryReceipt;
});


===== .\advanced_pos_reports\static\src\js\ReceiptScreen\CategorySummaryReceiptScreen.js =====
odoo.define('advanced_pos_reports.CategorySummaryReceiptScreen', function (require) {
    'use strict';

    const { Printer } = require('point_of_sale.Printer');
    const { is_email } = require('web.utils');
    const { useRef, useContext } = owl.hooks;
    const { useErrorHandlers, onChangeOrder } = require('point_of_sale.custom_hooks');
    const Registries = require('point_of_sale.Registries');
    const AbstractReceiptScreen = require('point_of_sale.AbstractReceiptScreen');

    const CategorySummaryReceiptScreen = (AbstractReceiptScreen) => {
        class CategorySummaryReceiptScreen extends AbstractReceiptScreen {
            constructor() {
                super(...arguments);
                this.categorySummary = useRef('category-summary');
            }
            confirm() {
                this.showScreen('ProductScreen');
            }
            async printSummary() {
                await this._printReceipt();
            }

        }
        CategorySummaryReceiptScreen.template = 'CategorySummaryReceiptScreen';
        return CategorySummaryReceiptScreen;
    };

    Registries.Component.addByExtending(CategorySummaryReceiptScreen, AbstractReceiptScreen);

    return CategorySummaryReceiptScreen;
});


===== .\advanced_pos_reports\static\src\js\ReceiptScreen\LocationSummaryReceiptScreen.js =====
odoo.define('advanced_pos_reports.LocationSummaryReceiptScreen', function (require) {
    'use strict';

    const { Printer } = require('point_of_sale.Printer');
    const { is_email } = require('web.utils');
    const { useRef, useContext } = owl.hooks;
    const { useErrorHandlers, onChangeOrder } = require('point_of_sale.custom_hooks');
    const Registries = require('point_of_sale.Registries');
    const AbstractReceiptScreen = require('point_of_sale.AbstractReceiptScreen');

    const LocationSummaryReceiptScreen = (AbstractReceiptScreen) => {
        class LocationSummaryReceiptScreen extends AbstractReceiptScreen {
            constructor() {
                super(...arguments);
                this.locationSummary = useRef('location-summary');
            }
            confirm() {
                this.showScreen('ProductScreen');
            }
            async printSummary() {
                await this._printReceipt();
            }

        }
        LocationSummaryReceiptScreen.template = 'LocationSummaryReceiptScreen';
        return LocationSummaryReceiptScreen;
    };

    Registries.Component.addByExtending(LocationSummaryReceiptScreen, AbstractReceiptScreen);

    return LocationSummaryReceiptScreen;
});


===== .\advanced_pos_reports\static\src\js\ReceiptScreen\OrderSummaryReceiptScreen.js =====
odoo.define('advanced_pos_reports.OrderSummaryReceiptScreen', function (require) {
    'use strict';

    const { Printer } = require('point_of_sale.Printer');
    const { is_email } = require('web.utils');
    const { useRef, useContext } = owl.hooks;
    const { useErrorHandlers, onChangeOrder } = require('point_of_sale.custom_hooks');
    const Registries = require('point_of_sale.Registries');
    const AbstractReceiptScreen = require('point_of_sale.AbstractReceiptScreen');

    const OrderSummaryReceiptScreen = (AbstractReceiptScreen) => {
        class OrderSummaryReceiptScreen extends AbstractReceiptScreen {
            constructor() {
                super(...arguments);
                this.orderSummary = useRef('order-summary');
            }
            confirm() {
                this.showScreen('ProductScreen');
            }
            async printSummary() {
                await this._printReceipt();
            }

        }
        OrderSummaryReceiptScreen.template = 'OrderSummaryReceiptScreen';
        return OrderSummaryReceiptScreen;
    };

    Registries.Component.addByExtending(OrderSummaryReceiptScreen, AbstractReceiptScreen);

    return OrderSummaryReceiptScreen;
});


===== .\advanced_pos_reports\static\src\js\ReceiptScreen\PaymentSummaryReceiptScreen.js =====
odoo.define('advanced_pos_reports.PaymentSummaryReceiptScreen', function (require) {
    'use strict';

    const { Printer } = require('point_of_sale.Printer');
    const { is_email } = require('web.utils');
    const { useRef, useContext } = owl.hooks;
    const { useErrorHandlers, onChangeOrder } = require('point_of_sale.custom_hooks');
    const Registries = require('point_of_sale.Registries');
    const AbstractReceiptScreen = require('point_of_sale.AbstractReceiptScreen');

    const PaymentSummaryReceiptScreen = (AbstractReceiptScreen) => {
        class PaymentSummaryReceiptScreen extends AbstractReceiptScreen {
            constructor() {
                super(...arguments);
                this.paymentSummary = useRef('payment-summary');
            }
            confirm() {
                this.showScreen('ProductScreen');
            }
            async printSummary() {
                await this._printReceipt();
            }
        }
        PaymentSummaryReceiptScreen.template = 'PaymentSummaryReceiptScreen';
        return PaymentSummaryReceiptScreen;
    };

    Registries.Component.addByExtending(PaymentSummaryReceiptScreen, AbstractReceiptScreen);

    return PaymentSummaryReceiptScreen;
});


===== .\advanced_pos_reports\static\src\js\ReceiptScreen\ProductSummaryReceiptScreen.js =====
odoo.define('advanced_pos_reports.ProductSummaryReceiptScreen', function (require) {
    'use strict';

    const { Printer } = require('point_of_sale.Printer');
    const { is_email } = require('web.utils');
    const { useRef, useContext } = owl.hooks;
    const { useErrorHandlers, onChangeOrder } = require('point_of_sale.custom_hooks');
    const Registries = require('point_of_sale.Registries');
    const AbstractReceiptScreen = require('point_of_sale.AbstractReceiptScreen');

    const ProductSummaryReceiptScreen = (AbstractReceiptScreen) => {
        class ProductSummaryReceiptScreen extends AbstractReceiptScreen {
            constructor() {
                super(...arguments);
                this.paymentSummary = useRef('product-summary');
            }
            confirm() {
                this.showScreen('ProductScreen');
            }
            async printSummary() {
                await this._printReceipt();
            }
        }
        ProductSummaryReceiptScreen.template = 'ProductSummaryReceiptScreen';
        return ProductSummaryReceiptScreen;
    };

    Registries.Component.addByExtending(ProductSummaryReceiptScreen, AbstractReceiptScreen);

    return ProductSummaryReceiptScreen;
});


===== .\advanced_pos_reports\static\src\js\ReceiptScreen\SessionSummaryReceiptScreen.js =====
odoo.define('advanced_pos_reports.SessionSummaryReceiptScreen', function (require) {
    'use strict';

    const { Printer } = require('point_of_sale.Printer');
    const { is_email } = require('web.utils');
    const { useRef, useContext } = owl.hooks;
    const { useErrorHandlers, onChangeOrder } = require('point_of_sale.custom_hooks');
    const Registries = require('point_of_sale.Registries');
    const AbstractReceiptScreen = require('point_of_sale.AbstractReceiptScreen');

    const SessionSummaryReceiptScreen = (AbstractReceiptScreen) => {
        class SessionSummaryReceiptScreen extends AbstractReceiptScreen {
            constructor() {
                super(...arguments);
                this.paymentSummary = useRef('product-summary');
            }
            confirm() {
                this.showScreen('ProductScreen');
            }
            async printSummary() {
                await this._printReceipt();
            }
        }
        SessionSummaryReceiptScreen.template = 'SessionSummaryReceiptScreen';
        return SessionSummaryReceiptScreen;
    };

    Registries.Component.addByExtending(SessionSummaryReceiptScreen, AbstractReceiptScreen);

    return SessionSummaryReceiptScreen;
});


===== .\advanced_pos_reports\static\src\xml\ControlButtons\CategorySummaryButton.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="advanced_pos_reports.CategorySummaryButton" owl="1">
        <div class="control-button">
            <i class="fa fa-file-text" role="img" aria-label="Category Summary" title="Category Summary" />
            Category Summary
        </div>
    </t>

</templates>

===== .\advanced_pos_reports\static\src\xml\ControlButtons\LocationSummaryButton.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="advanced_pos_reports.LocationSummaryButton" owl="1">
        <div class="control-button">
            <i class="fa fa-bar-chart" role="img" aria-label="Location Summary" title="Location Summary" />
            Location Summary
        </div>
    </t>

</templates>

===== .\advanced_pos_reports\static\src\xml\ControlButtons\OrderSummaryButton.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="advanced_pos_reports.OrderSummaryButton" owl="1">
        <div class="control-button">
            <i class="fa fa-shopping-cart" role="img" aria-label="Order Summary" title="Order Summary" />
            Order Summary
        </div>
    </t>

</templates>

===== .\advanced_pos_reports\static\src\xml\ControlButtons\PaymentSummaryButton.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="advanced_pos_reports.PaymentSummaryButton" owl="1">
        <div class="control-button">
            <i class="fa fa-credit-card" role="img" aria-label="Payment Summary" title="Payment Summary" />
            Payment Summary
        </div>
    </t>

</templates>

===== .\advanced_pos_reports\static\src\xml\ControlButtons\ProductSummaryButton.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="advanced_pos_reports.ProductSummaryButton" owl="1">
        <div class="control-button">
            <i class="fa fa-file" role="img" aria-label="Product Summary" title="Product Summary" />
            Product Summary
        </div>
    </t>

</templates>

===== .\advanced_pos_reports\static\src\xml\ControlButtons\SessionSummaryButton.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="advanced_pos_reports.SessionSummaryButton" owl="1">
        <div class="control-button">
            <i class="fa fa-sticky-note-o" role="img" aria-label="Session Summary" title="Session Summary" />
            Session Summary
        </div>
    </t>

</templates>

===== .\advanced_pos_reports\static\src\xml\Popups\CategorySummaryPopup.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="CategorySummaryPopup" owl="1">
        <div role="dialog" class="modal-dialog">
            <div class="popup popup-text">
                <header class="title">
                    <t t-esc="props.title" />
                </header>
                <main class="body">
                    <div class="order-summary">
                        <input type="checkbox" id="is_current_session" name="is_current_session"
                               style="min-height: 15px !important;width: 25px !important;box-shadow: none !important;"
                               t-on-click="click_is_session" t-model="state.current_session"/>
                        <label for="is_current_session">Current Session</label>
                        <div style="padding-top:10px;" id="date_section">
                            <table>
                                <thead>
                                    <tr>
                                        <th style="width: 25%">Start Date</th>
                                        <th style="width: 20%">End Date</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td class="flex" style="padding:5px;">
                                            <input type="date" id="start_date" t-model="state.start_date"/>
                                        </td>
                                        <td class="flex" style="padding:5px;">
                                            <input type="date" id="end_date" t-model="state.end_date"/>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </main>

                <footer class="footer">
                    <div class="button confirm" t-on-click="confirm">
                        Print
                    </div>
                    <div class="button cancel" t-on-click="cancel">
                        Cancel
                    </div>
                </footer>
            </div>
        </div>
    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\Popups\LocationSummaryPopup.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="LocationSummaryPopup" owl="1">
        <div role="dialog" class="modal-dialog">
            <div class="popup popup-text">
                <header class="title">
                    <t t-esc="props.title" />
                </header>
                <main class="body">
                    <div class="order-summary">
                        <div>
                            <div>
                                <p class="label">Locations</p>
                                <select class="popup-input" t-model="state.selected_value" style="width: 40%;">
                                    <option t-foreach="props.locations" t-as="value" t-att-value="value.id">
                                        <t t-esc="value.complete_name"/>
                                    </option>
                                </select>
                            </div>
                        </div>
                    </div>
                </main>
                <footer class="footer">
                    <div class="button confirm" t-on-click="confirm">
                        Print
                    </div>
                    <div class="button cancel" t-on-click="cancel">
                        Cancel
                    </div>
                </footer>
            </div>
        </div>
    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\Popups\OrderSummaryPopup.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="OrderSummaryPopup" owl="1">
        <div role="dialog" class="modal-dialog">
            <div class="popup popup-text">
                <header class="title">
                    <t t-esc="props.title" />
                </header>
                <main class="body">
                    <div class="order-summary">
                        <input type="checkbox" id="is_current_session" name="is_current_session"
                               style="min-height: 15px !important;width: 25px !important;box-shadow: none !important;"
                               t-on-click="click_is_session" t-model="state.current_session"/>
                        <label for="is_current_session">Current Session</label>
                        <div style="padding-top:10px;" id="date_section">
                            <table>
                                <thead>
                                    <tr>
                                        <th style="width: 25%">Start Date</th>
                                        <th style="width: 20%">End Date</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td class="flex" style="padding:5px;">
                                            <input type="date" id="start_date" t-model="state.start_date"/>
                                        </td>
                                        <td class="flex" style="padding:5px;">
                                            <input type="date" id="end_date" t-model="state.end_date"/>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <div style="margin-top: 40px;">
                            <p class="label">Status</p>
                            <select name="state" id="state" class="popup-input" style="width: 30%;" t-model="state.status" t-ref="select-status">
                                <option value="">Select status</option>
                                <option value="draft">Ongoing</option>
                                <option value="paid">Paid</option>
                                <option value="done">Done</option>
                                <option value="invoiced">Invoiced</option>
                                <option value="cancel">Cancelled</option>
                            </select>
                        </div>
                    </div>
                </main>

                <footer class="footer">
                    <div class="button confirm" t-on-click="confirm">
                        Print
                    </div>
                    <div class="button cancel" t-on-click="cancel">
                        Cancel
                    </div>
                </footer>
            </div>
        </div>
    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\Popups\PaymentSummaryPopup.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="PaymentSummaryPopup" owl="1">
        <div role="dialog" class="modal-dialog">
            <div class="popup popup-text">
                <header class="title">
                    <t t-esc="props.title" />
                </header>
                <main class="body">
                    <div class="order-summary">
                        <input type="checkbox" id="is_current_session" name="is_current_session"
                               style="min-height: 15px !important;width: 25px !important;box-shadow: none !important;"
                               t-on-click="click_is_session" t-model="state.current_session"/>
                        <label for="is_current_session">Current Session</label>
                        <div style="padding-top:10px;" id="date_section">
                            <table>
                                <thead>
                                    <tr>
                                        <th style="width: 25%">Start Date</th>
                                        <th style="width: 20%">End Date</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td class="flex" style="padding:5px;">
                                            <input type="date" id="start_date" t-model="state.start_date"/>
                                        </td>
                                        <td class="flex" style="padding:5px;">
                                            <input type="date" id="end_date" t-model="state.end_date"/>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <div style="margin-top: 40px;">
                            <p class="label">Summary</p>
                            <select name="summary" id="summary" class="popup-input" style="width: 30%;" t-model="state.summary" t-ref="select-summary">
                                <option value="" selected="1"></option>
                                <option value="sales_person">Salesperson</option>

                            </select>
                        </div>
                    </div>
                </main>

                <footer class="footer">
                    <div class="button confirm" t-on-click="confirm">
                        Print
                    </div>
                    <div class="button cancel" t-on-click="cancel">
                        Cancel
                    </div>
                </footer>
            </div>
        </div>
    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\Popups\ProductSummaryPopup.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="ProductSummaryPopup" owl="1">
        <div role="dialog" class="modal-dialog">
            <div class="popup popup-text">
                <header class="title">
                    <t t-esc="props.title" />
                </header>
                <main class="body">
                    <div class="order-summary">
                        <input type="checkbox" id="is_current_session" name="is_current_session"
                               style="min-height: 15px !important;width: 25px !important;box-shadow: none !important;"
                               t-on-click="click_is_session" t-model="state.current_session"/>
                        <label for="is_current_session">Current Session</label>
                        <div style="padding-top:10px;" id="date_section">
                            <table>
                                <thead>
                                    <tr>
                                        <th style="width: 25%">Start Date</th>
                                        <th style="width: 20%">End Date</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td class="flex" style="padding:5px;">
                                            <input type="date" id="start_date" t-model="state.start_date"/>
                                        </td>
                                        <td class="flex" style="padding:5px;">
                                            <input type="date" id="end_date" t-model="state.end_date"/>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </main>

                <footer class="footer">
                    <div class="button confirm" t-on-click="confirm">
                        Print
                    </div>
                    <div class="button cancel" t-on-click="cancel">
                        Cancel
                    </div>
                </footer>
            </div>
        </div>
    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\Popups\SessionSummaryPopup.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="SessionSummaryPopup" owl="1">
        <div role="dialog" class="modal-dialog">
            <div class="popup popup-text">
                <header class="title">
                    <t t-esc="props.title" />
                </header>
                <main class="body">
                    <div class="order-summary">
                        <div style="padding-top:10px;">
                            <div style="margin-top: 40px;">
                                <p class="label">Session</p>
                                <select class="popup-input" t-model="state.selected_value" style="width: 40%;">
                                    <option t-foreach="props.sessions" t-as="value" t-att-value="value.id">
                                        <t t-esc="value.name"/>
                                    </option>
                                </select>
                            </div>
                        </div>
                    </div>
                </main>

                <footer class="footer">
                    <div class="button confirm" t-on-click="confirm">
                        Print
                    </div>
                    <div class="button cancel" t-on-click="cancel">
                        Cancel
                    </div>
                </footer>
            </div>
        </div>
    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\Receipts\CategorySummaryReceipt.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="CategorySummaryReceipt" owl="1">
        <div class="pos-receipt">
            <t t-if="company.logo">
                <img class="pos-receipt-logo" t-att-src="company.logo" alt="Logo"/>
                <br/>
            </t>
            <t t-if="!company.logo">
                <h2 class="pos-receipt-center-align">
                    <t t-esc="company.name" />
                </h2>
                <br/>
            </t>
            <div class="pos-receipt-contact">
                <t t-if="company.contact_address">
                    <div><t t-esc="company.contact_address" /></div>
                </t>
                <t t-if="company.phone">
                    <div>Tel:<t t-esc="company.phone" /></div>
                </t>
                <t t-if="company.vat">
                    <div><t t-esc="company.vat_label"/>:<t t-esc="company.vat" /></div>
                </t>
                <t t-if="company.email">
                    <div><t t-esc="company.email" /></div>
                </t>
                <t t-if="company.website">
                    <div><t t-esc="company.website" /></div>
                </t>

                <t t-if="cashier">
                    <div class="cashier">
                        <div>--------------------------------</div>
                        <div>Served by <t t-esc="cashier.name" /></div>
                    </div>
                </t>
            </div>
            <br />

            <h4 class="pos-receipt-center-align">
                Category Summary
            </h4>

            <table style="font-size:14px !important;margin-left: auto; margin-right: auto;" t-if="props.start_date and props.end_date">
                <tr>
                    <td><strong>Start Date:</strong></td>
                    <td><t t-esc="props.start_date"/></td>

                </tr>
                <tr>
                    <td><strong>End Date:</strong></td>
                    <td><t t-esc="props.end_date"/></td>
                </tr>
            </table>

            <table style="width: 100%; margin-top:10px; font-size:14px !important;">
                <thead style="border-bottom: 2px solid black;">
					<tr>
						<th>Category</th>
						<th style="text-align: center;">Quantity</th>
						<th style="text-align: right;">Total</th>
					</tr>
				</thead>
				<tbody style="margin-top:5px;">
                    <t t-set="sub_total" t-value="0"/>
                    <t t-set="qty_total" t-value="0"/>
					<tr t-foreach="categories" t-as="category">
						<td>
							<t t-esc="category.name"/>
						</td>
						<td style="text-align: center;">
							<t t-esc="category.qty"/>
						</td>
						<td style="text-align: right;">
							<t t-esc="env.pos.format_currency_no_symbol(category.amount)"/>
						</td>
                        <t t-set="sub_total" t-value="sub_total + category.amount"/>
                        <t t-set="qty_total" t-value="qty_total + category.qty"/>
					</tr>
					<br />
					<tr style="border-top: 2px solid black;">
						<td>Total:</td>
						<td style="text-align: center;"><t t-esc="qty_total"/></td>
						<td style="text-align: right;">
							<t t-esc="env.pos.format_currency_no_symbol(sub_total)"/>
						</td>
					</tr>
				</tbody>
			</table>
        </div>

    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\Receipts\LocationSummaryReceipt.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="LocationSummaryReceipt" owl="1">
        <div class="pos-receipt">
            <t t-if="company.logo">
                <img class="pos-receipt-logo" t-att-src="company.logo" alt="Logo"/>
                <br/>
            </t>
            <t t-if="!company.logo">
                <h2 class="pos-receipt-center-align">
                    <t t-esc="company.name" />
                </h2>
                <br/>
            </t>
            <div class="pos-receipt-contact">
                <t t-if="company.contact_address">
                    <div><t t-esc="company.contact_address" /></div>
                </t>
                <t t-if="company.phone">
                    <div>Tel:<t t-esc="company.phone" /></div>
                </t>
                <t t-if="company.vat">
                    <div><t t-esc="company.vat_label"/>:<t t-esc="company.vat" /></div>
                </t>
                <t t-if="company.email">
                    <div><t t-esc="company.email" /></div>
                </t>
                <t t-if="company.website">
                    <div><t t-esc="company.website" /></div>
                </t>

                <t t-if="cashier">
                    <div class="cashier">
                        <div>--------------------------------</div>
                        <div>Served by <t t-esc="cashier.name" /></div>
                    </div>
                </t>
            </div>
            <br />

            <h4 class="pos-receipt-center-align">
                Location Summary
            </h4>

            <table style="width: 100%; margin-top:10px; font-size:14px !important;">
                <thead style="border-bottom: 2px solid black;">
					<tr>
						<th>Product</th>
						<th style="text-align: right;">Quantity</th>
					</tr>
				</thead>
				<tbody style="margin-top:5px;">
                    <t t-set="total" t-value="0"/>
					<tr t-foreach="locations" t-as="loc">
						<td>
							<t t-esc="loc.product"/>
						</td>
                        <td style="text-align:right;">
							<t t-esc="loc.quantity"/>
						</td>
                        <t t-set="total" t-value="total + loc.quantity"/>
					</tr>
					<br />
					<tr style="border-top: 2px solid black;">
						<td>Total:</td>
						<td style="text-align: right;">
							<t t-esc="total"/>
						</td>
					</tr>
				</tbody>
			</table>
        </div>
    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\Receipts\OrderSummaryReceipt.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="OrderSummaryReceipt" owl="1">
        <div class="pos-receipt">
            <t t-if="company.logo">
                <img class="pos-receipt-logo" t-att-src="company.logo" alt="Logo"/>
                <br/>
            </t>
            <t t-if="!company.logo">
                <h2 class="pos-receipt-center-align">
                    <t t-esc="company.name" />
                </h2>
                <br/>
            </t>
            <div class="pos-receipt-contact">
                <t t-if="company.contact_address">
                    <div><t t-esc="company.contact_address" /></div>
                </t>
                <t t-if="company.phone">
                    <div>Tel:<t t-esc="company.phone" /></div>
                </t>
                <t t-if="company.vat">
                    <div><t t-esc="company.vat_label"/>:<t t-esc="company.vat" /></div>
                </t>
                <t t-if="company.email">
                    <div><t t-esc="company.email" /></div>
                </t>
                <t t-if="company.website">
                    <div><t t-esc="company.website" /></div>
                </t>

                <t t-if="cashier">
                    <div class="cashier">
                        <div>--------------------------------</div>
                        <div>Served by <t t-esc="cashier.name" /></div>
                    </div>
                </t>
            </div>
            <br />

            <h4 class="pos-receipt-center-align">
                Order Summary
            </h4>

            <table style="font-size:14px !important;margin-left: auto; margin-right: auto;" t-if="props.start_date and props.end_date">
                <tr>
                    <td><strong>Start Date:</strong></td>
                    <td><t t-esc="props.start_date"/></td>

                </tr>
                <tr>
                    <td><strong>End Date:</strong></td>
                    <td><t t-esc="props.end_date"/></td>
                </tr>
            </table>

            <table style="width: 100%; margin-top:10px; font-size:14px !important;">
                <thead style="border-bottom: 2px solid black;">
					<tr>
						<th>Order Ref</th>
						<th style="text-align: center;">Status</th>
						<th style="text-align: center; width:100px;">Date</th>
						<th style="text-align: right;">Total</th>
					</tr>
				</thead>
				<tbody style="margin-top:5px;">
                    <t t-set="sub_total" t-value="0"/>
					<tr t-foreach="orders" t-as="order">
						<td>
							<t t-esc="order.order_name"/>
						</td>
						<td style="text-align: center;">
							<t t-esc="order.state"/>
						</td>
						<td style="text-align: center;">
                            <div><t t-esc="getDate(order)"/></div>
						</td>
						<td style="text-align: right;">
							<t t-esc="env.pos.format_currency_no_symbol(order.amount_total)"/>
						</td>
                        <t t-set="sub_total" t-value="sub_total + order.amount_total"/>
					</tr>
					<br />
					<tr style="border-top: 2px solid black;">
						<td>Total:</td>
						<td></td>
						<td></td>
						<td style="text-align: right;">
							<t t-esc="env.pos.format_currency_no_symbol(sub_total)"/>
						</td>
					</tr>
				</tbody>
			</table>
        </div>
    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\Receipts\PaymentSummaryReceipt.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="PaymentSummaryReceipt" owl="1">
        <div class="pos-receipt">
            <t t-if="company.logo">
                <img class="pos-receipt-logo" t-att-src="company.logo" alt="Logo"/>
                <br/>
            </t>
            <t t-if="!company.logo">
                <h2 class="pos-receipt-center-align">
                    <t t-esc="company.name" />
                </h2>
                <br/>
            </t>
            <div class="pos-receipt-contact">
                <t t-if="company.contact_address">
                    <div><t t-esc="company.contact_address" /></div>
                </t>
                <t t-if="company.phone">
                    <div>Tel:<t t-esc="company.phone" /></div>
                </t>
                <t t-if="company.vat">
                    <div><t t-esc="company.vat_label"/>:<t t-esc="company.vat" /></div>
                </t>
                <t t-if="company.email">
                    <div><t t-esc="company.email" /></div>
                </t>
                <t t-if="company.website">
                    <div><t t-esc="company.website" /></div>
                </t>

                <t t-if="cashier">
                    <div class="cashier">
                        <div>--------------------------------</div>
                        <div>Served by <t t-esc="cashier.name" /></div>
                    </div>
                </t>
            </div>
            <br />

            <h4 class="pos-receipt-center-align">
                Payment Summary
            </h4>

            <t t-if="props.is_user">
                <h5 class="pos-receipt-center-align" >
                    <div>Salesperson: <t t-esc="env.pos.user.name" /></div>
                </h5>
            </t>

            <table style="font-size:14px !important;margin-left: auto; margin-right: auto;" t-if="props.start_date and props.end_date">
                <tr>
                    <td><strong>Start Date:</strong></td>
                    <td><t t-esc="props.start_date"/></td>

                </tr>
                <tr>
                    <td><strong>End Date:</strong></td>
                    <td><t t-esc="props.end_date"/></td>
                </tr>
            </table>

            <table style="margin-top:10px; font-size:14px !important; margin-left: auto; margin-right: auto;" class="receipt-orderlines">
                <colgroup>
                   <col style="width: 50%;"/>
                   <col style="width: 50%;"/>
                </colgroup>
                <thead style="border-bottom: 1px solid black;">
					<tr>
						<th>Payment Method</th>
						<th style="text-align: right;">Amount</th>
					</tr>
				</thead>
				<tbody>
                    <t t-set="sub_total" t-value="0"/>
					<tr t-foreach="payment_summary" t-as="payment">
						<td>
							<t t-esc="payment.name"/>
						</td>
						<td style="text-align: right;">
							<t t-esc="env.pos.format_currency_no_symbol(payment.total)"/>
						</td>
                        <t t-set="sub_total" t-value="sub_total + payment.total"/>
					</tr>
					<br />
					<tr style="border-top: 2px solid black;">
						<td>Total:</td>
						<td style="text-align: right;">
							<t t-esc="env.pos.format_currency_no_symbol(sub_total)"/>
						</td>
					</tr>
				</tbody>
			</table>
        </div>

    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\Receipts\ProductSummaryReceipt.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="ProductSummaryReceipt" owl="1">
        <div class="pos-receipt">
            <t t-if="company.logo">
                <img class="pos-receipt-logo" t-att-src="company.logo" alt="Logo"/>
                <br/>
            </t>
            <t t-if="!company.logo">
                <h2 class="pos-receipt-center-align">
                    <t t-esc="company.name" />
                </h2>
                <br/>
            </t>
            <div class="pos-receipt-contact">
                <t t-if="company.contact_address">
                    <div><t t-esc="company.contact_address" /></div>
                </t>
                <t t-if="company.phone">
                    <div>Tel:<t t-esc="company.phone" /></div>
                </t>
                <t t-if="company.vat">
                    <div><t t-esc="company.vat_label"/>:<t t-esc="company.vat" /></div>
                </t>
                <t t-if="company.email">
                    <div><t t-esc="company.email" /></div>
                </t>
                <t t-if="company.website">
                    <div><t t-esc="company.website" /></div>
                </t>

                <t t-if="cashier">
                    <div class="cashier">
                        <div>--------------------------------</div>
                        <div>Served by <t t-esc="cashier.name" /></div>
                    </div>
                </t>
            </div>
            <br />

            <h4 class="pos-receipt-center-align">
                Product Summary
            </h4>

            <table style="font-size:14px !important;margin-left: auto; margin-right: auto;" t-if="props.start_date and props.end_date">
                <tr>
                    <td><strong>Start Date:</strong></td>
                    <td><t t-esc="props.start_date"/></td>

                </tr>
                <tr>
                    <td><strong>End Date:</strong></td>
                    <td><t t-esc="props.end_date"/></td>
                </tr>
            </table>

            <table style="margin-top:10px; font-size:14px !important; margin-left: auto; margin-right: auto;" class="receipt-orderlines">
                <colgroup>
                   <col style="width: 75%;"/>
                   <col style="width: 25%;"/>
                </colgroup>
                <thead style="border-bottom: 1px solid black;">
					<tr>
						<th>Product</th>
						<th style="text-align: right;">Quantity</th>
					</tr>
				</thead>
				<tbody>
                    <t t-set="total_qty" t-value="0"/>
					<tr t-foreach="products" t-as="product">
						<td>
                            <t t-if="product.code">[<t t-esc="product.code"/>] </t><t t-esc="product.name"/>
						</td>
						<td style="text-align: right;">
							<t t-esc="product.qty"/>
						</td>
                        <t t-set="total_qty" t-value="total_qty + product.qty"/>
					</tr>
					<br />
					<tr style="border-top: 2px solid black;">
						<td>Total:</td>
						<td style="text-align: right;">
							<t t-esc="total_qty"/>
						</td>
					</tr>
				</tbody>
			</table>

        </div>

    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\Receipts\SessionSummaryReceipt.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="SessionSummaryReceipt" owl="1">
        <div class="pos-receipt">
            <t t-if="company.logo">
                <img class="pos-receipt-logo" t-att-src="company.logo" alt="Logo"/>
                <br/>
            </t>
            <t t-if="!company.logo">
                <h2 class="pos-receipt-center-align">
                    <t t-esc="company.name" />
                </h2>
                <br/>
            </t>
            <div class="pos-receipt-contact">
                <t t-if="company.contact_address">
                    <div><t t-esc="company.contact_address" /></div>
                </t>
                <t t-if="company.phone">
                    <div>Tel:<t t-esc="company.phone" /></div>
                </t>
                <t t-if="company.vat">
                    <div><t t-esc="company.vat_label"/>:<t t-esc="company.vat" /></div>
                </t>
                <t t-if="company.email">
                    <div><t t-esc="company.email" /></div>
                </t>
                <t t-if="company.website">
                    <div><t t-esc="company.website" /></div>
                </t>

                <t t-if="cashier">
                    <div class="cashier">
                        <div>--------------------------------</div>
                        <div>Served by <t t-esc="cashier.name" /></div>
                    </div>
                </t>
            </div>
            <br />

            <h3 class="pos-receipt-center-align">
                Session Summary
            </h3>

            <table style="width: 100%; font-size:14px !important;" t-if="session_summary">
                <tr>
                    <td style="text-align:left;"><strong>Session</strong></td>
                    <td style="text-align:right;"><t t-esc="session_summary.session_name"/></td>

                </tr>
                <tr>
                    <td style="text-align:left;"><strong>Opening Date</strong></td>
                    <td style="text-align:right;"><t t-esc="session_summary.start_date"/></td>
                </tr>
                <tr t-if="session_summary.end_date">
                    <td style="text-align:left;"><strong>Closing Date</strong></td>
                    <td style="text-align:right;"><t t-esc="session_summary.start_date"/></td>
                </tr>
                <tr>
                    <td style="text-align:left;"><strong>Opening Balance</strong></td>
                    <td style="text-align:right;"><t t-esc="env.pos.format_currency_no_symbol(session_summary.opening_balance)"/></td>
                </tr>
                <tr t-if="session_summary.closing_balance">
                    <td style="text-align:left;"><strong>Closing Balance</strong></td>
                    <td style="text-align:right;"><t t-esc="env.pos.format_currency_no_symbol(session_summary.closing_balance)"/></td>
                </tr>
            </table>

            <h4 class="pos-receipt-center-align">
                Products
            </h4>

            <table t-if="session_summary" style="margin-top:10px; font-size:14px !important; margin-left: auto; margin-right: auto;" class="receipt-orderlines">
                <colgroup>
                   <col style="width: 60%;"/>
                   <col style="width: 20%;"/>
                   <col style="width: 20%;"/>
                </colgroup>
                <thead style="border-bottom: 1px solid black;">
					<tr>
						<th>Product</th>
						<th style="text-align: center;">Quantity</th>
						<th style="text-align: right;">Total</th>
					</tr>
				</thead>
				<tbody>
                    <t t-set="total_qty" t-value="0"/>
                    <t t-set="total" t-value="0"/>
					<tr t-foreach="session_summary.product_summary" t-as="product">
						<td>
                            <t t-if="product.code">[<t t-esc="product.code"/>] </t><t t-esc="product.name"/>
						</td>
						<td style="text-align: center;">
							<t t-esc="product.qty"/>
						</td>
                        <td style="text-align: right;">
							<t t-esc="env.pos.format_currency_no_symbol(product.total)"/>
						</td>
                        <t t-set="total_qty" t-value="total_qty + product.qty"/>
                        <t t-set="total" t-value="total + product.total"/>
					</tr>
					<br />
					<tr style="border-top: 2px solid black;">
						<td>Total:</td>
						<td style="text-align: center;">
							<t t-esc="total_qty"/>
						</td>
                        <td style="text-align: right;">
							<t t-esc="env.pos.format_currency_no_symbol(total)"/>
						</td>
					</tr>
				</tbody>
			</table>

            <h4 class="pos-receipt-center-align">
                Payments
            </h4>

            <table t-if="session_summary" style="margin-top:10px; font-size:14px !important; width:100%;" class="receipt-orderlines">
                <colgroup>
                   <col style="width: 50%;"/>
                   <col style="width: 50%;"/>
                </colgroup>
                <thead style="border-bottom: 1px solid black;">
					<tr>
						<th>Payment Method</th>
						<th style="text-align: right;">Amount</th>
					</tr>
				</thead>
				<tbody>
                    <t t-set="sub_total" t-value="0"/>
					<tr t-foreach="session_summary.payments_summary" t-as="payment">
						<td>
							<t t-esc="payment.name"/>
						</td>
						<td style="text-align: right;">
							<t t-esc="env.pos.format_currency_no_symbol(payment.total)"/>
						</td>
                        <t t-set="sub_total" t-value="sub_total + payment.total"/>
					</tr>
					<br />
					<tr style="border-top: 2px solid black;">
						<td>Total:</td>
						<td style="text-align: right;">
							<t t-esc="env.pos.format_currency_no_symbol(sub_total)"/>
						</td>
					</tr>
				</tbody>
			</table>
        </div>
    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\ReceiptScreen\CategorySummaryReceiptScreen.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="CategorySummaryReceiptScreen" owl="1">
        <div class="receipt-screen screen">
            <div class="screen-content">
                <div class="top-content">
                    <span class="button back" t-on-click="confirm">
                        <i class="fa fa-angle-double-left"></i>
                        <span> </span>
                        <span>Back</span>
                    </span>
                </div>
                <div class="centered-content">
                    <div class="button print" t-on-click="printSummary">
                        <i class="fa fa-print"></i> Print Category Summary
                    </div>
                    <div class="pos-receipt-container">
                        <CategorySummaryReceipt categories="props.categories" start_date="props.start_date" end_date="props.end_date" t-ref="catgeory-summary" />
                    </div>
                </div>
            </div>
        </div>
    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\ReceiptScreen\LocationSummaryReceiptScreen.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="LocationSummaryReceiptScreen" owl="1">
        <div class="receipt-screen screen">
            <div class="screen-content">
                <div class="top-content">
                    <span class="button back" t-on-click="confirm">
                        <i class="fa fa-angle-double-left"></i>
                        <span> </span>
                        <span>Back</span>
                    </span>
                </div>
                <div class="centered-content">
                    <div class="button print" t-on-click="printSummary">
                        <i class="fa fa-print"></i> Print Location Summary
                    </div>
                    <div class="pos-receipt-container">
                        <LocationSummaryReceipt locations="props.locations" t-ref="location-summary" />
                    </div>
                </div>
            </div>
        </div>
    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\ReceiptScreen\OrderSummaryReceiptScreen.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="OrderSummaryReceiptScreen" owl="1">
        <div class="receipt-screen screen">
            <div class="screen-content">
                <div class="top-content">
                    <span class="button back" t-on-click="confirm">
                        <i class="fa fa-angle-double-left"></i>
                        <span> </span>
                        <span>Back</span>
                    </span>
                </div>
                <div class="centered-content">
                    <div class="button print" t-on-click="printSummary">
                        <i class="fa fa-print"></i> Print Order Summary
                    </div>
                    <div class="pos-receipt-container">
                        <OrderSummaryReceipt orders="props.orders" start_date="props.start_date" end_date="props.end_date" t-ref="order-summary" />
                    </div>
                </div>
            </div>
        </div>
    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\ReceiptScreen\PaymentSummaryReceiptScreen.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="PaymentSummaryReceiptScreen" owl="1">
        <div class="receipt-screen screen">
            <div class="screen-content">
                <div class="top-content">
                    <span class="button back" t-on-click="confirm">
                        <i class="fa fa-angle-double-left"></i>
                        <span> </span>
                        <span>Back</span>
                    </span>
                </div>
                <div class="centered-content">
                    <div class="button print" t-on-click="printSummary">
                        <i class="fa fa-print"></i> Print Payment Summary
                    </div>
                    <div class="pos-receipt-container">
                        <PaymentSummaryReceipt payment_summary="props.payment_summary" start_date="props.start_date"
                                               end_date="props.end_date" t-ref="payment-summary" is_user="props.is_user"/>
                    </div>
                </div>
            </div>
        </div>
    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\ReceiptScreen\ProductSummaryReceiptSreen.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="ProductSummaryReceiptScreen" owl="1">
        <div class="receipt-screen screen">
            <div class="screen-content">
                <div class="top-content">
                    <span class="button back" t-on-click="confirm">
                        <i class="fa fa-angle-double-left"></i>
                        <span> </span>
                        <span>Back</span>
                    </span>
                </div>
                <div class="centered-content">
                    <div class="button print" t-on-click="printSummary">
                        <i class="fa fa-print"></i> Print Product Summary
                    </div>
                    <div class="pos-receipt-container">
                        <ProductSummaryReceipt products="props.products" start_date="props.start_date" end_date="props.end_date" t-ref="product-summary" />
                    </div>
                </div>
            </div>
        </div>
    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\ReceiptScreen\SessionSummaryReceiptScreen.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="SessionSummaryReceiptScreen" owl="1">
        <div class="receipt-screen screen">
            <div class="screen-content">
                <div class="top-content">
                    <span class="button back" t-on-click="confirm">
                        <i class="fa fa-angle-double-left"></i>
                        <span> </span>
                        <span>Back</span>
                    </span>
                </div>
                <div class="centered-content">
                    <div class="button print" t-on-click="printSummary">
                        <i class="fa fa-print"></i> Print Session Summary
                    </div>
                    <div class="pos-receipt-container">
                        <SessionSummaryReceipt session_summary="props.session_summary" t-ref="session-summary" />
                    </div>
                </div>
            </div>
        </div>
    </t>

</templates>


===== .\advanced_pos_reports\views\reports.xml =====
<?xml version="1.0" encoding="UTF-8" ?>
<odoo>
    <record id="action_report_pos_sale_details" model="ir.actions.act_window">
        <field name="name">Sales Summary</field>
        <field name="res_model">pos.sale.details.wizard</field>
        <field name="view_mode">form</field>
        <field name="target">new</field>
    </record>

    <record id="action_report_pos_sale_top_selling" model="ir.actions.act_window">
        <field name="name">Top Selling</field>
        <field name="res_model">pos.sale.top.selling</field>
        <field name="view_mode">form</field>
        <field name="target">new</field>
    </record>

    <record id="action_report_pos_sale_ongoing" model="ir.actions.act_window">
        <field name="name">Ongoing Sessions Report</field>
        <field name="res_model">pos.sale.ongoing.wizard</field>
        <field name="view_mode">form</field>
        <field name="target">new</field>
    </record>

    <record id="action_report_pos_sale_posted" model="ir.actions.act_window">
        <field name="name">Posted Sessions Report</field>
        <field name="res_model">pos.sale.posted.wizard</field>
        <field name="view_mode">form</field>
        <field name="target">new</field>
    </record>

    <menuitem id="menu_report_sale_order_details" name="Sales Summary" action="action_report_pos_sale_details" parent="point_of_sale.menu_point_rep" sequence="4"/>
    <menuitem id="menu_report_sale_top_selling_details" name="Top Selling" action="action_report_pos_sale_top_selling" parent="point_of_sale.menu_point_rep" sequence="4"/>
    <menuitem id="menu_report_sale_ongoing_session" name="Ongoing Sessions Report" action="action_report_pos_sale_ongoing" parent="point_of_sale.menu_point_rep" sequence="4"/>
    <menuitem id="menu_report_sale_posted_session" name="Posted Sessions Report" action="action_report_pos_sale_posted" parent="point_of_sale.menu_point_rep" sequence="4"/>

    <record id="pos_sale_details_report" model="ir.actions.report">
        <field name="name">Sales Summary</field>
        <field name="model">report.advanced_pos_reports.report_pos_saledetails</field>
        <field name="report_type">qweb-pdf</field>
        <field name="report_name">advanced_pos_reports.report_pos_saledetails</field>
    </record>

    <record id="pos_posted_sessions_report" model="ir.actions.report">
        <field name="name">Posted Sessions</field>
        <field name="model">report.advanced_pos_reports.report_pos_posted_session</field>
        <field name="report_type">qweb-pdf</field>
        <field name="report_name">advanced_pos_reports.report_pos_posted_session</field>
    </record>

    <record id="pos_ongoing_session_report" model="ir.actions.report">
        <field name="name">Ongoing Sessions</field>
        <field name="model">report.advanced_pos_reports.report_pos_ongoing_session</field>
        <field name="report_type">qweb-pdf</field>
        <field name="report_name">advanced_pos_reports.report_pos_ongoing_session</field>
    </record>

    <record id="pos_top_selling_products_report" model="ir.actions.report">
        <field name="name">Top Selling Products Report</field>
        <field name="model">report.advanced_pos_reports.report_pos_top_selling_products</field>
        <field name="report_type">qweb-pdf</field>
        <field name="report_name">advanced_pos_reports.report_pos_top_selling_products</field>
    </record>

    <record id="pos_top_selling_category_report" model="ir.actions.report">
        <field name="name">Top Selling Categories Report</field>
        <field name="model">report.advanced_pos_reports.report_pos_top_selling_categories</field>
        <field name="report_type">qweb-pdf</field>
        <field name="report_name">advanced_pos_reports.report_pos_top_selling_categories</field>
    </record>

    <record id="pos_top_selling_customer_report" model="ir.actions.report">
        <field name="name">Top Selling Customers Report</field>
        <field name="model">report.advanced_pos_reports.report_pos_top_selling_customers</field>
        <field name="report_type">qweb-pdf</field>
        <field name="report_name">advanced_pos_reports.report_pos_top_selling_customers</field>
    </record>

</odoo>

===== .\advanced_pos_reports\views\report_pos_ongoing_session.xml =====
<?xml version="1.0" encoding="utf-8" ?>
<odoo>
    <template id="report_pos_ongoing_session">
        <t t-call="web.html_container">
            <t t-call="web.external_layout">
                <div class="page">
                    <div class="text-center">
                        <h2>Ongoing Sessions Report</h2>
                    </div>

                    <table  class="table table-lg">
                        <tbody>
                            <tr>
                                <td>Report Date:</td>
                                <td style="text-align: right;">
                                    <t t-esc="today" t-options='{"widget": "date"}'/>
                                </td>
                            </tr>
                            <tr>
                                <td>Report Time:</td>
                                <td style="text-align: right;">
                                    <t t-esc="today" t-options='{"widget": "datetime",  "time_only": True}'/>
                                </td>
                            </tr>
                            <tr>
                                <td>Session(s):</td>
                                <td style="text-align: right;">
                                    <t t-foreach="sessions" t-as="session">
                                        <t t-esc="session.name"/>
                                    </t>
                                </td>
                            </tr>
                            <tr>
                                <td>Status:</td>
                                <td style="text-align: right;">
                                    Opened
                                </td>
                            </tr>
                            <tr>
                                <td>Opening Balance:</td>
                                <td style="text-align: right;">
                                    <t t-esc="sum(sessions.mapped('cash_register_balance_start'))" t-options="{'widget': 'float', 'precision': currency_precision}"/>
                                </td>
                            </tr>
                            <tr>
                                <td>Sales Without Tax:</td>
                                <td style="text-align: right;">
                                    <t t-esc="amount_total_without_tax" t-options="{'widget': 'float', 'precision': currency_precision}"/>
                                </td>
                            </tr>
                            <tr>
                                <td>Tax:</td>
                                <td style="text-align: right;">
                                    <t t-esc="amount_total_tax" t-options="{'widget': 'float', 'precision': currency_precision}"/>
                                </td>
                            </tr>
                            <tr>
                                <td>Returns:</td>
                                <td style="text-align: right;">
                                    <t t-esc="amount_return" t-options="{'widget': 'float', 'precision': currency_precision}"/>
                                </td>
                            </tr>
                            <tr>
                                <td>Total:</td>
                                <td style="text-align: right;">
                                    <t t-esc="amount_total"  t-options="{'widget': 'float', 'precision': currency_precision}"/>
                                </td>
                            </tr>

                        </tbody>
                    </table>

                    <center>
                        <h3>Department Sales</h3>
                    </center>
                    <table  class="table table-lg">
                        <tbody>
                            <t t-set="total" t-value="0"/>
                            <tr t-foreach='categories' t-as='category'>
                                <td><t t-esc="category['name']" /></td>
                                <td style="text-align: right;"><t t-esc="category['amount']"  t-options="{'widget': 'float', 'precision': currency_precision}"/></td>
                                <t t-set="total" t-value="total + category['amount']"/>
                            </tr>
                            <tr>
                                <td>Total</td>
                                <td style="text-align: right;"><t t-esc="total"  t-options="{'widget': 'float', 'precision': currency_precision}"/></td>
                            </tr>
                        </tbody>
                    </table>

                    <center>
                        <h3>Payments</h3>
                    </center>
                    <table  class="table table-sm">
                        <tbody>
                            <t t-set="total" t-value="0"/>
                            <tr t-foreach='payments' t-as='payment'>
                                <td><t t-esc="payment['name']" /></td>
                                <td style="text-align: right;"><t t-esc="payment['total']"  t-options="{'widget': 'float', 'precision': currency_precision}"/></td>
                                <t t-set="total" t-value="total + payment['total']"/>
                            </tr>
                            <tr>
                                <td>Total</td>
                                <td style="text-align: right;"><t t-esc="total"  t-options="{'widget': 'float', 'precision': currency_precision}"/></td>
                            </tr>
                        </tbody>
                    </table>



                </div>
            </t>
        </t>

    </template>
</odoo>

===== .\advanced_pos_reports\views\report_pos_posted_session.xml =====
<?xml version="1.0" encoding="utf-8" ?>
<odoo>
    <template id="report_pos_posted_session">
        <t t-call="web.html_container">
            <t t-call="web.external_layout">
                <div class="page">
                    <div class="text-center">
                        <h2>Posted Sessions Report</h2>
                    </div>

                    <table  class="table table-lg">
                        <tbody>
                            <tr>
                                <td>Report Date:</td>
                                <td style="text-align: right;">
                                    <t t-esc="today" t-options='{"widget": "date"}'/>
                                </td>
                            </tr>
                            <tr>
                                <td>Report Time:</td>
                                <td style="text-align: right;">
                                    <t t-esc="today" t-options='{"widget": "datetime",  "time_only": True}'/>
                                </td>
                            </tr>
                            <tr>
                                <td>Session(s):</td>
                                <td style="text-align: right;">
                                    <t t-foreach="sessions" t-as="session">
                                        <t t-esc="session.name"/>
                                    </t>
                                </td>
                            </tr>
                            <tr>
                                <td>Status:</td>
                                <td style="text-align: right;">
                                    Closed
                                </td>
                            </tr>
                            <tr>
                                <td>Opening Balance:</td>
                                <td style="text-align: right;">
                                    <t t-esc="sum(sessions.mapped('cash_register_balance_start'))" t-options="{'widget': 'float', 'precision': currency_precision}"/>
                                </td>
                            </tr>
                            <tr>
                                <td>Closing Balance:</td>
                                <td style="text-align: right;">
                                    <t t-esc="sum(sessions.mapped('cash_register_balance_end_real'))" t-options="{'widget': 'float', 'precision': currency_precision}"/>
                                </td>
                            </tr>
                            <tr>
                                <td>Difference:</td>
                                <td style="text-align: right;">
                                    <t t-esc="sum(sessions.mapped('cash_real_difference'))" t-options="{'widget': 'float', 'precision': currency_precision}"/>
                                </td>
                            </tr>
                            <tr>
                                <td>Sales Without Tax:</td>
                                <td style="text-align: right;">
                                    <t t-esc="amount_total_without_tax" t-options="{'widget': 'float', 'precision': currency_precision}"/>
                                </td>
                            </tr>
                            <tr>
                                <td>Tax:</td>
                                <td style="text-align: right;">
                                    <t t-esc="amount_total_tax" t-options="{'widget': 'float', 'precision': currency_precision}"/>
                                </td>
                            </tr>
                            <tr>
                                <td>Returns:</td>
                                <td style="text-align: right;">
                                    <t t-esc="amount_return" t-options="{'widget': 'float', 'precision': currency_precision}"/>
                                </td>
                            </tr>
                            <tr>
                                <td>Total:</td>
                                <td style="text-align: right;">
                                    <t t-esc="amount_total"  t-options="{'widget': 'float', 'precision': currency_precision}"/>
                                </td>
                            </tr>

                        </tbody>
                    </table>

                    <br/>

                    <center>
                        <h3>Department Sales</h3>
                    </center>
                    <table  class="table table-lg">
                        <tbody>
                            <t t-set="total" t-value="0"/>
                            <tr t-foreach='categories' t-as='category'>
                                <td><t t-esc="category['name']" /></td>
                                <td style="text-align: right;"><t t-esc="category['amount']"  t-options="{'widget': 'float', 'precision': currency_precision}"/></td>
                                <t t-set="total" t-value="total + category['amount']"/>
                            </tr>
                            <tr>
                                <td>Total</td>
                                <td style="text-align: right;"><t t-esc="total"  t-options="{'widget': 'float', 'precision': currency_precision}"/></td>
                            </tr>
                        </tbody>
                    </table>

                    <br/>

                    <center>
                        <h3>Payments</h3>
                    </center>

                    <table  class="table table-sm">
                        <tbody>
                            <t t-set="total" t-value="0"/>
                            <tr t-foreach='payments' t-as='payment'>
                                <td><t t-esc="payment['name']" /></td>
                                <td style="text-align: right;"><t t-esc="payment['total']"  t-options="{'widget': 'float', 'precision': currency_precision}"/></td>
                                <t t-set="total" t-value="total + payment['total']"/>
                            </tr>
                            <tr>
                                <td>Total</td>
                                <td style="text-align: right;"><t t-esc="total"  t-options="{'widget': 'float', 'precision': currency_precision}"/></td>
                            </tr>
                        </tbody>
                    </table>

<!--                    <p style="page-break-after:always;"/>-->


                </div>

            </t>
        </t>

    </template>
</odoo>

===== .\advanced_pos_reports\views\report_pos_saledetails.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
<data>
    <template id="report_pos_saledetails">
        <t t-set="company" t-value="env.company"/>
        <t t-call="web.html_container">
            <t t-call="web.external_layout">
                <div class="page">
                    <div class="text-center">
                        <h2>Sales Summary</h2>
                        <strong><t t-esc="date_start" t-options="{'widget': 'datetime'}"/> - <t t-esc="date_stop" t-options="{'widget': 'datetime'}"/></strong>
                    </div>
                    <t t-foreach="order_summary" t-as="record">
                        <t t-if="record['total_sales']">
                            <strong><h4>Name : <t t-esc="record['user']"/></h4></strong>
                        <br/>
                        <table  class="table table-lg">
                            <tbody>
                                <tr>
                                    <td>Sales:</td>
                                    <td style="text-align: right;"><t t-esc="record['total_sales']" t-options="{'widget': 'float', 'precision': currency_precision}"/></td>
                                </tr>
                                <tr>
                                    <td>Total:</td>
                                    <td style="text-align: right;"><t t-esc="record['total_sales']" t-options="{'widget': 'float', 'precision': currency_precision}"/></td>
                                </tr>
                                <tr>
                                    <td>Tax:</td>
                                    <td style="text-align: right;"><t t-esc="record['tax']" t-options="{'widget': 'float', 'precision': currency_precision}"/></td>
                                </tr>
                                <tr>
                                    <td>Gross Total:</td>
                                    <td style="text-align: right;"><t t-esc="record['total_sales']" t-options="{'widget': 'float', 'precision': currency_precision}"/></td>
                                </tr>
                            </tbody>
                        </table>

                        <br/>
                        <center><h3>Department Sales</h3></center>
                        <table  class="table table-lg">
                            <thead><tr>
                                <th>Category</th>
                                <th style="text-align: right;">Total</th>
                            </tr></thead>
                            <tbody>
                            <tr t-foreach="record['categories']" t-as='categ'>
                                <td><t t-esc="categ['name']" /></td>
                                <td style="text-align: right;"><t t-esc="categ['amount']" t-options="{'widget': 'float', 'precision': currency_precision}"/></td>
                            </tr>
                            </tbody>
                        </table>

                        <br/>
                        <center><h3>Payments</h3></center>
                        <table  class="table table-lg">
                            <thead><tr>
                                <th>Name</th>
                                <th style="text-align: right;">Total</th>
                            </tr></thead>
                            <tbody>
                            <tr t-foreach="record['payments']" t-as='payment'>
                                <td><t t-esc="payment['name']" /></td>
                                <td style="text-align: right;"><t t-esc="payment['total']" t-options="{'widget': 'float', 'precision': currency_precision}"/></td>
                            </tr>
                            </tbody>
                        </table>

                        <br/>
                        <br/>

                        </t>
                    </t>
                </div>
            </t>
        </t>
    </template>
</data>
</odoo>


===== .\advanced_pos_reports\views\report_pos_top_selling_categories.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>
        <template id="report_pos_top_selling_categories">
            <t t-call="web.html_container">
                <t t-call="web.external_layout">
                    <div class="page">
                        <div class="text-center">
                            <h2>Top Selling Categories</h2>
                        </div>

                        <table  class="table table-lg">
                            <tbody>
                                <tr>
                                    <td>Report Date:</td>
                                    <td style="text-align: right;">
                                        <t t-esc="today" t-options='{"widget": "date"}'/>
                                    </td>
                                </tr>
                                <tr>
                                    <td>Report Time:</td>
                                    <td style="text-align: right;">
                                        <t t-esc="today" t-options='{"widget": "datetime",  "time_only": True}'/>
                                    </td>
                                </tr>
                                <tr>
                                    <td>Start Date:</td>
                                    <td style="text-align: right;">
                                        <t t-esc="start_date"/>
                                    </td>
                                </tr>
                                <tr>
                                    <td>End Date:</td>
                                    <td style="text-align: right;">
                                        <t t-esc="end_date"/>
                                    </td>
                                </tr>
                            </tbody>
                        </table>

                        <br/>

                        <table  class="table table-lg">
                            <thead>
                                <th>Category</th>
                                <th style="text-align: right;">Total</th>
                            </thead>
                                <tbody>
                                    <tr t-foreach="categories" t-as="category">
                                        <td>
                                            <t t-esc="category['name']"/>
                                        </td>

                                        <td style="text-align: right;">
                                            <t t-esc="category['amount']"/>
                                        </td>
                                    </tr>
                                    <br />
                                </tbody>
                        </table>
                        <br/>
                    </div>

                </t>
            </t>

        </template>
    </data>
</odoo>


===== .\advanced_pos_reports\views\report_pos_top_selling_customers.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>
        <template id="report_pos_top_selling_customers">
            <t t-call="web.html_container">
                <t t-call="web.external_layout">
                    <div class="page">
                        <div class="text-center">
                            <h2>Top Customers</h2>
                        </div>

                        <table  class="table table-lg">
                            <tbody>
                                <tr>
                                    <td>Report Date:</td>
                                    <td style="text-align: right;">
                                        <t t-esc="today" t-options='{"widget": "date"}'/>
                                    </td>
                                </tr>
                                <tr>
                                    <td>Report Time:</td>
                                    <td style="text-align: right;">
                                        <t t-esc="today" t-options='{"widget": "datetime",  "time_only": True}'/>
                                    </td>
                                </tr>
                                <tr>
                                    <td>Start Date:</td>
                                    <td style="text-align: right;">
                                        <t t-esc="start_date"/>
                                    </td>
                                </tr>
                                <tr>
                                    <td>End Date:</td>
                                    <td style="text-align: right;">
                                        <t t-esc="end_date"/>
                                    </td>
                                </tr>
                            </tbody>
                        </table>

                        <br/>

                        <table  class="table table-lg">
                            <thead>
                                <th>Customer</th>
                                <th style="text-align: right;">Amount</th>
                            </thead>
                                <tbody>
                                    <tr t-foreach="customers" t-as="customer">
                                        <td>
                                            <t t-esc="customer['name']"/>
                                        </td>
                                        <td style="text-align: right;">
                                            <t t-esc="customer['amount']"/>
                                        </td>
                                    </tr>
                                    <br />
                                </tbody>
                        </table>
                        <br/>
                    </div>

                </t>
            </t>

        </template>
    </data>
</odoo>


===== .\advanced_pos_reports\views\report_pos_top_selling_products.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>
        <template id="report_pos_top_selling_products">
            <t t-call="web.html_container">
                <t t-call="web.external_layout">
                    <div class="page">
                        <div class="text-center">
                            <h2>Top Selling Products</h2>
                        </div>

                        <table  class="table table-lg">
                            <tbody>
                                <tr>
                                    <td>Report Date:</td>
                                    <td style="text-align: right;">
                                        <t t-esc="today" t-options='{"widget": "date"}'/>
                                    </td>
                                </tr>
                                <tr>
                                    <td>Report Time:</td>
                                    <td style="text-align: right;">
                                        <t t-esc="today" t-options='{"widget": "datetime",  "time_only": True}'/>
                                    </td>
                                </tr>
                                <tr>
                                    <td>Start Date:</td>
                                    <td style="text-align: right;">
                                        <t t-esc="start_date"/>
                                    </td>
                                </tr>
                                <tr>
                                    <td>End Date:</td>
                                    <td style="text-align: right;">
                                        <t t-esc="end_date"/>
                                    </td>
                                </tr>
                            </tbody>
                        </table>

                        <br/>

                        <table  class="table table-lg">
                            <thead>
                                <th>Product</th>
                                <th style="text-align: center;">Quantity</th>
                                <th style="text-align: right;">Unit</th>
                            </thead>
                                <tbody>
                                    <tr t-foreach="products" t-as="product">
                                        <td>
                                            <t t-if="product['code']">[<t t-esc="product['code']"/>] </t><t t-esc="product['name']"/>
                                        </td>
                                        <td style="text-align: center;">
                                            <t t-esc="product['qty']"/>
                                        </td>
                                        <td style="text-align: right;">
                                            <t t-esc="product['uom']"/>
                                        </td>
                                    </tr>
                                    <br />
                                </tbody>
                        </table>
                        <br/>
                    </div>

                </t>
            </t>

        </template>
    </data>
</odoo>


===== .\advanced_pos_reports\wizard\ongoing_session.py =====

from odoo import api, fields, models, _


class OngoingSession(models.TransientModel):
    _name = 'pos.sale.ongoing.wizard'
    _description = 'Point of Sale Ongoing Session Report'

    session_ids = fields.Many2many('pos.session', string='POS Sessions', domain=[('state', '=', 'opened')])

    def generate_report(self):
        data = {'session_ids': self.session_ids.ids}
        return self.env.ref('advanced_pos_reports.pos_ongoing_session_report').report_action([], data=data)



===== .\advanced_pos_reports\wizard\ongoing_session.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <record id="view_pos_sale_ongoing_session_wizard" model="ir.ui.view">
        <field name="name">pos.sale.ongoing.session.wizard.form</field>
        <field name="model">pos.sale.ongoing.wizard</field>
        <field name="arch" type="xml">
            <form string="Ongoing Session Report">
                <group>
                    <field name="session_ids" widget="many2many_tags"/>
                </group>
                <footer>
                    <button name="generate_report" string="Print" type="object" class="btn-primary" data-hotkey="q"/>
                    <button string="Cancel" class="btn-secondary" special="cancel" data-hotkey="z" />
                </footer>
            </form>
        </field>
    </record>

</odoo>


===== .\advanced_pos_reports\wizard\posted_session.py =====

from odoo import api, fields, models, _


class OngoingSession(models.TransientModel):
    _name = 'pos.sale.posted.wizard'
    _description = 'Point of Sale Posted Session Report'

    session_ids = fields.Many2many('pos.session', string='POS Sessions', domain=[('state', '=', 'closed')])

    def generate_report(self):
        data = {'session_ids': self.session_ids.ids}
        return self.env.ref('advanced_pos_reports.pos_posted_sessions_report').report_action([], data=data)

===== .\advanced_pos_reports\wizard\posted_session.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <record id="view_pos_sale_posted_session_wizard" model="ir.ui.view">
        <field name="name">pos.sale.posted.session.wizard.form</field>
        <field name="model">pos.sale.posted.wizard</field>
        <field name="arch" type="xml">
            <form string="Ongoing Session Report">
                <group>
                    <field name="session_ids" widget="many2many_tags"/>
                </group>
                <footer>
                    <button name="generate_report" string="Print" type="object" class="btn-primary" data-hotkey="q"/>
                    <button string="Cancel" class="btn-secondary" special="cancel" data-hotkey="z" />
                </footer>
            </form>
        </field>
    </record>

</odoo>


===== .\advanced_pos_reports\wizard\pos_sale_details.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from odoo import api, fields, models, _


class PosDetails(models.TransientModel):
    _name = 'pos.sale.details.wizard'
    _description = 'Point of Sale Details User Report'

    def _default_start_date(self):
        """ Find the earliest start_date of the latests sessions """
        # restrict to configs available to the user
        config_ids = self.env['pos.config'].search([]).ids
        # exclude configs has not been opened for 2 days
        self.env.cr.execute("""
            SELECT
            max(start_at) as start,
            config_id
            FROM pos_session
            WHERE config_id = ANY(%s)
            AND start_at > (NOW() - INTERVAL '2 DAYS')
            GROUP BY config_id
        """, (config_ids,))
        latest_start_dates = [res['start'] for res in self.env.cr.dictfetchall()]
        # earliest of the latest sessions
        return latest_start_dates and min(latest_start_dates) or fields.Datetime.now()

    def generate_report(self):
        data = {'date_start': self.start_date, 'date_stop': self.end_date, 'user_ids': self.user_ids.ids}
        return self.env.ref('advanced_pos_reports.pos_sale_details_report').report_action([], data=data)

    start_date = fields.Datetime(required=True, default=_default_start_date)
    end_date = fields.Datetime(required=True, default=fields.Datetime.now)
    user_ids = fields.Many2many('res.users', default=lambda s: s.env['pos.session'].search([]).mapped('user_id'))

    @api.onchange('start_date')
    def _onchange_start_date(self):
        if self.start_date and self.end_date and self.end_date < self.start_date:
            self.end_date = self.start_date

    @api.onchange('end_date')
    def _onchange_end_date(self):
        if self.end_date and self.end_date < self.start_date:
            self.start_date = self.end_date


===== .\advanced_pos_reports\wizard\pos_sale_details.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <record id="view_pos_sale_details_wizard" model="ir.ui.view">
        <field name="name">pos.sale.details.wizard.form</field>
        <field name="model">pos.sale.details.wizard</field>
        <field name="arch" type="xml">
            <form string="Sales Summary">
                <group>
                    <field name="start_date"/>
                    <field name="end_date"/>
                </group>
                <group>
                    <field name="user_ids" mode="tree" colspan="4" nolabel="1" />
                </group>
                <footer>
                    <button name="generate_report" string="Print" type="object" class="btn-primary" data-hotkey="q"/>
                    <button string="Cancel" class="btn-secondary" special="cancel" data-hotkey="z" />
                </footer>
            </form>
        </field>
    </record>

</odoo>


===== .\advanced_pos_reports\wizard\top_selling.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from odoo import api, fields, models, _


class PosTopSelling(models.TransientModel):
    _name = 'pos.sale.top.selling'
    _description = 'Point of Sale Top Selling Product/Category/Customer Report'

    start_date = fields.Datetime()
    end_date = fields.Datetime()
    top_selling = fields.Selection([('products', 'Products'), ('category', 'Categories'), ('customers', 'Customers')],
                                   string='Top Selling', default='products')
    no_of_products = fields.Integer()
    no_of_categories = fields.Integer()
    no_of_customers = fields.Integer()

    def generate_report(self):
        data = {'start_date': self.start_date, 'end_date': self.end_date, 'top_selling': self.top_selling}
        if self.top_selling == 'products':
            data['no_of_products'] = self.no_of_products
            return self.env.ref('advanced_pos_reports.pos_top_selling_products_report').report_action([], data=data)
        elif self.top_selling == 'category':
            data['no_of_categories'] = self.no_of_categories
            return self.env.ref('advanced_pos_reports.pos_top_selling_category_report').report_action([], data=data)
        elif self.top_selling == 'customers':
            data['no_of_customers'] = self.no_of_customers
            return self.env.ref('advanced_pos_reports.pos_top_selling_customer_report').report_action([], data=data)

===== .\advanced_pos_reports\wizard\top_selling.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <record id="view_pos_sale_top_selling_wizard" model="ir.ui.view">
        <field name="name">pos.sale.top.selling.wizard.form</field>
        <field name="model">pos.sale.top.selling</field>
        <field name="arch" type="xml">
            <form string="Top Selling Products/Categories/Customers">
                <group>
                    <group>
                        <field name="start_date" required="1"/>
                        <field name="end_date" required="1"/>
                    </group>
                    <group>
                        <field name="top_selling" widget="radio"/>
                        <field name="no_of_products" attrs="{'invisible': [('top_selling','!=','products')]}"/>
                        <field name="no_of_categories" attrs="{'invisible': [('top_selling','!=','category')]}"/>
                        <field name="no_of_customers" attrs="{'invisible': [('top_selling','!=','customers')]}"/>
                    </group>
                </group>
                <footer>
                    <button name="generate_report" string="Print" type="object" class="btn-primary" data-hotkey="q"/>
                    <button string="Cancel" class="btn-secondary" special="cancel" data-hotkey="z" />
                </footer>
            </form>
        </field>
    </record>

</odoo>


===== .\advanced_pos_reports\wizard\__init__.py =====
from . import pos_sale_details
from . import top_selling
from . import ongoing_session
from . import posted_session

===== .\azbah_fleet\__init__.py =====
from . import models


===== .\azbah_fleet\__manifest__.py =====
{
    "name": "Azbah - Fleet",
    "version": "15.0",
    "license": "LGPL-3",
    "category": "fleet",
    "depends": ["base", "fleet"],
    "data": [
        "views/fleet_vehicle.xml",
    ],
}


===== .\azbah_fleet\models\fleet_vehicle.py =====
from odoo import fields, models, api
from odoo.addons.azbah_trivial._packages.hijri_converter import Hijri, Gregorian
import re


class FleetVehicle(models.Model):
    _inherit = 'fleet.vehicle'
    vehicle_image = fields.Binary()
    license_number = fields.Char()
    insurance_status = fields.Selection([('valid', 'ساري'),
                                         ('expired', 'منتهي')])
    registration_type = fields.Selection([('private', 'خاص'),
                                         ('trans', 'نقل خاص')])
    license_start_date = fields.Date()
    license_end_date = fields.Date()
    inspection_date = fields.Date()
    ownership_date = fields.Date()
    license_start_date_hijri = fields.Char()
    license_end_date_hijri = fields.Char()
    inspection_date_hijri = fields.Char()
    ownership_date_hijri = fields.Char()

    def reverse_date(self, _date):
        _date = str(_date).replace('/', '-')
        _date_split = _date.split('-')
        return f"{_date_split[2]}-{_date_split[1]}-{_date_split[0]}"

    def validate(self, field_val):
        if isinstance(field_val, str):
            pattern = r"^(0?[1-9]|[12]\d|30)[/-](0?[1-9]|1[0-2])[/-]\d{4}$"
            if not re.match(pattern, field_val):
                return False
            else:
                return fields.Date.to_date(self.reverse_date(field_val))
        else:
            return field_val

    def convert(self, field_name, field_val):
        field_val = self.validate(field_val)
        if field_val:
            if 'hijri' in field_name:
                self[field_name.replace('_hijri', '')] = str(
                    Hijri(field_val.year, field_val.month, field_val.day).to_gregorian())
                self[field_name] = self[field_name].replace('-', '/')
                self._origin[field_name.replace('_hijri', '')] = self[field_name.replace('_hijri', '')]
            else:
                self[field_name + '_hijri'] = self.reverse_date(
                    Gregorian(field_val.year, field_val.month, field_val.day).to_hijri()).replace('-','/')
                self._origin[field_name + '_hijri'] = self[field_name + '_hijri']
            return True
        else:
            return False

    def handle_empty(self,field_name):
        if 'hijri' in field_name:
            self[field_name.replace('_hijri', '')] = ''
            self[field_name] = ''
            self._origin[field_name] = ''
            self._origin[field_name.replace('_hijri', '')] = ''
        else:
            self[field_name] = ''
            self._origin[field_name] = ''
            self[field_name + '_hijri'] = ''
            self._origin[field_name + '_hijri'] = ''

    @api.onchange('license_start_date', 'license_end_date', 'inspection_date', 'ownership_date',
                  'license_start_date_hijri', 'license_end_date_hijri', 'inspection_date_hijri', 'ownership_date_hijri')
    def onchange_license_start_date(self):
        for _field in (
                'license_start_date', 'license_end_date', 'inspection_date', 'ownership_date',
                'license_start_date_hijri',
                'license_end_date_hijri', 'inspection_date_hijri', 'ownership_date_hijri'):
            if self[_field] != self._origin[_field]:
                field_name = _field
                field_val = self[_field]
                if not field_val:
                    self.handle_empty(field_name)
                    return

                if self.convert(field_name, field_val):
                    self._origin[_field] = self[_field]
                    break
                else:
                    self[_field] = self._origin[_field]
                    message = f"{field_val} خطأ بالتاريخ "
                    return {'warning': {'title': "Warning", 'message': message, 'type': 'dialog'}}





===== .\azbah_fleet\models\__init__.py =====
from . import fleet_vehicle


===== .\azbah_fleet\views\fleet_vehicle.xml =====
===== .\azbah_hr\__init__.py =====
from . import models


===== .\azbah_hr\__manifest__.py =====
{
    "name": "HR changes for Azba",
    "version": "15.1.1",
    "license": "LGPL-3",
    "category": "HR Changes",
    "depends": ["base", "account", "product", "contacts", "hr", "point_of_sale"],
    "data": [
        "views/hr_employee.xml",
    ],
}


===== .\azbah_hr\models\hr_employee.py =====
from odoo import fields, models


class HREmployee(models.AbstractModel):
    _inherit = 'hr.employee.base'
    visa_issue_date = fields.Date()
    work_start_date = fields.Date()
    medical_certificate_number = fields.Char()
    medical_certificate_number_issue_date = fields.Date()
    medical_certificate_number_expiration_date = fields.Date()


===== .\azbah_hr\models\__init__.py =====
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl).

from . import hr_employee


===== .\azbah_hr\views\hr_employee.xml =====
<odoo>
    <data>

        <!--  Form View  -->
        <record id="azbah_view_employee_form2" model="ir.ui.view">
            <field name="name">azbah.view_employee_form2</field>
            <field name="model">hr.employee</field>
            <field name="inherit_id" ref="hr.view_employee_form"/>
            <field name="arch" type="xml">
                 <xpath expr="//field[@name='visa_expire']" position="replace">
                 </xpath>


                <xpath expr="//field[@name='permit_no']" position="replace">
                    <field name="visa_issue_date" string="تاريخ إصدار التأشيرة"/>
                    <field name="visa_expire"/>
                    <field name="permit_no"/>
                    <field name="work_start_date" string="تاريخ إصدار تصريح العمل"/>

                    <field name="medical_certificate_number" string="رقم الشهادة الصحية"/>
                    <field name="medical_certificate_number_issue_date" string="تاريخ إصدار الشهادة الصحية"/>
                    <field name="medical_certificate_number_expiration_date" string="تاريخ انتهاء الشهادة الصحية"/>



                </xpath>
            </field>
        </record>

    </data>
</odoo>

===== .\azbah_monitor\__init__.py =====
from . import models


===== .\azbah_monitor\__manifest__.py =====
{
    "name": "Monitor the server - Azba",
    "version": "15.1.1",
    "license": "LGPL-3",
    "category": "Exporrt log info for use in Prometheus and Grafana",
    "depends": ["base", ],
    "data":["security/tools_monitor_security.xml"]
}


===== .\azbah_monitor\models\monitor.py =====
from odoo import fields, models, api



import time

from odoo.http import Response
import os

from odoo.service.server import PreforkServer, memory_info
from odoo.http import JsonRequest
from odoo import http
from odoo import tools

import socket
import os
import signal
import sys

import odoo
from odoo.tools import config
import logging

_logger = logging.getLogger(__name__)


class Monitor(models.Model):
    _name = "tools.monitor"
    def log_data(self):
        r=Response
        _logger.info(f"::::tools.monitor:::: Ehab -> User{self.env.user.login}")





===== .\azbah_monitor\models\__init__.py =====
# License AGPL-3.0 or later

from . import monitor


===== .\azbah_monitor\security\tools_monitor_security.xml =====
<odoo>
    <data>
        <record id="tools_monitor_access_rule" model="ir.model.access">
            <field name="name">tools.monitor</field>
            <field name="model_id" ref="model_tools_monitor"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_unlink" eval="True"/>
        </record>
    </data>
</odoo>

===== .\azbah_partner_name_translation\models\bind_partner_to_pos.py =====

import xmlrpc.client
import csv
import time

url = "http://azbah.online:8015"
db = "azbah2"
username = "admin"
password = "z"

common = xmlrpc.client.ServerProxy('{}/xmlrpc/2/common'.format(url))
uid = common.authenticate(db, username, password, {})
models = xmlrpc.client.ServerProxy('{}/xmlrpc/2/object'.format(url))
start_time = time.perf_counter()


names = models.execute_kw(db, uid, password, 'res.partner',
                             'search_read', [[['english_name', '=', False]]],{'fields': ['name']})
for name in names:
    english_name=translator.translate(name['name']).text

    models.execute_kw(db, uid, password, 'res.partner', 'write', [name['id'], {'english_name': english_name}])
    print (name['id'],name['name'],english_name )

# translated = translator.translate('مركز عمار  للتسويق')
#
# print(translated.text)
'''

import xmlrpc.client
import csv
import time

url = "https://najran.demo.ejadtech.sa"
db = "test"
username = "admin"
password = "admin"

common = xmlrpc.client.ServerProxy('{}/xmlrpc/2/common'.format(url))
uid = common.authenticate(db, username, password, {})
models = xmlrpc.client.ServerProxy('{}/xmlrpc/2/object'.format(url))
start_time = time.perf_counter()

forum_id = models.execute_kw(db, uid, password, 'forum.forum',
                             'search_read', [[['type', '=', 'projects'],
                                              ['id', '=', 10]]],{'fields': ['name']})
for i in forum_id:
    print (i)


# 'domain': [[['type', '=', 'projects'], ['id', '=', 10]]]
# 'fields': ['name']
#
# 	'model': 'forum.forum'
#       'method': 'search_read',
#       'args': [],
#       'kwargs': {        'context': {'bin_size': true},
#         'domain': []
#         'fields': ['id', 'name', 'mode', 'description']
#         'limit': 300,
'''

===== .\azbah_partner_name_translation\models\opening_balance.py =====


import xmlrpc.client
import csv
import time

url = "http://localhost"
db = "azbah"
username = "admin"
password = "z"

common = xmlrpc.client.ServerProxy('{}/xmlrpc/2/common'.format(url))
uid = common.authenticate(db, username, password, {})
models = xmlrpc.client.ServerProxy('{}/xmlrpc/2/object'.format(url))
start_time = time.perf_counter()

codes=('100001','100005','100006','100007','100008','100009','100011','100013','100020','100025','100044','100046','100052','100055','100059','100069','100082','100098','100110','100118','100128','100133','100146','100152','100172','100178','100180','100186','100188','100198','100202','100209','100210','100211','100212','100213','100225','100230','100245','100250','100255','100257','100261','100267','100274','100278','100282','100285','100286','100288','100294','100296','100309','100313','100316','100317','100324','100326','100328','100348','100361','100363','100367','100374','100406','100411','100415','100417','100421','100424','100426','100428','100459','100469','100482','100484','100486','100488','100490','100492','100495','100499','100502','100510','100516','100523','100525','100529','100554','100556','100586','100610','100614','100616','100623','100641','100672','100708','100728','100731','100736','100765','100775','100781','100788','100797','100835','100839','100892','100904','100936','100938','100950','100974','101019','101047','101058','101059','101064','101086','101089','101100','101118','101140','101161','101187','101196','101269','101272','101298','101313','101363','101404','101427','101438','101440','101458','101511','101513','101521','101523','101539','101588','101595','101605','101690','101691','101707','101712','101720','101726','101758','101774','101793','101795','101802','101815','101819','101832','101838','101850','101851','101866','101874','101881','101900','101901','101912','101913','101914','101915','101921','101940','101969','102006','102011','102073','102097','102147','102158','102171','102196','102208','102255','102258','102260','102263','102272','102279','102287','102288','102290','102291','102297','102312','102319','102326','102329','102379','102383','102387','102400','102403','102406','102409','102410','102413','102415','102435','102449','102454','102458','102459','102460','102467','102470','102492','102493','102502','102507','102508','102511','102533','102568','102577','102593','102602','102605','102615','102635','102648','102654','102659','102668','102691','102703','102705','102722','102753','102754','102756','102777','102786','102802','102819','102820','102854','102869','102891','102892','102915','102919','102951','102984','103006','103025','103034','103076','103111','103127','103129','103167','103196','103205','103207','103208','103212','103213','103222','103289','103303','103304','103315','103318','103324','103327','103377','103416','103426','103428','103478','103480','103487','103489','103493','103497','103498','103501','103550','103562','103585','103593','103596','103606','103619','103637','103640','103646','103653','103665','103683','103720','103735','103736','103744','103755','103770','103778','103784','103803','103814','103821','103832','103854','103865','103889','103895','103899','103901','103907','103923','103925','103926','103939','103943','103947','103956','103959','103962','103963','103981','104000','104010','104016','104019','104043','104044','104055','104056','104058','104065','104067','104071','104084','104086','104094','104111','104130','104135','104138','104139','104145','104164','104182','104190','104191','104193','104209','104251','104261','104262','104295','104299','104301','104314','104326','104331','104352','104353','104368','104369','104371','104390','104396','104400','104401','104402','104404','104414','104418','104419','104426','104427','104442','104454','104458','104480','104484','104490','104502','104565','104578','104583','104585','104586','104603','104614','104633','104637','104645','104646','104647','104649','104738','104766','104775','104782','104799','104804','104865','104876','104878','104882','104928','104935','104952','104956','104965','104975','104987','104989','105003','105009','105010','105025','105041','105045','105060','105066','105068','105092','105099','105102','105107','105114','105129','105130','105147','105149','105151','105156','105157','105183','105187','105216','105218','105219','105220','105225','105226','105228','105230','105234','105235','105253','105258','105264','105265','105266','105272','105280','105284','105289','105291','105312','105318','105319','105320','105325','105331','105333','105340','105358','105359','105372','105375','105379','105391','105392','105397','105409','105411','105420','105421','105422','105428','105432','105438','105450','105468','105471','105483','105485','105486','105495','105497','105503','105512','105513','105516','105518','105530','105538','105543','105544','105545','105550','105555','105556','105558','105561','105567','105569','105573','105575','105576','105581','105587','105596','105597','105600','105608','105611','105615','105618','105621','105624','105636','105647','105648','105649','105652','105653','105655','105662','105665','105667','105674','105675','105681','105686','105691','105697','105698','105700','105709','105712','105714','105716','105723','105724','105726','105727','105730','105731','105735','105738','105740','105742','105746','105749','105750','105753','105755','105760','105761','105764','105765','105768','105772','105774','105779','105780','105782','105785','105789','105791','105793','105794','105797','105798','105799','105801','105802','105803','105804','105808','105809','105815','105816','105818','105820','105823','105824','105826','105827','105828','105830','105831','105834','105837','105843','105849','105851','105852','105855','105858','105862','105865','105867','105872','105873','105874','105879','105881','105900','105901','105902','105903','105905','105907','105911','105912','105913','105914','105915','105917','105919','105922','105924','105925','105926','105929','105932','105938','105940','105944','105945','105950','105955','105956','105963','105972','105973','105974','105975','105976','105979','105981','105982','105985','105986','105988','105992','105993','105995','105996','105998','106001','106002','106005','106007','106009','106011','106012','106014','106015','106018','106019','106020','106022','106023','106024','106025','106027','106031','106035','106037','106038','106042','106043','106045','106047','106048','106049','106050','106051','200012','200013','200027','200033','200043','200045','200050','200059','200061','200065','200070','200071','200075','200086','200093','200094','200106','200107','200127','200133','200134','200136','200140','200141','200144','200157','200167','200178','200187','200190','200191','200193','200194','200197','200198','200200','200202','200204','200221','200222','200228','200238','200240','200246','200256','200264','200269','200272','200318','200321','200322','200329','200331','200332','200337','200338','200340','200350','200353','200354','200355','200356','200357','200359','200365','200370','200372','200378','200380','200383','200412','200416','200425','200426','200429','200435','200436','200440','200441','200443','200450','200458','200459','200464','200466','200471','200472','200473','200475','200476','200477','200480','200481','200484','200486','200488','200493','200506','200513','200523','200530','200533','200539','200545','200548','200558','200560','200565','200597','200600','200617','200663','200701','200729','200736','200750','200755','200757','200766','200781','200785','200786','200792','200796','200803','200825','200826','200839','200844','200850','200858','200864','200868','200881','200894','200899','200903','200914','200925','200928','200929','200939','200943','200944','200946','200949','200950','200956','200966','200971','201001','201010','201019','201023','201041','201048','201051','201066','201072','201075','201077','201086','201115','201119','201136','201155','201173','201182','201193','201194','201195','201197','201212','201226','201231','201237','201274','201275','201286','201296','201303','201306','201319','201338','201344','201351','201371','201381','201393','201397','201405','201406','201407','201413','201432','201435','201453','201456','201477','201491','201509','201520','201530','201533','201538','201554','201555','201574','201575','201580','201583','201618','201622','201637','201651','201656','201663','201666','201667','201672','201679','201685','201686','201688','201701','201714','201720','201721','201732','201744','201750','201752','201759','201760','201764','201766','201773','201787','201792','201793','201794','201796','201806','201813','201823','201824','201828','201832','201859','201862','201865','201870','201875','201879','201887','201894','201899','201904','201905','201907','201909','201913','201915','201921','201925','201927','201931','201939','201940','201949','201955','201956','201961','201970','201971','201973','201979','201990','201994','201996','201997','202000','202006','202008','202009','202011','202012','202019','202022','202024','202027','202028','202030','202034','202037','202039','202041','202053','202054','202056','202057','202060','202069','202070','202074','202077','202078','202080','202082','202086','202089','202090','202098','202100','202102','202103','202110','202119','202121','202124','202126','202129','202133','202141','202148','202152','202153','202156','202157','202164','202174','202176','202180','202182','202187','202188','202193','202198','202199','202200','202204','202205','202207','202218','202224','202230','202231','202232','202233','202236','202240','202241','202247','202248','202250','202254','202258','202264','202266','202267','202269','202273','202274','202277','202281','202284','202291','202294','202295','202301','202303','202310','202312','202318','202325','202329','202332','202333','202334','202337','202339','202343','202346','202348','202350','202352','202355','202356','202358','202365','202366','202368','202369','202373','202374','202378','202383','202393','202394','202398','202399','202400','202403','202404','202405','202408','202409','202419','202420','202425','202427','202428','202429','202434','202435','202438','202439','202440','202442','202443','202445','202446','202447','202452','202454','202455','202458','202461','202462','202467','202468','202469','202471','202475','202478','202481','202483','202484','202487','202491','202498','202505','202508','202518','202519','202524','202528','202529','202531','202532','202535','202536','202539','202542','202548','202558','202566','202567','202570','202581','202582','202583','202586','202587','202588','202589','202594','202596','202597','202602','202611','202612','202613','202614','202616','202619','202621','202622','202627','202630','202636','202637','202642','202643','202646','202651','202653','202655','202656','202660','202663','202664','202668','202669','202675','202676','202677','202683','202685','202686','202687','202690','202691','202697','202698','202704','202708','202711','202712','202713','202721','202727','202731','202734','202740','202746','202750','202757','202760','202762','202770','202771','202773','202775','202779','202786','202792','202794','202801','202809','202817','202822','202823','202824','202825','202828','202830','202834','202836','202843','202847','202848','202866','202869','202876','202879','202887','202888','202889','202892','202894','202898','202909','202910','202914','202915','202922','202929','202940','202941','202942','202948','202950','202954','202967','202968','202971','202980','202984','202985','202990','202992','202998','203001','203003','203006','203012','203014','203015','203018','203019','203021','203022','203023','203024','203027','203029','203030','203032','203034','203037','203038','203046','203047','203049','203052','203058','203061','203062','203064','203069','203071','203072','203075','203080','203084','203085','203086','203092','203098','203099','203100','203101','203102','203105','203107','203108','203114','203120','203129','203142','203143','203148','203151','203153','203158','203160','203165','203168','203170','203175','203176','203178','203183','203189','203192','203193','203204','203207','203214','203215','203216','203217','203226','203230','203234','203238','203241','203242','203243','203245','203257','203258','203260','203271','203289','203300','203339','203370','203382','203391','203395','203396','203399','300015','300043','300045','300054','300070','300078','300080','300085','400000','400001','400004','400006','400012','400013','400015','400018','400020','400038','400041','400042','400052','400058','400063','400064','400065','400070','400073','400077','400079','400089','400093','400095','400106','400111','400119','400124','400126','400135','400140','400142','400146','400149','400151','400153','400154','400158','400180','400185','400190','400198','400212','400216','400228','400240','400244','400246','400247','400253','400267','400273','400280','400287','400288','400290','400303','400304','400309','400314','400322','400327','400329','400360','400362','400366','400369','400384','400385','400401','400406','400445','400448','400450','400473','400488','400491','400501','400502','400503','400504','400505','400507','400508','400517','400519','400520','400542','400549','400558','400562','400563','400571','400576','400579','400580','400585','400589','400590','400591','400596','400601','400606','400619','400637','400640','400646','400666','400671','400673','400677','400678','400680','400696','400698','400723','400731','400738','400742','400752','400755','400794','400798','400814','400815','400823','400826','400828','400836','400837','400845','400858','400861','400870','400871','400877','400879','400880','400887','400890','400894','400908','400918','400919','400921','400935','400937','400943','400954','400978','400980','400997','401004','401005','401013','401022','401025','401027','401028','401038','401060','401063','401080','401083','401088','401093','401101','401142','401152','401159','401164','401167','401177','401203','401213','401216','401236','401237','401257','401267','401273','401325','401338','401339','401345','401347','401353','401401','401409','401418','401427','401428','401457','401458','401460','401487','401548','401570','401593','401603','401623','401625','401631','401648','401649','401651','401655','401661','401667','401671','401673','401680','401681','401692','401693','401710','401713','401719','401730','401734','401746','401750','401751','401759','401765','401772','401774','401775','401780','401782','401785','401786','401787','401788','401801','401804','401826','401839','401840','401855','401856','401867','401874','401886','401891','401897','401899','401904','401909','401925','401962','401968','401969','401972','401985','402008','402026','402030','402032','402045','402112','402122','402152','402154','402165','402175','402183','402218','402219','402242','402251','402263','402265','402267','402279','402302','402312','402313','402325','402359','402361','402379','402381','402399','402417','402420','402434','402441','402447','402448','402449','402451','402488','402499','402506','402509','402525','402527','402531','402534','402552','402555','402557','402578','402588','402591','402595','402597','402605','402609','402618','402619','402621','402645','402655','402656','402657','402661','402664','402680','402681','402692','402693','402704','402710','402712','402718','402719','402724','402730','402735','402748','402751','402756','402764','402768','402785','402789','402794','402806','402842','402855','402857','402858','402872','402874','402876','402885','402903','402908','402915','402930','402931','402947','402950','402970','402980','402988','402989','402994','403005','403009','403013','403020','403023','403024','403037','403042','403047','403051','403058','403060','403063','403084','403091','403094','403095','403112','403118','403120','403122','403142','403159','403167','403170','403172','403178','403179','403206','403214','403216','403218','403219','403220','403222','403225','403231','403232','403233','403234','403235','403240','403242','403250','403251','403253','403254','403262','403274','403275','403282','403292','403318','403322','403324','403325','403327','403330','403335','403339','403340','403348','403355','403358','403364','403367','403376','403378','403382','403389','403390','403394','403397','403399','403400','403401','403402','403405','403408','403409','403415','403426','403427','403429','403432','403433','403441','403444','403448','403450','403453','403456','403458','403461','403467','403468','403472','403473','403474','403483','403487','403488','403489','403491','403492','403493','403496','403497','403498','403499','403500','403501','403502','403503','403504','403507','403513','403521','403524','403527','403528','403531','403535','403536','403539','403540','403542','403543','403546','403549','403551','403552','403555','403556','403559','403560','403561','403562','403563','403569','403570','403581','403585','403587','403589','403590','403591','403594','403595','403597','403603','403604','403605','403606','403611','403614','403617','403618','403621','403622','403623','403625','403626','403628','403629','403630','403632','403634','403635','403637','403640','403641','403642','403644','403646','403647','403649','403650','403651','403652','403653','403655','403656','403658','403659','403661','403663','403664','403666','403667','403668','403670','403673','403674','403675','403676','403677','403679','403680','403681','403683','403684','403685','403686','403687','403688','403689','403691','403692','403694','403696','403697','403698','403699','403701','403702','403703','403704','403705','500001','500003','500004','500005','500006','500007','500008','500009','500010','500011','500013','500014','500015','500016','500017','500019','500020','500021','500022','500023','500024','500025','500026','500027','500028','500029','500030','500031','500032','500033','500034','500035','500036','500039','500040','500041','500042','500043','500045','500046','500047','500048','500049','500050','500051','500052','500053','500054','500055','500056','500057','500058','500059','500060','500061','500062','500063','500064','500065','500066','500067','500068','500069','500070','500071','500072','500073','500074','500075','500076','500077','500079','500080','500081','500082','500083','500084','500085','500087','500089','500090','500091','500092','500093','500094','500095','500096','500097','500098','500099','500100','500101','500102','500103','500105','500106','500107','500109','500111','500112','500113','500114','500115','500116','500117','500118','500119','500120','500121','500122','500123','500124','500126','500127','500128','500129','500130','500131','500132','500133','500134','500135','500136','500137','500138','500139','500140','500141','500142','500143','500144','500145','500146','500147','500149','500150','500152','500153','500155','500156','500157','500158','500159','500160','500161','500162','500163','500164','500165','500166','500167','500168','500169','500170','500171','500172','500174','500175','500176','500177','500179','500180','500181','500182','500183','500187','500188','500189','500192','500193','500194','500195','500198','500199','500200','500201','500203','500204','500205','600008','600012','600015','600016','1000000')
for c in codes:
    id = models.execute_kw(db, uid, password, 'res.partner',
                                 'search_read', [[
                                                  ['code', '=',c]]],{'fields': ['code','name','id']})
    # print ("id[0]['code'],id[0]['id'],id[0]['name'])


===== .\azbah_partner_name_translation\models\translation.py =====
# from googletrans import Translator
# translator = Translator()
# t=translator.translate('مركز عمار  للتسويق')
# print (t)
from googletrans import Translator

translator = Translator()

import xmlrpc.client
import csv
import time

url = "http://azbah.online:8015"
db = "AZBAH"
username = "admin"
password = "z"

common = xmlrpc.client.ServerProxy('{}/xmlrpc/2/common'.format(url))
uid = common.authenticate(db, username, password, {})
models = xmlrpc.client.ServerProxy('{}/xmlrpc/2/object'.format(url))
start_time = time.perf_counter()

names = models.execute_kw(db, uid, password, 'res.partner',
                             'search_read', [[['english_name', '=', False]]],{'fields': ['name']})
for name in names:
    english_name=translator.translate(name['name']).text

    models.execute_kw(db, uid, password, 'res.partner', 'write', [name['id'], {'english_name': english_name}])
    print (name['id'],name['name'],english_name )

# translated = translator.translate('مركز عمار  للتسويق')
#
# print(translated.text)
'''

import xmlrpc.client
import csv
import time

url = "https://najran.demo.ejadtech.sa"
db = "test"
username = "admin"
password = "admin"

common = xmlrpc.client.ServerProxy('{}/xmlrpc/2/common'.format(url))
uid = common.authenticate(db, username, password, {})
models = xmlrpc.client.ServerProxy('{}/xmlrpc/2/object'.format(url))
start_time = time.perf_counter()

forum_id = models.execute_kw(db, uid, password, 'forum.forum',
                             'search_read', [[['type', '=', 'projects'],
                                              ['id', '=', 10]]],{'fields': ['name']})
for i in forum_id:
    print (i)


# 'domain': [[['type', '=', 'projects'], ['id', '=', 10]]]
# 'fields': ['name']
#
# 	'model': 'forum.forum'
#       'method': 'search_read',
#       'args': [],
#       'kwargs': {        'context': {'bin_size': true},
#         'domain': []
#         'fields': ['id', 'name', 'mode', 'description']
#         'limit': 300,
'''

===== .\azbah_pos\__init__.py =====
from . import models
from . import reports

===== .\azbah_pos\__manifest__.py =====
{
    "name": "Azbah - POS Changes",
    "version": "15.1",
    "license": "LGPL-3",
    "category": "POS Changes for Azba",
    "depends": ["base", "point_of_sale"],
    "data": [
        "views/pos_config.xml",
        "security/pos_config_rules.xml",
        "reports/report_saledetails.xml"
    ],

    'assets': {
        'point_of_sale.assets': [
            'azbah_pos/static/src/js/**/*.js',
            'azbah_pos/static/src/css/**/*.css',
        ],
        'web.assets_qweb': [
            'azbah_pos/static/src/xml/**/*.xml',
        ],
    }

}


===== .\azbah_pos\models\pos_config.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from datetime import datetime
from uuid import uuid4
import pytz

from odoo import api, fields, models, tools, _
from odoo.exceptions import ValidationError, UserError


class PosConfig(models.Model):
    _inherit = 'pos.config'
    _description = 'Point of Sale Configuration'

    allowed_users = fields.Many2many("res.users")

    # Show only some partners
    def get_limited_partners_loading(self):
        partners = self.env['res.partner'].search([('pos_config_ids', 'in', self.id)]).mapped("id")
        result = [(_,) for _ in partners]
        return result


===== .\azbah_pos\models\pos_order.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from datetime import datetime
from uuid import uuid4
import pytz

from odoo import api, fields, models, tools, _
from odoo.exceptions import ValidationError, UserError


class PosOrder(models.Model):
    _inherit = 'pos.order'
    invoice_name = fields.Char(related='account_move.name')



===== .\azbah_pos\models\__init__.py =====
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl).

from . import pos_config
from . import pos_order

===== .\azbah_pos\reports\pos_details.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from odoo import fields, models


class PosDetails(models.TransientModel):
    _inherit = 'pos.details.wizard'

    pos_config_ids = fields.Many2many('pos.config', 'pos_detail_configs', default=None)

    def _default_start_date(self):
        """ Find the earliest start_date of the latests sessions """
        # restrict to configs available to the user
        config_ids = self.env['pos.config'].search([]).ids
        # exclude configs has not been opened for 2 days
        self.env.cr.execute("""
               SELECT
               max(start_at) as start,
               config_id
               FROM pos_session
               WHERE config_id = ANY(%s)
               AND start_at > (NOW() - INTERVAL '2 DAYS')
               GROUP BY config_id
           """, (config_ids,))
        latest_start_dates = [res['start'] for res in self.env.cr.dictfetchall()]
        # earliest of the latest sessions
        d = (latest_start_dates and min(latest_start_dates) or fields.Datetime.now()).replace(hour=0, minute=1)
        return d

    start_date = fields.Datetime(required=True, default=_default_start_date)

    def generate_report(self):
        c = self.pos_config_ids
        configs = [(p.id, p.name, p.employee_ids.mapped("name")) for p in c]
        data = {'date_start': self.start_date, 'date_stop': self.end_date, 'config_ids': self.pos_config_ids.ids,
                'configs': configs}
        return self.env.ref('point_of_sale.sale_details_report').report_action([], data=data)


===== .\azbah_pos\reports\report_saledetails.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.
import logging
from datetime import timedelta

import pytz

from odoo import api, fields, models, tools, _
from odoo.osv.expression import AND

_logger = logging.getLogger(__name__)


class ReportSaleDetails(models.AbstractModel):
    _inherit = 'report.point_of_sale.report_saledetails'
    _description = 'Point of Sale Details'

    @api.model
    def get_sale_details(self, date_start=False, date_stop=False, config_ids=False, session_ids=False):
        """ Serialise the orders of the requested time period, configs and sessions.

        :param date_start: The dateTime to start, default today 00:00:00.
        :type date_start: str.
        :param date_stop: The dateTime to stop, default date_start + 23:59:59.
        :type date_stop: str.
        :param config_ids: Pos Config id's to include.
        :type config_ids: list of numbers.
        :param session_ids: Pos Config id's to include.
        :type session_ids: list of numbers.

        :returns: dict -- Serialised sales.
        """
        domain = [('state', 'in', ['paid', 'invoiced', 'done'])]

        if (session_ids):
            domain = AND([domain, [('session_id', 'in', session_ids)]])
        else:
            if date_start:
                date_start = fields.Datetime.from_string(date_start)
            else:
                # start by default today 00:00:00
                user_tz = pytz.timezone(self.env.context.get('tz') or self.env.user.tz or 'UTC')
                today = user_tz.localize(fields.Datetime.from_string(fields.Date.context_today(self)))
                date_start = today.astimezone(pytz.timezone('UTC'))

            if date_stop:
                date_stop = fields.Datetime.from_string(date_stop)
                # avoid a date_stop smaller than date_start
                if (date_stop < date_start):
                    date_stop = date_start + timedelta(days=1, seconds=-1)
            else:
                # stop by default today 23:59:59
                date_stop = date_start + timedelta(days=1, seconds=-1)

            domain = AND([domain,
                          [('date_order', '>=', fields.Datetime.to_string(date_start)),
                           ('date_order', '<=', fields.Datetime.to_string(date_stop))]
                          ])

            if config_ids:
                domain = AND([domain, [('config_id', 'in', config_ids)]])

        orders = self.env['pos.order'].search(domain)

        user_currency = self.env.company.currency_id

        total = 0.0
        products_sold = {}
        taxes = {}
        for order in orders:
            if user_currency != order.pricelist_id.currency_id:
                total += order.pricelist_id.currency_id._convert(
                    order.amount_total, user_currency, order.company_id, order.date_order or fields.Date.today())
            else:
                total += order.amount_total
            currency = order.session_id.currency_id

            for line in order.lines:
                key = (line.product_id, line.price_unit, line.discount)
                products_sold.setdefault(key, 0.0)
                products_sold[key] += line.qty

                if line.tax_ids_after_fiscal_position:
                    line_taxes = line.tax_ids_after_fiscal_position.sudo().compute_all(
                        line.price_unit * (1 - (line.discount or 0.0) / 100.0), currency, line.qty,
                        product=line.product_id, partner=line.order_id.partner_id or False)
                    for tax in line_taxes['taxes']:
                        taxes.setdefault(tax['id'], {'name': tax['name'], 'tax_amount': 0.0, 'base_amount': 0.0})
                        taxes[tax['id']]['tax_amount'] += tax['amount']
                        taxes[tax['id']]['base_amount'] += tax['base']
                else:
                    taxes.setdefault(0, {'name': _('No Taxes'), 'tax_amount': 0.0, 'base_amount': 0.0})
                    taxes[0]['base_amount'] += line.price_subtotal_incl

        payment_ids = self.env["pos.payment"].search([('pos_order_id', 'in', orders.ids)]).ids
        if payment_ids:
            self.env.cr.execute("""
                SELECT method.name, sum(amount) total
                FROM pos_payment AS payment,
                     pos_payment_method AS method
                WHERE payment.payment_method_id = method.id
                    AND payment.id IN %s
                GROUP BY method.name
            """, (tuple(payment_ids),))
            payments = self.env.cr.dictfetchall()
        else:
            payments = []

        payments_cash_sql = f"""
                select p.payment_date,o.pos_reference, p.amount,m.id  as payment_method_id,m.name,concat('[' , partner.code , ']',' ',partner.name)  as partner_name, p.session_id , o.name from
                pos_payment p
                inner join pos_payment_method m on p.payment_method_id = m.id
                inner join pos_order o on o.id=p.pos_order_id
                inner join pos_session s on p.session_id= s.id
                inner join pos_config c on c.id=s.config_id
                inner join res_partner partner on o.partner_id = partner.id
                where p.payment_date between '{date_start}' and '{date_stop}' and c.id in {tuple(config_ids)}
                order by p.payment_date, m.name;
                """.replace(',)', ')')  # <== to remove the last comma in tuple if it has only one

        self.env.cr.execute(payments_cash_sql)

        cashes = []
        credits = []
        debits = []
        total_cash = total_credit = total_debit = 0

        payments_cash = self.env.cr.dictfetchall()
        for i in range(len(payments_cash)):
            # for j in range(i,len(payments_cash)):
            #
            #     if payments_cash[j]['pos_reference']== payments_cash[i]['pos_reference']:
            #         pass
            #         # credits.append(payments_cash[i])

            if payments_cash[i]['payment_method_id'] in [3, 8] and payments_cash[i]['amount'] > 0:
                credits.append(payments_cash[i])
                total_credit += float(payments_cash[i]['amount'])

            if payments_cash[i]['payment_method_id'] in [3, 8] and payments_cash[i]['amount'] < 0:
                debits.append(payments_cash[i])
                total_debit += float(payments_cash[i]['amount'])

            if payments_cash[i]['payment_method_id'] in [1, 7]:
                cashes.append(payments_cash[i])
                total_cash += float(payments_cash[i]['amount'])

        indices = []
        for d in debits:
            for indi, c in enumerate(cashes):
                if d['pos_reference'] == c['pos_reference'] and d['amount'] == c['amount'] * -1:
                    cashes.remove(c)
                    total_cash -= float(c['amount'])

        return {
            'cashes': cashes,
            'credits': credits,
            'debits': debits,
            'total_cash': total_cash,
            'total_credit': total_credit,
            'total_debit': total_debit,
            'total_debit_and_cash':total_cash+total_debit,
            # 'payments_cash_sum':payments_cash_sum,
            'currency_precision': user_currency.decimal_places,
            'total_paid': user_currency.round(total),
            'payments': payments,
            'company_name': self.env.company.name,
            'taxes': list(taxes.values()),
            'products': sorted([{
                'product_id': product.id,
                'product_name': product.name,
                'code': product.default_code,
                'quantity': qty,
                'price_unit': price_unit,
                'discount': discount,
                'uom': product.uom_id.name
            } for (product, price_unit, discount), qty in products_sold.items()], key=lambda l: l['product_name'])
        }

    @api.model
    def _get_report_values(self, docids, data=None):
        data = dict(data or {})
        configs = self.env['pos.config'].browse(data['config_ids'])
        data.update(self.get_sale_details(data['date_start'], data['date_stop'], configs.ids))
        return data;


===== .\azbah_pos\reports\report_saledetails.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<odoo>
    <data>
        <template id="azbah_report_saledetails" inherit_id="point_of_sale.report_saledetails">
            <xpath expr="//div[hasclass('page')]" position="replace">
                <ul>
                    <t t-foreach='configs' t-as='conf'>
                        <li>
                            <t t-esc="conf[1]"/>
                            -
                            <t t-esc="conf[2]"/>
                            <br/>
                        </li>
                    </t>
                </ul>


                <div class="text-center">
                    <h2>Sales Details</h2>

                    <strong>
                        <t t-esc="date_start" t-options="{'widget': 'datetime'}"/>
                        -
                        <t t-esc="date_stop" t-options="{'widget': 'datetime'}"/>
                    </strong>


                    <!-- Orderlines -->
                    <h3>Products</h3>
                    <table class="table table-sm">
                        <thead>
                            <tr>
                                <th>Product</th>
                                <th>Quantity</th>
                                <th>Price Unit</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr t-foreach='products' t-as='line'>
                                <t t-set="internal_reference" t-value="line['code'] and '[%s] ' % line['code'] or ''"/>
                                <td>
                                    <t t-esc="internal_reference"/>
                                    <t t-esc="line['product_name']"/>
                                </td>
                                <td>
                                    <t t-esc="line['quantity']"/>
                                    <t t-if='line["uom"] != "Units"'>
                                        <t t-esc='line["uom"]'/>
                                    </t>
                                </td>
                                <td>
                                    <t t-esc='line["price_unit"]'/>
                                    <t t-if='line["discount"] != 0'>
                                        Disc:
                                        <t t-esc='line["discount"]'/>
                                        %
                                    </t>
                                </td>
                            </tr>
                        </tbody>
                    </table>

                    <br/>

                    <h3>Payments</h3>
                    <table class="table table-sm">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr t-foreach='payments' t-as='payment'>
                                <td>
                                    <t t-esc="payment['name']"/>
                                </td>
                                <td>
                                    <t t-esc="payment['total']"
                                       t-options="{'widget': 'float', 'precision': currency_precision}"/>
                                </td>
                            </tr>
                        </tbody>
                    </table>

                    <br/>


                    <h3>Payments in Detail</h3>
                    <h5>1- Cash</h5>
                    <t t-if="len(cashes) > 0 ">
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>الإيصال</th>
                                    <th>العميل</th>
                                    <th>المبلغ</th>
                                    <th>التاريخ</th>

                                </tr>
                            </thead>
                            <tbody>
                                <tr t-foreach='cashes' t-as='cash'>
                                    <td>
                                        <t t-esc="cash['pos_reference']"/>
                                    </td>
                                    <td style="text-align:right">
                                        <t t-esc="cash['partner_name']"/>
                                    </td>
                                    <td>
                                        <t t-esc="cash['amount']"/>
                                    </td>
                                    <td>
                                        <t t-esc="cash['payment_date']"/>
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="2">الإجمالى</td>
                                    <td>
                                        <h5>
                                        <t t-esc="total_cash"/>

                                        </h5>
                                    </td>
                                </tr>
                            </tbody>
                        </table>

                    </t>
<hr/>

                    <h5>2- Credits</h5>
                    <t t-if="len(credits) > 0 ">
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>الإيصال</th>
                                    <th>العميل</th>
                                    <th>المبلغ</th>
                                    <th>التاريخ</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr t-foreach='credits' t-as='credit'>
                                    <td>
                                        <t t-esc="credit['pos_reference']"/>
                                    </td>
                                    <td style="text-align:right">
                                        <t t-esc="credit['partner_name']"/>
                                    </td>
                                    <td>
                                        <t t-esc="credit['amount']"/>
                                    </td>
                                    <td>
                                        <t t-esc="credit['payment_date']"/>
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="2">الإجمالى</td>
                                    <td>
                                        <h5>
                                        <t t-esc="total_credit"/>

                                        </h5>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </t>

<hr/>

                    <h5>3- Debits</h5>
                    <t t-if="len(debits) > 0 ">

                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>الإيصال</th>
                                    <th>العميل</th>
                                    <th>المبلغ</th>
                                    <th>التاريخ</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr t-foreach='debits' t-as='debit'>
                                    <td>
                                        <t t-esc="debit['pos_reference']"/>
                                    </td>
                                    <td style="text-align:right">
                                        <t t-esc="debit['partner_name']"/>
                                    </td>
                                    <td>
                                        <t t-esc="debit['amount']"/>
                                    </td>
                                    <td>
                                        <t t-esc="debit['payment_date']"/>
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="2">الإجمالى</td>
                                    <td>
                                        <h5>
                                        <t t-esc="total_debit"/>

                                        </h5>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </t>
                    <hr/>

                    <hr/>

                    <t t-if="len(debits) > 0 ">
                        <t t-if="len(cashes) > 0 ">

                            <table class="table table-sm">
                                <tr>
                                        <td>
                                           إجمالى التوريد
                                        </td>
                                        <td style="text-align:right">
                                            <t t-esc="total_debit_and_cash"/>
                                        </td>
                                    </tr>
                            </table>
                                                    <hr/>

                        </t>

                    </t>


                    <h3>Taxes</h3>
                    <table class="table table-sm">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Tax Amount</th>
                                <th>Base Amount</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr t-foreach='taxes' t-as='tax'>
                                <td>
                                    <t t-esc="tax['name']"/>
                                </td>
                                <td>
                                    <t t-esc="tax['tax_amount']"
                                       t-options="{'widget': 'float', 'precision': currency_precision}"/>
                                </td>
                                <td>
                                    <t t-esc="tax['base_amount']"
                                       t-options="{'widget': 'float', 'precision': currency_precision}"/>
                                </td>
                            </tr>
                        </tbody>
                    </table>

                    <br/>
                    <br/>

                    <strong>
                        Total:
                        <t t-esc='total_paid' t-options="{'widget': 'float', 'precision': currency_precision}"/>
                    </strong>

                </div>
            </xpath>


        </template>
    </data>
</odoo>

===== .\azbah_pos\reports\__init__.py =====
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl).

from . import pos_details
from . import report_saledetails

===== .\azbah_pos\security\pos_config_rules.xml =====
<?xml version="1.0"?>
<odoo>

    <data noupdate="1">
        <record id="pos_config_user" model="ir.rule">
            <field name="name">Users can See Only Allowed POS Configs</field>
            <field name="model_id" ref="model_pos_config"/>
            <field name="domain_force">[('allowed_users', 'in', user.id)]</field>
            <field name="groups" eval="[
                Command.link(ref('base.group_user')),            ]"/>
        </record>
        <record id="pos_config_administrator" model="ir.rule">
            <field name="name">Administrators can see all POS Configs</field>
            <field name="model_id" ref="model_pos_config"/>
            <field name="domain_force">[(1, '=', 1)]</field>
            <field name="groups" eval="[Command.link(ref('base.group_system'))]"/>
        </record>
    </data>
</odoo>


===== .\azbah_pos\static\src\css\OrderReceipt.css =====
.client_cell {
    border: 1px solid black;padding:8px;
    font-weight: bolder;
    overflow-wrap: break-word;
      line-height: 120%;
}



===== .\azbah_pos\static\src\js\customer_fields.js =====
odoo.define('azbah_pos.customer_fields', function (require) {
    "User strict";
    let models = require('point_of_sale.models');
    var _super_product = models.PosModel.prototype;
    models.load_fields("res.partner", ["code", "english_name"]);
    models.load_fields("pos.order", ["id", "invoice_id","invoice_name"]);
});


===== .\azbah_pos\static\src\js\db.js =====
odoo.define('azbah_pos.DB', function (require) {
"use strict";
    var PosDB = require('point_of_sale.DB');
    PosDB.DB = PosDB.include({
         _partner_search_string: function(partner){
        var str =  partner.name || '';

        if(partner.code){
            str += '|' + partner.code;
        }

        if(partner.barcode){
            str += '|' + partner.barcode;
        }
        if(partner.address){
            str += '|' + partner.address;
        }
        if(partner.phone){
            str += '|' + partner.phone.split(' ').join('');
        }
        if(partner.mobile){
            str += '|' + partner.mobile.split(' ').join('');
        }
        if(partner.email){
            str += '|' + partner.email;
        }
        if(partner.vat){
            str += '|' + partner.vat;
        }
        str = '' + partner.id + ':' + str.replace(':', '').replace(/\n/g, ' ') + '\n';
        return str;
    }})

return PosDB;

});

===== .\azbah_pos\static\src\js\invoice_number.js =====
odoo.define('azbah_pos.invoice_number',function(require){
    "use strict"

    let model = require("point_of_sale.models");
    let SuperPosModel = model.PosModel.prototype;
    let SuperOrder = model.Order.prototype;
    let rpc = require('web.rpc');

    model.PosModel = model.PosModel.extend({
        _flush_orders: function(orders, options) {
            let self = this;
            let result, data
            result = data = SuperPosModel._flush_orders.call(this,orders, options)
            _.each(orders,function(order){
                if (order.to_invoice)
                    data.then(function(order_server_id){
                        rpc.query({
                        model: 'pos.order',
                        method: 'read',
                        args:[order_server_id, ['account_move']]
                            }).then(function(result_dict){
                                if(result_dict.length){

                                    let invoice = result_dict[0].account_move;
                                    let order_id = result_dict[0].id;

                                    self.get_order().invoice_number = invoice[1]
                                    self.get_order().id = order_id
                                }
                        })
                        .catch(function(error){
                            return result
                        })
                    })
            })
            return result
        },
    })
    model.Order = model.Order.extend({
        export_for_printing: function(){
            let self = this
            let receipt = SuperOrder.export_for_printing.call(this)
            if(self.invoice_number){
                receipt.invoice_number = self.invoice_number.split(" ")[0];
                receipt.id = self.id;
            }
            return receipt
        }
    })
    model.Order = model.Order.extend({

        // Ehab
        get_invoice_name: function () {
            alert(this.invoice_name);
            return this.invoice_name;
        },
    });
})


===== .\azbah_pos\static\src\js\serials.js =====
odoo.define('azbah_pos.serials', function (require) {
    "use strict";

    let models = require('point_of_sale.models');
    let _super_orderline = models.Orderline.prototype;

    models.Orderline = models.Orderline.extend({
        set_quantity: function (quantity, keep_price) {

            // Call the original method
            let result = _super_orderline.set_quantity.apply(this, [quantity, keep_price]);

            this.update_serials(this.pack_lot_lines, this.quantity);
            return result;

        },
        update_serials: function (packlot, qty) {
            if (qty !== '' && packlot.length > 0) {

                let orderline = this;//.env.pos.get_order().get_selected_orderline()
                let first_serial = orderline.pack_lot_lines.models[0].attributes["lot_name"]
                first_serial = parseInt(first_serial)
                let newPackLotLines = [];
                for (let i = 0; i < parseInt(qty); i++) {
                    newPackLotLines.push(
                        {
                            "lot_name": (first_serial + i).toString(),
                        }
                    )
                }

                let draftPackLotLines = {
                    modifiedPackLotLines: {},
                    newPackLotLines: newPackLotLines
                }

                if (parseInt(qty) != parseInt(packlot.length))
                    orderline.setPackLotLines(draftPackLotLines);

            }
        }

    });
});




===== .\azbah_pos\static\src\js\validate_order.js =====
odoo.define('azbah_pos.validate', function (require) {
    "use strict";
    const PaymentScreen = require('point_of_sale.PaymentScreen');
    const Registries = require('point_of_sale.Registries');
    const { isConnectionError } = require('point_of_sale.utils');

    const POSValidateOverride = PaymentScreen =>
        class extends PaymentScreen {
            /**
             * @override
             */
            async validateOrder(isForceValidate) {
                // Set the current order to (to_invoice) if it has lines
                // Ehab
                // Check Connection

                // if (!window.navigator.onLine || isConnectionError()) {
                //     throw new Error("Mafish Internet Connection!' +\n" +
                //         "\\n لا يوجد اتصال بالإنترنت';");
                //
                // }
                // else {
                    if (this.currentOrder.get_orderlines().length > 0) {
                        this.currentOrder.set_to_invoice(true);
                        this.render();
                    }
                    await super.validateOrder(isForceValidate);



                // }


            }
        };

    Registries.Component.extend(PaymentScreen, POSValidateOverride);

    return PaymentScreen;
});


===== .\azbah_pos\static\src\xml\ClientLine.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">
  <t t-inherit="point_of_sale.ClientLine" t-inherit-mode="extension" owl="1">
        <xpath expr="//t[@t-name='ClientLine']" position="replace">

    <t t-name="ClientLine" owl="1">
        <tr t-attf-class="client-line {{highlight}}" t-att-data-id="props.partner.id"
            t-on-click="trigger('click-client', {client: props.partner})">
            <td style="width: 40px; inline-size: 40px; overflow-wrap: break-word;">
                <t t-esc="props.partner.name or ''"/>
                <span t-if="highlight">
                    <br/>

<!--                    ///////////////-->
<!--                    Remove Edit Button -->
<!--                    <button class="edit-client-button" t-on-click.stop="trigger('click-edit')">EDIT</button>-->
                </span>
            </td>
            <td class="client-line-last-column-placeholder oe_invisible"></td>
        </tr>
    </t>
        </xpath>
  </t>

</templates>


===== .\azbah_pos\static\src\xml\ClientListScreen.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">
    <t t-inherit="point_of_sale.ClientListScreen" t-inherit-mode="extension" owl="1">
        <xpath expr="//div[hasclass('clientlist-screen')]" position="replace">

        <div class="clientlist-screen screen" t-on-activate-edit-mode="activateEditMode">
            <div class="screen-content">
                <div class="top-content">
                    <div class="button back" t-on-click="back">
                        <i class="fa fa-angle-double-left"/>
                        <t t-if="!env.isMobile"> Discard</t>
                    </div>
                    <div t-if="!state.detailIsShown &amp;&amp; !state.selectedClient" class="button new-customer"
                         role="img" aria-label="Add a customer"
                         t-on-click="trigger('activate-edit-mode', { isNewClient: true })"
                         title="Add a customer" style="display:none">
                        <i class="fa fa-plus"/>
                        <t t-if="!env.isMobile"> Create</t>
                    </div>
                    <div t-if="isNextButtonVisible" t-on-click="clickNext"
                         class="button next highlight">
                        <t t-if="!env.isMobile">
                            <t t-esc="nextButton.text"/>
                        </t>
                        <t t-else="">
                            <i t-if="nextButton.command === 'deselect'" class="fa fa-trash"/>
                            <i t-elif="nextButton.command === 'set'" class="fa fa-check"/>
                        </t>
                    </div>
                    <div class="button" t-if="state.detailIsShown" t-on-click="trigger('click-save')">
                        <i class="fa fa-floppy-o"/>
                        <t t-if="!env.isMobile">
                            <span> Save</span>
                        </t>
                    </div>
                    <div t-if="!state.detailIsShown" class="searchbox-client top-content-center">
                        <input placeholder="Search Customers" size="1" t-on-keyup="updateClientList"/>
                        <span class="search-clear-client"></span>
                    </div>
                    <div class="button back" t-on-click="searchClient()" t-if="!state.detailIsShown"
                         style="display:none">
                        <span class="database-icon">
                            <i class="fa fa-database"/>
                        </span>
                        <t t-if="!env.isMobile">
                            <span class="load-customer-search">
                                Load Customers
                            </span>
                        </t>
                    </div>
                </div>
                <section class="full-content">
                    <div class="client-window">
                        <section class="subwindow collapsed">
                            <div class="subwindow-container collapsed">
                                <div t-if="state.detailIsShown" class="client-details-contents subwindow-container-fix">
                                    <ClientDetailsEdit t-props="state.editModeProps"
                                                       t-on-cancel-edit="cancelEdit"/>
                                </div>
                            </div>
                        </section>
                        <section class="subwindow list">
                            <div class="subwindow-container">
                                <div t-if="!state.detailIsShown" class="subwindow-container-fix scrollable-y">
                                    <table class="client-list">
                                        <thead>
                                            <tr>

                                                <th style="width: 40px; inline-size: 40px;
    overflow-wrap: break-word;">Name</th>

                                                <th class="client-line-last-column-placeholder oe_invisible"></th>
                                            </tr>
                                        </thead>
                                        <tbody class="client-list-contents">
                                            <t t-foreach="clients" t-as="partner"
                                               t-key="partner.id">
                                                <ClientLine partner="partner"
                                                            selectedClient="state.selectedClient"
                                                            detailIsShown="state.detailIsShown"
                                                            t-on-click-client="clickClient"/>
                                            </t>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </section>
                    </div>
                </section>
            </div>
        </div>
        </xpath>
    </t>

</templates>


===== .\azbah_pos\static\src\xml\disable_opening_balance.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">
    <t t-inherit="point_of_sale.CashOpeningPopup" t-inherit-mode="extension" owl="1">
      <xpath expr="//div[contains(@class, 'cash-input-sub-section')]" position="replace">

           <input class="pos-input" type="number" t-model.number="state.openingCash" disabled="disabled"/>
          <div class="button icon" t-on-click="">
                                <i class="fa fa-calculator" role="img" title="Open the money details popup"/>
                            </div>


      </xpath>
    </t>
  </templates>


===== .\azbah_pos\static\src\xml\OrderReceipt.xml =====
===== .\azbah_pos\static\src\xml\remove_refund_button.xmx =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

<!--    Remove Refund Button -->
    <t t-inherit="point_of_sale.TicketScreen" t-inherit-mode="extension" owl="1">
            <xpath expr="//div[hasclass('subpads')]" position="replace">
                <div class="subpads">
                                       <t t-set="_actionName">Refund</t>
                    <ActionpadWidget client="getSelectedClient()" actionName="_actionName"
                                     actionToTrigger="'do-refund'"
                                     isActionButtonHighlighted="getHasItemsToRefund()"/>
                    <NumpadWidget disabledModes="['price', 'discount']" activeMode="_selectedOrderlineId and 'quantity'"
                                  disableSign="true"/>

                                </div>
            </xpath>
    </t>

</templates>




===== .\azbah_pos\static\src\xml\templates.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="ClientListScreen" t-inherit="point_of_sale.ClientListScreen" t-inherit-mode="extension" owl="1">
        <xpath expr="//th" position="before">
            <th class="customer-due pos-right-align">Amount Due
                <i class="fa fa-refresh cursor-pointer" t-on-click="refreshTotalDue"></i>
            </th>
            <th class="client-line-open-link"></th>
        </xpath>
    </t>

    <t t-name="ClientLine" t-inherit="point_of_sale.ClientLine" t-inherit-mode="extension" owl="1">
        <xpath expr="//td" position="before">
            <td class="customer-due pos-right-align cursor-pointer" t-on-click="settleCustomerDue">
                <t t-esc="env.pos.format_currency(props.partner.total_due) or ''"/>
                <i class="fa fa-shopping-cart" aria-hidden="true"></i>
            </td>
            <td class="client-line-open-link" t-att-class="highlight">
            </td>
        </xpath>
    </t>

    <t t-name="ClientListScreen" t-inherit="point_of_sale.ClientListScreen" t-inherit-mode="extension" owl="1">
        <xpath expr="//th" position="after">
            <th class="pos-right-align" style="width: 40px; inline-size: 40px;
    overflow-wrap: break-word;">Code</th>
        </xpath>

        <xpath expr="//th[hasclass('client-line-last-column-placeholder')]" position="before">
            <th class="pos-right-align">English Name</th>
        </xpath>
    </t>


    <t t-name="ClientLine" t-inherit="point_of_sale.ClientLine" t-inherit-mode="extension" owl="1">
        <xpath expr="//td" position="after">
            <td style="width: 40px; inline-size: 40px;
    overflow-wrap: break-word;" class="pos-right-align cursor-pointer">
                <t t-esc="props.partner.code or ''"/>
            </td>
        </xpath>

        <xpath expr="//td[hasclass('client-line-last-column-placeholder')]" position="before">
            <td class="pos-right-align cursor-pointer">
                <t t-esc="props.partner.english_name or ''"/>
            </td>
        </xpath>
    </t>

    <!--        Hide the Invoice Button-->
    <t t-name="PaymentScreen" t-inherit="point_of_sale.PaymentScreen" t-inherit-mode="extension" owl="1">
         <xpath expr="//div[hasclass('js_invoice')]" position="replace">

              <div t-if="env.pos.config.module_account" class="button js_invoice highlight" style="display: none;"
                   t-att-class="{ highlight: currentOrder.is_to_invoice() }"
                   t-on-click="toggleIsToInvoice">
            <i class="fa fa-file-text-o"/>
                  Invoice</div>
         </xpath>
    </t>

 </templates>


===== .\azbah_pos\views\pos_config.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>

    <record id="azbah_pos_config_view_form" model="ir.ui.view">
        <field name="name">azbah.pos.config.form</field>
        <field name="model">pos.config</field>
        <field name="inherit_id" ref="point_of_sale.pos_config_view_form"/>
        <field name="arch" type="xml">
            <xpath expr="//div[hasclass('o_setting_box')]" position="after">
                <div class="col-12 col-lg-6 o_setting_box">
                    <div class="o_setting_right_pane" id="login_with_employees">
                        <span class="o_form_label">Allowed Users</span>
                        <field name="allowed_users" widget="many2many_tags"/>
                    </div>
                </div>
            </xpath>
        </field>
    </record>
</odoo>


===== .\azbah_trivial\__init__.py =====
from . import models


===== .\azbah_trivial\__manifest__.py =====
{
    "name": "Trivial Changes for Azba",
    "version": "15.1.1",
    "license": "LGPL-3",
    "category": "Trivail Changes",
    "depends": ["base", "account", "product", "contacts", "hr", "point_of_sale"],
    "data": [
        "views/res_partner.xml",
        "views/account_move.xml",
        "views/product_template.xml",
        "views/hr_employee.xml",
        "views/account_payment.xml",
    ],
}


===== .\azbah_trivial\models\account_move.py =====
from odoo import fields, models, api


class AccountMove(models.Model):
    _inherit = "account.move"
    manual_ref = fields.Char(string="إذن التسليم")

    delegate_id = fields.Many2one('hr.employee', string="المندوب")


===== .\azbah_trivial\models\account_payment.py =====
from odoo import fields, models


class AccountMove(models.Model):
    _inherit = "account.payment"

    delegate_id = fields.Many2one('hr.employee', string="المندوب")


===== .\azbah_trivial\models\config.py =====
from odoo import fields, models, api


class ResConfigSettings(models.TransientModel):
    _inherit = 'res.config.settings'
    portal_allow_api_keys= fields.Boolean()

===== .\azbah_trivial\models\hr_employee.py =====
from odoo import models, fields, api, _
from datetime import date, timedelta, datetime
from odoo.exceptions import AccessError, UserError, RedirectWarning, ValidationError, Warning


class HREmployee(models.AbstractModel):
    _inherit = "hr.employee.base"
    _order = "display_name"

    is_delegate = fields.Boolean('Is delegate مندوب؟', default=False)

    @api.depends('name', 'code')
    def _compute_display_name(self):
        for emp in self:
            emp.display_name = f'[{emp.code}] {emp.name}' if emp.code else emp.name or ''

    code = fields.Char()

    _sql_constraints = [
        ('code_uniq', 'unique (code)', """Code must be unique هذا الكود موجود من قبل!"""),
    ]
    english_name = fields.Char("English Name")
    partner_id = fields.Many2one('res.partner', string="Contact")

    display_name = fields.Char(compute='_compute_display_name', store=True, readonly=False)

    @api.model
    def create(self, vals):
        _partner_record = {"name": vals['name']
            , "code": vals.get('code') if vals.get('code') else None
                           }
        partner_id = self.env['res.partner'].sudo().create(_partner_record).id

        vals['partner_id'] = partner_id
        vals['address_home_id'] = partner_id

        res = super(HREmployee, self).create(vals)
        return res


===== .\azbah_trivial\models\product_product.py =====
from odoo import fields, models, api


class ProductTemplate(models.Model):
    _inherit = "product.product"

    def name_get(self):
        result = []
        for rec in self:
            if rec.product_tmpl_id.code or rec.code:
                result.append((rec.id, '[%s] - %s' % (rec.product_tmpl_id.code.strip() or rec.code.strip(), rec.name)))
            else:
                result.append((rec.id, '%s' % (rec.name)))
        return result

    @api.model
    def name_search(self, name='', args=None, operator='ilike', limit=100):
        args = args or []
        domain = []
        if name:
            domain = ['|', ('name', operator, name), ('code', operator, name)]
        ids = self.env['product.template'].search(domain + args, limit=limit).ids
        records = self.search([('product_tmpl_id', 'in', ids)])
        return records.name_get()



===== .\azbah_trivial\models\product_template.py =====
from odoo import fields, models, api


class ProductTemplate(models.Model):
    _inherit = "product.template"

    @api.depends('name', 'code')
    def _compute_display_name(self):
        for product in self:
            product.display_name = f'[{product.code}] {product.name}' if product.code else product.name or ''

    english_name = fields.Char(string="English Name")
    code = fields.Char(string="الكود Code")
    display_name = fields.Char(compute='_compute_display_name', store=True, readonly=False)

    _sql_constraints = [('code_uniq', 'unique (code)', """Code must be unique هذا الكود موجود من قبل!""")]


    def name_get(self):
        result = []
        for rec in self:
            result.append((rec.id, '%s - %s' % (rec.code, rec.name)))
        return result

===== .\azbah_trivial\models\res_partner.py =====
from odoo import fields, models, api


class ResPartner(models.Model):
    _inherit = "res.partner"
    date_relation_start = fields.Date(string="تاريخ بداية التعامل")

    @api.depends('is_company', 'name', 'parent_id.display_name', 'type', 'company_name', 'code')
    def _compute_display_name(self):
        for partner in self:
            partner.display_name = f'[{partner.code}] {partner.name}' if partner.code else partner.name or ''

    english_name = fields.Char()
    code = fields.Char(string="الكود Code")
    district = fields.Char(string="الحي District")
    display_name = fields.Char(compute='_compute_display_name', store=True, readonly=False)

    pos_config_ids = fields.Many2many("pos.config", string="Routes المسارات")
    main_config_id=fields.Many2one("pos.config",string="Main Config المسار الرئيسى")

    _sql_constraints = [('code_uniq', 'unique (code)', """Code must be unique هذا الكود موجود من قبل!""")]

    def name_get(self):
        result = []
        for rec in self:
            if rec.code:
                result.append((rec.id, '[%s] - %s' % (rec.code, rec.name)))
            else:
                result.append((rec.id, '%s' % (rec.name)))
        return result

    def map_config_to_tags(self,configs):
        # Add all configs to categories table
        for conf in configs:
            cat_id = self.env['res.partner.category'].search([('name', '=', conf.name)])
            if not cat_id:
                cat_id = self.env['res.partner.category'].create({'name': conf.name})

    @api.onchange('main_config_id')
    def onchange_main_config_id(self):
        configs = self.env['pos.config'].search([])
        all_config_names = configs.mapped("name")

        # make sure all configs exist in categories
        self.map_config_to_tags(configs)

        for rec in self:
            # get non pos.config tags, which are not pos.configs ليست مسارات
            cat_ids = [cat_id.id for cat_id in rec.category_id if cat_id.name not in all_config_names]

            # Add the main config
            for conf in rec.main_config_id:
                cat_id = self.env['res.partner.category'].search([('name', '=', conf.name)])
                if not cat_id:
                    cat_id = self.env['res.partner.category'].create({'name': conf.name})
                cat_ids.append(cat_id.id)
            cat_ids = list(set(cat_ids))
            rec.category_id = [(6, 0, cat_ids)]






===== .\azbah_trivial\models\__init__.py =====
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl).

from . import account_move
from . import account_payment
from . import hr_employee
from . import product_product
from . import product_template
from . import res_partner


===== .\azbah_trivial\views\account_move.xml =====
<odoo>
    <data noupdate="1">
        <!--  Form View  -->
        <record id="azbah_view_move_form" model="ir.ui.view">
            <field name="name">azbah.view_move_form</field>
            <field name="model">account.move</field>
            <field name="inherit_id" ref="account.view_move_form"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='partner_bank_id']" position="after">
                    <field name="manual_ref"/>
                </xpath>
            </field>
        </record>
    </data>
</odoo>

===== .\azbah_trivial\views\account_payment.xml =====
<odoo>
    <data noupdate="1">
        <!--  Form View  -->
        <record id="azbah_trivial_view_form_account_payment" model="ir.ui.view">
            <field name="name">azbah.trivial.account.payment.form</field>
            <field name="model">account.payment</field>
            <field name="inherit_id" ref="account.view_account_payment_form"/>
            <field name="mode">extension</field>
            <field name="arch" type="xml">
                <field name="ref" position="after">
                    <field name="delegate_id"/>
                </field>
            </field>
        </record>
    </data>
</odoo>

===== .\azbah_trivial\views\hr_employee.xml =====
<odoo>
    <data>

        <!--  Form View  -->
        <record id="azbah_view_employee_form" model="ir.ui.view">
            <field name="name">azbah.view_employee_form</field>
            <field name="model">hr.employee</field>
            <field name="inherit_id" ref="hr.view_employee_form"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='mobile_phone']" position="before">
                    <field name="code"/>
                    <field name="english_name"/>
                    <field name="partner_id"/>
                </xpath>
            </field>
        </record>

        <record id="azbah_view_employee_tree" model="ir.ui.view">
            <field name="name">azbah.view_employee_tree</field>
            <field name="model">hr.employee</field>
            <field name="inherit_id" ref="hr.view_employee_tree"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='work_phone']" position="after">
                    <field name="code"/>
                    <field name="english_name"/>
                </xpath>
            </field>
        </record>

        <record id="azbah_hr_employee_view_search" model="ir.ui.view">
            <field name="name">azbah.hr.employee.view.search</field>
            <field name="model">hr.employee</field>
            <field name="inherit_id" ref="hr.view_employee_filter"/>
            <field name="arch" type="xml">
                <field name="name" position="before">
                    <field name="code" filter_domain="[('code','ilike',self)]"/>
                </field>
            </field>
        </record>

        <!-- EMPLOYEES INHERITED KANBAN VIEW -->
        <record id="azbah_hr_kanban_view_emp_no" model="ir.ui.view">
            <field name="name">azbah.hr.employee.kanban.grade.employee_no</field>
            <field name="model">hr.employee</field>
            <field name="inherit_id" ref="hr.hr_kanban_view_employees"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='name']" position="replace">
                    <li class="o_text_overflow">
                        <field name="display_name"/>
                    </li>
                    <li t-if="record.english_name.raw_value" class="o_text_overflow">
                        <field name="english_name"/>
                    </li>
                </xpath>
            </field>
        </record>

    </data>
</odoo>

===== .\azbah_trivial\views\product_template.xml =====
<?xml version="1.0"?>
<odoo>

    <!-- Form View  -->
    <record id="product_template_form_view" model="ir.ui.view">
        <field name="name">azbah.trivial.product.template.form.inherit</field>
        <field name="model">product.template</field>
        <field name="inherit_id" ref="product.product_template_only_form_view"/>
        <field name="arch" type="xml">
            <xpath expr="//field[@name='detailed_type']" position="before">
                    <field name="english_name"/>
                    <field name="code" placeholder="Code الكود"/>
            </xpath>
        </field>
    </record>

    <!-- Tree View  -->
    <record id="azbah_product_template_tree_view" model="ir.ui.view">
        <field name="name">azbah.product.template.tree</field>
        <field name="model">product.template</field>
        <field name="mode">primary</field>
        <field name="inherit_id" ref="product.product_template_tree_view"/>
        <field name="arch" type="xml">
            <xpath expr="//field[@name='name']" position="after">
                <field name="code"/>
                <field name="english_name"/>
            </xpath>
        </field>
    </record>

    <!-- Kanban View  -->
    <record id="azbah_product_template_kanban_view" model="ir.ui.view">
        <field name="name">azbah.product.template.product.kanban</field>
        <field name="model">product.template</field>
        <field name="inherit_id" ref="product.product_template_kanban_view"/>
        <field name="mode">primary</field>
        <field name="priority">1</field>
        <field name="arch" type="xml">

            <xpath expr="//field[@name='name']" position="replace">
                <field name="display_name"/>

                <div>
                    <br/>
                    <li t-if="record.english_name.raw_value">
                        <field name="english_name"/>
                    </li>
                </div>
            </xpath>
        </field>
    </record>


    <record id="sale.product_template_action" model="ir.actions.act_window">
        <!--        <field name="act_window_id" ref="sale.product_template_action"/>-->
        <field name="name">Products</field>
        <field name="view_id" ref="azbah_trivial.azbah_product_template_kanban_view"/>
        <field name="type">ir.actions.act_window</field>
        <field name="res_model">product.template</field>
        <field name="view_mode">kanban,tree,form,activity</field>
        <field name="context">{"search_default_filter_to_sell":1, "sale_multi_pricelist_product_template": 1}</field>
        <field name="help" type="html">
            <p class="o_view_nocontent_smiling_face">
                Create a new product
            </p>
            <p>
                You must define a product for everything you sell or purchase,
                whether it's a storable product, a consumable or a service.
            </p>
        </field>
    </record>


    <!-- Search View  -->
    <!--This Piece of code is not working for some unknown reason-->
    <!--TODO-->

    <record id="azbah_product_search_view" model="ir.ui.view">
        <field name="name">azbah.product.product.search</field>
        <field name="model">product.template</field>
        <field name="mode">primary</field>
        <field name="priority">1</field>
        <field name="inherit_id" ref="product.product_template_search_view"/>
        <field name="arch" type="xml">
            <field name="name" position="before">
                <field name="code" filter_domain="[('code','ilike',self)]"/>
            </field>
        </field>
    </record>

</odoo>


===== .\azbah_trivial\views\res_partner.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>

    <!-- Form View  -->
    <record id="azbah_res_partner_form" model="ir.ui.view">
        <field name="name">azbah.res.partner.form</field>
        <field name="model">res.partner</field>
        <field name="inherit_id" ref="base.view_partner_form"/>
        <field name="arch" type="xml">
            <field name="company_type" position="before">
                <group>
                    <field name="english_name"/>
                    <field name="code" placeholder="Code الكود"/>
<!--                    <field name="is_delegate"/>-->
                </group>
            </field>

            <field name="street" position="before">
                <field name="district" placeholder="District  الحي"/>
            </field>
            <field name="street2" position="attributes">
                <attribute name="invisible">1</attribute>
            </field>


            <field name="category_id" position="after">
                <field name="date_relation_start"/>
            </field>


            <xpath expr="//notebook" position="inside">
                <page string="Routes المسارات" name="allowed_pos">
                    <group>
                        <field name="pos_config_ids" widget="many2many_tags"/>
                        <field name="main_config_id"/>

                    </group>
                </page>
            </xpath>

        </field>
    </record>

    <!-- Tree View  -->
    <record id="azbah_res_partner_tree" model="ir.ui.view">
        <field name="name">azbah.res.partner.tree</field>
        <field name="model">res.partner</field>
        <field name="type">tree</field>
        <field name="inherit_id" ref="base.view_partner_tree"/>
        <field name="arch" type="xml">
            <xpath expr="/tree/field[@name='display_name']" position="after">
                <field name="english_name"/>
                <field name="code"/>
                <field name="district"/>
            </xpath>

            <xpath expr="/tree/field[@name='country_id']" position="replace">
                <field name="date_relation_start"/>
            </xpath>

            <xpath expr="/tree/field[@name='activity_ids']" position="replace">
            </xpath>
            <xpath expr="/tree/field[@name='email']" position="replace">
            </xpath>
        </field>
    </record>

    <!-- Kanban View  -->
    <record id="azbah_view_partner_kanban" model="ir.ui.view">
        <field name="name">azbah.view_partner_kanban</field>
        <field name="model">res.partner</field>
        <field name="inherit_id" ref="base.res_partner_kanban_view"/>
        <field name="arch" type="xml">
            <xpath expr="//div[@class='o_kanban_tags_section oe_kanban_partner_categories']" position="inside">
                <li t-if="record.english_name.raw_value" class="o_text_overflow">
                    <field name="english_name"/>
                </li>
            </xpath>
        </field>
    </record>

    <!-- Search View  -->
    <record id="azbah_view_res_partner_search" model="ir.ui.view">
        <field name="name">azbah.view.res.partner.filter</field>
        <field name="model">res.partner</field>
        <field name="inherit_id" ref="base.view_res_partner_filter"/>
        <field name="arch" type="xml">
            <field name="name" position="before">
                <field name="code" filter_domain="[('code','ilike',self)]"/>
            </field>
        </field>
    </record>


</odoo>

===== .\azbah_trivial\_packages\hijri_converter\convert.py =====
"""Main module of the hijri-converter package."""

import datetime
from bisect import bisect
from typing import Tuple

from . import helpers, locales, ummalqura


class Hijri:
    """A Hijri object represents a date (year, month and day) in lunar Hijri
    calendar.
    """

    __slots__ = "_year", "_month", "_day"

    def __init__(self, year: int, month: int, day: int, validate: bool = True):
        """
        Args:
            year: Hijri year.
            month: Hijri month.
            day: Hijri day.
            validate: Whether to validate Hijri input or not. It's recommended
                to keep the default for accurate conversion.

        Raises:
            OverflowError: When ``year`` is out of supported Hijri range.
            ValueError: When ``month`` is not within the range of `1..12`.
            ValueError: When ``day`` is not within the range of
                `1..month_length` for month.
        """

        self._year = year
        self._month = month
        self._day = day

        if validate:
            self._check_date()

    def __repr__(self) -> str:
        class_name = self.__class__.__name__
        return f"{class_name}({self._year}, {self._month}, {self._day})"

    def __str__(self) -> str:
        return self.isoformat()

    def __hash__(self) -> int:
        return hash(("Hijri", self._year, self._month, self._day))

    def __eq__(self, other: object) -> bool:
        if not isinstance(other, Hijri):
            return NotImplemented
        return self._compare(other) == 0

    def __gt__(self, other: object) -> bool:
        if not isinstance(other, Hijri):
            return NotImplemented
        return self._compare(other) > 0

    def __ge__(self, other: object) -> bool:
        if not isinstance(other, Hijri):
            return NotImplemented
        return self._compare(other) >= 0

    def __lt__(self, other: object) -> bool:
        if not isinstance(other, Hijri):
            return NotImplemented
        return self._compare(other) < 0

    def __le__(self, other: object) -> bool:
        if not isinstance(other, Hijri):
            return NotImplemented
        return self._compare(other) <= 0

    def _compare(self, other: "Hijri") -> int:
        self_date = self.datetuple()
        other_date = other.datetuple()
        return (
            0
            if self_date == other_date
            else 1
            if self_date > other_date
            else -1
        )

    @classmethod
    def fromisoformat(cls, date_string: str) -> "Hijri":
        """Construct Hijri object from an ISO formatted Hijri date
        ``YYYY-MM-DD``.

        Args:
            date_string: Hijri date in ISO format ``YYYY-MM-DD``.
        """

        year = int(date_string[0:4])
        month = int(date_string[5:7])
        day = int(date_string[8:10])
        return cls(year, month, day)

    @classmethod
    def today(cls) -> "Hijri":
        """Construct Hijri object from today's date."""
        return Gregorian.today().to_hijri()

    @property
    def year(self) -> int:
        """Return year as an integer."""
        return self._year

    @property
    def month(self) -> int:
        """Return month as an integer."""
        return self._month

    @property
    def day(self) -> int:
        """Return day as an integer."""
        return self._day

    def datetuple(self) -> Tuple[int, int, int]:
        """Return date as a tuple of (year, month, day)."""
        return self._year, self._month, self._day

    def isoformat(self) -> str:
        """Return date in ISO format i.e. ``YYYY-MM-DD``."""
        return f"{self._year:04}-{self._month:02}-{self._day:02}"

    def dmyformat(self, separator: str = "/", padding: bool = True) -> str:
        """Return date in day-month-year format (``DD/MM/YYYY`` by default).

        Args:
            separator: String that separates the day, month, and year values.
            padding: Whether to add a leading zero as a padding character to
                fill day and month values when less than 10.
        """

        day = f"{self._day:02}" if padding else self._day
        month = f"{self._month:02}" if padding else self._month
        return f"{day}{separator}{month}{separator}{self._year}"

    def month_length(self) -> int:
        """Return number of days in month."""
        month_starts = ummalqura.MONTH_STARTS
        index = self._month_index()
        length = month_starts[index + 1] - month_starts[index]
        return length

    def month_name(self, language: str = "en") -> str:
        """Return month name.

        Args:
            language: Language tag for localized month name. Full locale name
                can be used, e.g. ``en-US`` or ``en_US.UTF-8``. Supported
                languages are ``en``, ``ar`` and ``bn``.
        """

        return locales.get_locale(language).month_name(self._month)

    def weekday(self) -> int:
        """Return day of week, where Monday is 0 and Sunday is 6."""
        jdn = self.to_julian()
        return int(jdn % 7)

    def isoweekday(self) -> int:
        """Return day of week, where Monday is 1 and Sunday is 7."""
        jdn = self.to_julian()
        return int(jdn % 7) + 1

    def day_name(self, language: str = "en") -> str:
        """Return day name.

        Args:
            language: Language tag for localized month name. Full locale name
                can be used, e.g. ``en-US`` or ``en_US.UTF-8``. Supported
                languages are ``en``, ``ar`` and ``bn``.
        """

        return locales.get_locale(language).day_name(self.isoweekday())

    @staticmethod
    def notation(language: str = "en") -> str:
        """Return calendar era notation.

        Args:
            language: Language tag for localized month name. Full locale name
                can be used, e.g. ``en-US`` or ``en_US.UTF-8``. Supported
                languages are ``en``, ``ar`` and ``bn``.
        """

        return locales.get_locale(language).notation

    def to_julian(self) -> int:
        """Return corresponding Julian day number (JDN)."""
        month_starts = ummalqura.MONTH_STARTS
        index = self._month_index()
        rjd = month_starts[index] + self._day - 1
        jdn = helpers.rjd_to_jdn(rjd)
        return jdn

    def to_gregorian(self) -> "Gregorian":
        """Return Gregorian object for the corresponding Hijri date."""

        jdn = self.to_julian()
        don = helpers.jdn_to_ordinal(jdn)
        return Gregorian.fromordinal(don)

    def _check_date(self) -> None:
        """Check date values if within valid range."""

        # check year
        min_year, max_year = [d[0] for d in ummalqura.HIJRI_RANGE]
        if not min_year <= self.year <= max_year:
            raise OverflowError("date out of range")
        # check month
        max_months = 12
        if not 1 <= self.month <= max_months:
            raise ValueError(f"month must be in 1..{max_months}")
        # check day
        month_length = self.month_length()
        if not 1 <= self.day <= month_length:
            raise ValueError(f"day must be in 1..{month_length} for month")

    def _month_index(self) -> int:
        """Return month’s index in ummalqura month starts"""
        prior_months = ((self.year - 1) * 12) + self.month - 1
        index = prior_months - ummalqura.HIJRI_OFFSET
        return index


class Gregorian(datetime.date):
    """A Gregorian object represents a date (year, month and day) in Gregorian
    calendar.
    """

    __slots__ = ()

    @classmethod
    def fromdate(cls, date_object: datetime.date) -> "Gregorian":
        """Construct Gregorian object from a Python date object.

        Args:
            date_object: Python date object.
        """

        year, month, day = date_object.timetuple()[:3]
        return super().__new__(cls, year, month, day)

    def datetuple(self) -> Tuple[int, int, int]:
        """Return date as a tuple of (year, month, day)."""
        return self.year, self.month, self.day

    def dmyformat(self, separator: str = "/", padding: bool = True) -> str:
        """Return date in day-month-year format (``DD/MM/YYYY`` by default).

        Args:
            separator: String that separates the day, month, and year values.
            padding: Whether to add a leading zero as a padding character to
                fill day and month values when less than 10.
        """

        day = f"{self.day:02}" if padding else self.day
        month = f"{self.month:02}" if padding else self.month
        return f"{day}{separator}{month}{separator}{self.year}"

    def month_name(self, language: str = "en") -> str:
        """Return month name.

        Args:
            language: Language tag for localized month name. Full locale name
                can be used, e.g. ``en-US`` or ``en_US.UTF-8``. Supported
                languages are ``en``, ``ar`` and ``bn``.
        """

        return locales.get_locale(language).gregorian_month_name(self.month)

    def day_name(self, language: str = "en") -> str:
        """Return day name.

        Args:
            language: Language tag for localized month name. Full locale name
                can be used, e.g. ``en-US`` or ``en_US.UTF-8``. Supported
                languages are ``en``, ``ar`` and ``bn``.
        """

        return locales.get_locale(language).day_name(self.isoweekday())

    @staticmethod
    def notation(language: str = "en") -> str:
        """Return calendar era notation.

        Args:
            language: Language tag for localized month name. Full locale name
                can be used, e.g. ``en-US`` or ``en_US.UTF-8``. Supported
                languages are ``en``, ``ar`` and ``bn``.
        """

        return locales.get_locale(language).gregorian_notation

    def to_julian(self) -> int:
        """Return corresponding Julian day number (JDN)."""
        don = self.toordinal()
        jdn = helpers.ordinal_to_jdn(don)
        return jdn

    def to_hijri(self) -> Hijri:
        """Return Hijri object for the corresponding Gregorian date.

        Raises:
            OverflowError: When date is out of supported Gregorian range.
        """

        self._check_range()
        jdn = self.to_julian()
        rjd = helpers.jdn_to_rjd(jdn)
        month_starts = ummalqura.MONTH_STARTS
        index = bisect(month_starts, rjd) - 1
        months = index + ummalqura.HIJRI_OFFSET
        years = int(months / 12)
        year = years + 1
        month = months - (years * 12) + 1
        day = rjd - month_starts[index] + 1
        return Hijri(year, month, day, validate=False)

    def _check_range(self) -> None:
        """Check if Gregorian date is within valid range."""
        min_date, max_date = ummalqura.GREGORIAN_RANGE
        if not min_date <= (self.year, self.month, self.day) <= max_date:
            raise OverflowError("date out of range")


===== .\azbah_trivial\_packages\hijri_converter\helpers.py =====
"""Helper methods for Hijri conversion."""


def jdn_to_ordinal(jdn: int) -> int:
    """Convert Julian day number (JDN) to date ordinal number.

    Args:
        jdn: Julian day number (JDN).
    """

    return jdn - 1721425


def ordinal_to_jdn(don: int) -> int:
    """Convert date ordinal number to Julian day number (JDN).

    Args:
        don: Date ordinal number.
    """

    return don + 1721425


def jdn_to_rjd(jdn: int) -> int:
    """Return Reduced Julian Day (RJD) number from Julian day number (JDN).

    Args:
        jdn: Julian day number (JDN).
    """

    return jdn - 2400000


def rjd_to_jdn(rjd: int) -> int:
    """Return Julian day number (JDN) from Reduced Julian Day (RJD) number.

    Args:
        rjd: Reduced Julian Day (RJD) number.
    """

    return rjd + 2400000


===== .\azbah_trivial\_packages\hijri_converter\locales.py =====
===== .\azbah_trivial\_packages\hijri_converter\py.typed =====
# Marker file for PEP 561


===== .\azbah_trivial\_packages\hijri_converter\ummalqura.py =====
"""Umm al-Qura calendar constants."""

from typing import Tuple

DateTuple = Tuple[int, int, int]

GREGORIAN_RANGE: Tuple[DateTuple, DateTuple] = ((1924, 8, 1), (2077, 11, 16))
"""Inclusive range of supported Gregorian dates (year, month and day)."""

HIJRI_RANGE: Tuple[DateTuple, DateTuple] = ((1343, 1, 1), (1500, 12, 30))
"""Inclusive range of supported Hijri dates (year, month and day)."""

HIJRI_OFFSET: int = 1342 * 12
"""Total Hijri months elapsed before the beginning of Hijri range."""

# fmt: off
MONTH_STARTS: Tuple[int, ...] = (
    23999, 24029, 24058, 24088, 24118, 24147, 24177, 24207, 24237, 24265, 24295,
    24325, 24355, 24384, 24413, 24443, 24472, 24502, 24531, 24561, 24590, 24620,
    24649, 24679, 24708, 24738, 24767, 24797, 24826, 24857, 24886, 24916, 24944,
    24974, 25004, 25033, 25063, 25092, 25121, 25151, 25181, 25210, 25240, 25270,
    25299, 25328, 25358, 25388, 25417, 25446, 25475, 25505, 25535, 25564, 25594,
    25624, 25653, 25683, 25713, 25742, 25771, 25801, 25830, 25860, 25889, 25919,
    25948, 25978, 26008, 26037, 26066, 26097, 26125, 26155, 26184, 26214, 26243,
    26273, 26302, 26332, 26362, 26392, 26420, 26451, 26481, 26510, 26540, 26569,
    26599, 26628, 26657, 26687, 26716, 26746, 26776, 26805, 26835, 26865, 26894,
    26924, 26953, 26983, 27012, 27041, 27070, 27100, 27130, 27159, 27189, 27219,
    27248, 27278, 27307, 27337, 27366, 27396, 27425, 27455, 27484, 27514, 27543,
    27573, 27602, 27632, 27662, 27691, 27721, 27750, 27780, 27810, 27839, 27868,
    27898, 27927, 27957, 27986, 28016, 28045, 28075, 28105, 28134, 28164, 28193,
    28223, 28252, 28282, 28311, 28341, 28370, 28400, 28429, 28459, 28488, 28518,
    28548, 28577, 28607, 28636, 28665, 28695, 28724, 28754, 28783, 28813, 28843,
    28872, 28901, 28931, 28960, 28990, 29019, 29049, 29078, 29108, 29137, 29167,
    29196, 29226, 29255, 29285, 29315, 29345, 29375, 29404, 29434, 29463, 29492,
    29522, 29551, 29580, 29610, 29640, 29669, 29699, 29729, 29759, 29788, 29818,
    29847, 29876, 29906, 29935, 29964, 29994, 30023, 30053, 30082, 30112, 30141,
    30171, 30200, 30230, 30259, 30289, 30318, 30348, 30378, 30408, 30437, 30467,
    30496, 30526, 30555, 30585, 30614, 30644, 30673, 30703, 30732, 30762, 30791,
    30821, 30850, 30880, 30909, 30939, 30968, 30998, 31027, 31057, 31086, 31116,
    31145, 31175, 31204, 31234, 31263, 31293, 31322, 31352, 31381, 31411, 31441,
    31471, 31500, 31530, 31559, 31589, 31618, 31648, 31676, 31706, 31736, 31766,
    31795, 31825, 31854, 31884, 31913, 31943, 31972, 32002, 32031, 32061, 32090,
    32120, 32150, 32180, 32209, 32239, 32268, 32298, 32327, 32357, 32386, 32416,
    32445, 32475, 32504, 32534, 32563, 32593, 32622, 32652, 32681, 32711, 32740,
    32770, 32799, 32829, 32858, 32888, 32917, 32947, 32976, 33006, 33035, 33065,
    33094, 33124, 33153, 33183, 33213, 33243, 33272, 33302, 33331, 33361, 33390,
    33420, 33450, 33479, 33509, 33539, 33568, 33598, 33627, 33657, 33686, 33716,
    33745, 33775, 33804, 33834, 33863, 33893, 33922, 33952, 33981, 34011, 34040,
    34069, 34099, 34128, 34158, 34187, 34217, 34247, 34277, 34306, 34336, 34365,
    34395, 34424, 34454, 34483, 34512, 34542, 34571, 34601, 34631, 34660, 34690,
    34719, 34749, 34778, 34808, 34837, 34867, 34896, 34926, 34955, 34985, 35015,
    35044, 35074, 35103, 35133, 35162, 35192, 35222, 35251, 35280, 35310, 35340,
    35370, 35399, 35429, 35458, 35488, 35517, 35547, 35576, 35605, 35635, 35665,
    35694, 35723, 35753, 35782, 35811, 35841, 35871, 35901, 35930, 35960, 35989,
    36019, 36048, 36078, 36107, 36136, 36166, 36195, 36225, 36254, 36284, 36314,
    36343, 36373, 36403, 36433, 36462, 36492, 36521, 36551, 36580, 36610, 36639,
    36669, 36698, 36728, 36757, 36786, 36816, 36845, 36875, 36904, 36934, 36963,
    36993, 37022, 37052, 37081, 37111, 37141, 37170, 37200, 37229, 37259, 37288,
    37318, 37347, 37377, 37406, 37436, 37465, 37495, 37524, 37554, 37584, 37613,
    37643, 37672, 37701, 37731, 37760, 37790, 37819, 37849, 37878, 37908, 37938,
    37967, 37997, 38027, 38056, 38085, 38115, 38144, 38174, 38203, 38233, 38262,
    38292, 38322, 38351, 38381, 38410, 38440, 38469, 38499, 38528, 38558, 38587,
    38617, 38646, 38676, 38705, 38735, 38764, 38794, 38823, 38853, 38882, 38912,
    38941, 38971, 39001, 39030, 39059, 39089, 39118, 39148, 39178, 39208, 39237,
    39267, 39297, 39326, 39355, 39385, 39414, 39444, 39473, 39503, 39532, 39562,
    39592, 39621, 39650, 39680, 39709, 39739, 39768, 39798, 39827, 39857, 39886,
    39916, 39946, 39975, 40005, 40035, 40064, 40094, 40123, 40153, 40182, 40212,
    40241, 40271, 40300, 40330, 40359, 40389, 40418, 40448, 40477, 40507, 40536,
    40566, 40595, 40625, 40655, 40685, 40714, 40744, 40773, 40803, 40832, 40862,
    40892, 40921, 40951, 40980, 41009, 41039, 41068, 41098, 41127, 41157, 41186,
    41216, 41245, 41275, 41304, 41334, 41364, 41393, 41422, 41452, 41481, 41511,
    41540, 41570, 41599, 41629, 41658, 41688, 41718, 41748, 41777, 41807, 41836,
    41865, 41894, 41924, 41953, 41983, 42012, 42042, 42072, 42102, 42131, 42161,
    42190, 42220, 42249, 42279, 42308, 42337, 42367, 42397, 42426, 42456, 42485,
    42515, 42545, 42574, 42604, 42633, 42662, 42692, 42721, 42751, 42780, 42810,
    42839, 42869, 42899, 42929, 42958, 42988, 43017, 43046, 43076, 43105, 43135,
    43164, 43194, 43223, 43253, 43283, 43312, 43342, 43371, 43401, 43430, 43460,
    43489, 43519, 43548, 43578, 43607, 43637, 43666, 43696, 43726, 43755, 43785,
    43814, 43844, 43873, 43903, 43932, 43962, 43991, 44021, 44050, 44080, 44109,
    44139, 44169, 44198, 44228, 44258, 44287, 44317, 44346, 44375, 44405, 44434,
    44464, 44493, 44523, 44553, 44582, 44612, 44641, 44671, 44700, 44730, 44759,
    44788, 44818, 44847, 44877, 44906, 44936, 44966, 44996, 45025, 45055, 45084,
    45114, 45143, 45172, 45202, 45231, 45261, 45290, 45320, 45350, 45380, 45409,
    45439, 45468, 45498, 45527, 45556, 45586, 45615, 45644, 45674, 45704, 45733,
    45763, 45793, 45823, 45852, 45882, 45911, 45940, 45970, 45999, 46028, 46058,
    46088, 46117, 46147, 46177, 46206, 46236, 46265, 46295, 46324, 46354, 46383,
    46413, 46442, 46472, 46501, 46531, 46560, 46590, 46620, 46649, 46679, 46708,
    46738, 46767, 46797, 46826, 46856, 46885, 46915, 46944, 46974, 47003, 47033,
    47063, 47092, 47122, 47151, 47181, 47210, 47240, 47269, 47298, 47328, 47357,
    47387, 47417, 47446, 47476, 47506, 47535, 47565, 47594, 47624, 47653, 47682,
    47712, 47741, 47771, 47800, 47830, 47860, 47890, 47919, 47949, 47978, 48008,
    48037, 48066, 48096, 48125, 48155, 48184, 48214, 48244, 48273, 48303, 48333,
    48362, 48392, 48421, 48450, 48480, 48509, 48538, 48568, 48598, 48627, 48657,
    48687, 48717, 48746, 48776, 48805, 48834, 48864, 48893, 48922, 48952, 48982,
    49011, 49041, 49071, 49100, 49130, 49160, 49189, 49218, 49248, 49277, 49306,
    49336, 49365, 49395, 49425, 49455, 49484, 49514, 49543, 49573, 49602, 49632,
    49661, 49690, 49720, 49749, 49779, 49809, 49838, 49868, 49898, 49927, 49957,
    49986, 50016, 50045, 50075, 50104, 50133, 50163, 50192, 50222, 50252, 50281,
    50311, 50340, 50370, 50400, 50429, 50459, 50488, 50518, 50547, 50576, 50606,
    50635, 50665, 50694, 50724, 50754, 50784, 50813, 50843, 50872, 50902, 50931,
    50960, 50990, 51019, 51049, 51078, 51108, 51138, 51167, 51197, 51227, 51256,
    51286, 51315, 51345, 51374, 51403, 51433, 51462, 51492, 51522, 51552, 51582,
    51611, 51641, 51670, 51699, 51729, 51758, 51787, 51816, 51846, 51876, 51906,
    51936, 51965, 51995, 52025, 52054, 52083, 52113, 52142, 52171, 52200, 52230,
    52260, 52290, 52319, 52349, 52379, 52408, 52438, 52467, 52497, 52526, 52555,
    52585, 52614, 52644, 52673, 52703, 52733, 52762, 52792, 52822, 52851, 52881,
    52910, 52939, 52969, 52998, 53028, 53057, 53087, 53116, 53146, 53176, 53205,
    53235, 53264, 53294, 53324, 53353, 53383, 53412, 53441, 53471, 53500, 53530,
    53559, 53589, 53619, 53648, 53678, 53708, 53737, 53767, 53796, 53825, 53855,
    53884, 53914, 53943, 53973, 54003, 54032, 54062, 54092, 54121, 54151, 54180,
    54209, 54239, 54268, 54297, 54327, 54357, 54387, 54416, 54446, 54476, 54505,
    54535, 54564, 54593, 54623, 54652, 54681, 54711, 54741, 54770, 54800, 54830,
    54859, 54889, 54919, 54948, 54977, 55007, 55036, 55066, 55095, 55125, 55154,
    55184, 55213, 55243, 55273, 55302, 55332, 55361, 55391, 55420, 55450, 55479,
    55508, 55538, 55567, 55597, 55627, 55657, 55686, 55716, 55745, 55775, 55804,
    55834, 55863, 55892, 55922, 55951, 55981, 56011, 56040, 56070, 56100, 56129,
    56159, 56188, 56218, 56247, 56276, 56306, 56335, 56365, 56394, 56424, 56454,
    56483, 56513, 56543, 56572, 56601, 56631, 56660, 56690, 56719, 56749, 56778,
    56808, 56837, 56867, 56897, 56926, 56956, 56985, 57015, 57044, 57074, 57103,
    57133, 57162, 57192, 57221, 57251, 57280, 57310, 57340, 57369, 57399, 57429,
    57458, 57487, 57517, 57546, 57576, 57605, 57634, 57664, 57694, 57723, 57753,
    57783, 57813, 57842, 57871, 57901, 57930, 57959, 57989, 58018, 58048, 58077,
    58107, 58137, 58167, 58196, 58226, 58255, 58285, 58314, 58343, 58373, 58402,
    58432, 58461, 58491, 58521, 58551, 58580, 58610, 58639, 58669, 58698, 58727,
    58757, 58786, 58816, 58845, 58875, 58905, 58934, 58964, 58994, 59023, 59053,
    59082, 59111, 59141, 59170, 59200, 59229, 59259, 59288, 59318, 59348, 59377,
    59407, 59436, 59466, 59495, 59525, 59554, 59584, 59613, 59643, 59672, 59702,
    59731, 59761, 59791, 59820, 59850, 59879, 59909, 59939, 59968, 59997, 60027,
    60056, 60086, 60115, 60145, 60174, 60204, 60234, 60264, 60293, 60323, 60352,
    60381, 60411, 60440, 60469, 60499, 60528, 60558, 60588, 60618, 60647, 60677,
    60707, 60736, 60765, 60795, 60824, 60853, 60883, 60912, 60942, 60972, 61002,
    61031, 61061, 61090, 61120, 61149, 61179, 61208, 61237, 61267, 61296, 61326,
    61356, 61385, 61415, 61445, 61474, 61504, 61533, 61563, 61592, 61621, 61651,
    61680, 61710, 61739, 61769, 61799, 61828, 61858, 61888, 61917, 61947, 61976,
    62006, 62035, 62064, 62094, 62123, 62153, 62182, 62212, 62242, 62271, 62301,
    62331, 62360, 62390, 62419, 62448, 62478, 62507, 62537, 62566, 62596, 62625,
    62655, 62685, 62715, 62744, 62774, 62803, 62832, 62862, 62891, 62921, 62950,
    62980, 63009, 63039, 63069, 63099, 63128, 63157, 63187, 63216, 63246, 63275,
    63305, 63334, 63363, 63393, 63423, 63453, 63482, 63512, 63541, 63571, 63600,
    63630, 63659, 63689, 63718, 63747, 63777, 63807, 63836, 63866, 63895, 63925,
    63955, 63984, 64014, 64043, 64073, 64102, 64131, 64161, 64190, 64220, 64249,
    64279, 64309, 64339, 64368, 64398, 64427, 64457, 64486, 64515, 64545, 64574,
    64603, 64633, 64663, 64692, 64722, 64752, 64782, 64811, 64841, 64870, 64899,
    64929, 64958, 64987, 65017, 65047, 65076, 65106, 65136, 65166, 65195, 65225,
    65254, 65283, 65313, 65342, 65371, 65401, 65431, 65460, 65490, 65520, 65549,
    65579, 65608, 65638, 65667, 65697, 65726, 65755, 65785, 65815, 65844, 65874,
    65903, 65933, 65963, 65992, 66022, 66051, 66081, 66110, 66140, 66169, 66199,
    66228, 66258, 66287, 66317, 66346, 66376, 66405, 66435, 66465, 66494, 66524,
    66553, 66583, 66612, 66641, 66671, 66700, 66730, 66760, 66789, 66819, 66849,
    66878, 66908, 66937, 66967, 66996, 67025, 67055, 67084, 67114, 67143, 67173,
    67203, 67233, 67262, 67292, 67321, 67351, 67380, 67409, 67439, 67468, 67497,
    67527, 67557, 67587, 67617, 67646, 67676, 67705, 67735, 67764, 67793, 67823,
    67852, 67882, 67911, 67941, 67971, 68000, 68030, 68060, 68089, 68119, 68148,
    68177, 68207, 68236, 68266, 68295, 68325, 68354, 68384, 68414, 68443, 68473,
    68502, 68532, 68561, 68591, 68620, 68650, 68679, 68708, 68738, 68768, 68797,
    68827, 68857, 68886, 68916, 68946, 68975, 69004, 69034, 69063, 69092, 69122,
    69152, 69181, 69211, 69240, 69270, 69300, 69330, 69359, 69388, 69418, 69447,
    69476, 69506, 69535, 69565, 69595, 69624, 69654, 69684, 69713, 69743, 69772,
    69802, 69831, 69861, 69890, 69919, 69949, 69978, 70008, 70038, 70067, 70097,
    70126, 70156, 70186, 70215, 70245, 70274, 70303, 70333, 70362, 70392, 70421,
    70451, 70481, 70510, 70540, 70570, 70599, 70629, 70658, 70687, 70717, 70746,
    70776, 70805, 70835, 70864, 70894, 70924, 70954, 70983, 71013, 71042, 71071,
    71101, 71130, 71159, 71189, 71218, 71248, 71278, 71308, 71337, 71367, 71397,
    71426, 71455, 71485, 71514, 71543, 71573, 71602, 71632, 71662, 71691, 71721,
    71751, 71781, 71810, 71839, 71869, 71898, 71927, 71957, 71986, 72016, 72046,
    72075, 72105, 72135, 72164, 72194, 72223, 72253, 72282, 72311, 72341, 72370,
    72400, 72429, 72459, 72489, 72518, 72548, 72577, 72607, 72637, 72666, 72695,
    72725, 72754, 72784, 72813, 72843, 72872, 72902, 72931, 72961, 72991, 73020,
    73050, 73080, 73109, 73139, 73168, 73197, 73227, 73256, 73286, 73315, 73345,
    73375, 73404, 73434, 73464, 73493, 73523, 73552, 73581, 73611, 73640, 73669,
    73699, 73729, 73758, 73788, 73818, 73848, 73877, 73907, 73936, 73965, 73995,
    74024, 74053, 74083, 74113, 74142, 74172, 74202, 74231, 74261, 74291, 74320,
    74349, 74379, 74408, 74437, 74467, 74497, 74526, 74556, 74585, 74615, 74645,
    74675, 74704, 74733, 74763, 74792, 74822, 74851, 74881, 74910, 74940, 74969,
    74999, 75029, 75058, 75088, 75117, 75147, 75176, 75206, 75235, 75264, 75294,
    75323, 75353, 75383, 75412, 75442, 75472, 75501, 75531, 75560, 75590, 75619,
    75648, 75678, 75707, 75737, 75766, 75796, 75826, 75856, 75885, 75915, 75944,
    75974, 76003, 76032, 76062, 76091, 76121, 76150, 76180, 76210, 76239, 76269,
    76299, 76328, 76358, 76387, 76416, 76446, 76475, 76505, 76534, 76564, 76593,
    76623, 76653, 76682, 76712, 76741, 76771, 76801, 76830, 76859, 76889, 76918,
    76948, 76977, 77007, 77036, 77066, 77096, 77125, 77155, 77185, 77214, 77243,
    77273, 77302, 77332, 77361, 77390, 77420, 77450, 77479, 77509, 77539, 77569,
    77598, 77627, 77657, 77686, 77715, 77745, 77774, 77804, 77833, 77863, 77893,
    77923, 77952, 77982, 78011, 78041, 78070, 78099, 78129, 78158, 78188, 78217,
    78247, 78277, 78307, 78336, 78366, 78395, 78425, 78454, 78483, 78513, 78542,
    78572, 78601, 78631, 78661, 78690, 78720, 78750, 78779, 78808, 78838, 78867,
    78897, 78926, 78956, 78985, 79015, 79044, 79074, 79104, 79133, 79163, 79192,
    79222, 79251, 79281, 79310, 79340, 79369, 79399, 79428, 79458, 79487, 79517,
    79546, 79576, 79606, 79635, 79665, 79695, 79724, 79753, 79783, 79812, 79841,
    79871, 79900, 79930, 79960, 79990)
"""Ordered list of Reduced Julian Day (RJD) numbers for the beginning of
supported Hijri months.
"""


===== .\azbah_trivial\_packages\hijri_converter\__init__.py =====
"""Accurate Hijri-Gregorian dates converter based on the Umm al-Qura calendar.

https://github.com/mhalshehri/hijri-converter
"""

__version__ = "2.2.4"

from .convert import Gregorian, Hijri


===== .\az_account_auto_reconcile\__init__.py =====
# -*- coding: utf-8 -*-
from . import models
from . import wizard

===== .\az_account_auto_reconcile\__manifest__.py =====
{
    "name": "AZ-Accounting - Auto Reconcile",
    "version": "15",
    "license": "LGPL-3",
    "category": "accounting",
    "depends": ["account"]
    , "data": [
    'views/res_partner.xml',
    'wizard/wizard_view.xml',
    'security/ir.model.access.csv']
}


===== .\az_account_auto_reconcile\models\account_payment.py =====
from odoo import api, fields, models

class AccountPayment(models.Model):
    _inherit = 'account.payment'

    def write(self, values):
        payments = super(AccountPayment, self).write(values)
        if self.state == 'posted':
            self.partner_id.auto_reconcile()
        return payments


===== .\az_account_auto_reconcile\models\res_partner.py =====
# -*- coding: utf-8 -*-
import logging
from odoo import models, fields

_logger = logging.getLogger(__name__)

class AccountMoveLine(models.Model):
    _inherit = "res.partner"
    last_reconcile_date = fields.Datetime(string="Last Reconcile")

    def auto_reconcile(self):
        try:
            partner = self
            # Get the Due balance of the partner and exclude the most recent invoice from reconciliation
            due = int(partner.total_due)  # ignore the change
            un_reconciled_lines = partner.unreconciled_aml_ids.filtered(lambda l: l.company_id == self.env.company).sorted(
                key='id', reverse=True)
            indi = 0

            # Loop until the recent invoices' sum is bigger than the amount due, the due gets smaller in every iteration
            # The amount could be negative
            excluded = []
            while due > 0 and indi < len(un_reconciled_lines):
                line = un_reconciled_lines[indi]
                amount = line.amount_residual_currency if line.currency_id else line.amount_residual
                if amount > 0:
                    due -= amount
                    if due >= amount:
                        excluded.append(line.id)
                indi += 1
            # the pointer indi is now at the last recent invoice, we will reconcile the older invoices
            lines_to_reconcile = un_reconciled_lines.filtered(lambda l: l.id not in excluded)
            if len(lines_to_reconcile.ids) >= 2:
                data = [{'id': None, 'type': None, 'mv_line_ids': lines_to_reconcile.ids, 'new_mv_line_dicts': []}]
                self.env['account.reconciliation.widget'].sudo().process_move_lines(data)
        except Exception as e:
            _logger.critical(f"::::>>>>> Customer {self.name} , Error: {e}")
            return (self.name, e)

    def auto_reconcile_all(self):
        customers = self.env['res.partner'].search([('customer_rank', '>', 0),
                                                    ('id', 'in',
                                                     self.env['account.move'].search([]).mapped('partner_id').ids)])
        i=0
        failed_customers=[]
        for customer in customers:
            # print (f"Now working on {customer.name}")
            i+=1
            _error=customer.auto_reconcile()
            if _error:
                failed_customers.append(_error)


        print(f"::::>>>>> Customer {customer.name} , Error: {e}")
        _logger.critical(f"::::>>>>> Failed Customers {failed_customers} , Error: {e}")
        # write email to admin explaining failed customers
        if failed_customers:
            notification_ids=[(0, 0, {'res_partner_id': 3, 'notification_type': 'inbox'})]
            self.message_post(
                body='Failed Customers' + str(failed_customers),
                subject='Failed Customers',
                message_type='notification',
                subtype_xmlid='mail.mt_note',
                notification_ids=notification_ids,
            )




===== .\az_account_auto_reconcile\models\__init__.py =====
from . import res_partner
from . import account_payment

===== .\az_account_auto_reconcile\security\ir.model.access.csv =====
id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
access_partner_auto_reconcile_wizard,partner.auto.reconcile.wizard,model_partner_auto_reconcile_wizard,account.group_account_manager,1,1,1,1


===== .\az_account_auto_reconcile\static\src\scss\account_financial_report.scss =====
.o_foldable_menu {
    &.o_closed_menu {
        display: none;
    }
    .o_open_menu {
        display: block;
    }
}
@mixin o-account-reports-i-fa-toggle {
    i.fa {
        visibility: hidden;
    }
    &:hover i.fa {
        visibility: visible;
    }
}

.o_form_view {
    .o_account_reports_page {
        .o_input {
            width: 100%;
        }
    }
}

.o_account_reports_page {
    background-color: $o-view-background-color;
    color: $o-main-text-color;

    .dropdown-toggle::after {
        display: none; // disable bootstrap's carret and do it manaully for positionning
    }

    padding-bottom: 125px;
    @include o-webclient-padding($top: $o-sheet-vpadding, $bottom: $o-sheet-vpadding);
    .o_account_reports_level0 {
        border-width: 3px;
        font-weight: bold;
        // border-top-style: $border-top-style;
        border-bottom-style: double;
    }
    .o_account_reports_table {
        margin-bottom: 128px;
        th.o_account_report_column_header {
            &.sortable::before {
                content: '\f07d';
                font-family: 'FontAwesome';
                color: lightgray;
            }
            &.up::before {
                content: '\f176';
                color: black;
            }
            &.down::before {
                content: '\f175';
                color: black;
            }
            &:first-child {
                border: none;
            }
        }
    }
    .account_report_line_name a {
        color:#008784;
    }
    a {
        cursor: pointer;
    }
    .o_reports_date_to {
        margin-left: 20px;
    }
    .o_account_report_line {
        span {
            white-space: nowrap;
        }
        position: relative;
    }
    // truncate span content and ad '...' if content width > span width
    .o_account_report_line_ellipsis, .o_account_report_name_ellipsis{
        position: relative;
        span {
            position: absolute;
        }
        > span, span[class^="o_account_reports_domain_line_"] {
            left: 0;
            right: 0;
            top: 0;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    }
    .o_account_report_name_ellipsis {
        min-width: 200px;
        max-width: 50%;
    }
    .ellipsis_width {
        direction: rtl !important;
        height: 0 !important;
        position: relative !important;
        white-space: initial !important;
        display: inline-block !important;
        visibility: hidden;

    }

    tr:focus {
        outline: none;

        .o_account_report_line_ellipsis, .o_account_report_name_ellipsis {
            span {
                white-space: initial;
                overflow: initial;
                z-index: 1;
            }
        }
    }
    // ----------------------------------------------------------------
    .o_account_report_summary {
        padding-left: 5px;
    }
    .o_account_reports_summary_edit {
        padding-bottom: 40px;
        padding-top: 15px;
    }
    .js_account_report_foldable {
        cursor: pointer;
    }
    .color-red {
        color: red !important;
    }
    .color-green {
        color: green !important;
    }
    .color-transparent {
        opacity: 0 !important;
    }
    .trust-partner {
        font-size: 0.8em;
        margin-left: 5px;
    }
    .print_only {
        display: none;
    }
    .o_account_reports_table {
        &#table_header_clone {
            position: fixed;
            tbody {
                visibility: collapse;
                tr {
                    border: none;
                }
            }
        }

        width: 100%;

        .number {
            text-align: right;
        }
        .text {
            text-align: left;
        }
        .date {
            text-align: center;
        }
        th{
            background-color: white;
            background-clip: padding-box;
            border: 1px solid #e6e6e6;
            .subtitle{
                font-weight:normal;
            }
        }
        .o_account_reports_header_hierarchy {
            th {
                border-bottom: none;
            }
            th:not(:first-child) {
                border: 1px solid #e6e6e6;
                border-collapse: separate;
                padding-right: 8px;
                padding-left: 8px;
            }
        }
    }
    .oe_link_reports {
        @extend .btn;
        @extend .btn-outline-secondary;
        @extend .btn-sm;
        line-height: 0.8;
        vertical-align: initial;
    }
    .folded {
        .oe_link_reports {
            display: none;
        }
    }
    p.o_account_reports_contact_info {
        min-height: 30px;
    }
    .o_input {
        width: 70%;
    }
    .o_account_reports_edit_summary_pencil {
        margin-left: -15px;
        position: absolute;
    }
    table > tbody > tr >  td ~ td{
        padding-left: 8px;
        padding-right: 8px;
    }
    table > tbody > tr >  td{
        vertical-align: top;
    }
    .o_account_reports_summary {
        margin-bottom: 20px;
        @include o-account-reports-i-fa-toggle;
    }
    .o_account_reports_unfolded td + td span {
        visibility: hidden;
    }
    div.o_account_reports_saved_summary {
        padding-left: 5px;
    }
    .o_account_reports_web_action, .o_change_trust,
    span.o_account_reports_web_action, div.o_account_reports_saved_summary span,
    td.o_account_reports_unfoldable, td.o_account_reports_foldable, span.partner_id, span.move_line_id, input[type=checkbox] {
        cursor: pointer;
    }
    p.footnote > .text {
        white-space: pre-wrap;
    }
    p.footnote > .o_account_reports_footnote_icons, p.o_account_reports_footnote_edit > .o_account_reports_footnote_icons {
        visibility: hidden;
    }
    p.footnote:hover > .o_account_reports_footnote_icons {
        visibility: visible;
    }
    .o_account_reports_footnote_icons {
        position: absolute;
        margin-left: 3px;
    }
    .o_account_reports_caret_icon {
        position: absolute;
        display: contents;
        .fa {
            position: absolute;
            bottom: 4px;
        }
    }
    .o_account_reports_domain_line_0 {
        margin-left: 0px;
    }
    .o_account_reports_domain_line_1 {
        margin-left: 15px;
    }
    .o_account_reports_domain_line_2 {
        margin-left: 30px;
    }
    .o_account_reports_domain_line_3 {
        margin-left: 40px;
    }
    .o_account_reports_domain_line_4 {
        margin-left: 50px;
    }
    .o_account_reports_domain_line_5 {
        margin-left: 60px;
    }
    .o_account_reports_domain_line_6 {
        margin-left: 70px;
    }
    .o_account_reports_domain_line_7 {
        margin-left: 80px;
    }
    .o_account_reports_domain_line_8 {
        margin-left: 90px;
    }
    .o_account_reports_domain_line_9 {
        margin-left: 100px;
    }
    .o_account_reports_domain_line_10 {
        margin-left: 110px;
    }
    .o_account_reports_domain_line_11 {
        margin-left: 120px;
    }
    .o_account_reports_domain_line_12 {
        margin-left: 130px;
    }
    .o_account_reports_domain_line_13 {
        margin-left: 140px;
    }
    tr.o_account_reports_domain_total {
        font-weight: bold;
    }
    tr.o_account_reports_initial_balance {
        > td > span:last-child {
            margin-left: 30px;
        }
    }
    tr.hierarchy_total {
        font-weight: bold;
    }
    b.o_account_reports_footnote_sup {
        margin-top: 10px;
        color: $o-main-text-color;
    }
    ul.o_account_reports_domain_dropdown {
        margin-left: 70px
    }
    .total {
        font-weight: bold;
    }
    .o_account_reports_level0, .o_account_reports_level1, .o_account_reports_level2, .o_account_reports_domain_total, .total {
        .text-muted {
            color: #666666 !important;
        }
    }
    .o_foldable_total {
        color: #666666 !important;
        &.color-red{
            color: red !important;
        }
        &.color-green{
            color: green !important;
        }
    }
    .o_account_reports_totals_below_sections.o_js_account_report_parent_row_unfolded {
        .o_account_report_column_value {
            visibility: hidden;
        }
        td.number.o_foldable_total {
            border-bottom: none;
        }
    }
    td.o_foldable_total {
        font-weight: bold;
    }
    @mixin report_level($indent) {
        border-bottom: 1px solid #eee;
        > td.o_account_report_line_indent > span:last-child {
            margin-left: ($indent + 1) * 10px;
        }
        &.total {
            > td > span:last-child {
                margin-left: $indent * 10px;
            }
        }
    }
    .o_account_reports_level0 {
        & td {
            padding-top: 32px;
            span {
                top: unset;
            }
        }
        > td.o_account_report_line_indent.o_foldable_total > span:last-child {
            margin-left: 10px;
        }
    }
    .o_account_reports_level1 {
        @include report_level(1);
        font-weight: bold;
        border-bottom: 2px solid #bbb;
    }
    .o_account_reports_level2 {
        @include report_level(2);
        font-weight: bold;
        border-bottom: 1px solid #bbb;
    }
    .o_account_reports_level3 {
        @include report_level(3);
    }
    .o_account_reports_level4 {
        @include report_level(4);
    }
    .o_account_reports_level5 {
        @include report_level(5);
    }
    .o_account_reports_level6 {
        @include report_level(6);
    }
    .o_account_reports_level7 {
        @include report_level(7);
    }
    .o_account_reports_level8 {
        @include report_level(8);
    }
    .o_account_reports_level9 {
        @include report_level(9);
    }
    .o_account_reports_level10 {
        @include report_level(10);
    }
    .o_account_reports_level11 {
        @include report_level(11);
    }
    .o_account_reports_level12 {
        @include report_level(12);
    }
    .o_account_reports_level13 {
        @include report_level(13);
    }
    .o_account_reports_default_style {
        border-bottom: 1px solid #eee;
        > td.o_account_report_line_indent > tr:first-child > span:last-child {
            margin-left: 30px;
        }
        &.o_account_reports_domain_total {
            > td.o_account_report_line_indent > span:last-child {
                margin-left: 30px;
            }
        }
    }
    .o_account_followup_not_clicked {
        .o_account_followup_skip {
            display: inline-block;
        }
        .o_account_followup_done {
            display: none;
        }
    }
    .o_account_followup_clicked {
        .o_account_followup_skip {
            display: none;
        }
        .o_account_followup_done {
            display: inline-block;
        }
    }
    .o_account_reports_history {
        min-width: 300px;
    }
    .o_account_coa_column_contrast td:nth-child(4n-1),
    .o_account_coa_column_contrast td:nth-child(4n-2),
    td.o_account_coa_column_contrast:nth-child(4n-1),
    td.o_account_coa_column_contrast:nth-child(4n-2) {
        background-color: #FAFAFA;
        background-clip: padding-box;
    }
    .table-hover tbody tr:hover td {
        background-color: #F0F0F0;
        background-clip: padding-box;
    }
}

.o_form_view {
    .o_account_reports_no_print {
        div.o_account_reports_summary {
            cursor: pointer;
        }
        .o_account_reports_table {
            margin-bottom: 0px;
            tbody tr:not(.o_account_reports_level0):hover {
                background-color: #f0f0f0;
            }
        }
    }
}

.o_account-progress-bar-content {
    color: black;
    position: absolute;
    width: 100%;
}
.o_account-progress {
    position: relative;
}
.o_account_reports_history [summary="o_followup_letter_display_none"] {
    display: none;
}

.o_account_report_search {
    margin-left: 10px;
    margin-right: 10px;
    .o_account_report_select {
        min-width: 100px;
    }
}

// Filters lines
// -----------------------------------------
.o_reports_filter_input_wrapper {
    position: relative;
    float: right;
    width: 150px;
    margin-bottom: 20px;
    float: right;
        .searchIcon {
        position: absolute;
        right: 10px;
    }
}
    .o_account_reports_filter_input {
    border: none;
    border-bottom: 1px black solid;
}
    .o_account_reports_filtered_lines {
    display: none;
}

.o_account_reports_filter_journals {
    .dropdown-menu {
        overflow: auto;
        // 86.5px is the height of .o_control_panel
        max-height: calc(100vh - (86.5px + #{$o-navbar-height}));
    }
}

// Summary to be edited
// -----------------------------------------
.o_account_reports_body .o_account_reports_summary {
    display: inline-block;
    position: relative;


    .o_account_report_summary_placeholder{
        opacity: .5;
    }

    .o_account_report_summary {
        padding: 10px 0;

        &, > span, .o_input, .o_account_reports_edit_summary_pencil {
            transition: all .2s ease 0s;
        }
        > span {
            padding: 10px 0;
            display: block;
            line-height: 1;
        }
    }

    .o_input {
        border: none;
        padding: 10px;
    }

    .o_account_reports_edit_summary_pencil {
        @include o-position-absolute(20px, $left: 0);
        visibility: hidden;
        opacity: 0;
    }

    &:hover {
        .o_account_reports_edit_summary_pencil {
            visibility: visible;
            opacity: 1;
        }

        .o_account_report_summary .o_input, .o_account_report_summary span {
            padding-right: 0;
        }
    }
}

.o_account_reports_body {
    .alert a {
        cursor: pointer;
    }
}

.o_account_reports_summary_edit {
    padding-bottom: 25px;
    padding-top: 10px;

    textarea {
        border: 1px solid gray('600');
        resize: vertical;
        width: 100%;
    }
}

.o_financial_report_hover_popup {
    color: orange;
}

// Print mode report summary
// -----------------------------------------
p.o_account_reports_contact_info {
    min-height: 30px;
}

.o_account_reports_load_more {
    span.account_report_line_name {
        cursor: pointer;
        direction: rtl  !important;
    }
}

.o_country_specific_report_label {
    margin-left: 16px;
    background-color: white;
}

.o_account_reports_filter_currency {
    > .dropdown-menu {
        overflow-y: auto;
        max-height: calc(100vh - #{$o-navbar-height} - 100px);  // 100px for the control panel
    }
}


===== .\az_account_auto_reconcile\static\src\scss\account_report_print.scss =====
.o_account_reports_summary_edit {
    display: none !important;
}
.caret {
    display: none !important;
}
.o_account_reports_body_print {
    background-color: white !important;
    color: black !important;
    font-size: 12px !important;
    .o_account_reports_header {
        padding: 10px;
        background-color: #eee;
    }
    .o_account_reports_page {
        color: black !important;
    }
    .o_account_reports_table {
        margin-bottom: 0px;
        font-size: 12px !important;
        > tbody > tr {
            /* fix thead overlapping http://github.com/wkhtmltopdf/wkhtmltopdf/issues/1524 */
            page-break-inside: avoid;
        }
    }
    .o_account_reports_level0, .o_account_reports_level1, .o_account_reports_level2, .o_account_reports_domain_total, .total {
        .text-muted {
            color: black !important;
        }
    }
    .o_foldable_total {
        color: black !important;
    }
}
a {
    color: inherit !important;
}
.print_only {
    display: block !important;
    &.row {
        display: flex !important;
    }
}
[name="summary"] {
    display: none;
}
.no_print {
    display: none !important;
}

.o_account_reports_page {
    .o_account_report_line_ellipsis, .o_account_report_name_ellipsis{
        position: relative;
        span {
            position: absolute;
        }
        > span, span[class^="o_account_reports_domain_line_"] {
            white-space: normal;
            overflow: visible;
            text-overflow: initial;
            position: relative;
        }
    }
}


===== .\az_account_auto_reconcile\views\res_partner.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <record id="az_partner_form_inherit" model="ir.ui.view">
        <field name="name">Partner Form View Inherit</field>
        <field name="model">res.partner</field>
        <field name="inherit_id" ref="base.view_partner_form"/>
        <field name="arch" type="xml">
            <div name="button_box" position="inside">
                <button groups="base.group_no_one"
                        type="object" name="auto_reconcile" string="Auto Reconcile" class="oe_stat_button"
                        attrs="{'invisible': [('active', '=', False)]}" icon="fa-star-half-o"/>

                <button groups="base.group_no_one"
                        type="object" name="auto_reconcile_all" string="Auto Reconcile ALL" class="oe_stat_button"
                        attrs="{'invisible': [('active', '=', False)]}" icon="fa-th"/>

            </div>
            <field name="vat" position="after">
                <field name="last_reconcile_date"/>
            </field>
        </field>
    </record>


      <!-- Tree View  -->
    <record id="az_res_partner_tree_inherit" model="ir.ui.view">
        <field name="name">AZ Partner Tree Inherit</field>
        <field name="model">res.partner</field>
        <field name="type">tree</field>
        <field name="inherit_id" ref="base.view_partner_tree"/>
        <field name="arch" type="xml">
            <xpath expr="//tree" position="inside">
                    <field name="last_reconcile_date"/>
                </xpath>
        </field>
    </record>

</odoo>


===== .\az_account_auto_reconcile\wizard\partner_auto_reconcile_wizard.py =====
from odoo import models, fields, api

class PartnerAutoReconcileWizard(models.TransientModel):
    _name = 'partner.auto.reconcile.wizard'
    _description = 'Partner Auto Reconcile Wizard'

    partner_ids = fields.Many2many('res.partner', string="Partners")

    def execute_auto_reconcile(self):
        failed_customers = []
        for partner in self.partner_ids:
            try:
                _error=partner.auto_reconcile()
                if _error:
                    failed_customers.append(_error)
                else:
                    partner.last_reconcile_date = fields.Datetime.now()
            except Exception as e:
                mail_values = {
                    'author_id': self.env.user.partner_id.id,
                    'email_from': (
                            self.company_id.partner_id.email_formatted
                            or self.env.user.email_formatted
                            or self.env.ref('base.user_root').email_formatted
                    ),
                    'email_to': [ 3],
                    'body_html': "Failed Customers in Auto Reconcile" + str(failed_customers),
                    'subject': "Auto Reconcile",
                }
                self.env['mail.mail'].sudo().create(mail_values)



===== .\az_account_auto_reconcile\wizard\wizard_view.xml =====
===== .\az_account_auto_reconcile\wizard\__init__.py =====
from . import partner_auto_reconcile_wizard

===== .\az_account_batch_purchase\__init__.py =====
# -*- coding: utf-8 -*-
from . import models

===== .\az_account_batch_purchase\__manifest__.py =====
{
    "name": "AZ-Accounting - Batch Purchase ",
    "version": "15",
    "license": "LGPL-3",
    "category": "accounting",
    "depends": ["account","purchase"]
    , "data": [
    'views/account_move.xml',
    'views/batch_purchase.xml',
    'views/batch_purchase_sarf.xml',
    'views/purchase_order.xml',
    'views/stock.xml',
    'report/batch_purchase.xml',
    'report/batch_purchase_template.xml',
    'security/batch_purchase.xml',
]
}


===== .\az_account_batch_purchase\design\classes.puml =====
@startuml classes
set namespaceSeparator none
class "AccountMove" as az_account_batch_purchase.models.account_move.AccountMove {
  batch_purchase_id
  purchase_delegate_id
  purchase_order_id
}
class "AccountMoveLine" as az_account_batch_purchase.models.account_move.AccountMoveLine {
  note
}
class "BatchPurchase" as az_account_batch_purchase.models.batch_purchase.BatchPurchase {
  date
  delegate_id
  line_count
  line_ids
  name
  purchase_order_count
  purchase_order_ids
  total
  total : int
  type
  vendor_bill_count
  check_data(vals_list)
  create(vals_list)
  get_name(_type)
  launch_purchase_orders()
  launch_vendor_bills()
  onchange_price_or_qty()
}
class "BatchVendorBillLine" as az_account_batch_purchase.models.batch_purchase.BatchVendorBillLine {
  analytic_account_id
  batch_id
  display_type
  line_count
  note
  price
  price_subtotal
  price_subtotal
  price_subtotal_with_tax
  price_subtotal_with_tax : float
  product_id
  product_uom
  product_uom_category_id
  quantity
  tax_ids
  vendor_id
  onchange_price_or_qty()
  onchange_vendor_id()
}
class "PurchaseOrder" as az_account_batch_purchase.models.purchase_order.PurchaseOrder {
  batch_purchase_id
  delegate_id
}
class "PurchaseOrderLine" as az_account_batch_purchase.models.purchase_order.PurchaseOrderLine {
  note
}
class "ResPartner" as az_account_batch_purchase.models.res_partner.ResPartner {
  create(vals_list)
}
class "StockMove" as az_account_batch_purchase.models.stock_picking.StockMove {
  batch_purchase_id
  delegate_id
}
class "StockPicking" as az_account_batch_purchase.models.stock_picking.StockPicking {
  batch_purchase_id
  delegate_id
}
@enduml


===== .\az_account_batch_purchase\design\packages.puml =====
@startuml packages
set namespaceSeparator none
package "az_account_batch_purchase.models" as az_account_batch_purchase.models {
}
package "az_account_batch_purchase.models.account_move" as az_account_batch_purchase.models.account_move {
}
package "az_account_batch_purchase.models.batch_purchase" as az_account_batch_purchase.models.batch_purchase {
}
package "az_account_batch_purchase.models.purchase_order" as az_account_batch_purchase.models.purchase_order {
}
package "az_account_batch_purchase.models.res_partner" as az_account_batch_purchase.models.res_partner {
}
package "az_account_batch_purchase.models.stock_picking" as az_account_batch_purchase.models.stock_picking {
}
@enduml


===== .\az_account_batch_purchase\models\account_move.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from odoo import fields, models


class AccountMove(models.Model):
    _inherit = "account.move"
    purchase_order_id = fields.Many2one('purchase.order', string="Purchase Order")
    batch_purchase_id = fields.Many2one(related='purchase_order_id.batch_purchase_id', string="Batch Purchase",
                                        store=True)
    purchase_delegate_id = fields.Many2one('hr.employee', string="Delegate")


class AccountMoveLine(models.Model):
    _inherit = "account.move.line"
    note = fields.Text()


===== .\az_account_batch_purchase\models\batch_purchase.py =====
===== .\az_account_batch_purchase\models\purchase_order.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from odoo import fields, models


class PurchaseOrder(models.Model):
    _inherit = "purchase.order"
    batch_purchase_id = fields.Many2one('batch.purchase', string="Batch Purchase")
    delegate_id = fields.Many2one(related='batch_purchase_id.delegate_id')


class PurchaseOrderLine(models.Model):
    _inherit = "purchase.order.line"
    note = fields.Text()
    account_id = fields.Many2one('account.account', 'Account')
    analytic_account_id = fields.Many2one('account.analytic.account', 'Analytic Account')


===== .\az_account_batch_purchase\models\res_partner.py =====
# -*- coding: utf-8 -*-
from odoo import models, api


class ResPartner(models.Model):
    _inherit = "res.partner"

    # When Creating a new vendor, assign its code
    @api.model_create_multi
    def create(self, vals_list):
        source = self.env.context.get('source')
        if source == 'vendor':
            last_vendor = self.env['res.partner'].search([('code', 'ilike', 'v%')], order='id desc', limit=1)
            if last_vendor:
                new_code = 'V'+str(int(last_vendor.code[1:]) + 1).zfill(4)
                vals_list[0]['code'] = new_code
                vals_list[0]['company_type'] = 'company'
                vals_list[0]['is_company'] = True
        return super().create(vals_list)


===== .\az_account_batch_purchase\models\stock_picking.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from odoo import fields, models


class StockPicking(models.Model):
    _inherit = "stock.picking"
    batch_purchase_id = fields.Many2one('batch.purchase', string="Batch Purchase")
    delegate_id = fields.Many2one(related='batch_purchase_id.delegate_id')



class StockMove(models.Model):
    _inherit = "stock.move"
    batch_purchase_id = fields.Many2one('batch.purchase', string="Batch Purchase")
    delegate_id = fields.Many2one(related='batch_purchase_id.delegate_id')


===== .\az_account_batch_purchase\models\__init__.py =====
# -*- coding: utf-8 -*-
from . import account_move
from . import batch_purchase
from . import purchase_order
from . import res_partner
from . import stock_picking

===== .\az_account_batch_purchase\report\batch_purchase.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
        <record id="report_batch_purchase_order" model="ir.actions.report">
            <field name="name">Batch Purchase Order Report</field>
            <field name="model">batch.purchase</field>
            <field name="report_type">qweb-pdf</field>
            <field name="report_name">az_account_batch_purchase.report_azbah_batch_purchase_order</field>
            <field name="print_report_name">'Batch Purchase Order'</field>
            <field name="binding_model_id" ref="az_account_batch_purchase.model_batch_purchase"/>
        </record>
</odoo>

===== .\az_account_batch_purchase\report\batch_purchase_template.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>
        <template id="report_azbah_batch_purchase_order">
            <t t-call="web.html_container">
                <t t-foreach="docs" t-as="o">
                    <t t-call="web.external_layout">
                        <div class="page">
                            <div class="row mt32">
                                <div class="col-xs-12"
                                     style="text-align:center;font-size: larger;font-weight: bolder;background-color:#C8C8C8">
                                    تقرير مشتريات مندوب
                                </div>
                            </div>
                            <div class="row mt16">
                                <div class="col-xs-6">
                                    <p>Date:
                                        <span t-field="o.date"/>
                                    </p>

                                    <p>Serial:
                                        <span t-field="o.name"/>
                                    </p>

                                    <p>Delegate:
                                        <span t-field="o.delegate_id.name"/>
                                    </p>
                                </div>
                                <div class="col-xs-6">
                                    <br/>
                                    <p>
                                        <strong>Total:
                                            <span t-field="o.total"/>
                                        </strong>
                                    </p>
                                </div>
                            </div>
                            <table class="table table-bordered" style="margin-top: 20px">
                                <thead>
                                    <tr>
                                        <th>Product</th>
                                        <th>Price</th>
                                        <th>With Tax</th>
                                        <th>Account</th>
                                        <th>Analytic Account</th>
                                        <th>Note</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <t t-foreach="o.line_ids" t-as="line">
                                        <t t-if="line.vendor_id.name">
                                            <t t-if="not line.product_id.name">
                                                <tr style="text-align:center;font-size: larger;font-weight: bolder;background-color:#C8C8C8">
                                                    <td colspan="5">
                                                        <span t-field="line.vendor_id.name"/>
                                                    </td>
                                                    <td>
                                                        <span t-field="line.price_subtotal_with_tax"/>
                                                    </td>
                                                </tr>
                                            </t>
                                            <t t-else="">
                                                <t t-if="line.vendor_id.name">
                                                    <tr>
                                                        <td>
                                                            <span t-field="line.product_id.name"/>
                                                        </td>
                                                        <td>
                                                            <span t-field="line.price"/>
                                                        </td>
                                                        <td>
                                                            <span t-field="line.price_subtotal_with_tax"/>
                                                        </td>
                                                        <td>
                                                            <span t-field="line.account_id.name"/>
                                                        </td>
                                                        <td>
                                                            <span t-field="line.analytic_account_id.name"/>
                                                        </td>
                                                        <td>
                                                            <span t-field="line.note"/>
                                                        </td>
                                                    </tr>
                                                </t>
                                            </t>
                                        </t>
                                    </t>
                                </tbody>
                            </table>


                            <table class="table table-bordered"
                                   style="font-weigh:bold;margin-top: 20px;direction:rtl;text-align:right">
                                <tr>
                                    <td style="tex-aling:center">توقيع المستلم</td>
                                    <td style="tex-aling:center">أمين الخزنة</td>
                                    <td style="tex-aling:center">الحسابات</td>
                                </tr>
                                <tr style="height:3em;">
                                    <td style="height:3em;"></td>
                                    <td style="height:3em;"></td>
                                    <td style="height:3em;"></td>
                                </tr>
                            </table>

                        </div>
                    </t>
                </t>
            </t>
        </template>
    </data>
</odoo>

===== .\az_account_batch_purchase\security\batch_purchase.xml =====
<odoo>
    <data>
        <!-- Define the access rights for the model -->
        <record model="ir.model.access" id="model_batch_purchase_access">
            <field name="name">batch.purchase</field>
            <field name="model_id" ref="model_batch_purchase"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_unlink" eval="True"/>
            <field name="group_id" ref="account.group_account_invoice" />

        </record>


         <!-- Define the access rights for the model -->
        <record model="ir.model.access" id="model_batch_purchase_line_access">
            <field name="name">batch.purchase.line</field>
            <field name="model_id" ref="model_batch_purchase_line"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_unlink" eval="True"/>
            <field name="group_id" ref="account.group_account_invoice" />

        </record>

    </data>
</odoo>


===== .\az_account_batch_purchase\static\src\scss\account_financial_report.scss =====
.o_foldable_menu {
    &.o_closed_menu {
        display: none;
    }
    .o_open_menu {
        display: block;
    }
}
@mixin o-account-reports-i-fa-toggle {
    i.fa {
        visibility: hidden;
    }
    &:hover i.fa {
        visibility: visible;
    }
}

.o_form_view {
    .o_account_reports_page {
        .o_input {
            width: 100%;
        }
    }
}

.o_account_reports_page {
    background-color: $o-view-background-color;
    color: $o-main-text-color;

    .dropdown-toggle::after {
        display: none; // disable bootstrap's carret and do it manaully for positionning
    }

    padding-bottom: 125px;
    @include o-webclient-padding($top: $o-sheet-vpadding, $bottom: $o-sheet-vpadding);
    .o_account_reports_level0 {
        border-width: 3px;
        font-weight: bold;
        // border-top-style: $border-top-style;
        border-bottom-style: double;
    }
    .o_account_reports_table {
        margin-bottom: 128px;
        th.o_account_report_column_header {
            &.sortable::before {
                content: '\f07d';
                font-family: 'FontAwesome';
                color: lightgray;
            }
            &.up::before {
                content: '\f176';
                color: black;
            }
            &.down::before {
                content: '\f175';
                color: black;
            }
            &:first-child {
                border: none;
            }
        }
    }
    .account_report_line_name a {
        color:#008784;
    }
    a {
        cursor: pointer;
    }
    .o_reports_date_to {
        margin-left: 20px;
    }
    .o_account_report_line {
        span {
            white-space: nowrap;
        }
        position: relative;
    }
    // truncate span content and ad '...' if content width > span width
    .o_account_report_line_ellipsis, .o_account_report_name_ellipsis{
        position: relative;
        span {
            position: absolute;
        }
        > span, span[class^="o_account_reports_domain_line_"] {
            left: 0;
            right: 0;
            top: 0;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    }
    .o_account_report_name_ellipsis {
        min-width: 200px;
        max-width: 50%;
    }
    .ellipsis_width {
        direction: rtl !important;
        height: 0 !important;
        position: relative !important;
        white-space: initial !important;
        display: inline-block !important;
        visibility: hidden;

    }

    tr:focus {
        outline: none;

        .o_account_report_line_ellipsis, .o_account_report_name_ellipsis {
            span {
                white-space: initial;
                overflow: initial;
                z-index: 1;
            }
        }
    }
    // ----------------------------------------------------------------
    .o_account_report_summary {
        padding-left: 5px;
    }
    .o_account_reports_summary_edit {
        padding-bottom: 40px;
        padding-top: 15px;
    }
    .js_account_report_foldable {
        cursor: pointer;
    }
    .color-red {
        color: red !important;
    }
    .color-green {
        color: green !important;
    }
    .color-transparent {
        opacity: 0 !important;
    }
    .trust-partner {
        font-size: 0.8em;
        margin-left: 5px;
    }
    .print_only {
        display: none;
    }
    .o_account_reports_table {
        &#table_header_clone {
            position: fixed;
            tbody {
                visibility: collapse;
                tr {
                    border: none;
                }
            }
        }

        width: 100%;

        .number {
            text-align: right;
        }
        .text {
            text-align: left;
        }
        .date {
            text-align: center;
        }
        th{
            background-color: white;
            background-clip: padding-box;
            border: 1px solid #e6e6e6;
            .subtitle{
                font-weight:normal;
            }
        }
        .o_account_reports_header_hierarchy {
            th {
                border-bottom: none;
            }
            th:not(:first-child) {
                border: 1px solid #e6e6e6;
                border-collapse: separate;
                padding-right: 8px;
                padding-left: 8px;
            }
        }
    }
    .oe_link_reports {
        @extend .btn;
        @extend .btn-outline-secondary;
        @extend .btn-sm;
        line-height: 0.8;
        vertical-align: initial;
    }
    .folded {
        .oe_link_reports {
            display: none;
        }
    }
    p.o_account_reports_contact_info {
        min-height: 30px;
    }
    .o_input {
        width: 70%;
    }
    .o_account_reports_edit_summary_pencil {
        margin-left: -15px;
        position: absolute;
    }
    table > tbody > tr >  td ~ td{
        padding-left: 8px;
        padding-right: 8px;
    }
    table > tbody > tr >  td{
        vertical-align: top;
    }
    .o_account_reports_summary {
        margin-bottom: 20px;
        @include o-account-reports-i-fa-toggle;
    }
    .o_account_reports_unfolded td + td span {
        visibility: hidden;
    }
    div.o_account_reports_saved_summary {
        padding-left: 5px;
    }
    .o_account_reports_web_action, .o_change_trust,
    span.o_account_reports_web_action, div.o_account_reports_saved_summary span,
    td.o_account_reports_unfoldable, td.o_account_reports_foldable, span.partner_id, span.move_line_id, input[type=checkbox] {
        cursor: pointer;
    }
    p.footnote > .text {
        white-space: pre-wrap;
    }
    p.footnote > .o_account_reports_footnote_icons, p.o_account_reports_footnote_edit > .o_account_reports_footnote_icons {
        visibility: hidden;
    }
    p.footnote:hover > .o_account_reports_footnote_icons {
        visibility: visible;
    }
    .o_account_reports_footnote_icons {
        position: absolute;
        margin-left: 3px;
    }
    .o_account_reports_caret_icon {
        position: absolute;
        display: contents;
        .fa {
            position: absolute;
            bottom: 4px;
        }
    }
    .o_account_reports_domain_line_0 {
        margin-left: 0px;
    }
    .o_account_reports_domain_line_1 {
        margin-left: 15px;
    }
    .o_account_reports_domain_line_2 {
        margin-left: 30px;
    }
    .o_account_reports_domain_line_3 {
        margin-left: 40px;
    }
    .o_account_reports_domain_line_4 {
        margin-left: 50px;
    }
    .o_account_reports_domain_line_5 {
        margin-left: 60px;
    }
    .o_account_reports_domain_line_6 {
        margin-left: 70px;
    }
    .o_account_reports_domain_line_7 {
        margin-left: 80px;
    }
    .o_account_reports_domain_line_8 {
        margin-left: 90px;
    }
    .o_account_reports_domain_line_9 {
        margin-left: 100px;
    }
    .o_account_reports_domain_line_10 {
        margin-left: 110px;
    }
    .o_account_reports_domain_line_11 {
        margin-left: 120px;
    }
    .o_account_reports_domain_line_12 {
        margin-left: 130px;
    }
    .o_account_reports_domain_line_13 {
        margin-left: 140px;
    }
    tr.o_account_reports_domain_total {
        font-weight: bold;
    }
    tr.o_account_reports_initial_balance {
        > td > span:last-child {
            margin-left: 30px;
        }
    }
    tr.hierarchy_total {
        font-weight: bold;
    }
    b.o_account_reports_footnote_sup {
        margin-top: 10px;
        color: $o-main-text-color;
    }
    ul.o_account_reports_domain_dropdown {
        margin-left: 70px
    }
    .total {
        font-weight: bold;
    }
    .o_account_reports_level0, .o_account_reports_level1, .o_account_reports_level2, .o_account_reports_domain_total, .total {
        .text-muted {
            color: #666666 !important;
        }
    }
    .o_foldable_total {
        color: #666666 !important;
        &.color-red{
            color: red !important;
        }
        &.color-green{
            color: green !important;
        }
    }
    .o_account_reports_totals_below_sections.o_js_account_report_parent_row_unfolded {
        .o_account_report_column_value {
            visibility: hidden;
        }
        td.number.o_foldable_total {
            border-bottom: none;
        }
    }
    td.o_foldable_total {
        font-weight: bold;
    }
    @mixin report_level($indent) {
        border-bottom: 1px solid #eee;
        > td.o_account_report_line_indent > span:last-child {
            margin-left: ($indent + 1) * 10px;
        }
        &.total {
            > td > span:last-child {
                margin-left: $indent * 10px;
            }
        }
    }
    .o_account_reports_level0 {
        & td {
            padding-top: 32px;
            span {
                top: unset;
            }
        }
        > td.o_account_report_line_indent.o_foldable_total > span:last-child {
            margin-left: 10px;
        }
    }
    .o_account_reports_level1 {
        @include report_level(1);
        font-weight: bold;
        border-bottom: 2px solid #bbb;
    }
    .o_account_reports_level2 {
        @include report_level(2);
        font-weight: bold;
        border-bottom: 1px solid #bbb;
    }
    .o_account_reports_level3 {
        @include report_level(3);
    }
    .o_account_reports_level4 {
        @include report_level(4);
    }
    .o_account_reports_level5 {
        @include report_level(5);
    }
    .o_account_reports_level6 {
        @include report_level(6);
    }
    .o_account_reports_level7 {
        @include report_level(7);
    }
    .o_account_reports_level8 {
        @include report_level(8);
    }
    .o_account_reports_level9 {
        @include report_level(9);
    }
    .o_account_reports_level10 {
        @include report_level(10);
    }
    .o_account_reports_level11 {
        @include report_level(11);
    }
    .o_account_reports_level12 {
        @include report_level(12);
    }
    .o_account_reports_level13 {
        @include report_level(13);
    }
    .o_account_reports_default_style {
        border-bottom: 1px solid #eee;
        > td.o_account_report_line_indent > tr:first-child > span:last-child {
            margin-left: 30px;
        }
        &.o_account_reports_domain_total {
            > td.o_account_report_line_indent > span:last-child {
                margin-left: 30px;
            }
        }
    }
    .o_account_followup_not_clicked {
        .o_account_followup_skip {
            display: inline-block;
        }
        .o_account_followup_done {
            display: none;
        }
    }
    .o_account_followup_clicked {
        .o_account_followup_skip {
            display: none;
        }
        .o_account_followup_done {
            display: inline-block;
        }
    }
    .o_account_reports_history {
        min-width: 300px;
    }
    .o_account_coa_column_contrast td:nth-child(4n-1),
    .o_account_coa_column_contrast td:nth-child(4n-2),
    td.o_account_coa_column_contrast:nth-child(4n-1),
    td.o_account_coa_column_contrast:nth-child(4n-2) {
        background-color: #FAFAFA;
        background-clip: padding-box;
    }
    .table-hover tbody tr:hover td {
        background-color: #F0F0F0;
        background-clip: padding-box;
    }
}

.o_form_view {
    .o_account_reports_no_print {
        div.o_account_reports_summary {
            cursor: pointer;
        }
        .o_account_reports_table {
            margin-bottom: 0px;
            tbody tr:not(.o_account_reports_level0):hover {
                background-color: #f0f0f0;
            }
        }
    }
}

.o_account-progress-bar-content {
    color: black;
    position: absolute;
    width: 100%;
}
.o_account-progress {
    position: relative;
}
.o_account_reports_history [summary="o_followup_letter_display_none"] {
    display: none;
}

.o_account_report_search {
    margin-left: 10px;
    margin-right: 10px;
    .o_account_report_select {
        min-width: 100px;
    }
}

// Filters lines
// -----------------------------------------
.o_reports_filter_input_wrapper {
    position: relative;
    float: right;
    width: 150px;
    margin-bottom: 20px;
    float: right;
        .searchIcon {
        position: absolute;
        right: 10px;
    }
}
    .o_account_reports_filter_input {
    border: none;
    border-bottom: 1px black solid;
}
    .o_account_reports_filtered_lines {
    display: none;
}

.o_account_reports_filter_journals {
    .dropdown-menu {
        overflow: auto;
        // 86.5px is the height of .o_control_panel
        max-height: calc(100vh - (86.5px + #{$o-navbar-height}));
    }
}

// Summary to be edited
// -----------------------------------------
.o_account_reports_body .o_account_reports_summary {
    display: inline-block;
    position: relative;


    .o_account_report_summary_placeholder{
        opacity: .5;
    }

    .o_account_report_summary {
        padding: 10px 0;

        &, > span, .o_input, .o_account_reports_edit_summary_pencil {
            transition: all .2s ease 0s;
        }
        > span {
            padding: 10px 0;
            display: block;
            line-height: 1;
        }
    }

    .o_input {
        border: none;
        padding: 10px;
    }

    .o_account_reports_edit_summary_pencil {
        @include o-position-absolute(20px, $left: 0);
        visibility: hidden;
        opacity: 0;
    }

    &:hover {
        .o_account_reports_edit_summary_pencil {
            visibility: visible;
            opacity: 1;
        }

        .o_account_report_summary .o_input, .o_account_report_summary span {
            padding-right: 0;
        }
    }
}

.o_account_reports_body {
    .alert a {
        cursor: pointer;
    }
}

.o_account_reports_summary_edit {
    padding-bottom: 25px;
    padding-top: 10px;

    textarea {
        border: 1px solid gray('600');
        resize: vertical;
        width: 100%;
    }
}

.o_financial_report_hover_popup {
    color: orange;
}

// Print mode report summary
// -----------------------------------------
p.o_account_reports_contact_info {
    min-height: 30px;
}

.o_account_reports_load_more {
    span.account_report_line_name {
        cursor: pointer;
        direction: rtl  !important;
    }
}

.o_country_specific_report_label {
    margin-left: 16px;
    background-color: white;
}

.o_account_reports_filter_currency {
    > .dropdown-menu {
        overflow-y: auto;
        max-height: calc(100vh - #{$o-navbar-height} - 100px);  // 100px for the control panel
    }
}


===== .\az_account_batch_purchase\static\src\scss\account_report_print.scss =====
.o_account_reports_summary_edit {
    display: none !important;
}
.caret {
    display: none !important;
}
.o_account_reports_body_print {
    background-color: white !important;
    color: black !important;
    font-size: 12px !important;
    .o_account_reports_header {
        padding: 10px;
        background-color: #eee;
    }
    .o_account_reports_page {
        color: black !important;
    }
    .o_account_reports_table {
        margin-bottom: 0px;
        font-size: 12px !important;
        > tbody > tr {
            /* fix thead overlapping http://github.com/wkhtmltopdf/wkhtmltopdf/issues/1524 */
            page-break-inside: avoid;
        }
    }
    .o_account_reports_level0, .o_account_reports_level1, .o_account_reports_level2, .o_account_reports_domain_total, .total {
        .text-muted {
            color: black !important;
        }
    }
    .o_foldable_total {
        color: black !important;
    }
}
a {
    color: inherit !important;
}
.print_only {
    display: block !important;
    &.row {
        display: flex !important;
    }
}
[name="summary"] {
    display: none;
}
.no_print {
    display: none !important;
}

.o_account_reports_page {
    .o_account_report_line_ellipsis, .o_account_report_name_ellipsis{
        position: relative;
        span {
            position: absolute;
        }
        > span, span[class^="o_account_reports_domain_line_"] {
            white-space: normal;
            overflow: visible;
            text-overflow: initial;
            position: relative;
        }
    }
}


===== .\az_account_batch_purchase\views\account_move.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>

        <!-- VIEWS -->
        <record id="azbah_account_move_tree" model="ir.ui.view">
            <field name="name">azbah.account.move.tree</field>
            <field name="model">account.move</field>
            <field name="mode">extension</field>
            <field name="inherit_id" ref="account.view_in_invoice_bill_tree"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='ref']" position="before">
                    <field name="purchase_order_id"/>
                    <field name="batch_purchase_id"/>
                    <field name="purchase_delegate_id"/>
                </xpath>
            </field>
        </record>

        <record id="azbah_account_move_form" model="ir.ui.view">
            <field name="name">azbah.account.move.form</field>
            <field name="model">account.move</field>
            <field name="mode">extension</field>
            <field name="inherit_id" ref="account.view_move_form"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='payment_reference']" position="after">
                    <field name="purchase_order_id"/>
                    <field name="batch_purchase_id"/>
                    <field name="purchase_delegate_id"/>
                </xpath>

                <xpath expr="//field[@name='price_subtotal']" position="before">
                    <field name="note"/>
                </xpath>
            </field>
        </record>
    </data>
</odoo>


===== .\az_account_batch_purchase\views\batch_purchase.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>

        <!-- VIEWS -->
        <record id="azbah_view_batch_purchase_order_tree" model="ir.ui.view">
            <field name="name">azbah.batch.purchase.tree</field>
            <field name="model">batch.purchase</field>
            <field name="arch" type="xml">
                <tree>
                    <field name="name" string="Serial"/>
                    <field name="delegate_id"/>
                    <field name="date"/>
                    <field name="total"/>
                </tree>
            </field>
        </record>

        <record id="azbah_view_batch_purchase_order_form" model="ir.ui.view">
            <field name="name">azbah.bach.vendor.bill.form</field>
            <field name="model">batch.purchase</field>
            <field name="arch" type="xml">
                <form>
                    <sheet>
                        <div class="oe_button_box" name="button_box">
                            <button class="oe_stat_button" type="object" name="launch_stock_move_line" icon="fa-paper-plane"
                                    attrs=" {'invisible':[('name', '=', 'New')]}">
                                Stock   المخزن
                            </button>

                            <button class="oe_stat_button" type="object" name="launch_vendor_bills"
                                    icon="fa-pencil-square-o" attrs="{'invisible':[('name', '=', 'New')]}">
                                <field name="vendor_bill_count" widget="statinfo" string="Vendor Bills"/>
                            </button>
                        </div>
                        <group>
                            <field name="name" string="Serial"/>
                            <field name="delegate_id"/>
                            <field name="destination_location_id"/>
                            <field name="date"/>
                            <field name="total"/>
                            <field name="line_count" invisible="1"/>
                        </group>
                        <notebook>
                            <page string="Purchase Orders">
                                    <field name="line_ids" nolabel="1">
                                        <tree editable="bottom">
                                            <control>
                                                <create name="add_section_control" string="Add a Vendor"
                                                        context="{'default_display_type': 'line_section'}"/>
                                                <create name="add_product_control" string="Add a product"/>
                                            </control>
                                            <field name="batch_id" invisible="1"/>
                                            <field name="line_count" invisible="1"/>
                                            <field name="display_type" invisible="1"/>
                                            <field name="vendor_id"
                                                   options="{'no_create': True, 'no_create_edit': False}"
                                                   attrs="{'invisible': [('display_type', '!=', 'line_section')]}"/>
                                            <field name="product_id"
                                                   options="{'no_create': True, 'no_create_edit':True}"
                                                   attrs="{'invisible': [('display_type', '=', 'line_section')]}"/>
                                            <field name="product_uom_category_id" invisible="1"/>
                                            <field name="product_uom" widget='selection'
                                                   attrs="{'invisible': [('display_type', '=', 'line_section')]}"/>

                                            <field name="quantity"
                                                   attrs="{'invisible': [('display_type', '=', 'line_section')]}"/>
                                            <field name="account_id"
                                                   attrs="{'invisible': [('display_type', '=', 'line_section')]}"/>
                                            <field name="price"
                                                   attrs="{'invisible': [('display_type', '=', 'line_section')]}"/>
                                            <field name="price_subtotal"  readonly="1"
                                                   attrs="{'invisible': [('display_type', '=', 'line_section')]}"/>
                                            <field name="tax_ids" widget="many2many_tags" options="{'no_create':True}"
                                                   attrs="{'invisible': [('display_type', '=', 'line_section')]}"/>
                                            <field name="price_subtotal_with_tax"/>
                                            <field name="note"
                                                   attrs="{'invisible': [('display_type', '=', 'line_section')]}"/>
                                        </tree>
                                    </field>
                            </page>
                        </notebook>
                    </sheet>
                </form>
            </field>
        </record>

        <!-- ACTIONS -->

        <record id="action_azbah_view_batch_purchase_order" model="ir.actions.act_window">
            <field name="name">Batch Purchase Orders</field>
            <field name="res_model">batch.purchase</field>
            <field name="view_mode">tree,form</field>
            <field name="context">{'type': 'purchase'}</field>
            <field name="domain">[('type', '=', 'purchase')]</field>
        </record>

        <menuitem parent="purchase.menu_procurement_management"
                  id="menu_azbah_action_azbah_view_batch_purchase_order"
                  action="action_azbah_view_batch_purchase_order"
                  groups="account.group_account_user"
                  name="مشتريات مندوب"
                  sequence="100"/>

    </data>
</odoo>


===== .\az_account_batch_purchase\views\batch_purchase_sarf.xml =====
===== .\az_account_batch_purchase\views\purchase_order.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>

        <!-- VIEWS -->
        <record id="azbah_purchase_order_tree" model="ir.ui.view">
            <field name="name">azbah.purchase.order.tree</field>
            <field name="model">purchase.order</field>
            <field name="mode">extension</field>
            <field name="inherit_id" ref="purchase.purchase_order_view_tree"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='user_id']" position="before">
                    <field name="batch_purchase_id"/>
                    <field name="delegate_id"/>
                </xpath>
            </field>
        </record>

        <record id="azbah_purchase_order_form" model="ir.ui.view">
            <field name="name">azbah.purchase.order.form</field>
            <field name="model">purchase.order</field>
            <field name="mode">extension</field>
            <field name="inherit_id" ref="purchase.purchase_order_form"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='partner_ref']" position="after">
                    <field name="batch_purchase_id"/>
                    <field name="delegate_id"/>
                </xpath>

                <xpath expr="//field[@name='price_subtotal']" position="before">
                    <field name="note" invisible="1"/>
                </xpath>

            </field>
        </record>


        <!-- Filters -->

        <record id="purchase_order_view_search_inherited" model="ir.ui.view">
            <field name="name">purchase.order.select.inherited</field>
            <field name="model">purchase.order</field>
            <field name="inherit_id" ref="purchase.purchase_order_view_search"/>
            <field name="arch" type="xml">
                <search>

                    <!-- Add your custom filter here -->
                    <filter name="filter_origin"
                            string="مشتريات مندوب" domain="[('origin', '=', 'مشتريات مندوب')]"/>
                </search>
            </field>
        </record>


    </data>
</odoo>


===== .\az_account_batch_purchase\views\stock.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>

        <!-- VIEWS -->
        <record id="azbah_stock_picking_tree" model="ir.ui.view">
            <field name="name">azbah.stock.picking.tree</field>
            <field name="model">stock.picking</field>
            <field name="mode">extension</field>
            <field name="inherit_id" ref="stock.vpicktree"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='partner_id']" position="after">
                    <field name="batch_purchase_id"/>
                    <field name="delegate_id"/>
                </xpath>
            </field>
        </record>
        <record id="azbah_stock_picking_form" model="ir.ui.view">
            <field name="name">azbah.stock.picking.form</field>
            <field name="model">stock.picking</field>
            <field name="mode">extension</field>
            <field name="inherit_id" ref="stock.view_picking_form"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='location_dest_id']" position="after">
                    <field name="batch_purchase_id"/>
                    <field name="delegate_id"/>
                </xpath>
            </field>
        </record>
    </data>
</odoo>


===== .\az_account_partner_ledger_filter\__init__.py =====
# -*- coding: utf-8 -*-

from . import models
from . import wizard


===== .\az_account_partner_ledger_filter\__manifest__.py =====
# -*- coding: utf-8 -*-

{
    'name': 'AZ Partner Ledger with Partner Filter',
    'version': '15.0.1.0.1',
    'summary': """Azbah Partner Ledger Report with Partner Filter""",
    'description': """Partner Ledger Report with Partner Filter""",
    'category': 'Accounting',
    'depends': ['account'],
    'data': [
        'views/partner_ledger.xml',
        'report/report_partner_ledger.xml',
        'views/report.xml',
        'wizard/account_report_general_ledger_view.xml',
        'security/ir.model.access.csv',
    ],
    'images': ['static/description/banner.png'],
    'license': 'LGPL-3',
    'installable': True,
    'application': False
}


===== .\az_account_partner_ledger_filter\i18n\ar_001.po =====
===== .\az_account_partner_ledger_filter\models\account_partner_ledger.py =====
# -*- coding: utf-8 -*-

import time
import logging
from odoo import api, models, _,fields
from odoo.exceptions import UserError

_logger = logging.getLogger(__name__)


class ReportPartnerLedger(models.AbstractModel):
    _name = 'report.az_account_partner_ledger_filter.report_partnerledger'

    ###############

    def _lines(self, data, partner):
        full_account = []
        currency = self.env['res.currency']
        query_get_data = self.env['account.move.line'].with_context(
            data['form'].get('used_context', {}))._query_get()
        reconcile_clause = "" if data['form'][
            'reconciled'] else ' AND "account_move_line".full_reconcile_id IS NULL '
        params = [partner.id, tuple(data['computed']['move_state']),
                  tuple(data['computed']['account_ids'])] + \
                 query_get_data[2]
        query = """
              SELECT "account_move_line".id, "account_move_line".date, j.code, acc.code as a_code, acc.name as a_name, "account_move_line".ref, m.name as move_name, "account_move_line".name, "account_move_line".debit, "account_move_line".credit, "account_move_line".amount_currency,"account_move_line".currency_id, c.symbol AS currency_code
              FROM """ + query_get_data[0] + """
              LEFT JOIN account_journal j ON ("account_move_line".journal_id = j.id)
              LEFT JOIN account_account acc ON ("account_move_line".account_id = acc.id)
              LEFT JOIN res_currency c ON ("account_move_line".currency_id=c.id)
              LEFT JOIN account_move m ON (m.id="account_move_line".move_id)
              WHERE "account_move_line".partner_id = %s
                  AND m.state IN %s
                  AND "account_move_line".account_id IN %s AND """ + \
                query_get_data[1] + reconcile_clause + """
                  ORDER BY "account_move_line".date"""
        self.env.cr.execute(query, tuple(params))
        res = self.env.cr.dictfetchall()
        sum = 0.0
        lang_code = self.env.context.get('lang') or 'en_US'
        lang = self.env['res.lang']
        lang_id = lang._lang_get(lang_code)
        date_format = lang_id.date_format
        for r in res:
            r['date'] = r['date']
            r['displayed_name'] = '-'.join(
                r[field_name] for field_name in ('move_name', 'ref', 'name')
                if r[field_name] not in (None, '', '/')
            )
            sum += r['debit'] - r['credit']
            r['progress'] = sum
            r['currency_id'] = currency.browse(r.get('currency_id'))
            full_account.append(r)
        return full_account

    def _sum_partner(self, data, partner, field):
        if field not in ['debit', 'credit', 'debit - credit']:
            return
        result = 0.0
        query_get_data = self.env['account.move.line'].with_context(
            data['form'].get('used_context', {}))._query_get()
        reconcile_clause = "" if data['form'][
            'reconciled'] else ' AND "account_move_line".full_reconcile_id IS NULL '

        params = [partner.id, tuple(data['computed']['move_state']),
                  tuple(data['computed']['account_ids'])] + \
                 query_get_data[2]
        query = """SELECT sum(""" + field + """)
                  FROM """ + query_get_data[0] + """, account_move AS m
                  WHERE "account_move_line".partner_id = %s
                      AND m.id = "account_move_line".move_id
                      AND m.state IN %s
                      AND account_id IN %s
                      AND """ + query_get_data[1] + reconcile_clause
        self.env.cr.execute(query, tuple(params))

        contemp = self.env.cr.fetchone()
        if contemp is not None:
            result = contemp[0] or 0.0
        return result

    @api.model
    def _get_report_values(self, docids, data=None):
        if not data.get('form'):
            raise UserError(
                _("Form content is missing, this report cannot be printed."))

        data['computed'] = {}

        obj_partner = self.env['res.partner']
        query_get_data = self.env['account.move.line'].with_context(
            data['form'].get('used_context', {}))._query_get()
        data['computed']['move_state'] = ['draft', 'posted']
        if data['form'].get('target_move', 'all') == 'posted':
            data['computed']['move_state'] = ['posted']
        result_selection = data['form'].get('result_selection', 'customer')
        if result_selection == 'supplier':
            data['computed']['ACCOUNT_TYPE'] = ['payable']
        elif result_selection == 'customer':
            data['computed']['ACCOUNT_TYPE'] = ['receivable']
        else:
            data['computed']['ACCOUNT_TYPE'] = ['payable', 'receivable']

        self.env.cr.execute("""
              SELECT a.id
              FROM account_account a
              WHERE a.internal_type IN %s
              AND NOT a.deprecated""",
                            (tuple(data['computed']['ACCOUNT_TYPE']),))
        data['computed']['account_ids'] = [a for (a,) in
                                           self.env.cr.fetchall()]
        params = [tuple(data['computed']['move_state']),
                  tuple(data['computed']['account_ids'])] + query_get_data[2]
        reconcile_clause = "" if data['form'][
            'reconciled'] else ' AND "account_move_line".full_reconcile_id IS NULL '
        query = """
              SELECT DISTINCT "account_move_line".partner_id
              FROM """ + query_get_data[0] + """, account_account AS account, account_move AS am
              WHERE "account_move_line".partner_id IS NOT NULL
                  AND "account_move_line".account_id = account.id
                  AND am.id = "account_move_line".move_id
                  AND am.state IN %s
                  AND "account_move_line".account_id IN %s
                  AND NOT account.deprecated
                  AND """ + query_get_data[1] + reconcile_clause
        self.env.cr.execute(query, tuple(params))
        partner_ids = [res['partner_id'] for res in self.env.cr.dictfetchall()]
        partners = obj_partner.browse(partner_ids)
        partners = sorted(partners, key=lambda x: (x.ref or '', x.name or ''))
        return {
            'doc_ids': partner_ids,
            'doc_model': self.env['res.partner'],
            'data': data,
            'docs': partners,
            'time': time,
            'lines': self._lines,
            'sum_partner': self._sum_partner,
        }

    ############

    @api.model
    def _get_report_values(self, docids, data=None):
        if not data.get('form'):
            raise UserError(_("Form content is missing, this report cannot be printed."))

        data['computed'] = {}

        obj_partner = self.env['res.partner']
        query_get_data = self.env['account.move.line'].with_context(data['form'].get('used_context', {}))._query_get()
        data['computed']['move_state'] = ['draft', 'posted']
        if data['form'].get('target_move', 'all') == 'posted':
            data['computed']['move_state'] = ['posted']
        result_selection = data['form'].get('result_selection', 'customer')
        if result_selection == 'supplier':
            data['computed']['ACCOUNT_TYPE'] = ['payable']
        elif result_selection == 'customer':
            data['computed']['ACCOUNT_TYPE'] = ['receivable']
        else:
            data['computed']['ACCOUNT_TYPE'] = ['payable', 'receivable']

        self.env.cr.execute("""
            SELECT a.id
            FROM account_account a
            WHERE a.internal_type IN %s
            AND NOT a.deprecated""", (tuple(data['computed']['ACCOUNT_TYPE']),))
        data['computed']['account_ids'] = [a for (a,) in self.env.cr.fetchall()]
        params = [tuple(data['computed']['move_state']), tuple(data['computed']['account_ids'])] + query_get_data[2]
        reconcile_clause = "" if data['form']['reconciled'] else ' AND "account_move_line".full_reconcile_id IS NULL '
        query = """
            SELECT DISTINCT "account_move_line".partner_id
            FROM """ + query_get_data[0] + """, account_account AS account, account_move AS am
            WHERE "account_move_line".partner_id IS NOT NULL
                AND "account_move_line".account_id = account.id
                AND am.id = "account_move_line".move_id
                AND am.state IN %s
                AND "account_move_line".account_id IN %s
                AND NOT account.deprecated
                AND """ + query_get_data[1] + reconcile_clause
        self.env.cr.execute(query, tuple(params))
        # ---------------------Taking only selected partners---------------------------
        if data['form']['partner_ids']:
            partner_ids = data['form']['partner_ids']
        else:
            partner_ids = [res['partner_id'] for res in self.env.cr.dictfetchall()]
        # -----------------------------------------------------------------------------
        # partner_ids = [res['partner_id'] for res in self.env.cr.dictfetchall()]
        partners = obj_partner.browse(partner_ids)
        partners = sorted(partners, key = lambda x: (x.ref or '', x.name or ''))

        return {
            'doc_ids': partner_ids,
            'doc_model': self.env['res.partner'],
            'data': data,
            'docs': partners,
            'time': time,
            'lines': self._lines,
            'sum_partner': self._sum_partner,
        }


===== .\az_account_partner_ledger_filter\models\partner_ledger.py =====
# -*- coding: utf-8 -*-
from odoo import fields, models,api


class AccountPartnerLedger(models.TransientModel):
    _name = "account.report.partner.ledger"
    _inherit = "account.common.report"

    result_selection = fields.Selection(
        [('customer', 'Receivable Accounts'), ('supplier', 'Payable Accounts'),
         ('customer_supplier', 'Receivable and Payable Accounts')],
        string="Partner's", required=True, default='customer')

    def pre_print_report(self, data):
        data['form'].update(self.read(['result_selection'])[0])
        return data


    amount_currency = fields.Boolean(
        string="With Currency",
        help="It adds the currency column on report if the currency differs "
             "from the company currency.")
    reconciled = fields.Boolean(string='Reconciled Entries')

    def _print_report(self, data):
        data = self.pre_print_report(data)
        data['form'].update({'reconciled': self.reconciled,
                             'amount_currency': self.amount_currency})
        return self.env.ref(
            'az_account_partner_ledger_filter.action_report_partnerledger').report_action(
            self, data=data)


===== .\az_account_partner_ledger_filter\models\__init__.py =====
# -*- coding: utf-8 -*-

from . import account_partner_ledger
from . import partner_ledger


===== .\az_account_partner_ledger_filter\report\report_partner_ledger.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <template id="report_partnerledger">
        <t t-call="web.html_container">
            <t t-call="web.internal_layout">
                <t t-set="data_report_margin_top" t-value="12"/>
                <t t-set="data_report_header_spacing" t-value="9"/>
                <t t-set="data_report_dpi" t-value="110"/>
                <div class="page">
                    <h2>Partner Ledger</h2>
                    <div class="row">
                        <div class="col-3">
                            <strong>Company:</strong>
                            <p t-esc="env.company.name"/>
                        </div>
                        <div class="col-3">
                            <t t-if="data['form']['date_from']">
                                <strong>Date from :</strong>
                                <span t-esc="data['form']['date_from']"/>
                                <br/>
                            </t>
                            <t t-if="data['form']['date_to']">
                                <strong>Date to :</strong>
                                <span t-esc="data['form']['date_to']"/>
                            </t>
                        </div>
                        <div class="col-3">
                            <strong>Target Moves:</strong>
                            <p t-if="data['form']['target_move'] == 'all'">All Entries</p>
                            <p t-if="data['form']['target_move'] == 'posted'">All Posted Entries</p>
                        </div>
                    </div>

                    <table class="table table-sm table-reports">
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th>JRNL</th>
                                <th>Account</th>
                                <th>Ref</th>
                                <th>Debit</th>
                                <th>Credit</th>
                                <th>Balance</th>
                                <th t-if="data['form']['amount_currency']">Currency</th>
                            </tr>
                        </thead>
                        <t t-foreach="docs" t-as="o">
                            <tbody>
                                <tr>
                                    <td colspan="4">
                                        <strong t-esc="o.ref"/>
                                        -
                                        <strong t-esc="o.name"/>
                                    </td>
                                    <td class="text-right">
                                        <strong t-esc="sum_partner(data, o, 'debit')"
                                                t-options="{'widget': 'monetary', 'display_currency': env.company.currency_id}"/>
                                    </td>
                                    <td class="text-right">
                                        <strong t-esc="sum_partner(data, o, 'credit')"
                                                t-options="{'widget': 'monetary', 'display_currency': env.company.currency_id}"/>
                                    </td>
                                    <td class="text-right">
                                        <strong t-esc="sum_partner(data, o, 'debit - credit')"
                                                t-options="{'widget': 'monetary', 'display_currency': env.company.currency_id}"/>
                                    </td>
                                </tr>
                                <tr t-foreach="lines(data, o)" t-as="line">
                                    <td>
                                        <span t-esc="line['date']"/>
                                    </td>
                                    <td>
                                        <span t-esc="line['code']"/>
                                    </td>
                                    <td>
                                        <span t-esc="line['a_code']"/>
                                    </td>
                                    <td>
                                        <span t-esc="line['displayed_name']"/>
                                    </td>
                                    <td class="text-right">
                                        <span t-esc="line['debit']"
                                              t-options="{'widget': 'monetary', 'display_currency': env.company.currency_id}"/>
                                    </td>
                                    <td class="text-right">
                                        <span t-esc="line['credit']"
                                              t-options="{'widget': 'monetary', 'display_currency': env.company.currency_id}"/>
                                    </td>
                                    <td class="text-right">
                                        <span t-esc="line['progress']"
                                              t-options="{'widget': 'monetary', 'display_currency': env.company.currency_id}"/>
                                    </td>
                                    <td class="text-right" t-if="data['form']['amount_currency']">
                                        <t t-if="line['currency_id']">
                                            <span t-esc="line['amount_currency']"
                                                  t-options="{'widget': 'monetary', 'display_currency': line['currency_id']}"/>
                                        </t>
                                    </td>
                                </tr>
                            </tbody>
                        </t>
                    </table>
                </div>
            </t>
        </t>
    </template>
</odoo>


===== .\az_account_partner_ledger_filter\security\ir.model.access.csv =====
id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
access_account_report_partner_ledger,access.account.report.partner.ledger,model_account_report_partner_ledger,account.group_account_user,1,1,1,1


===== .\az_account_partner_ledger_filter\views\partner_ledger.xml =====
===== .\az_account_partner_ledger_filter\views\report.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>

        <!--    # Partner ledger report    -->
     <record id="action_report_partnerledger" model="ir.actions.report">
            <field name="name">Partner Ledger</field>
            <field name="model">account.report.partner.ledger</field>
            <field name="report_type">qweb-pdf</field>
            <field name="report_name">az_account_partner_ledger_filter.report_partnerledger</field>
            <field name="report_file">az_account_partner_ledger_filter.report_partnerledger</field>
        </record>
    <data>
        <act_window name="Partner Ledger"
            res_model="account.report.partner.ledger"
            binding_model="res.partner"
            view_mode="form"
            view_id ="account_report_partner_ledger_view"
            target="new"
            id="action_account_partner_ledger_report_filter"
            context="{'default_partner_ids':active_ids}"
        />
    </data>
</odoo>

===== .\az_account_partner_ledger_filter\wizard\account_report_general_ledger_view.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <record id="account_report_partner_ledger_filter_view" model="ir.ui.view">
        <field name="name">Partner Ledger</field>
        <field name="model">account.report.partner.ledger</field>
        <field name="inherit_id" ref="az_account_partner_ledger_filter.account_report_partner_ledger_view"/>
        <field name="arch" type="xml">
        <data>
            <xpath expr="//field[@name='journal_ids']" position="replace">
                <field name="journal_ids" widget="many2many_tags" invisible="1"/>
                <field name="my_journal_ids" widget="many2many_tags"/>
                <field name="partner_ids" widget="many2many_tags"/>
            </xpath>
        </data>
        </field>
    </record>
</odoo>


===== .\az_account_partner_ledger_filter\wizard\account_report_partner_ledger.py =====
# -*- coding: utf-8 -*-

from odoo import fields, models,api


class AccountPartnerLedger(models.TransientModel):
    _inherit = "account.report.partner.ledger"

    partner_ids = fields.Many2many('res.partner', 'partner_ledger_res_partner_rel', 'id', 'partner_id', string='Partners')

    def _default_journal_ids(self):
        defo = self.env['account.journal'].search([('id', 'in', [5])])
        return defo

    my_journal_ids = fields.Many2many(
        comodel_name='account.journal',relation="journal_filter_rel",
        string='Journals',
        required=True,
    )
    @api.onchange('my_journal_ids')
    def on_change(self):
        if self.my_journal_ids:
            self.journal_ids = self.my_journal_ids

    @api.model
    def default_get(self, fields_list):
        defaults = super(AccountPartnerLedger, self).default_get(fields_list)
        if 'journal_ids' in fields_list:
            defaults['journal_ids'] = self.env['account.journal'].search([('id', 'in', [5])])
        return defaults


    def _print_report(self, data):
        data = self.pre_print_report(data)
        data['form'].update({'reconciled': self.reconciled, 'amount_currency': self.amount_currency,
                             'partner_ids': self.partner_ids.ids})
        return self.env.ref('az_account_partner_ledger_filter.action_report_partnerledger').report_action(self, data=data)


===== .\az_account_partner_ledger_filter\wizard\__init__.py =====
# -*- coding: utf-8 -*-

from . import account_report_partner_ledger


===== .\az_account_payments\__init__.py =====
from . import models


===== .\az_account_payments\__manifest__.py =====
{
    "name": "AZ-Accounting - Payments",
    "version": "15",
    "license": "LGPL-3",
    "category": "accounting",
    "depends": ['account', 'azbah_trivial']
    , "data": [
    'views/account_payment_view.xml'
    , 'views/account_payment_view_extensions.xml'
    , 'views/account_journal_view.xml'
    , 'report/sanad_template.xml',

]
}


===== .\az_account_payments\models\account_journal.py =====
# -*- coding: utf-8 -*-
from lxml import etree

from odoo import models, fields, api, _
from odoo.exceptions import UserError, ValidationError


class AccountJournal(models.Model):
    _inherit = "account.journal"
    sanad_account_id = fields.Many2one("account.account", string="الحساب المرتبط")


===== .\az_account_payments\models\account_payment.py =====
===== .\az_account_payments\models\__init__.py =====
# -*- coding: utf-8 -*-
from . import account_payment
from . import account_journal

===== .\az_account_payments\report\sanad_template.xml =====
===== .\az_account_payments\static\src\css\sanad_styles.css =====
/* Custom Fonts */
@font-face {
    font-family: 'almarai_bold';
    src: url('../fonts/almarai_bold.ttf') format('truetype');
    font-weight: bold;
    font-style: normal;
}

@font-face {
    font-family: 'cairo_bold';
    src: url('../fonts/cairo_bold.ttf') format('truetype');
    font-weight: bold;
    font-style: normal;
}

@font-face {
    font-family: 'hacen_promoter_lt';
    src: url('../fonts/hacen_promoter_lt.ttf') format('truetype');
    font-weight: bold;
    font-style: normal;
}

@font-face {
    font-family: 'khalid_art_bold';
    src: url('../fonts/khalid_art_bold.ttf') format('truetype');
    font-weight: bold;
    font-style: normal;
}


.mybox {
    padding: 10px;
    direction: rtl;
    text-align: right;
    width: 100%;
    height: 10cm;
    background-color: #fff;
    box-shadow: 7px 10px 5px 2px rgba(0, 0, 0, 0.2);
    border: 1px solid #ccc;
    background-image: linear-gradient(139deg, #fafafa 23.86%, #ffffff 23.86%, #ffffff 50%,
    #fafafa 50%, #fafafa 73.86%, #ffffff 73.86%, #ffffff 100%);
    background-size: 67.07px 58.30px;

}


.normal_text_ar {
    font-family: cairo_bold;
    font-size: 11pt;
}

.title_text_ar {
    font-family: khalid_art_bold;
    font-size: 14pt;
}

.normal_text_en {
    font-family: "Arial Black";
    font-size: 9pt;
}

table {
    border-spacing: 0 25px;
}

.bottom_border {
    border-bottom: 1px;
    border-bottom-style: solid;
}

td {
    padding-top: 6px;
    padding-bottom: 6px;
}

span {
    padding-right: 10px;
    padding-left: 10px;
    text-align: right;
    direction: rtl;
}

===== .\az_account_payments\static\src\scss\account_financial_report.scss =====
.o_foldable_menu {
    &.o_closed_menu {
        display: none;
    }
    .o_open_menu {
        display: block;
    }
}
@mixin o-account-reports-i-fa-toggle {
    i.fa {
        visibility: hidden;
    }
    &:hover i.fa {
        visibility: visible;
    }
}

.o_form_view {
    .o_account_reports_page {
        .o_input {
            width: 100%;
        }
    }
}

.o_account_reports_page {
    background-color: $o-view-background-color;
    color: $o-main-text-color;

    .dropdown-toggle::after {
        display: none; // disable bootstrap's carret and do it manaully for positionning
    }

    padding-bottom: 125px;
    @include o-webclient-padding($top: $o-sheet-vpadding, $bottom: $o-sheet-vpadding);
    .o_account_reports_level0 {
        border-width: 3px;
        font-weight: bold;
        // border-top-style: $border-top-style;
        border-bottom-style: double;
    }
    .o_account_reports_table {
        margin-bottom: 128px;
        th.o_account_report_column_header {
            &.sortable::before {
                content: '\f07d';
                font-family: 'FontAwesome';
                color: lightgray;
            }
            &.up::before {
                content: '\f176';
                color: black;
            }
            &.down::before {
                content: '\f175';
                color: black;
            }
            &:first-child {
                border: none;
            }
        }
    }
    .account_report_line_name a {
        color:#008784;
    }
    a {
        cursor: pointer;
    }
    .o_reports_date_to {
        margin-left: 20px;
    }
    .o_account_report_line {
        span {
            white-space: nowrap;
        }
        position: relative;
    }
    // truncate span content and ad '...' if content width > span width
    .o_account_report_line_ellipsis, .o_account_report_name_ellipsis{
        position: relative;
        span {
            position: absolute;
        }
        > span, span[class^="o_account_reports_domain_line_"] {
            left: 0;
            right: 0;
            top: 0;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    }
    .o_account_report_name_ellipsis {
        min-width: 200px;
        max-width: 50%;
    }
    .ellipsis_width {
        direction: rtl !important;
        height: 0 !important;
        position: relative !important;
        white-space: initial !important;
        display: inline-block !important;
        visibility: hidden;

    }

    tr:focus {
        outline: none;

        .o_account_report_line_ellipsis, .o_account_report_name_ellipsis {
            span {
                white-space: initial;
                overflow: initial;
                z-index: 1;
            }
        }
    }
    // ----------------------------------------------------------------
    .o_account_report_summary {
        padding-left: 5px;
    }
    .o_account_reports_summary_edit {
        padding-bottom: 40px;
        padding-top: 15px;
    }
    .js_account_report_foldable {
        cursor: pointer;
    }
    .color-red {
        color: red !important;
    }
    .color-green {
        color: green !important;
    }
    .color-transparent {
        opacity: 0 !important;
    }
    .trust-partner {
        font-size: 0.8em;
        margin-left: 5px;
    }
    .print_only {
        display: none;
    }
    .o_account_reports_table {
        &#table_header_clone {
            position: fixed;
            tbody {
                visibility: collapse;
                tr {
                    border: none;
                }
            }
        }

        width: 100%;

        .number {
            text-align: right;
        }
        .text {
            text-align: left;
        }
        .date {
            text-align: center;
        }
        th{
            background-color: white;
            background-clip: padding-box;
            border: 1px solid #e6e6e6;
            .subtitle{
                font-weight:normal;
            }
        }
        .o_account_reports_header_hierarchy {
            th {
                border-bottom: none;
            }
            th:not(:first-child) {
                border: 1px solid #e6e6e6;
                border-collapse: separate;
                padding-right: 8px;
                padding-left: 8px;
            }
        }
    }
    .oe_link_reports {
        @extend .btn;
        @extend .btn-outline-secondary;
        @extend .btn-sm;
        line-height: 0.8;
        vertical-align: initial;
    }
    .folded {
        .oe_link_reports {
            display: none;
        }
    }
    p.o_account_reports_contact_info {
        min-height: 30px;
    }
    .o_input {
        width: 70%;
    }
    .o_account_reports_edit_summary_pencil {
        margin-left: -15px;
        position: absolute;
    }
    table > tbody > tr >  td ~ td{
        padding-left: 8px;
        padding-right: 8px;
    }
    table > tbody > tr >  td{
        vertical-align: top;
    }
    .o_account_reports_summary {
        margin-bottom: 20px;
        @include o-account-reports-i-fa-toggle;
    }
    .o_account_reports_unfolded td + td span {
        visibility: hidden;
    }
    div.o_account_reports_saved_summary {
        padding-left: 5px;
    }
    .o_account_reports_web_action, .o_change_trust,
    span.o_account_reports_web_action, div.o_account_reports_saved_summary span,
    td.o_account_reports_unfoldable, td.o_account_reports_foldable, span.partner_id, span.move_line_id, input[type=checkbox] {
        cursor: pointer;
    }
    p.footnote > .text {
        white-space: pre-wrap;
    }
    p.footnote > .o_account_reports_footnote_icons, p.o_account_reports_footnote_edit > .o_account_reports_footnote_icons {
        visibility: hidden;
    }
    p.footnote:hover > .o_account_reports_footnote_icons {
        visibility: visible;
    }
    .o_account_reports_footnote_icons {
        position: absolute;
        margin-left: 3px;
    }
    .o_account_reports_caret_icon {
        position: absolute;
        display: contents;
        .fa {
            position: absolute;
            bottom: 4px;
        }
    }
    .o_account_reports_domain_line_0 {
        margin-left: 0px;
    }
    .o_account_reports_domain_line_1 {
        margin-left: 15px;
    }
    .o_account_reports_domain_line_2 {
        margin-left: 30px;
    }
    .o_account_reports_domain_line_3 {
        margin-left: 40px;
    }
    .o_account_reports_domain_line_4 {
        margin-left: 50px;
    }
    .o_account_reports_domain_line_5 {
        margin-left: 60px;
    }
    .o_account_reports_domain_line_6 {
        margin-left: 70px;
    }
    .o_account_reports_domain_line_7 {
        margin-left: 80px;
    }
    .o_account_reports_domain_line_8 {
        margin-left: 90px;
    }
    .o_account_reports_domain_line_9 {
        margin-left: 100px;
    }
    .o_account_reports_domain_line_10 {
        margin-left: 110px;
    }
    .o_account_reports_domain_line_11 {
        margin-left: 120px;
    }
    .o_account_reports_domain_line_12 {
        margin-left: 130px;
    }
    .o_account_reports_domain_line_13 {
        margin-left: 140px;
    }
    tr.o_account_reports_domain_total {
        font-weight: bold;
    }
    tr.o_account_reports_initial_balance {
        > td > span:last-child {
            margin-left: 30px;
        }
    }
    tr.hierarchy_total {
        font-weight: bold;
    }
    b.o_account_reports_footnote_sup {
        margin-top: 10px;
        color: $o-main-text-color;
    }
    ul.o_account_reports_domain_dropdown {
        margin-left: 70px
    }
    .total {
        font-weight: bold;
    }
    .o_account_reports_level0, .o_account_reports_level1, .o_account_reports_level2, .o_account_reports_domain_total, .total {
        .text-muted {
            color: #666666 !important;
        }
    }
    .o_foldable_total {
        color: #666666 !important;
        &.color-red{
            color: red !important;
        }
        &.color-green{
            color: green !important;
        }
    }
    .o_account_reports_totals_below_sections.o_js_account_report_parent_row_unfolded {
        .o_account_report_column_value {
            visibility: hidden;
        }
        td.number.o_foldable_total {
            border-bottom: none;
        }
    }
    td.o_foldable_total {
        font-weight: bold;
    }
    @mixin report_level($indent) {
        border-bottom: 1px solid #eee;
        > td.o_account_report_line_indent > span:last-child {
            margin-left: ($indent + 1) * 10px;
        }
        &.total {
            > td > span:last-child {
                margin-left: $indent * 10px;
            }
        }
    }
    .o_account_reports_level0 {
        & td {
            padding-top: 32px;
            span {
                top: unset;
            }
        }
        > td.o_account_report_line_indent.o_foldable_total > span:last-child {
            margin-left: 10px;
        }
    }
    .o_account_reports_level1 {
        @include report_level(1);
        font-weight: bold;
        border-bottom: 2px solid #bbb;
    }
    .o_account_reports_level2 {
        @include report_level(2);
        font-weight: bold;
        border-bottom: 1px solid #bbb;
    }
    .o_account_reports_level3 {
        @include report_level(3);
    }
    .o_account_reports_level4 {
        @include report_level(4);
    }
    .o_account_reports_level5 {
        @include report_level(5);
    }
    .o_account_reports_level6 {
        @include report_level(6);
    }
    .o_account_reports_level7 {
        @include report_level(7);
    }
    .o_account_reports_level8 {
        @include report_level(8);
    }
    .o_account_reports_level9 {
        @include report_level(9);
    }
    .o_account_reports_level10 {
        @include report_level(10);
    }
    .o_account_reports_level11 {
        @include report_level(11);
    }
    .o_account_reports_level12 {
        @include report_level(12);
    }
    .o_account_reports_level13 {
        @include report_level(13);
    }
    .o_account_reports_default_style {
        border-bottom: 1px solid #eee;
        > td.o_account_report_line_indent > tr:first-child > span:last-child {
            margin-left: 30px;
        }
        &.o_account_reports_domain_total {
            > td.o_account_report_line_indent > span:last-child {
                margin-left: 30px;
            }
        }
    }
    .o_account_followup_not_clicked {
        .o_account_followup_skip {
            display: inline-block;
        }
        .o_account_followup_done {
            display: none;
        }
    }
    .o_account_followup_clicked {
        .o_account_followup_skip {
            display: none;
        }
        .o_account_followup_done {
            display: inline-block;
        }
    }
    .o_account_reports_history {
        min-width: 300px;
    }
    .o_account_coa_column_contrast td:nth-child(4n-1),
    .o_account_coa_column_contrast td:nth-child(4n-2),
    td.o_account_coa_column_contrast:nth-child(4n-1),
    td.o_account_coa_column_contrast:nth-child(4n-2) {
        background-color: #FAFAFA;
        background-clip: padding-box;
    }
    .table-hover tbody tr:hover td {
        background-color: #F0F0F0;
        background-clip: padding-box;
    }
}

.o_form_view {
    .o_account_reports_no_print {
        div.o_account_reports_summary {
            cursor: pointer;
        }
        .o_account_reports_table {
            margin-bottom: 0px;
            tbody tr:not(.o_account_reports_level0):hover {
                background-color: #f0f0f0;
            }
        }
    }
}

.o_account-progress-bar-content {
    color: black;
    position: absolute;
    width: 100%;
}
.o_account-progress {
    position: relative;
}
.o_account_reports_history [summary="o_followup_letter_display_none"] {
    display: none;
}

.o_account_report_search {
    margin-left: 10px;
    margin-right: 10px;
    .o_account_report_select {
        min-width: 100px;
    }
}

// Filters lines
// -----------------------------------------
.o_reports_filter_input_wrapper {
    position: relative;
    float: right;
    width: 150px;
    margin-bottom: 20px;
    float: right;
        .searchIcon {
        position: absolute;
        right: 10px;
    }
}
    .o_account_reports_filter_input {
    border: none;
    border-bottom: 1px black solid;
}
    .o_account_reports_filtered_lines {
    display: none;
}

.o_account_reports_filter_journals {
    .dropdown-menu {
        overflow: auto;
        // 86.5px is the height of .o_control_panel
        max-height: calc(100vh - (86.5px + #{$o-navbar-height}));
    }
}

// Summary to be edited
// -----------------------------------------
.o_account_reports_body .o_account_reports_summary {
    display: inline-block;
    position: relative;


    .o_account_report_summary_placeholder{
        opacity: .5;
    }

    .o_account_report_summary {
        padding: 10px 0;

        &, > span, .o_input, .o_account_reports_edit_summary_pencil {
            transition: all .2s ease 0s;
        }
        > span {
            padding: 10px 0;
            display: block;
            line-height: 1;
        }
    }

    .o_input {
        border: none;
        padding: 10px;
    }

    .o_account_reports_edit_summary_pencil {
        @include o-position-absolute(20px, $left: 0);
        visibility: hidden;
        opacity: 0;
    }

    &:hover {
        .o_account_reports_edit_summary_pencil {
            visibility: visible;
            opacity: 1;
        }

        .o_account_report_summary .o_input, .o_account_report_summary span {
            padding-right: 0;
        }
    }
}

.o_account_reports_body {
    .alert a {
        cursor: pointer;
    }
}

.o_account_reports_summary_edit {
    padding-bottom: 25px;
    padding-top: 10px;

    textarea {
        border: 1px solid gray('600');
        resize: vertical;
        width: 100%;
    }
}

.o_financial_report_hover_popup {
    color: orange;
}

// Print mode report summary
// -----------------------------------------
p.o_account_reports_contact_info {
    min-height: 30px;
}

.o_account_reports_load_more {
    span.account_report_line_name {
        cursor: pointer;
        direction: rtl  !important;
    }
}

.o_country_specific_report_label {
    margin-left: 16px;
    background-color: white;
}

.o_account_reports_filter_currency {
    > .dropdown-menu {
        overflow-y: auto;
        max-height: calc(100vh - #{$o-navbar-height} - 100px);  // 100px for the control panel
    }
}


===== .\az_account_payments\static\src\scss\account_report_print.scss =====
.o_account_reports_summary_edit {
    display: none !important;
}
.caret {
    display: none !important;
}
.o_account_reports_body_print {
    background-color: white !important;
    color: black !important;
    font-size: 12px !important;
    .o_account_reports_header {
        padding: 10px;
        background-color: #eee;
    }
    .o_account_reports_page {
        color: black !important;
    }
    .o_account_reports_table {
        margin-bottom: 0px;
        font-size: 12px !important;
        > tbody > tr {
            /* fix thead overlapping http://github.com/wkhtmltopdf/wkhtmltopdf/issues/1524 */
            page-break-inside: avoid;
        }
    }
    .o_account_reports_level0, .o_account_reports_level1, .o_account_reports_level2, .o_account_reports_domain_total, .total {
        .text-muted {
            color: black !important;
        }
    }
    .o_foldable_total {
        color: black !important;
    }
}
a {
    color: inherit !important;
}
.print_only {
    display: block !important;
    &.row {
        display: flex !important;
    }
}
[name="summary"] {
    display: none;
}
.no_print {
    display: none !important;
}

.o_account_reports_page {
    .o_account_report_line_ellipsis, .o_account_report_name_ellipsis{
        position: relative;
        span {
            position: absolute;
        }
        > span, span[class^="o_account_reports_domain_line_"] {
            white-space: normal;
            overflow: visible;
            text-overflow: initial;
            position: relative;
        }
    }
}


===== .\az_account_payments\views\account_journal_view.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>
        <record id="view_azbah_account_journal_form_inherited" model="ir.ui.view">
            <field name="name">azbah.account.journal.form</field>
            <field name="model">account.journal</field>
            <field name="inherit_id" ref="account.view_account_journal_form"/>
            <field name="arch" type="xml">

                <xpath expr="//page[@name='advanced_settings']" position="inside">
                    <group groups="base.group_no_one">
                        <group>
                            <field name="sanad_account_id" string="الحساب المرتبط"/>
                        </group>
                    </group>
                </xpath>

            </field>
        </record>


    </data>
</odoo>


===== .\az_account_payments\views\account_payment_view.xml =====
===== .\az_account_payments\views\account_payment_view_extensions.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>


        <!--Views-->

        <!--Payments Sanad Form-->
        <record id="azbah_view_form_account_payment_extension" model="ir.ui.view">
            <field name="name">azbah.account.payment.form.extension</field>
            <field name="model">account.payment</field>
            <field name="inherit_id" ref="account.view_account_payment_form"/>
            <field name="mode">extension</field>
            <field name="arch" type="xml">

                <field name='is_internal_transfer' position="before">
                    <field name="is_sanad" invisible="1"/>
                    <field name="sanad_type" invisible="1"/>
                </field>

                <field name='is_internal_transfer' position="attributes">
                    <attribute name="attrs">{'invisible': [('sanad_type', '=', 'bank')]}</attribute>
                </field>
                <field name='payment_type' position="attributes">
                    <attribute name="attrs">{'invisible': [('sanad_type', '=', 'bank')]}</attribute>
                </field>

                <field name='journal_id' position="after">
                    <field name="destination_journal_id"
                           attrs="{'invisible': [('sanad_type','!=','bank')]}"/>
                </field>

            </field>
        </record>


        <!--Payments Sanad Tree-->
        <record id="azbah_view_tree_account_payment_extension" model="ir.ui.view">
            <field name="name">azbah.account.payment.tree.extension</field>
            <field name="model">account.payment</field>
            <field name="inherit_id" ref="account.view_account_payment_tree"/>
            <field name="mode">extension</field>
            <field name="arch" type="xml">
                <field name='state' position="after">
                    <field name="is_sanad"/>
                    <field name="sanad_type"/>
                </field>
            </field>
        </record>


    </data>
</odoo>


===== .\az_account_qr\__init__.py =====
from . import models

===== .\az_account_qr\__manifest__.py =====
{
    "name": "Azbah - QR",
    "version": "15",
    "license": "LGPL-3",
    "category": "accounting",
    "depends": ["az_account"]
}


===== .\az_account_qr\models\account_move.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.
import base64

from odoo import api, fields, models, _
from odoo.exceptions import UserError
from odoo.tools import float_repr


class AccountMove(models.Model):
    _inherit = 'account.move'

    l10n_sa_qr_code_str = fields.Char(string='Zatka QR Code', compute='_compute_qr_code_str')
    l10n_sa_confirmation_datetime = fields.Datetime(string='Confirmation Date', readonly=True, copy=False)

    @api.depends('amount_total_signed', 'amount_tax_signed', 'l10n_sa_confirmation_datetime', 'company_id',
                 'company_id.vat')
    def _compute_qr_code_str(self):
        """ Generate the qr code for Saudi e-invoicing. Specs are available at the following link at page 23
        https://zatca.gov.sa/ar/E-Invoicing/SystemsDevelopers/Documents/20210528_ZATCA_Electronic_Invoice_Security_Features_Implementation_Standards_vShared.pdf
        """

        def get_qr_encoding(tag, field):
            company_name_byte_array = field.encode()
            company_name_tag_encoding = tag.to_bytes(length=1, byteorder='big')
            company_name_length_encoding = len(company_name_byte_array).to_bytes(length=1, byteorder='big')
            return company_name_tag_encoding + company_name_length_encoding + company_name_byte_array

        for record in self:
            qr_code_str = ''
            if record.l10n_sa_confirmation_datetime and record.company_id.vat:
                seller_name_enc = get_qr_encoding(1, record.company_id.display_name)
                company_vat_enc = get_qr_encoding(2, record.company_id.vat)
                time_sa = fields.Datetime.context_timestamp(self.with_context(tz='Asia/Riyadh'),
                                                            record.invoice_date)
                timestamp_enc = get_qr_encoding(3, time_sa.isoformat())
                invoice_total_enc = get_qr_encoding(4, float_repr(abs(record.amount_total_signed), 2))
                total_vat_enc = get_qr_encoding(5, float_repr(abs(record.amount_tax_signed), 2))

                str_to_encode = seller_name_enc + company_vat_enc + timestamp_enc + invoice_total_enc + total_vat_enc
                qr_code_str = base64.b64encode(str_to_encode).decode()
            record.l10n_sa_qr_code_str = qr_code_str

    def write(self, vals):
        if 'date' in vals:
            vals['l10n_sa_confirmation_datetime'] = vals['date']
            self._compute_qr_code_str()
        if 'l10n_sa_confirmation_datetime' in vals:
            vals['l10n_sa_confirmation_datetime'] = self.invoice_date
            self._compute_qr_code_str()
        res = super(AccountMove, self).write(vals)
        return res

    def _post(self, soft=True):
        res = super()._post(soft)
        for record in self:
            if record.country_code == 'SA' and record.move_type in ('out_invoice', 'out_refund'):
                if not record.l10n_sa_show_delivery_date:
                    raise UserError(_('Delivery Date cannot be empty'))
                self.write({
                    'l10n_sa_confirmation_datetime': self.invoice_date
                })
        return res


===== .\az_account_qr\models\__init__.py =====
from . import account_move

===== .\az_account_qr\static\src\scss\account_financial_report.scss =====
.o_foldable_menu {
    &.o_closed_menu {
        display: none;
    }
    .o_open_menu {
        display: block;
    }
}
@mixin o-account-reports-i-fa-toggle {
    i.fa {
        visibility: hidden;
    }
    &:hover i.fa {
        visibility: visible;
    }
}

.o_form_view {
    .o_account_reports_page {
        .o_input {
            width: 100%;
        }
    }
}

.o_account_reports_page {
    background-color: $o-view-background-color;
    color: $o-main-text-color;

    .dropdown-toggle::after {
        display: none; // disable bootstrap's carret and do it manaully for positionning
    }

    padding-bottom: 125px;
    @include o-webclient-padding($top: $o-sheet-vpadding, $bottom: $o-sheet-vpadding);
    .o_account_reports_level0 {
        border-width: 3px;
        font-weight: bold;
        // border-top-style: $border-top-style;
        border-bottom-style: double;
    }
    .o_account_reports_table {
        margin-bottom: 128px;
        th.o_account_report_column_header {
            &.sortable::before {
                content: '\f07d';
                font-family: 'FontAwesome';
                color: lightgray;
            }
            &.up::before {
                content: '\f176';
                color: black;
            }
            &.down::before {
                content: '\f175';
                color: black;
            }
            &:first-child {
                border: none;
            }
        }
    }
    .account_report_line_name a {
        color:#008784;
    }
    a {
        cursor: pointer;
    }
    .o_reports_date_to {
        margin-left: 20px;
    }
    .o_account_report_line {
        span {
            white-space: nowrap;
        }
        position: relative;
    }
    // truncate span content and ad '...' if content width > span width
    .o_account_report_line_ellipsis, .o_account_report_name_ellipsis{
        position: relative;
        span {
            position: absolute;
        }
        > span, span[class^="o_account_reports_domain_line_"] {
            left: 0;
            right: 0;
            top: 0;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    }
    .o_account_report_name_ellipsis {
        min-width: 200px;
        max-width: 50%;
    }
    .ellipsis_width {
        direction: rtl !important;
        height: 0 !important;
        position: relative !important;
        white-space: initial !important;
        display: inline-block !important;
        visibility: hidden;

    }

    tr:focus {
        outline: none;

        .o_account_report_line_ellipsis, .o_account_report_name_ellipsis {
            span {
                white-space: initial;
                overflow: initial;
                z-index: 1;
            }
        }
    }
    // ----------------------------------------------------------------
    .o_account_report_summary {
        padding-left: 5px;
    }
    .o_account_reports_summary_edit {
        padding-bottom: 40px;
        padding-top: 15px;
    }
    .js_account_report_foldable {
        cursor: pointer;
    }
    .color-red {
        color: red !important;
    }
    .color-green {
        color: green !important;
    }
    .color-transparent {
        opacity: 0 !important;
    }
    .trust-partner {
        font-size: 0.8em;
        margin-left: 5px;
    }
    .print_only {
        display: none;
    }
    .o_account_reports_table {
        &#table_header_clone {
            position: fixed;
            tbody {
                visibility: collapse;
                tr {
                    border: none;
                }
            }
        }

        width: 100%;

        .number {
            text-align: right;
        }
        .text {
            text-align: left;
        }
        .date {
            text-align: center;
        }
        th{
            background-color: white;
            background-clip: padding-box;
            border: 1px solid #e6e6e6;
            .subtitle{
                font-weight:normal;
            }
        }
        .o_account_reports_header_hierarchy {
            th {
                border-bottom: none;
            }
            th:not(:first-child) {
                border: 1px solid #e6e6e6;
                border-collapse: separate;
                padding-right: 8px;
                padding-left: 8px;
            }
        }
    }
    .oe_link_reports {
        @extend .btn;
        @extend .btn-outline-secondary;
        @extend .btn-sm;
        line-height: 0.8;
        vertical-align: initial;
    }
    .folded {
        .oe_link_reports {
            display: none;
        }
    }
    p.o_account_reports_contact_info {
        min-height: 30px;
    }
    .o_input {
        width: 70%;
    }
    .o_account_reports_edit_summary_pencil {
        margin-left: -15px;
        position: absolute;
    }
    table > tbody > tr >  td ~ td{
        padding-left: 8px;
        padding-right: 8px;
    }
    table > tbody > tr >  td{
        vertical-align: top;
    }
    .o_account_reports_summary {
        margin-bottom: 20px;
        @include o-account-reports-i-fa-toggle;
    }
    .o_account_reports_unfolded td + td span {
        visibility: hidden;
    }
    div.o_account_reports_saved_summary {
        padding-left: 5px;
    }
    .o_account_reports_web_action, .o_change_trust,
    span.o_account_reports_web_action, div.o_account_reports_saved_summary span,
    td.o_account_reports_unfoldable, td.o_account_reports_foldable, span.partner_id, span.move_line_id, input[type=checkbox] {
        cursor: pointer;
    }
    p.footnote > .text {
        white-space: pre-wrap;
    }
    p.footnote > .o_account_reports_footnote_icons, p.o_account_reports_footnote_edit > .o_account_reports_footnote_icons {
        visibility: hidden;
    }
    p.footnote:hover > .o_account_reports_footnote_icons {
        visibility: visible;
    }
    .o_account_reports_footnote_icons {
        position: absolute;
        margin-left: 3px;
    }
    .o_account_reports_caret_icon {
        position: absolute;
        display: contents;
        .fa {
            position: absolute;
            bottom: 4px;
        }
    }
    .o_account_reports_domain_line_0 {
        margin-left: 0px;
    }
    .o_account_reports_domain_line_1 {
        margin-left: 15px;
    }
    .o_account_reports_domain_line_2 {
        margin-left: 30px;
    }
    .o_account_reports_domain_line_3 {
        margin-left: 40px;
    }
    .o_account_reports_domain_line_4 {
        margin-left: 50px;
    }
    .o_account_reports_domain_line_5 {
        margin-left: 60px;
    }
    .o_account_reports_domain_line_6 {
        margin-left: 70px;
    }
    .o_account_reports_domain_line_7 {
        margin-left: 80px;
    }
    .o_account_reports_domain_line_8 {
        margin-left: 90px;
    }
    .o_account_reports_domain_line_9 {
        margin-left: 100px;
    }
    .o_account_reports_domain_line_10 {
        margin-left: 110px;
    }
    .o_account_reports_domain_line_11 {
        margin-left: 120px;
    }
    .o_account_reports_domain_line_12 {
        margin-left: 130px;
    }
    .o_account_reports_domain_line_13 {
        margin-left: 140px;
    }
    tr.o_account_reports_domain_total {
        font-weight: bold;
    }
    tr.o_account_reports_initial_balance {
        > td > span:last-child {
            margin-left: 30px;
        }
    }
    tr.hierarchy_total {
        font-weight: bold;
    }
    b.o_account_reports_footnote_sup {
        margin-top: 10px;
        color: $o-main-text-color;
    }
    ul.o_account_reports_domain_dropdown {
        margin-left: 70px
    }
    .total {
        font-weight: bold;
    }
    .o_account_reports_level0, .o_account_reports_level1, .o_account_reports_level2, .o_account_reports_domain_total, .total {
        .text-muted {
            color: #666666 !important;
        }
    }
    .o_foldable_total {
        color: #666666 !important;
        &.color-red{
            color: red !important;
        }
        &.color-green{
            color: green !important;
        }
    }
    .o_account_reports_totals_below_sections.o_js_account_report_parent_row_unfolded {
        .o_account_report_column_value {
            visibility: hidden;
        }
        td.number.o_foldable_total {
            border-bottom: none;
        }
    }
    td.o_foldable_total {
        font-weight: bold;
    }
    @mixin report_level($indent) {
        border-bottom: 1px solid #eee;
        > td.o_account_report_line_indent > span:last-child {
            margin-left: ($indent + 1) * 10px;
        }
        &.total {
            > td > span:last-child {
                margin-left: $indent * 10px;
            }
        }
    }
    .o_account_reports_level0 {
        & td {
            padding-top: 32px;
            span {
                top: unset;
            }
        }
        > td.o_account_report_line_indent.o_foldable_total > span:last-child {
            margin-left: 10px;
        }
    }
    .o_account_reports_level1 {
        @include report_level(1);
        font-weight: bold;
        border-bottom: 2px solid #bbb;
    }
    .o_account_reports_level2 {
        @include report_level(2);
        font-weight: bold;
        border-bottom: 1px solid #bbb;
    }
    .o_account_reports_level3 {
        @include report_level(3);
    }
    .o_account_reports_level4 {
        @include report_level(4);
    }
    .o_account_reports_level5 {
        @include report_level(5);
    }
    .o_account_reports_level6 {
        @include report_level(6);
    }
    .o_account_reports_level7 {
        @include report_level(7);
    }
    .o_account_reports_level8 {
        @include report_level(8);
    }
    .o_account_reports_level9 {
        @include report_level(9);
    }
    .o_account_reports_level10 {
        @include report_level(10);
    }
    .o_account_reports_level11 {
        @include report_level(11);
    }
    .o_account_reports_level12 {
        @include report_level(12);
    }
    .o_account_reports_level13 {
        @include report_level(13);
    }
    .o_account_reports_default_style {
        border-bottom: 1px solid #eee;
        > td.o_account_report_line_indent > tr:first-child > span:last-child {
            margin-left: 30px;
        }
        &.o_account_reports_domain_total {
            > td.o_account_report_line_indent > span:last-child {
                margin-left: 30px;
            }
        }
    }
    .o_account_followup_not_clicked {
        .o_account_followup_skip {
            display: inline-block;
        }
        .o_account_followup_done {
            display: none;
        }
    }
    .o_account_followup_clicked {
        .o_account_followup_skip {
            display: none;
        }
        .o_account_followup_done {
            display: inline-block;
        }
    }
    .o_account_reports_history {
        min-width: 300px;
    }
    .o_account_coa_column_contrast td:nth-child(4n-1),
    .o_account_coa_column_contrast td:nth-child(4n-2),
    td.o_account_coa_column_contrast:nth-child(4n-1),
    td.o_account_coa_column_contrast:nth-child(4n-2) {
        background-color: #FAFAFA;
        background-clip: padding-box;
    }
    .table-hover tbody tr:hover td {
        background-color: #F0F0F0;
        background-clip: padding-box;
    }
}

.o_form_view {
    .o_account_reports_no_print {
        div.o_account_reports_summary {
            cursor: pointer;
        }
        .o_account_reports_table {
            margin-bottom: 0px;
            tbody tr:not(.o_account_reports_level0):hover {
                background-color: #f0f0f0;
            }
        }
    }
}

.o_account-progress-bar-content {
    color: black;
    position: absolute;
    width: 100%;
}
.o_account-progress {
    position: relative;
}
.o_account_reports_history [summary="o_followup_letter_display_none"] {
    display: none;
}

.o_account_report_search {
    margin-left: 10px;
    margin-right: 10px;
    .o_account_report_select {
        min-width: 100px;
    }
}

// Filters lines
// -----------------------------------------
.o_reports_filter_input_wrapper {
    position: relative;
    float: right;
    width: 150px;
    margin-bottom: 20px;
    float: right;
        .searchIcon {
        position: absolute;
        right: 10px;
    }
}
    .o_account_reports_filter_input {
    border: none;
    border-bottom: 1px black solid;
}
    .o_account_reports_filtered_lines {
    display: none;
}

.o_account_reports_filter_journals {
    .dropdown-menu {
        overflow: auto;
        // 86.5px is the height of .o_control_panel
        max-height: calc(100vh - (86.5px + #{$o-navbar-height}));
    }
}

// Summary to be edited
// -----------------------------------------
.o_account_reports_body .o_account_reports_summary {
    display: inline-block;
    position: relative;


    .o_account_report_summary_placeholder{
        opacity: .5;
    }

    .o_account_report_summary {
        padding: 10px 0;

        &, > span, .o_input, .o_account_reports_edit_summary_pencil {
            transition: all .2s ease 0s;
        }
        > span {
            padding: 10px 0;
            display: block;
            line-height: 1;
        }
    }

    .o_input {
        border: none;
        padding: 10px;
    }

    .o_account_reports_edit_summary_pencil {
        @include o-position-absolute(20px, $left: 0);
        visibility: hidden;
        opacity: 0;
    }

    &:hover {
        .o_account_reports_edit_summary_pencil {
            visibility: visible;
            opacity: 1;
        }

        .o_account_report_summary .o_input, .o_account_report_summary span {
            padding-right: 0;
        }
    }
}

.o_account_reports_body {
    .alert a {
        cursor: pointer;
    }
}

.o_account_reports_summary_edit {
    padding-bottom: 25px;
    padding-top: 10px;

    textarea {
        border: 1px solid gray('600');
        resize: vertical;
        width: 100%;
    }
}

.o_financial_report_hover_popup {
    color: orange;
}

// Print mode report summary
// -----------------------------------------
p.o_account_reports_contact_info {
    min-height: 30px;
}

.o_account_reports_load_more {
    span.account_report_line_name {
        cursor: pointer;
        direction: rtl  !important;
    }
}

.o_country_specific_report_label {
    margin-left: 16px;
    background-color: white;
}

.o_account_reports_filter_currency {
    > .dropdown-menu {
        overflow-y: auto;
        max-height: calc(100vh - #{$o-navbar-height} - 100px);  // 100px for the control panel
    }
}


===== .\az_account_qr\static\src\scss\account_report_print.scss =====
.o_account_reports_summary_edit {
    display: none !important;
}
.caret {
    display: none !important;
}
.o_account_reports_body_print {
    background-color: white !important;
    color: black !important;
    font-size: 12px !important;
    .o_account_reports_header {
        padding: 10px;
        background-color: #eee;
    }
    .o_account_reports_page {
        color: black !important;
    }
    .o_account_reports_table {
        margin-bottom: 0px;
        font-size: 12px !important;
        > tbody > tr {
            /* fix thead overlapping http://github.com/wkhtmltopdf/wkhtmltopdf/issues/1524 */
            page-break-inside: avoid;
        }
    }
    .o_account_reports_level0, .o_account_reports_level1, .o_account_reports_level2, .o_account_reports_domain_total, .total {
        .text-muted {
            color: black !important;
        }
    }
    .o_foldable_total {
        color: black !important;
    }
}
a {
    color: inherit !important;
}
.print_only {
    display: block !important;
    &.row {
        display: flex !important;
    }
}
[name="summary"] {
    display: none;
}
.no_print {
    display: none !important;
}

.o_account_reports_page {
    .o_account_report_line_ellipsis, .o_account_report_name_ellipsis{
        position: relative;
        span {
            position: absolute;
        }
        > span, span[class^="o_account_reports_domain_line_"] {
            white-space: normal;
            overflow: visible;
            text-overflow: initial;
            position: relative;
        }
    }
}


===== .\az_account_reports\__init__.py =====
from . import models
from . import wizard
from . import report


===== .\az_account_reports\__manifest__.py =====
{
    "name": "Azbah - Accounting - Reports",
    "version": "15",
    "license": "LGPL-3",
    "category": "accounting",
    "depends": ["base", "account_accountant", "account_reports"],
    'assets': {
        'account_reports.assets_financial_report': [
            'az_account_reports/static/src/scss/account_financial_report.scss',
            'az_account_reports/static/src/scss/account_report_print.scss',
        ]},
    "data": [
        # 'security/ir.model.access.csv',
        'wizard/ledger_report_view.xml',
        'report/ledger_report.xml',
        'report/ledger_report_template.xml',
    ],
}


===== .\az_account_reports\models\account_aged_partner.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from odoo import models, api, fields, _
from odoo.tools.misc import format_date

from dateutil.relativedelta import relativedelta
from itertools import chain


class ReportAccountAgedPartner(models.AbstractModel):
    _inherit = "account.aged.partner"


    ####################################################
    # QUERIES
    ####################################################

    @api.model
    def _get_sql(self):
        options = self.env.context['report_options']
        query = ("""
            SELECT
                {move_line_fields},
                account_move_line.amount_currency as amount_currency,
                account_move_line.partner_id AS partner_id,
                concat( '[', partner.code,']', partner.name)  AS partner_name,
                COALESCE(trust_property.value_text, 'normal') AS partner_trust,
                COALESCE(account_move_line.currency_id, journal.currency_id) AS report_currency_id,
                account_move_line.payment_id AS payment_id,
                COALESCE(account_move_line.date_maturity, account_move_line.date) AS report_date,
                account_move_line.expected_pay_date AS expected_pay_date,
                move.move_type AS move_type,
                move.name AS move_name,
                move.ref AS move_ref,
                account.code || ' ' || account.name AS account_name,
                account.code AS account_code,""" + ','.join([("""
                CASE WHEN period_table.period_index = {i}
                THEN %(sign)s * ROUND((
                    account_move_line.balance - COALESCE(SUM(part_debit.amount), 0) + COALESCE(SUM(part_credit.amount), 0)
                ) * currency_table.rate, currency_table.precision)
                ELSE 0 END AS period{i}""").format(i=i) for i in range(6)]) + """
            FROM account_move_line
            JOIN account_move move ON account_move_line.move_id = move.id
            JOIN account_journal journal ON journal.id = account_move_line.journal_id
            JOIN account_account account ON account.id = account_move_line.account_id
            LEFT JOIN res_partner partner ON partner.id = account_move_line.partner_id
            LEFT JOIN ir_property trust_property ON (
                trust_property.res_id = 'res.partner,'|| account_move_line.partner_id
                AND trust_property.name = 'trust'
                AND trust_property.company_id = account_move_line.company_id
            )
            JOIN {currency_table} ON currency_table.company_id = account_move_line.company_id
            LEFT JOIN LATERAL (
                SELECT part.amount, part.debit_move_id
                FROM account_partial_reconcile part
                WHERE part.max_date <= %(date)s
            ) part_debit ON part_debit.debit_move_id = account_move_line.id
            LEFT JOIN LATERAL (
                SELECT part.amount, part.credit_move_id
                FROM account_partial_reconcile part
                WHERE part.max_date <= %(date)s
            ) part_credit ON part_credit.credit_move_id = account_move_line.id
            JOIN {period_table} ON (
                period_table.date_start IS NULL
                OR COALESCE(account_move_line.date_maturity, account_move_line.date) <= DATE(period_table.date_start)
            )
            AND (
                period_table.date_stop IS NULL
                OR COALESCE(account_move_line.date_maturity, account_move_line.date) >= DATE(period_table.date_stop)
            )
            WHERE account.internal_type = %(account_type)s
            AND account.exclude_from_aged_reports IS NOT TRUE
            GROUP BY account_move_line.id, partner.id, trust_property.id, journal.id, move.id, account.id,
                     period_table.period_index, currency_table.rate, currency_table.precision
            HAVING ROUND(account_move_line.balance - COALESCE(SUM(part_debit.amount), 0) + COALESCE(SUM(part_credit.amount), 0), currency_table.precision) != 0
        """).format(
            move_line_fields=self._get_move_line_fields('account_move_line'),
            currency_table=self.env['res.currency']._get_query_currency_table(options),
            period_table=self._get_query_period_table(options),
        )
        params = {
            'account_type': options['filter_account_type'],
            'sign': 1 if options['filter_account_type'] == 'receivable' else -1,
            'date': options['date']['date_to'],
        }
        result = self.env.cr.mogrify(query, params).decode(self.env.cr.connection.encoding)
        return result

    ####################################################
    # COLUMNS/LINES
    ####################################################
    @api.model
    def _get_column_details(self, options):
        columns = [
            self._header_column(),
            self._field_column('report_date'),
            self._custom_column(  # Avoid doing twice the sub-select in the view
                name=_('Total'),
                classes=['number'],
                formatter=self.format_value,
                getter=(
                    lambda v: v['period0'] + v['period1'] + v['period2'] + v['period3'] + v['period4'] + v['period5']),
                sortable=True,
            ),
            # self._field_column('account_name', name=_("Account"), ellipsis=True),
            # self._field_column('expected_pay_date'),

            # self._field_column('period0', name=_("As of: %s", format_date(self.env, options['date']['date_to']))),
            self._field_column('period1', sortable=True),
            self._field_column('period2', sortable=True),
            self._field_column('period3', sortable=True),
            self._field_column('period4', sortable=True),
            self._field_column('period5', sortable=True),

        ]

        if self.user_has_groups('base.group_multi_currency'):
            columns[2:2] = [
                self._field_column('amount_currency'),
                self._field_column('currency_id'),
            ]
        return columns


===== .\az_account_reports\models\account_general_ledger.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from odoo import models, fields, api, _
from odoo.tools.misc import format_date, DEFAULT_SERVER_DATE_FORMAT
from datetime import timedelta


class AccountGeneralLedgerReport(models.AbstractModel):
    _inherit = "account.general.ledger"

    @api.model
    def _get_query_amls(self, options, expanded_account, offset=None, limit=None):
        ''' Construct a query retrieving the account.move.lines when expanding a report line with or without the load
        more.
        :param options:             The report options.
        :param expanded_account:    The account.account record corresponding to the expanded line.
        :param offset:              The offset of the query (used by the load more).
        :param limit:               The limit of the query (used by the load more).
        :return:                    (query, params)
        '''

        unfold_all = options.get('unfold_all') or (self._context.get('print_mode') and not options['unfolded_lines'])

        # Get sums for the account move lines.
        # period: [('date' <= options['date_to']), ('date', '>=', options['date_from'])]
        if expanded_account:
            domain = [('account_id', '=', expanded_account.id)]
        elif unfold_all:
            domain = []
        elif options['unfolded_lines']:
            domain = [('account_id', 'in', [int(line[8:]) for line in options['unfolded_lines']])]

        new_options = self._force_strict_range(options)
        tables, where_clause, where_params = self._query_get(new_options, domain=domain)
        ct_query = self.env['res.currency']._get_query_currency_table(options)
        query = f'''
                   SELECT
                       account_move_line.id,
                       account_move_line.date,
                       account_move_line.date_maturity,
                       account_move_line.name,
                       account_move_line.ref,
                       account_move_line.company_id,
                       account_move_line.account_id,
                       account_move_line.payment_id,
                       account_move_line.partner_id,
                       account_move_line.currency_id,
                       account_move_line.amount_currency,
                       ROUND(account_move_line.debit * currency_table.rate, currency_table.precision)   AS debit,
                       ROUND(account_move_line.credit * currency_table.rate, currency_table.precision)  AS credit,
                       ROUND(account_move_line.balance * currency_table.rate, currency_table.precision) AS balance,
                       account_move_line__move_id.name         AS move_name,
                       company.currency_id                     AS company_currency_id,
                       partner.name                            AS partner_name,
                       account_move_line__move_id.move_type    AS move_type,
                       account.code                            AS account_code,
                       account.name                            AS account_name,
                       journal.code                            AS journal_code,
                       journal.name                            AS journal_name,
                       full_rec.name                           AS full_rec_name
                   FROM {tables}
                   LEFT JOIN {ct_query} ON currency_table.company_id = account_move_line.company_id
                   LEFT JOIN res_company company               ON company.id = account_move_line.company_id
                   LEFT JOIN res_partner partner               ON partner.id = account_move_line.partner_id
                   LEFT JOIN account_account account           ON account.id = account_move_line.account_id
                   LEFT JOIN account_journal journal           ON journal.id = account_move_line.journal_id
                   LEFT JOIN account_full_reconcile full_rec   ON full_rec.id = account_move_line.full_reconcile_id
                   WHERE {where_clause}
                   ORDER BY account_move_line.date, account_move_line.id
               '''

        if offset:
            query += ' OFFSET %s '
            where_params.append(offset)
        if limit:
            query += ' LIMIT %s '
            where_params.append(limit)

        if 165 in [int(line[8:]) for line in options['unfolded_lines']]:
            config_name = f"case when config.name is not null then concat('[',config.name,'] ',account_move_line.name) else account_move_line.name end as name"
            config_table = """left JOIN pos_session session  on session.name = account_move_line.name
            left join pos_config config on config.id=session.config_id WHERE"""
            query = query.replace('account_move_line.name', config_name)
            query = query.replace('WHERE', config_table)

        return query, where_params


===== .\az_account_reports\models\account_partner_ledger.py =====
===== .\az_account_reports\models\account_report.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from odoo import models, api, _, _lt, fields
from odoo.tools.misc import format_date
from datetime import timedelta

from collections import defaultdict


class ReportPartnerLedger(models.AbstractModel):
    _inherit = "account.report"

    def _format_lines_for_display(self, lines, options):
        """
        This method should be overridden in a report in order to apply specific formatting when printing
        the report lines.

        Used for example by the carryover functionnality in the generic tax report.
        :param lines: A list with the lines for this report.
        :param options: The options for this report.
        :return: The formatted list of lines
        """
        return lines

    def get_report_informations(self, options):
        '''
        return a dictionary of informations that will be needed by the js widget, manager_id, footnotes, html of report and searchview, ...
        '''
        options = self._get_options(options)
        self = self.with_context(self._set_context(
            options))  # For multicompany, when allowed companies are changed by options (such as aggregare_tax_unit)

        searchview_dict = {'options': options, 'context': self.env.context}
        # Check if report needs analytic
        if options.get('analytic_accounts') is not None:
            options['selected_analytic_account_names'] = [self.env['account.analytic.account'].browse(int(account)).name
                                                          for account in options['analytic_accounts']]
        if options.get('analytic_tags') is not None:
            options['selected_analytic_tag_names'] = [self.env['account.analytic.tag'].browse(int(tag)).name for tag in
                                                      options['analytic_tags']]
        if options.get('partner'):
            options['selected_partner_ids'] = [self.env['res.partner'].browse(int(partner)).name for partner in
                                               options['partner_ids']]
            options['selected_partner_categories'] = [self.env['res.partner.category'].browse(int(category)).name for
                                                      category in (options.get('partner_categories') or [])]

        # Check whether there are unposted entries for the selected period or not (if the report allows it)
        if options.get('date') and options.get('all_entries') is not None:
            date_to = options['date'].get('date_to') or options['date'].get('date') or fields.Date.today()
            period_domain = [('state', '=', 'draft'), ('date', '<=', date_to)]
            options['unposted_in_period'] = bool(self.env['account.move'].search_count(period_domain))

        if options.get('journals'):
            journals_selected = set(journal['id'] for journal in options['journals'] if journal.get('selected'))
            for journal_group in self.env['account.journal.group'].search([('company_id', '=', self.env.company.id)]):
                if journals_selected and journals_selected == set(self._get_filter_journals().ids) - set(
                        journal_group.excluded_journal_ids.ids):
                    options['name_journal_group'] = journal_group.name
                    break

        report_manager = self._get_report_manager(options)
        info = {'options': options,
                'context': self.env.context,
                'report_manager_id': report_manager.id,
                'footnotes': [{'id': f.id, 'line': f.line, 'text': f.text} for f in report_manager.footnotes_ids],
                'buttons': self._get_reports_buttons_in_sequence(options),
                'main_html': self.get_html(options),
                'searchview_html': self.env['ir.ui.view']._render_template(
                    self._get_templates().get('search_template', 'account_report.search_template'),
                    values=searchview_dict),
                }
        return info


===== .\az_account_reports\models\pos_order.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from odoo import models, api, fields, _
from odoo.tools.misc import format_date

from dateutil.relativedelta import relativedelta
from itertools import chain


class PosOrder(models.Model):
    _inherit = "pos.order"
    invoice_id = fields.Integer(related="account_move.id")


===== .\az_account_reports\models\__init__.py =====
from . import account_report
from . import account_aged_partner
from . import account_general_ledger
from . import account_partner_ledger

===== .\az_account_reports\report\ledger_report.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <record id="paperformat_stock_card_report" model="report.paperformat">
        <field name="name">ledger Report Template</field>
        <field name="default" eval="True"/>
        <field name="format">A4</field>
        <field name="orientation">Landscape</field>
        <field name="margin_top">40</field>
        <field name="margin_bottom">15</field>
        <field name="margin_left">5</field>
        <field name="margin_right">5</field>
        <field name="header_line" eval="False"/>
        <field name="header_spacing">40</field>
        <field name="dpi">90</field>
    </record>

    <record id="ledger_report_action_view" model="ir.actions.report">
        <field name="name">ledger Report</field>
        <field name="model">az.ledger.report</field>
        <field name="binding_model_id" ref="model_az_ledger_report"/>
        <field name="report_type">qweb-pdf</field>
        <field name="report_name">az_account_reports.ledger_report_template</field>
        <field name="report_file">az_account_reports.ledger_report_template</field>
        <field name="paperformat_id" ref="paperformat_stock_card_report"/>
        <field name="binding_type">report</field>
    </record>
</odoo>

===== .\az_account_reports\report\ledger_report_template.xml =====
===== .\az_account_reports\report\ledger_report_view.py =====
# -*- coding: utf-8 -*-

from odoo import models, api


class ledgerReportTemplate(models.AbstractModel):
    _name = 'report.az_account_reports.ledger_report_template'
    _description = 'Ledger Report Template'

    def get_ledger_detail(self, data):
        # Retrieve date range for filtering account moves
        company_id = data.get('company_id')
        start_date = data.get('date_from')
        end_date = data.get('date_to')

        # Depending on the report type, construct the account IDs SQL
        account_ids = data.get('account_ids')[0] if data.get('account_ids') else None
        account_ids_clause = ""
        params = [company_id]

        if account_ids:
            account_move_sql = f"""
                SELECT
                    account.name AS account_name,
                    partner.code,
                    partner.name AS name,
                    COALESCE(SUM(CASE WHEN aml.date BETWEEN '{start_date}' AND '{end_date}' THEN aml.debit ELSE 0 END), 0) AS period_debit,
                    COALESCE(SUM(CASE WHEN aml.date BETWEEN '{start_date}' AND '{end_date}' THEN aml.credit ELSE 0 END), 0) AS period_credit,
                    COALESCE(pd.total_debit_before, 0) AS before_period_debit,
                    COALESCE(pd.total_credit_before, 0) AS before_period_credit,
                    aml.account_id,
                    0 as final_debit,
                    0 as final_credit
                FROM
                    account_move_line aml
                    LEFT JOIN account_account account ON aml.account_id = account.id
                    LEFT JOIN res_partner partner ON aml.partner_id = partner.id
                    LEFT JOIN (
                        SELECT
                            partner_id,
                            account_id,
                            SUM(debit) AS total_debit_before,
                            SUM(credit) AS total_credit_before
                        FROM
                            account_move_line
                        WHERE
                            date < '{start_date}' 
                            AND (display_type NOT IN ('line_section', 'line_note') OR display_type IS NULL)
                            AND parent_state = 'posted'
                            AND (company_id IS NULL OR company_id = {company_id})
                        GROUP BY
                            partner_id, account_id
                    ) pd ON aml.partner_id = pd.partner_id AND aml.account_id = pd.account_id
                WHERE
                    (aml.display_type NOT IN ('line_section', 'line_note') OR aml.display_type IS NULL)
                    AND aml.parent_state = 'posted'
                    AND (aml.company_id IS NULL OR aml.company_id = {company_id})
                    AND (aml.date BETWEEN '{start_date}' AND '{end_date}' OR aml.date < '{start_date}')
                    AND aml.account_id = {account_ids}
                GROUP BY
                    aml.account_id, account.name, partner.id, partner.name, pd.total_debit_before, pd.total_credit_before
                ORDER BY
                    partner.code;
            """



        # Construct the SQL to fetch all relevant account moves
        else:
            account_move_sql = f"""
                SELECT
                    aa.name,
                    aa.code,
                    MIN(aml.id) AS id,
                    COUNT(aml.id) AS account_id_count,
                    MIN(aml.date) AS date,
                    SUM(CASE WHEN aml.date BETWEEN '{start_date}' AND '{end_date}' THEN aml.debit ELSE 0 END) AS period_debit,
                    SUM(CASE WHEN aml.date BETWEEN '{start_date}' AND '{end_date}' THEN aml.credit ELSE 0 END) AS period_credit,
                    SUM(CASE WHEN aml.date < '{start_date}' THEN aml.debit ELSE 0 END) AS before_period_debit,
                    SUM(CASE WHEN aml.date < '{start_date}' THEN aml.credit ELSE 0 END) AS before_period_credit,
                    SUM(aml.debit) AS final_debit,
                    SUM(aml.credit) AS final_credit,
                    aml.account_id
                FROM
                    account_move_line aml
                LEFT JOIN
                    account_account aa ON aml.account_id = aa.id
                LEFT JOIN
                    res_company rc ON aa.company_id = rc.id
                WHERE
                    (aml.display_type NOT IN ('line_section', 'line_note') OR aml.display_type IS NULL)
                    AND aml.parent_state = 'posted'
                    AND (aml.company_id IS NULL OR aml.company_id IN (%s))
                    {account_ids_clause}
                    AND (aml.date BETWEEN '{start_date}' AND '{end_date}' OR aml.date < '{start_date}')
                GROUP BY
                    aml.account_id,
                    aa.name,
                    aa.code
                ORDER BY
                    aa.code
            """
        # Execute the SQL query
        self.env.cr.execute(account_move_sql, tuple(params))
        account_moves = self.env.cr.dictfetchall()

        sums = {
            'period_debit': 0,
            'period_credit': 0,
            'before_period_debit': 0,
            'before_period_credit': 0,
        }
        for move in account_moves:
            sums['period_debit'] += move.get('period_debit', 0)
            sums['period_credit'] += move.get('period_credit', 0)
            sums['before_period_debit'] += move.get('before_debit', 0)
            sums['before_period_debit'] += move.get('before_credit', 0)

        account_moves.append(sums)

        return account_moves

    @api.model
    def _get_report_values(self, docids, data=None):
        date_from = data['form']['date_from']
        date_to = data['form']['date_to']
        company_id = data['form']['company_id'][0]
        account_ids = data['form']['account_ids']

        data = {
            'date_from': date_from,
            'date_to': date_to,
            'account_ids': account_ids,
            'company_id': company_id,
        }
        docargs = {
            'doc_model': 'az.ledger.report',
            'data': data,
            'get_ledger_detail': self.get_ledger_detail,
        }
        return docargs


===== .\az_account_reports\report\__init__.py =====
# -*- coding: utf-8 -*-

from . import ledger_report_view



===== .\az_account_reports\security\ir.model.access.csv =====
"id","name","model_id:id","group_id:id","perm_read","perm_write","perm_create","perm_unlink"
az_inout_report.access_inout_report,access_inout_report,az_account_reports.model_az_inout_report,base.group_user,1,1,1,1

===== .\az_account_reports\static\src\scss\account_financial_report.scss =====
.o_foldable_menu {
    &.o_closed_menu {
        display: none;
    }
    .o_open_menu {
        display: block;
    }
}
@mixin o-account-reports-i-fa-toggle {
    i.fa {
        visibility: hidden;
    }
    &:hover i.fa {
        visibility: visible;
    }
}

.o_form_view {
    .o_account_reports_page {
        .o_input {
            width: 100%;
        }
    }
}

.o_account_reports_page {
    background-color: $o-view-background-color;
    color: $o-main-text-color;

    .dropdown-toggle::after {
        display: none; // disable bootstrap's carret and do it manaully for positionning
    }

    padding-bottom: 125px;
    @include o-webclient-padding($top: $o-sheet-vpadding, $bottom: $o-sheet-vpadding);
    .o_account_reports_level0 {
        border-width: 3px;
        font-weight: bold;
        // border-top-style: $border-top-style;
        border-bottom-style: double;
    }
    .o_account_reports_table {
        margin-bottom: 128px;
        th.o_account_report_column_header {
            &.sortable::before {
                content: '\f07d';
                font-family: 'FontAwesome';
                color: lightgray;
            }
            &.up::before {
                content: '\f176';
                color: black;
            }
            &.down::before {
                content: '\f175';
                color: black;
            }
            &:first-child {
                border: none;
            }
        }
    }
    .account_report_line_name a {
        color:#008784;
    }
    a {
        cursor: pointer;
    }
    .o_reports_date_to {
        margin-left: 20px;
    }
    .o_account_report_line {
        span {
            white-space: nowrap;
        }
        position: relative;
    }
    // truncate span content and ad '...' if content width > span width
    .o_account_report_line_ellipsis, .o_account_report_name_ellipsis{
        position: relative;
        span {
            position: absolute;
        }
        > span, span[class^="o_account_reports_domain_line_"] {
            left: 0;
            right: 0;
            top: 0;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    }
    .o_account_report_name_ellipsis {
        min-width: 200px;
        max-width: 50%;
    }
    .ellipsis_width {
        direction: rtl !important;
        height: 0 !important;
        position: relative !important;
        white-space: initial !important;
        display: inline-block !important;
        visibility: hidden;

    }

    tr:focus {
        outline: none;

        .o_account_report_line_ellipsis, .o_account_report_name_ellipsis {
            span {
                white-space: initial;
                overflow: initial;
                z-index: 1;
            }
        }
    }
    // ----------------------------------------------------------------
    .o_account_report_summary {
        padding-left: 5px;
    }
    .o_account_reports_summary_edit {
        padding-bottom: 40px;
        padding-top: 15px;
    }
    .js_account_report_foldable {
        cursor: pointer;
    }
    .color-red {
        color: red !important;
    }
    .color-green {
        color: green !important;
    }
    .color-transparent {
        opacity: 0 !important;
    }
    .trust-partner {
        font-size: 0.8em;
        margin-left: 5px;
    }
    .print_only {
        display: none;
    }
    .o_account_reports_table {
        &#table_header_clone {
            position: fixed;
            tbody {
                visibility: collapse;
                tr {
                    border: none;
                }
            }
        }

        width: 100%;

        .number {
            text-align: right;
        }
        .text {
            text-align: left;
        }
        .date {
            text-align: center;
        }
        th{
            background-color: white;
            background-clip: padding-box;
            border: 1px solid #e6e6e6;
            .subtitle{
                font-weight:normal;
            }
        }
        .o_account_reports_header_hierarchy {
            th {
                border-bottom: none;
            }
            th:not(:first-child) {
                border: 1px solid #e6e6e6;
                border-collapse: separate;
                padding-right: 8px;
                padding-left: 8px;
            }
        }
    }
    .oe_link_reports {
        @extend .btn;
        @extend .btn-outline-secondary;
        @extend .btn-sm;
        line-height: 0.8;
        vertical-align: initial;
    }
    .folded {
        .oe_link_reports {
            display: none;
        }
    }
    p.o_account_reports_contact_info {
        min-height: 30px;
    }
    .o_input {
        width: 70%;
    }
    .o_account_reports_edit_summary_pencil {
        margin-left: -15px;
        position: absolute;
    }
    table > tbody > tr >  td ~ td{
        padding-left: 8px;
        padding-right: 8px;
    }
    table > tbody > tr >  td{
        vertical-align: top;
    }
    .o_account_reports_summary {
        margin-bottom: 20px;
        @include o-account-reports-i-fa-toggle;
    }
    .o_account_reports_unfolded td + td span {
        visibility: hidden;
    }
    div.o_account_reports_saved_summary {
        padding-left: 5px;
    }
    .o_account_reports_web_action, .o_change_trust,
    span.o_account_reports_web_action, div.o_account_reports_saved_summary span,
    td.o_account_reports_unfoldable, td.o_account_reports_foldable, span.partner_id, span.move_line_id, input[type=checkbox] {
        cursor: pointer;
    }
    p.footnote > .text {
        white-space: pre-wrap;
    }
    p.footnote > .o_account_reports_footnote_icons, p.o_account_reports_footnote_edit > .o_account_reports_footnote_icons {
        visibility: hidden;
    }
    p.footnote:hover > .o_account_reports_footnote_icons {
        visibility: visible;
    }
    .o_account_reports_footnote_icons {
        position: absolute;
        margin-left: 3px;
    }
    .o_account_reports_caret_icon {
        position: absolute;
        display: contents;
        .fa {
            position: absolute;
            bottom: 4px;
        }
    }
    .o_account_reports_domain_line_0 {
        margin-left: 0px;
    }
    .o_account_reports_domain_line_1 {
        margin-left: 15px;
    }
    .o_account_reports_domain_line_2 {
        margin-left: 30px;
    }
    .o_account_reports_domain_line_3 {
        margin-left: 40px;
    }
    .o_account_reports_domain_line_4 {
        margin-left: 50px;
    }
    .o_account_reports_domain_line_5 {
        margin-left: 60px;
    }
    .o_account_reports_domain_line_6 {
        margin-left: 70px;
    }
    .o_account_reports_domain_line_7 {
        margin-left: 80px;
    }
    .o_account_reports_domain_line_8 {
        margin-left: 90px;
    }
    .o_account_reports_domain_line_9 {
        margin-left: 100px;
    }
    .o_account_reports_domain_line_10 {
        margin-left: 110px;
    }
    .o_account_reports_domain_line_11 {
        margin-left: 120px;
    }
    .o_account_reports_domain_line_12 {
        margin-left: 130px;
    }
    .o_account_reports_domain_line_13 {
        margin-left: 140px;
    }
    tr.o_account_reports_domain_total {
        font-weight: bold;
    }
    tr.o_account_reports_initial_balance {
        > td > span:last-child {
            margin-left: 30px;
        }
    }
    tr.hierarchy_total {
        font-weight: bold;
    }
    b.o_account_reports_footnote_sup {
        margin-top: 10px;
        color: $o-main-text-color;
    }
    ul.o_account_reports_domain_dropdown {
        margin-left: 70px
    }
    .total {
        font-weight: bold;
    }
    .o_account_reports_level0, .o_account_reports_level1, .o_account_reports_level2, .o_account_reports_domain_total, .total {
        .text-muted {
            color: #666666 !important;
        }
    }
    .o_foldable_total {
        color: #666666 !important;
        &.color-red{
            color: red !important;
        }
        &.color-green{
            color: green !important;
        }
    }
    .o_account_reports_totals_below_sections.o_js_account_report_parent_row_unfolded {
        .o_account_report_column_value {
            visibility: hidden;
        }
        td.number.o_foldable_total {
            border-bottom: none;
        }
    }
    td.o_foldable_total {
        font-weight: bold;
    }
    @mixin report_level($indent) {
        border-bottom: 1px solid #eee;
        > td.o_account_report_line_indent > span:last-child {
            margin-left: ($indent + 1) * 10px;
        }
        &.total {
            > td > span:last-child {
                margin-left: $indent * 10px;
            }
        }
    }
    .o_account_reports_level0 {
        & td {
            padding-top: 32px;
            span {
                top: unset;
            }
        }
        > td.o_account_report_line_indent.o_foldable_total > span:last-child {
            margin-left: 10px;
        }
    }
    .o_account_reports_level1 {
        @include report_level(1);
        font-weight: bold;
        border-bottom: 2px solid #bbb;
    }
    .o_account_reports_level2 {
        @include report_level(2);
        font-weight: bold;
        border-bottom: 1px solid #bbb;
    }
    .o_account_reports_level3 {
        @include report_level(3);
    }
    .o_account_reports_level4 {
        @include report_level(4);
    }
    .o_account_reports_level5 {
        @include report_level(5);
    }
    .o_account_reports_level6 {
        @include report_level(6);
    }
    .o_account_reports_level7 {
        @include report_level(7);
    }
    .o_account_reports_level8 {
        @include report_level(8);
    }
    .o_account_reports_level9 {
        @include report_level(9);
    }
    .o_account_reports_level10 {
        @include report_level(10);
    }
    .o_account_reports_level11 {
        @include report_level(11);
    }
    .o_account_reports_level12 {
        @include report_level(12);
    }
    .o_account_reports_level13 {
        @include report_level(13);
    }
    .o_account_reports_default_style {
        border-bottom: 1px solid #eee;
        > td.o_account_report_line_indent > tr:first-child > span:last-child {
            margin-left: 30px;
        }
        &.o_account_reports_domain_total {
            > td.o_account_report_line_indent > span:last-child {
                margin-left: 30px;
            }
        }
    }
    .o_account_followup_not_clicked {
        .o_account_followup_skip {
            display: inline-block;
        }
        .o_account_followup_done {
            display: none;
        }
    }
    .o_account_followup_clicked {
        .o_account_followup_skip {
            display: none;
        }
        .o_account_followup_done {
            display: inline-block;
        }
    }
    .o_account_reports_history {
        min-width: 300px;
    }
    .o_account_coa_column_contrast td:nth-child(4n-1),
    .o_account_coa_column_contrast td:nth-child(4n-2),
    td.o_account_coa_column_contrast:nth-child(4n-1),
    td.o_account_coa_column_contrast:nth-child(4n-2) {
        background-color: #FAFAFA;
        background-clip: padding-box;
    }
    .table-hover tbody tr:hover td {
        background-color: #F0F0F0;
        background-clip: padding-box;
    }
}

.o_form_view {
    .o_account_reports_no_print {
        div.o_account_reports_summary {
            cursor: pointer;
        }
        .o_account_reports_table {
            margin-bottom: 0px;
            tbody tr:not(.o_account_reports_level0):hover {
                background-color: #f0f0f0;
            }
        }
    }
}

.o_account-progress-bar-content {
    color: black;
    position: absolute;
    width: 100%;
}
.o_account-progress {
    position: relative;
}
.o_account_reports_history [summary="o_followup_letter_display_none"] {
    display: none;
}

.o_account_report_search {
    margin-left: 10px;
    margin-right: 10px;
    .o_account_report_select {
        min-width: 100px;
    }
}

// Filters lines
// -----------------------------------------
.o_reports_filter_input_wrapper {
    position: relative;
    float: right;
    width: 150px;
    margin-bottom: 20px;
    float: right;
        .searchIcon {
        position: absolute;
        right: 10px;
    }
}
    .o_account_reports_filter_input {
    border: none;
    border-bottom: 1px black solid;
}
    .o_account_reports_filtered_lines {
    display: none;
}

.o_account_reports_filter_journals {
    .dropdown-menu {
        overflow: auto;
        // 86.5px is the height of .o_control_panel
        max-height: calc(100vh - (86.5px + #{$o-navbar-height}));
    }
}

// Summary to be edited
// -----------------------------------------
.o_account_reports_body .o_account_reports_summary {
    display: inline-block;
    position: relative;


    .o_account_report_summary_placeholder{
        opacity: .5;
    }

    .o_account_report_summary {
        padding: 10px 0;

        &, > span, .o_input, .o_account_reports_edit_summary_pencil {
            transition: all .2s ease 0s;
        }
        > span {
            padding: 10px 0;
            display: block;
            line-height: 1;
        }
    }

    .o_input {
        border: none;
        padding: 10px;
    }

    .o_account_reports_edit_summary_pencil {
        @include o-position-absolute(20px, $left: 0);
        visibility: hidden;
        opacity: 0;
    }

    &:hover {
        .o_account_reports_edit_summary_pencil {
            visibility: visible;
            opacity: 1;
        }

        .o_account_report_summary .o_input, .o_account_report_summary span {
            padding-right: 0;
        }
    }
}

.o_account_reports_body {
    .alert a {
        cursor: pointer;
    }
}

.o_account_reports_summary_edit {
    padding-bottom: 25px;
    padding-top: 10px;

    textarea {
        border: 1px solid gray('600');
        resize: vertical;
        width: 100%;
    }
}

.o_financial_report_hover_popup {
    color: orange;
}

// Print mode report summary
// -----------------------------------------
p.o_account_reports_contact_info {
    min-height: 30px;
}

.o_account_reports_load_more {
    span.account_report_line_name {
        cursor: pointer;
        direction: rtl  !important;
    }
}

.o_country_specific_report_label {
    margin-left: 16px;
    background-color: white;
}

.o_account_reports_filter_currency {
    > .dropdown-menu {
        overflow-y: auto;
        max-height: calc(100vh - #{$o-navbar-height} - 100px);  // 100px for the control panel
    }
}


===== .\az_account_reports\static\src\scss\account_report_print.scss =====
.o_account_reports_summary_edit {
    display: none !important;
}
.caret {
    display: none !important;
}
.o_account_reports_body_print {
    background-color: white !important;
    color: black !important;
    font-size: 16px !important;
    .o_account_reports_header {
        padding: 10px;
        background-color: #eee;
    }
    .o_account_reports_page {
        color: black !important;
    }
    .o_account_reports_table {
        margin-bottom: 0px;
        font-size: 16px !important;
        > tbody > tr {
            /* fix thead overlapping http://github.com/wkhtmltopdf/wkhtmltopdf/issues/1524 */
            page-break-inside: avoid;
        }
    }
    .o_account_reports_level0, .o_account_reports_level1, .o_account_reports_level2, .o_account_reports_domain_total, .total {
        .text-muted {
            color: black !important;
        }
    }
    .o_foldable_total {
        color: black !important;
    }
}
a {
    color: inherit !important;
}
.print_only {
    display: block !important;
    &.row {
        display: flex !important;
    }
}
[name="summary"] {
    display: none;
}
.no_print {
    display: none !important;
}

.o_account_reports_page {
    .o_account_report_line_ellipsis, .o_account_report_name_ellipsis{
        position: relative;
        span {
            position: absolute;
        }
        > span, span[class^="o_account_reports_domain_line_"] {
            white-space: normal;
            overflow: visible;
            text-overflow: initial;
            position: relative;
        }
    }
}


===== .\az_account_reports\views\report_financial.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>

        <template id="azbah_partner_ledger" inherit_id="account_reports.line_template" primary="True">
            <xpath expr="." position="before">
            </xpath>
        </template>
    </data>
</odoo>

===== .\az_account_reports\wizard\ledger_report.py =====
===== .\az_account_reports\wizard\ledger_report_view.xml =====
<?xml version="1.0" encoding="utf-8"?>

<odoo>
    <data>
        <record id="ledger_report_form" model="ir.ui.view">
            <field name="name">ledger.report.form.view</field>
            <field name="model">az.ledger.report</field>
            <field name="arch" type="xml">
                <form string="Ledger Report">
                    <sheet>
                        <group>
                            <group>
                                <field name="company_id"/>
                            </group>
                            <group>
                                <field name="date_from"/>
                                <field name="date_to"/>
                            </group>
                        </group>
                        <div>
                            <group>
                                <field name="account_ids">
                                    <tree>
                                        <field name="code" string="Code"/>
                                        <field name="name"/>
                                    </tree>
                                </field>
                            </group>
                        </div>
                    </sheet>
                    <footer>
                        <button name="get_ledger_report" type="object" string="Print" class="btn btn-primary"/>
                        <button name="get_ledger_report_xls" type="object" string="Print Excel" class="btn btn-primary"/>
                        <button string="Cancel" class="btn-secondary" special="cancel"/>
                    </footer>
                </form>
            </field>
        </record>

        <record id="ledger_report_action_form" model="ir.actions.act_window">
            <field name="name">Ledger Report</field>
            <field name="res_model">az.ledger.report</field>
            <field name="view_mode">form</field>
            <field name="target">new</field>
        </record>

        <menuitem id="ledger_report_menu"
                  name="Ledger Report Filtered💵"
                  parent="account_reports.account_reports_audit_reports_menu"
                  action="ledger_report_action_form"
                  sequence="10"/>
    </data>
</odoo>

===== .\az_account_reports\wizard\__init__.py =====
# -*- coding: utf-8 -*-

from . import ledger_report

===== .\az_coupons\__init__.py =====
# -*- coding: utf-8 -*-
from . import models

===== .\az_coupons\__manifest__.py =====
{
    "name": "AZ - Coupons",
    "version": "15",
    "license": "LGPL-3",
    "category": "sales",
    "depends": ["sale","purchase"]
    , "data": [
    'views/coupon_purchase.xml',
    'views/detailed_operations.xml',
    'views/res_config_settings_views.xml',
    'views/ir_sequence_view.xml',
    'security/coupon_purchase.xml',
]
}


===== .\az_coupons\models\coupon_config.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from odoo import fields, models


class ResConfigSettings(models.TransientModel):
    _inherit = 'res.config.settings'
    coupon_product_id = fields.Many2one('product.product', string='Voucher Product', help='Product used for paper (voucher)')
    coupon_book_ids = fields.Many2many("coupon.book", help='Number of vouchers in each book')

    def get_values(self):
        res = super(ResConfigSettings, self).get_values()
        ICPSudo = self.env['ir.config_parameter'].sudo()
        coupon_product_id = ICPSudo.get_param('az_coupons.coupon_product_id')
        coupon_book_ids = ICPSudo.get_param('az_coupons.coupon_book_ids')
        res.update(
            coupon_product_id=int(coupon_product_id) if coupon_product_id else False,
            coupon_book_ids=[(6, 0, [int(_) for _ in coupon_book_ids.split(',')] )] if coupon_book_ids else False
        )
        return res

    def set_values(self):
        super(ResConfigSettings, self).set_values()
        ICPSudo = self.env['ir.config_parameter'].sudo()
        ICPSudo.set_param("az_coupons.coupon_product_id", self.coupon_product_id.id)
        ICPSudo.set_param("az_coupons.coupon_book_ids", ','.join(map(str, self.coupon_book_ids.ids)))


class CouponBook(models.Model):
    _name = "coupon.book"
    product_id = fields.Many2one('product.product', string='Voucher Product', help='Product used for paper (voucher)')
    paper_count = fields.Integer(string='Paper Count', help='Number of vouchers in each book')




===== .\az_coupons\models\coupon_purchase.py =====
===== .\az_coupons\models\purchase_order.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from odoo import fields, models


class PurchaseOrder(models.Model):
    _inherit = "purchase.order"
    coupon_purchase_id = fields.Many2one('coupon.purchase', string="Coupon Purchase")



===== .\az_coupons\models\stock_picking.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from odoo import fields, models, _, api
from odoo.tools.float_utils import float_compare, float_is_zero, float_round
from odoo.exceptions import UserError


class StockMove(models.Model):
    _inherit = "stock.move"
    coupon_purchase_id = fields.Many2one('coupon.purchase', string="coupon Purchase")

    def update_move_lines_commands(self, move_lines_commands):
        indi = 0
        for line in self.picking_id.move_ids_without_package:
            if line.product_id == self.product_id:
                break
            indi += 1
        paper_count = self.picking_id.move_ids_without_package[indi].product_packaging_id.qty
        indi = 0
        coupon_serial = int(self.next_serial) * int(paper_count) - (paper_count - 1)
        for line in move_lines_commands:
            line[2]['lot_name'] = coupon_serial + indi
            indi += 1
        return move_lines_commands


class StockPicking(models.Model):
    _inherit = "stock.picking"
    coupon_purchase_id = fields.Many2one('coupon.purchase', string="coupon Purchase")

    def action_put_in_pack(self):
        self.ensure_one()
        if self.state not in ('done', 'cancel'):
            picking_move_lines = self.move_line_ids
            if (
                    not self.picking_type_id.show_reserved
                    and not self.immediate_transfer
                    and not self.env.context.get('barcode_view')
            ):
                picking_move_lines = self.move_line_nosuggest_ids

            move_line_ids = picking_move_lines.filtered(lambda ml:
                                                        float_compare(ml.qty_done, 0.0,
                                                                      precision_rounding=ml.product_uom_id.rounding) > 0
                                                        and not ml.result_package_id
                                                        )
            if not move_line_ids:
                move_line_ids = picking_move_lines.filtered(lambda ml: float_compare(ml.product_uom_qty, 0.0,
                                                                                     precision_rounding=ml.product_uom_id.rounding) > 0 and float_compare(
                    ml.qty_done, 0.0,
                    precision_rounding=ml.product_uom_id.rounding) == 0)
            if move_line_ids:
                res = self._pre_put_in_pack_hook(move_line_ids)
                if not res:
                    # 👇 ______ (｡◔‿◔｡) ________
                    res = self._put_in_pack_multi(move_line_ids)
                return res
            else:
                raise UserError(_("Please add 'Done' quantities to the picking to create a new pack."))

    def _put_in_pack_multi(self, move_line_ids, create_package_level=True):
        #  /\_/\
        # ( ◕‿◕ )
        #  >   <

        # Calculate the number of packages needed
        demand = int(self.move_ids_without_package[0].quantity_done)
        paper_count = int(self.move_ids_without_package[0].product_packaging_id.qty)
        num_packages_needed = int(demand / paper_count)
        move_line_ids = [move_line_ids[i:i + paper_count] for i in range(0, len(move_line_ids), paper_count)]
        for i in range(num_packages_needed):
            pack = self._put_in_pack(move_line_ids[i], create_package_level=create_package_level)
        return pack

    def button_validate(self):
        p = self.package_level_ids
        if not p:
            self.add_packs()
        res = super(StockPicking, self).button_validate()
        # self.remove_extra_packs()
        return True
    # def remove_extra_packs(self):
    #     lot_ids = self.move_line_ids_without_package.mapped('lot_id')
    #     x=lot_ids
    def add_packs(self):
        lines = []
        for line in self.move_line_ids_without_package:
            line_dict = (0, 0, {
                'package_id': self.env['stock.quant.package'].search([('name', '=', line.lot_id.name)]).id,
                'location_id': self.location_id.id,
                'location_dest_id': self.location_dest_id.id,
                'is_done': True,
            })
            lines.append(line_dict)
        self.write({'package_level_ids': lines})


class StockMoveLine(models.Model):
    _inherit = 'stock.picking'

    @api.onchange('move_line_ids_without_package')
    def _onchange_lot_id(self):
        if self.move_line_ids:
            first_line = self.move_line_ids[0]
            available_lots = self.env['stock.quant'].search([('product_id', '=', first_line.product_id.id),
                                                             ('location_id', '=', first_line.location_id.id),
                                                             ('quantity', '>', 0),
                                                             ('lot_id', '>', first_line.lot_id.id)
                                                             ],order='lot_id').mapped("lot_id")
            try:
                for i in range(1, len(self.move_line_ids)):
                    self.move_line_ids[i].lot_id = self.env['stock.production.lot'].search(
                        [('name', '=', str(available_lots[i - 1].name))])
            except:
                pass

===== .\az_coupons\models\xxaccount_move.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from odoo import fields, models


class AccountMove(models.Model):
    _inherit = "account.move"
    purchase_order_id = fields.Many2one('purchase.order', string="Purchase Order")
    coupon_purchase_id = fields.Many2one(related='purchase_order_id.coupon_purchase_id', string="coupon Purchase",
                                        store=True)
    purchase_delegate_id = fields.Many2one('hr.employee', string="Delegate")


class AccountMoveLine(models.Model):
    _inherit = "account.move.line"
    note = fields.Text()


===== .\az_coupons\models\xxres_partner.py =====
# -*- coding: utf-8 -*-
from odoo import models, api


class ResPartner(models.Model):
    _inherit = "res.partner"

    # When Creating a new vendor, assign its code
    @api.model_create_multi
    def create(self, vals_list):
        source = self.env.context.get('source')
        if source == 'vendor':
            last_vendor = self.env['res.partner'].search([('code', 'ilike', 'v%')], order='id desc', limit=1)
            if last_vendor:
                new_code = 'V'+str(int(last_vendor.code[1:]) + 1).zfill(4)
                vals_list[0]['code'] = new_code
                vals_list[0]['company_type'] = 'company'
                vals_list[0]['is_company'] = True
        return super().create(vals_list)


===== .\az_coupons\models\__init__.py =====
# -*- coding: utf-8 -*-
from . import coupon_purchase
from . import purchase_order
from . import stock_picking
from . import coupon_config

===== .\az_coupons\report\batch_purchase.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
        <record id="report_coupon_purchase" model="ir.actions.report">
            <field name="name">coupon Purchase Order Report</field>
            <field name="model">coupon.purchase</field>
            <field name="report_type">qweb-pdf</field>
            <field name="report_name">azbah_accounting.report_azbah_coupon_purchase</field>
            <field name="print_report_name">'coupon Purchase Order'</field>
            <field name="binding_model_id" ref="az_account_coupon_purchase.model_coupon_purchase"/>
        </record>
</odoo>

===== .\az_coupons\report\batch_purchase_template.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>
        <template id="report_azbah_coupon_purchase">
            <t t-call="web.html_container">
                <t t-foreach="docs" t-as="o">
                    <t t-call="web.external_layout">
                        <div class="page">
                            <div class="row mt32">
                                <div class="col-xs-12"
                                     style="text-align:center;font-size: larger;font-weight: bolder;background-color:#C8C8C8">
                                    تقرير مشتريات مندوب
                                </div>
                            </div>
                            <div class="row mt16">
                                <div class="col-xs-6">
                                    <p>Date:
                                        <span t-field="o.date"/>
                                    </p>

                                    <p>Serial:
                                        <span t-field="o.name"/>
                                    </p>

                                    <p>Delegate:
                                        <span t-field="o.delegate_id.name"/>
                                    </p>
                                </div>
                                <div class="col-xs-6">
                                    <br/>
                                    <p>
                                        <strong>Total:
                                            <span t-field="o.total"/>
                                        </strong>
                                    </p>
                                </div>
                            </div>
                            <table class="table table-bordered" style="margin-top: 20px">
                                <tbody>
                                    <t t-foreach="o.line_ids" t-as="line">
                                        <t t-if="line.product_id.name">
                                            <tr>
                                                <td>
                                                    <span t-field="line.product_id.name"/>
                                                </td>
                                                <td>
                                                    <span t-field="line.quantity"/>
                                                </td>
                                                <td>
                                                    <span t-field="line.price"/>
                                                </td>
                                                <td>
                                                    <span t-field="line.price_subtotal"/>
                                                </td>
                                                <td>
                                                    <span t-field="line.price_subtotal_with_tax"/>
                                                </td>
                                                <td>
                                                    <span t-field="line.note"/>
                                                </td>
                                            </tr>
                                        </t>
                                        <t t-else="">

                                            <tr style="text-align:center;font-size: larger;font-weight: bolder;background-color:#C8C8C8">
                                                <td colspan="5">
                                                    <span t-field="line.vendor_id.name"/>
                                                </td>
                                                <td>
                                                    <span t-field="line.price_subtotal_with_tax"/>
                                                </td>
                                            </tr>

                                            <tr>
                                                <th>Product</th>
                                                <th>Quantity</th>
                                                <th>Price</th>
                                                <th>Sub Total</th>
                                                <th>With Tax</th>
                                                <th>Note</th>
                                            </tr>
                                        </t>
                                    </t>
                                </tbody>
                            </table>
                        </div>
                    </t>
                </t>
            </t>
        </template>
    </data>
</odoo>


===== .\az_coupons\security\coupon_purchase.xml =====
<odoo>
    <data>
        <!-- Define the access rights for the model -->
        <record model="ir.model.access" id="model_coupon_purchase_access">
            <field name="name">coupon.purchase</field>
            <field name="model_id" ref="model_coupon_purchase"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_unlink" eval="True"/>
            <field name="group_id" ref="account.group_account_invoice"/>

        </record>

        <record model="ir.model.access" id="model_coupon_book_access">
            <field name="name">coupon.book</field>
            <field name="model_id" ref="model_coupon_book"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_unlink" eval="True"/>
            <field name="group_id" ref="account.group_account_invoice"/>
        </record>

    </data>
</odoo>


===== .\az_coupons\static\src\scss\account_financial_report.scss =====
.o_foldable_menu {
    &.o_closed_menu {
        display: none;
    }
    .o_open_menu {
        display: block;
    }
}
@mixin o-account-reports-i-fa-toggle {
    i.fa {
        visibility: hidden;
    }
    &:hover i.fa {
        visibility: visible;
    }
}

.o_form_view {
    .o_account_reports_page {
        .o_input {
            width: 100%;
        }
    }
}

.o_account_reports_page {
    background-color: $o-view-background-color;
    color: $o-main-text-color;

    .dropdown-toggle::after {
        display: none; // disable bootstrap's carret and do it manaully for positionning
    }

    padding-bottom: 125px;
    @include o-webclient-padding($top: $o-sheet-vpadding, $bottom: $o-sheet-vpadding);
    .o_account_reports_level0 {
        border-width: 3px;
        font-weight: bold;
        // border-top-style: $border-top-style;
        border-bottom-style: double;
    }
    .o_account_reports_table {
        margin-bottom: 128px;
        th.o_account_report_column_header {
            &.sortable::before {
                content: '\f07d';
                font-family: 'FontAwesome';
                color: lightgray;
            }
            &.up::before {
                content: '\f176';
                color: black;
            }
            &.down::before {
                content: '\f175';
                color: black;
            }
            &:first-child {
                border: none;
            }
        }
    }
    .account_report_line_name a {
        color:#008784;
    }
    a {
        cursor: pointer;
    }
    .o_reports_date_to {
        margin-left: 20px;
    }
    .o_account_report_line {
        span {
            white-space: nowrap;
        }
        position: relative;
    }
    // truncate span content and ad '...' if content width > span width
    .o_account_report_line_ellipsis, .o_account_report_name_ellipsis{
        position: relative;
        span {
            position: absolute;
        }
        > span, span[class^="o_account_reports_domain_line_"] {
            left: 0;
            right: 0;
            top: 0;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    }
    .o_account_report_name_ellipsis {
        min-width: 200px;
        max-width: 50%;
    }
    .ellipsis_width {
        direction: rtl !important;
        height: 0 !important;
        position: relative !important;
        white-space: initial !important;
        display: inline-block !important;
        visibility: hidden;

    }

    tr:focus {
        outline: none;

        .o_account_report_line_ellipsis, .o_account_report_name_ellipsis {
            span {
                white-space: initial;
                overflow: initial;
                z-index: 1;
            }
        }
    }
    // ----------------------------------------------------------------
    .o_account_report_summary {
        padding-left: 5px;
    }
    .o_account_reports_summary_edit {
        padding-bottom: 40px;
        padding-top: 15px;
    }
    .js_account_report_foldable {
        cursor: pointer;
    }
    .color-red {
        color: red !important;
    }
    .color-green {
        color: green !important;
    }
    .color-transparent {
        opacity: 0 !important;
    }
    .trust-partner {
        font-size: 0.8em;
        margin-left: 5px;
    }
    .print_only {
        display: none;
    }
    .o_account_reports_table {
        &#table_header_clone {
            position: fixed;
            tbody {
                visibility: collapse;
                tr {
                    border: none;
                }
            }
        }

        width: 100%;

        .number {
            text-align: right;
        }
        .text {
            text-align: left;
        }
        .date {
            text-align: center;
        }
        th{
            background-color: white;
            background-clip: padding-box;
            border: 1px solid #e6e6e6;
            .subtitle{
                font-weight:normal;
            }
        }
        .o_account_reports_header_hierarchy {
            th {
                border-bottom: none;
            }
            th:not(:first-child) {
                border: 1px solid #e6e6e6;
                border-collapse: separate;
                padding-right: 8px;
                padding-left: 8px;
            }
        }
    }
    .oe_link_reports {
        @extend .btn;
        @extend .btn-outline-secondary;
        @extend .btn-sm;
        line-height: 0.8;
        vertical-align: initial;
    }
    .folded {
        .oe_link_reports {
            display: none;
        }
    }
    p.o_account_reports_contact_info {
        min-height: 30px;
    }
    .o_input {
        width: 70%;
    }
    .o_account_reports_edit_summary_pencil {
        margin-left: -15px;
        position: absolute;
    }
    table > tbody > tr >  td ~ td{
        padding-left: 8px;
        padding-right: 8px;
    }
    table > tbody > tr >  td{
        vertical-align: top;
    }
    .o_account_reports_summary {
        margin-bottom: 20px;
        @include o-account-reports-i-fa-toggle;
    }
    .o_account_reports_unfolded td + td span {
        visibility: hidden;
    }
    div.o_account_reports_saved_summary {
        padding-left: 5px;
    }
    .o_account_reports_web_action, .o_change_trust,
    span.o_account_reports_web_action, div.o_account_reports_saved_summary span,
    td.o_account_reports_unfoldable, td.o_account_reports_foldable, span.partner_id, span.move_line_id, input[type=checkbox] {
        cursor: pointer;
    }
    p.footnote > .text {
        white-space: pre-wrap;
    }
    p.footnote > .o_account_reports_footnote_icons, p.o_account_reports_footnote_edit > .o_account_reports_footnote_icons {
        visibility: hidden;
    }
    p.footnote:hover > .o_account_reports_footnote_icons {
        visibility: visible;
    }
    .o_account_reports_footnote_icons {
        position: absolute;
        margin-left: 3px;
    }
    .o_account_reports_caret_icon {
        position: absolute;
        display: contents;
        .fa {
            position: absolute;
            bottom: 4px;
        }
    }
    .o_account_reports_domain_line_0 {
        margin-left: 0px;
    }
    .o_account_reports_domain_line_1 {
        margin-left: 15px;
    }
    .o_account_reports_domain_line_2 {
        margin-left: 30px;
    }
    .o_account_reports_domain_line_3 {
        margin-left: 40px;
    }
    .o_account_reports_domain_line_4 {
        margin-left: 50px;
    }
    .o_account_reports_domain_line_5 {
        margin-left: 60px;
    }
    .o_account_reports_domain_line_6 {
        margin-left: 70px;
    }
    .o_account_reports_domain_line_7 {
        margin-left: 80px;
    }
    .o_account_reports_domain_line_8 {
        margin-left: 90px;
    }
    .o_account_reports_domain_line_9 {
        margin-left: 100px;
    }
    .o_account_reports_domain_line_10 {
        margin-left: 110px;
    }
    .o_account_reports_domain_line_11 {
        margin-left: 120px;
    }
    .o_account_reports_domain_line_12 {
        margin-left: 130px;
    }
    .o_account_reports_domain_line_13 {
        margin-left: 140px;
    }
    tr.o_account_reports_domain_total {
        font-weight: bold;
    }
    tr.o_account_reports_initial_balance {
        > td > span:last-child {
            margin-left: 30px;
        }
    }
    tr.hierarchy_total {
        font-weight: bold;
    }
    b.o_account_reports_footnote_sup {
        margin-top: 10px;
        color: $o-main-text-color;
    }
    ul.o_account_reports_domain_dropdown {
        margin-left: 70px
    }
    .total {
        font-weight: bold;
    }
    .o_account_reports_level0, .o_account_reports_level1, .o_account_reports_level2, .o_account_reports_domain_total, .total {
        .text-muted {
            color: #666666 !important;
        }
    }
    .o_foldable_total {
        color: #666666 !important;
        &.color-red{
            color: red !important;
        }
        &.color-green{
            color: green !important;
        }
    }
    .o_account_reports_totals_below_sections.o_js_account_report_parent_row_unfolded {
        .o_account_report_column_value {
            visibility: hidden;
        }
        td.number.o_foldable_total {
            border-bottom: none;
        }
    }
    td.o_foldable_total {
        font-weight: bold;
    }
    @mixin report_level($indent) {
        border-bottom: 1px solid #eee;
        > td.o_account_report_line_indent > span:last-child {
            margin-left: ($indent + 1) * 10px;
        }
        &.total {
            > td > span:last-child {
                margin-left: $indent * 10px;
            }
        }
    }
    .o_account_reports_level0 {
        & td {
            padding-top: 32px;
            span {
                top: unset;
            }
        }
        > td.o_account_report_line_indent.o_foldable_total > span:last-child {
            margin-left: 10px;
        }
    }
    .o_account_reports_level1 {
        @include report_level(1);
        font-weight: bold;
        border-bottom: 2px solid #bbb;
    }
    .o_account_reports_level2 {
        @include report_level(2);
        font-weight: bold;
        border-bottom: 1px solid #bbb;
    }
    .o_account_reports_level3 {
        @include report_level(3);
    }
    .o_account_reports_level4 {
        @include report_level(4);
    }
    .o_account_reports_level5 {
        @include report_level(5);
    }
    .o_account_reports_level6 {
        @include report_level(6);
    }
    .o_account_reports_level7 {
        @include report_level(7);
    }
    .o_account_reports_level8 {
        @include report_level(8);
    }
    .o_account_reports_level9 {
        @include report_level(9);
    }
    .o_account_reports_level10 {
        @include report_level(10);
    }
    .o_account_reports_level11 {
        @include report_level(11);
    }
    .o_account_reports_level12 {
        @include report_level(12);
    }
    .o_account_reports_level13 {
        @include report_level(13);
    }
    .o_account_reports_default_style {
        border-bottom: 1px solid #eee;
        > td.o_account_report_line_indent > tr:first-child > span:last-child {
            margin-left: 30px;
        }
        &.o_account_reports_domain_total {
            > td.o_account_report_line_indent > span:last-child {
                margin-left: 30px;
            }
        }
    }
    .o_account_followup_not_clicked {
        .o_account_followup_skip {
            display: inline-block;
        }
        .o_account_followup_done {
            display: none;
        }
    }
    .o_account_followup_clicked {
        .o_account_followup_skip {
            display: none;
        }
        .o_account_followup_done {
            display: inline-block;
        }
    }
    .o_account_reports_history {
        min-width: 300px;
    }
    .o_account_coa_column_contrast td:nth-child(4n-1),
    .o_account_coa_column_contrast td:nth-child(4n-2),
    td.o_account_coa_column_contrast:nth-child(4n-1),
    td.o_account_coa_column_contrast:nth-child(4n-2) {
        background-color: #FAFAFA;
        background-clip: padding-box;
    }
    .table-hover tbody tr:hover td {
        background-color: #F0F0F0;
        background-clip: padding-box;
    }
}

.o_form_view {
    .o_account_reports_no_print {
        div.o_account_reports_summary {
            cursor: pointer;
        }
        .o_account_reports_table {
            margin-bottom: 0px;
            tbody tr:not(.o_account_reports_level0):hover {
                background-color: #f0f0f0;
            }
        }
    }
}

.o_account-progress-bar-content {
    color: black;
    position: absolute;
    width: 100%;
}
.o_account-progress {
    position: relative;
}
.o_account_reports_history [summary="o_followup_letter_display_none"] {
    display: none;
}

.o_account_report_search {
    margin-left: 10px;
    margin-right: 10px;
    .o_account_report_select {
        min-width: 100px;
    }
}

// Filters lines
// -----------------------------------------
.o_reports_filter_input_wrapper {
    position: relative;
    float: right;
    width: 150px;
    margin-bottom: 20px;
    float: right;
        .searchIcon {
        position: absolute;
        right: 10px;
    }
}
    .o_account_reports_filter_input {
    border: none;
    border-bottom: 1px black solid;
}
    .o_account_reports_filtered_lines {
    display: none;
}

.o_account_reports_filter_journals {
    .dropdown-menu {
        overflow: auto;
        // 86.5px is the height of .o_control_panel
        max-height: calc(100vh - (86.5px + #{$o-navbar-height}));
    }
}

// Summary to be edited
// -----------------------------------------
.o_account_reports_body .o_account_reports_summary {
    display: inline-block;
    position: relative;


    .o_account_report_summary_placeholder{
        opacity: .5;
    }

    .o_account_report_summary {
        padding: 10px 0;

        &, > span, .o_input, .o_account_reports_edit_summary_pencil {
            transition: all .2s ease 0s;
        }
        > span {
            padding: 10px 0;
            display: block;
            line-height: 1;
        }
    }

    .o_input {
        border: none;
        padding: 10px;
    }

    .o_account_reports_edit_summary_pencil {
        @include o-position-absolute(20px, $left: 0);
        visibility: hidden;
        opacity: 0;
    }

    &:hover {
        .o_account_reports_edit_summary_pencil {
            visibility: visible;
            opacity: 1;
        }

        .o_account_report_summary .o_input, .o_account_report_summary span {
            padding-right: 0;
        }
    }
}

.o_account_reports_body {
    .alert a {
        cursor: pointer;
    }
}

.o_account_reports_summary_edit {
    padding-bottom: 25px;
    padding-top: 10px;

    textarea {
        border: 1px solid gray('600');
        resize: vertical;
        width: 100%;
    }
}

.o_financial_report_hover_popup {
    color: orange;
}

// Print mode report summary
// -----------------------------------------
p.o_account_reports_contact_info {
    min-height: 30px;
}

.o_account_reports_load_more {
    span.account_report_line_name {
        cursor: pointer;
        direction: rtl  !important;
    }
}

.o_country_specific_report_label {
    margin-left: 16px;
    background-color: white;
}

.o_account_reports_filter_currency {
    > .dropdown-menu {
        overflow-y: auto;
        max-height: calc(100vh - #{$o-navbar-height} - 100px);  // 100px for the control panel
    }
}


===== .\az_coupons\static\src\scss\account_report_print.scss =====
.o_account_reports_summary_edit {
    display: none !important;
}
.caret {
    display: none !important;
}
.o_account_reports_body_print {
    background-color: white !important;
    color: black !important;
    font-size: 12px !important;
    .o_account_reports_header {
        padding: 10px;
        background-color: #eee;
    }
    .o_account_reports_page {
        color: black !important;
    }
    .o_account_reports_table {
        margin-bottom: 0px;
        font-size: 12px !important;
        > tbody > tr {
            /* fix thead overlapping http://github.com/wkhtmltopdf/wkhtmltopdf/issues/1524 */
            page-break-inside: avoid;
        }
    }
    .o_account_reports_level0, .o_account_reports_level1, .o_account_reports_level2, .o_account_reports_domain_total, .total {
        .text-muted {
            color: black !important;
        }
    }
    .o_foldable_total {
        color: black !important;
    }
}
a {
    color: inherit !important;
}
.print_only {
    display: block !important;
    &.row {
        display: flex !important;
    }
}
[name="summary"] {
    display: none;
}
.no_print {
    display: none !important;
}

.o_account_reports_page {
    .o_account_report_line_ellipsis, .o_account_report_name_ellipsis{
        position: relative;
        span {
            position: absolute;
        }
        > span, span[class^="o_account_reports_domain_line_"] {
            white-space: normal;
            overflow: visible;
            text-overflow: initial;
            position: relative;
        }
    }
}


===== .\az_coupons\views\account_move.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>

        <!-- VIEWS -->
        <record id="azbah_account_move_tree" model="ir.ui.view">
            <field name="name">azbah.account.move.tree</field>
            <field name="model">account.move</field>
            <field name="mode">extension</field>
            <field name="inherit_id" ref="account.view_in_invoice_bill_tree"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='ref']" position="before">
                    <field name="purchase_order_id"/>
                    <field name="coupon_purchase_id"/>
                    <field name="purchase_delegate_id"/>
                </xpath>
            </field>
        </record>

        <record id="azbah_account_move_form" model="ir.ui.view">
            <field name="name">azbah.account.move.form</field>
            <field name="model">account.move</field>
            <field name="mode">extension</field>
            <field name="inherit_id" ref="account.view_move_form"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='payment_reference']" position="after">
                    <field name="purchase_order_id"/>
                    <field name="coupon_purchase_id"/>
                    <field name="purchase_delegate_id"/>
                </xpath>

                <xpath expr="//field[@name='price_subtotal']" position="before">
                    <field name="note"/>
                </xpath>
            </field>
        </record>
    </data>
</odoo>


===== .\az_coupons\views\coupon_config.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>

    <record id="res_config_settings_view_form" model="ir.ui.view">
        <field name="name">res.config.settings.view.form.inherit.coupon.purchase</field>
        <field name="model">res.config.settings</field>
        <field name="priority" eval="15"/>
        <field name="inherit_id" ref="base.res_config_settings_view_form"/>
        <field name="arch" type="xml">
            <xpath expr="//div[hasclass('settings')]" position="inside">
                <div class="app_settings_block" data-string="Coupon Purchase" string="Coupon Purchase"
                     data-key="coupon_purchase">
                    <h2>Coupon Purchase</h2>
                    <div class="row mt16 o_settings_container">
                        <div class="col-12 col-lg-6 o_setting_box">
                            <div class="o_setting_left_pane"/>
                            <div class="o_setting_right_pane">
                                <span class="o_form_label">Coupons</span>
                                <div class="text-muted content-group mt16">
                                    <field name="coupon_product_id" class="text-center oe_inline"/>
                                    <field name="coupon_book_ids" class="text-center oe_inline"/>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </xpath>
        </field>
    </record>
    <record id="view_res_config_settings_form" model="ir.ui.view">
        <field name="name">res.config.settings.form</field>
        <field name="model">res.config.settings</field>
        <field name="arch" type="xml">
            <form string="Configuration" class="oe_form_configuration">
                <header>
                    <button string="Save" type="object" name="execute" class="oe_highlight"/>
                    <button string="Cancel" type="object" name="cancel" class="oe_link"/>
                </header>
                <sheet>
                    <group>
                        <field name="coupon_product_id"/>
                        <field name="coupon_book_ids"/>
                    </group>
                </sheet>
            </form>
        </field>
    </record>

    <record id="view_coupon_config_form" model="ir.ui.view">
        <field name="name">Coupon Config Form</field>
        <field name="model">coupon.config</field>
        <field name="type">form</field>
        <field name="arch" type="xml">
            <form string="Coupon Config">
                <sheet>

                    <group>
                        <field name="coupon_product_id" required="1"/>
                    </group>
                    <notebook>
                        <page string="Coupon Books">
                            <field name="coupon_book_ids">
                                <tree editable="bottom">
                                    <field name="product_id"/>
                                    <field name="paper_count"/>
                                </tree>
                            </field>
                        </page>
                    </notebook>
                </sheet>

            </form>
        </field>
    </record>

    <record id="view_coupon_book_form" model="ir.ui.view">
        <field name="name">Coupon Book Form</field>
        <field name="model">coupon.book</field>
        <field name="type">form</field>
        <field name="arch" type="xml">
            <form string="Coupon Book">
                <group>
                    <field name="product_id"/>
                    <field name="paper_count"/>
                </group>
            </form>
        </field>
    </record>
    <record id="view_coupon_book_tree" model="ir.ui.view">
        <field name="name">Coupon Book Tree</field>
        <field name="model">coupon.book</field>
        <field name="arch" type="xml">
            <tree>
                <field name="product_id"/>
                <field name="paper_count"/>
            </tree>
        </field>
    </record>


    <!-- Menu Action -->
    <record id="action_coupon_config" model="ir.actions.act_window">
        <field name="name">Coupon Config</field>
        <field name="res_model">coupon.config</field>
        <field name="view_mode">form</field>
    </record>

    <!-- Menu Item -->
    <menuitem id="menu_coupon_config" name="Coupons Config" parent="purchase.menu_purchase_config"
              action="action_coupon_config" sequence="100"/>

</odoo>


===== .\az_coupons\views\coupon_purchase.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>

        <!-- VIEWS -->
        <record id="azbah_view_coupon_purchase_tree" model="ir.ui.view">
            <field name="name">azbah.coupon.purchase.tree</field>
            <field name="model">coupon.purchase</field>
            <field name="arch" type="xml">
                <tree>
                    <field name="name" string="Serial"/>
                    <field name="date"/>
                    <field name="total"/>
                    <field name="paper_count"/>
                    <field name="first_serial"/>
                    <field name="quantity"/>
                    <field name="last_serial"/>
                    <field name="picking_type_id"/>
                    <field name="price"/>
                    <field name="price_subtotal"/>
                    <field name="tax_ids" widget="many2many_tags" options="{'no_create':True}"/>
                    <field name="price_subtotal_with_tax"/>
                    <field name="note"/>
                </tree>
            </field>
        </record>

        <record id="azbah_view_coupon_purchase_form" model="ir.ui.view">
            <field name="name">azbah.coupon.purchase.form</field>
            <field name="model">coupon.purchase</field>
            <field name="arch" type="xml">
                <form>
                    <sheet>
                        <div class="oe_button_box" name="button_box">
                            <button class="oe_stat_button" type="object"
                                    name="launch_purchase_orders" icon="fa-list-ol"
                                    string="Purchase Order"
                                    attrs=" {'invisible':[('name', '=', 'New')]}">
                            </button>
                            <button class="oe_stat_button" type="object"
                                    string="Inventory"
                                    name="launch_picking" icon="fa-truck"
                                    attrs=" {'invisible':[('name', '=', 'New')]}"/>

                            <button name="launch_packages" string="Packages" type="object"
                                    class="oe_stat_button" icon="fa-cubes"
                                    attrs=" {'invisible':[('name', '=', 'New')]}">
                                <field name="quantity" widget="statinfo"
                                       string="Packages"/>
                            </button>

                        </div>
                        <group>
                            <group>
                                <field name="name"/>
                                <field name="date"/>
                                <field name="paper_count"/>
                                <field name="first_serial"/>
                                <field name="quantity"/>
                            </group>
                            <group>
                                <field name="picking_type_id"/>
                                <field name="price"/>
                                <field name="price_subtotal"/>
                                <field name="tax_ids" widget="many2many_tags" options="{'no_create':True}"/>
                                <field name="price_subtotal_with_tax"/>
                                <field name="note"/>
                            </group>
                        </group>
                    </sheet>
                </form>
            </field>
        </record>

        <!-- ACTIONS -->

        <record id="action_azbah_view_coupon_purchase" model="ir.actions.act_window">
            <field name="name">Coupon Purchase Orders</field>
            <field name="res_model">coupon.purchase</field>
            <field name="view_mode">tree,form</field>
        </record>

        <menuitem parent="purchase.menu_procurement_management"
                  id="menu_azbah_action_azbah_view_coupon_purchase"
                  action="action_azbah_view_coupon_purchase"
                  groups="account.group_account_user"
                  name="كوبونات"
                  sequence="110"/>

    </data>
</odoo>


===== .\az_coupons\views\detailed_operations.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>

    <record id="view_stock_move_operations_inherit" model="ir.ui.view">
        <field name="name">az.coupons.generate.serials</field>
        <field name="model">stock.move</field>
        <field name="inherit_id" ref="stock.view_stock_move_operations"/>
        <field name="arch" type="xml">

            <xpath expr="//button[@name='action_assign_serial_show_details']" position="replace">
                <button name="action_assign_serial_show_details" type="object" class="btn-link" data-hotkey="k"
                        title="Assign Serial Numbers">
                    <span>Generate Serials</span>
                </button>
            </xpath>
        </field>
    </record>


</odoo>









===== .\az_coupons\views\ir_sequence_view.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data noupdate="1">
        <record id="seq_coupon_purchase" model="ir.sequence">
            <field name="name">Coupon Purchase Sequence</field>
            <field name="code">coupon.purchase</field>
            <field name="prefix">CPN-</field>
            <field name="padding">5</field>
            <field name="number_increment">1</field>
        </record>
    </data>

</odoo>

===== .\az_coupons\views\purchase_order.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>

        <!-- VIEWS -->
        <record id="azbah_purchase_order_tree" model="ir.ui.view">
            <field name="name">azbah.purchase.order.tree</field>
            <field name="model">purchase.order</field>
            <field name="mode">extension</field>
            <field name="inherit_id" ref="purchase.purchase_order_view_tree"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='user_id']" position="before">
                    <field name="coupon_purchase_id"/>
                    <field name="delegate_id"/>
                </xpath>
            </field>
        </record>

        <record id="azbah_purchase_order_form" model="ir.ui.view">
            <field name="name">azbah.purchase.order.form</field>
            <field name="model">purchase.order</field>
            <field name="mode">extension</field>
            <field name="inherit_id" ref="purchase.purchase_order_form"/>
            <field name="arch" type="xml">

                <xpath expr="//header" position="inside">
                    <button name="serialize" string="Create Contextual Action" type="object"
                            class="btn-primary"
                            attrs="{'invisible':[('binding_model_id','!=',False)]}"
                            help="Display an option in the 'More' top-menu in order to run this action."/>


                </xpath>

                <xpath expr="//field[@name='partner_ref']" position="after">
                    <field name="coupon_purchase_id"/>
                    <field name="delegate_id"/>
                </xpath>

                <xpath expr="//field[@name='price_subtotal']" position="before">
                    <field name="note" invisible="1"/>
                </xpath>

            </field>
        </record>
    </data>
</odoo>


===== .\az_coupons\views\res_config_settings_views.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>

    <record id="res_config_settings_view_form_coupons" model="ir.ui.view">
        <field name="name">res.config.settings.view.form.inherit.coupons</field>
        <field name="model">res.config.settings</field>
        <field name="priority" eval="25"/>
        <field name="inherit_id" ref="purchase.res_config_settings_view_form_purchase"/>
        <field name="arch" type="xml">
            <xpath expr="//div[@data-key='purchase']" position="inside">
                <field name="is_installed_sale" invisible="1"/>
                <h2 attrs="{'invisible': [('is_installed_sale', '=', False)]}">Coupons</h2>
                <div class="row mt16 o_settings_container" name="request_vendor_setting_container">
                    <div class="col-12 col-lg-6 o_setting_box">
                        <div>
                            <group>
                                <field name="coupon_product_id"/>
                                <field name="coupon_book_ids">
                                    <tree editable="bottom">
                                        <field name="product_id"/>
                                        <field name="paper_count"/>
                                    </tree>
                                </field>
                            </group>
                        </div>
                    </div>
                </div>
            </xpath>
        </field>
    </record>


<!--    <record id="res_config_settings_view_form" model="ir.ui.view">-->
<!--        <field name="name">res.config.settings.view.form.inherit.coupons</field>-->
<!--        <field name="model">res.config.settings</field>-->
<!--        <field name="inherit_id" ref="base.res_config_settings_view_form"/>-->
<!--        <field name="arch" type="xml">-->
<!--            <xpath expr="//div[hasclass('settings')]" position="inside">-->
<!--                <div class="app_settings_block" string="Coupons" data-string="Coupons">-->
<!--                    <field name="coupon_product_id"/>-->
<!--                    <field name="coupon_book_ids" widget="many2many_tags"/>-->
<!--                </div>-->
<!--            </xpath>-->
<!--        </field>-->
<!--    </record>-->

</odoo>



===== .\az_coupons\views\stock.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>

        <!-- VIEWS -->
        <record id="azbah_stock_picking_tree" model="ir.ui.view">
            <field name="name">azbah.stock.picking.tree</field>
            <field name="model">stock.picking</field>
            <field name="mode">extension</field>
            <field name="inherit_id" ref="stock.vpicktree"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='partner_id']" position="after">
                    <field name="coupon_purchase_id"/>
                    <field name="delegate_id"/>
                </xpath>
            </field>
        </record>
        <record id="azbah_stock_picking_form" model="ir.ui.view">
            <field name="name">azbah.stock.picking.form</field>
            <field name="model">stock.picking</field>
            <field name="mode">extension</field>
            <field name="inherit_id" ref="stock.view_picking_form"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='location_dest_id']" position="after">
                    <field name="coupon_purchase_id"/>
                    <field name="delegate_id"/>
                </xpath>
            </field>
        </record>


        <record id="azbah_stock_picking_form" model="ir.ui.view">
            <field name="name">azbah.hide.stock.picking.form</field>
            <field name="model">stock.picking</field>
            <field name="inherit_id" ref="stock.view_picking_form"/>
            <field name="arch" type="xml">

                <xpath expr="//field[@name='package_level_ids_details']" position="attributes">
                    <attribute name="groups">base.group_system</attribute>
                </xpath>
                <xpath expr="//button[@name='action_put_in_pack']" position="attributes">
                    <attribute name="groups">stock.group_tracking_lot,base.group_system</attribute>
                </xpath>

            </field>
        </record>

    </data>
</odoo>


===== .\az_inventory\__init__.py =====
from . import models


===== .\az_inventory\__manifest__.py =====
{
    "name": "AZ-Invnetory",
    "version": "15",
    "license": "LGPL-3",
    "category": "stock",
    "depends": ["stock"]
    , "data": [
    'views/stock_picking.xml'
]
}


===== .\az_inventory\models\stock_picking.py =====
# -*- coding: utf-8 -*-

from odoo import models, fields

ACCOUNT_DOMAIN = "['&', '&', '&', ('deprecated', '=', False), ('internal_type','=','other'), ('company_id', '=', current_company_id), ('is_off_balance', '=', False)]"

class StockPiciking(models.Model):
    _inherit = "stock.move"
    property_account_expense_categ_id = fields.Many2one('account.account', company_dependent=True,
                                                        string="Expense Account",
                                                        domain=ACCOUNT_DOMAIN,
                                                        help="The expense is accounted for when a vendor bill is validated, except in anglo-saxon accounting with perpetual inventory valuation in which case the expense (Cost of Goods Sold account) is recognized at the customer invoice validation.")

===== .\az_inventory\models\__init__.py =====
# -*- coding: utf-8 -*-

from . import stock_picking

===== .\az_inventory\report\sanad_template.xml =====
===== .\az_inventory\views\stock_picking.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>

        <record id="view_azbah_account_journal_form_inherited" model="ir.ui.view">
            <field name="name">az.stock.picking.form</field>
            <field name="model">stock.picking</field>
            <field name="inherit_id" ref="stock.view_picking_form"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='move_ids_without_package']/tree" position="inside">
                    <field name="property_account_expense_categ_id"/>
                </xpath>
            </field>
        </record>


    </data>
</odoo>


===== .\az_inventory_valuation\__init__.py =====
from . import wizard


===== .\az_inventory_valuation\__manifest__.py =====
{
    'name': 'AZ - Inventory Valuation at Date',
    'version': '15.0.1.0.0',
    'category': 'Inventory',
    'summary': 'Wizard to get stock valuation as of a specific date',
    'depends': ['stock', 'purchase'],
    'data': [
        'wizard/stock_valuation.xml',
    ],
    'installable': True,
    'application': False,
}


===== .\az_inventory_valuation\models\__init__.py =====
# -*- coding: utf-8 -*-

from . import stock_picking

===== .\az_inventory_valuation\report\sanad_template.xml =====
===== .\az_inventory_valuation\wizard\stock_valuation.py =====
from odoo import models, fields, api
import io
import xlsxwriter
import base64

class StockValuationWizard(models.TransientModel):
    _name = 'stock.valuation.wizard'
    _description = 'Stock Valuation Wizard'

    date = fields.Date(string='Date', required=True)
    report_file = fields.Binary(string='Report File')
    report_filename = fields.Char(string='Report Filename', default='stock_valuation.xlsx')

    def get_stock_valuation(self):
        self.ensure_one()
        date = self.date

        products = self.env['product.product'].search([])
        valuation_lines = []

        for product in products:
            quantity = sum(self.env['stock.quant'].search([
                ('product_id', '=', product.id),
                ('location_id.usage', '=', 'internal')
            ]).mapped('quantity'))

            latest_purchase_line = self.env['purchase.order.line'].search([
                ('product_id', '=', product.id)
            ], order='date_order desc', limit=1)

            price = latest_purchase_line.price_unit if latest_purchase_line else 0.0
            value = quantity * price
            name_and_code = f'[{product.product_tmpl_id.code.strip()}] {product.name}' if product.product_tmpl_id.code else product.name
            valuation_lines.append({
                'product': name_and_code,
                'quantity': quantity,
                'uom': product.uom_id.name,
                'value': value,
            })

        self._generate_excel_report(valuation_lines)

        return {
            'type': 'ir.actions.act_window',
            'name': 'Stock Valuation',
            'view_mode': 'form',
            'res_model': 'stock.valuation.wizard',
            'res_id': self.id,
            'target': 'new',
        }

    def _generate_excel_report(self, valuation_lines):
        output = io.BytesIO()
        workbook = xlsxwriter.Workbook(output, {'in_memory': True})
        worksheet = workbook.add_worksheet('Stock Valuation')

        # Define the headers
        headers = ['Product', 'Quantity', 'Unit of Measure', 'Value']
        for col_num, header in enumerate(headers):
            worksheet.write(0, col_num, header)

        # Write data to the sheet
        for row_num, line in enumerate(valuation_lines, start=1):
            worksheet.write(row_num, 0, line['product'])
            worksheet.write(row_num, 1, line['quantity'])
            worksheet.write(row_num, 2, line['uom'])
            worksheet.write(row_num, 3, line['value'])

        workbook.close()
        output.seek(0)

        self.report_file = base64.b64encode(output.read())
        self.report_filename = 'stock_valuation_{}.xlsx'.format(fields.Date.today())

    def download_report(self):
        return {
            'type': 'ir.actions.act_url',
            'url': 'web/content/?model=stock.valuation.wizard&id={}&field=report_file&filename_field=report_filename&download=true'.format(
                self.id),
            'target': 'new',
        }
class StockValuationResult(models.TransientModel):
    _name = 'stock.valuation.result'
    _description = 'Stock Valuation Result'

    product = fields.Char(string='Product')
    quantity = fields.Float(string='Quantity')
    uom = fields.Char(string='Unit of Measure')
    value = fields.Float(string='Value')


===== .\az_inventory_valuation\wizard\stock_valuation.xml =====
<odoo>
    <record id="view_stock_valuation_wizard_form" model="ir.ui.view">
        <field name="name">stock.valuation.wizard.form</field>
        <field name="model">stock.valuation.wizard</field>
        <field name="arch" type="xml">
            <form string="Stock Valuation Wizard">
                <group>
                    <field name="date"/>
                </group>
                <footer>
                    <button string="Get Valuation" type="object" name="get_stock_valuation" class="btn-primary"/>
                    <button string="Cancel" class="btn-secondary" special="cancel"/>
                </footer>
                <group>
                    <field name="report_file" filename="report_filename" readonly="1"/>
                    <button string="Download Report" type="object" name="download_report"
                            attrs="{'invisible': [('report_file', '=', False)]}" class="btn-primary"/>
                </group>
            </form>
        </field>
    </record>

    <record id="action_stock_valuation_wizard" model="ir.actions.act_window">
        <field name="name">Stock Valuation Wizard</field>
        <field name="res_model">stock.valuation.wizard</field>
        <field name="view_mode">form</field>
        <field name="target">new</field>
    </record>

    <menuitem id="menu_stock_valuation_wizard" name="تقييم مخزون بتاريخ"
              sequence="7"
              parent="stock.menu_warehouse_report" action="action_stock_valuation_wizard"/>

</odoo>




===== .\az_inventory_valuation\wizard\__init__.py =====
from . import stock_valuation


===== .\az_ks_pos_low_stock_alert\__init__.py =====
from . import models

===== .\az_ks_pos_low_stock_alert\__manifest__.py =====
# -*- coding: utf-8 -*-
{
    'name': "POS Low Stock Alert",
    'summary': """Manage the Stock of your POS products by highlighting them in different colors depending on
                their stock state.""",
    'description': """
        POS Low Stock Alert v15.0
        Manage the Stock of your POS products by highlighting them in different colors depending on
                their stock state.
        POS,
        POS Low Stock Alert,
        Low Stock Alert,
        Stock Alert,
        POS Low Stock Warning,
        POS Stock Warning,
        Inventory Alert,
        Inventory Minimum Quantity Alert,
        Inventory Minimum Quantity Warning,
        POS Manager,
        POS Inventory,
        POS Stock,
        POS Stock Alert,
        POS Retail,
        POS Shop,
        Point of Sales,
        Point of Sales Stock Alert,
        Point of Sales Low Stock Alert,
        POS Shop Low Stock,
        stock notification, 
        low stock notification, 
        product stock notification, 
        product low stock, 
        stock management, 
        notification odoo apps, 
        odoo notification, 
        odoo website stock, 
        website stock notify, 
        stock notify, 
        product stock, 
        odoo website product stock, 
        odoo website stock management
    """,
    'author': 'Ksolves India Ltd.',
    'website': "https://store.ksolves.com/",
    'license': 'LGPL-3',
    'currency': 'EUR',
    'price': '0.0',
    'category': 'Point Of Sale',
    'support': 'sales@ksolves.com',
    'version': '15.0.1.0.1',
    'images': ['static/description/pos_15.jpg'],
    'depends': ['point_of_sale'],
    'data': [
        # 'views/assets.xml',
        'views/config.xml'
    ],
    # 'qweb': ['static/src/xml/ks_low_stock.xml']
    'assets' : {
        'point_of_sale.assets': [
            'az_ks_pos_low_stock_alert/static/src/css/ks_low_stock.css',
            'az_ks_pos_low_stock_alert/static/src/js/ks_utils.js',
            'az_ks_pos_low_stock_alert/static/src/js/ks_low_stock.js',
            'az_ks_pos_low_stock_alert/static/src/js/ks_product_list.js',
            'az_ks_pos_low_stock_alert/static/src/js/ks_product_screen.js',
            'az_ks_pos_low_stock_alert/static/src/js/ks_product_widget.js',
        ],
        'web.assets_qweb': [
            'az_ks_pos_low_stock_alert/static/src/xml/**/*',
        ]
    }
}


===== .\az_ks_pos_low_stock_alert\i18n\en_US.po =====
# Translation of Odoo Server.
# This file contains the translation of the following modules:
# 	* az_ks_pos_low_stock_alert
#
msgid ""
msgstr ""
"Project-Id-Version: Odoo Server 13.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-12-26 10:21+0000\n"
"PO-Revision-Date: 2019-12-26 10:21+0000\n"
"Last-Translator: \n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: \n"
"Plural-Forms: \n"

#. module: az_ks_pos_low_stock_alert
#. openerp-web
#: code:addons/az_ks_pos_low_stock_alert/static/src/js/ks_utils.js:0
#, python-format
msgid ""
" has only  items available. \n"
" You're trying to order ."
msgstr ""

#. module: az_ks_pos_low_stock_alert
#: model:ir.model.fields,field_description:az_ks_pos_low_stock_alert.field_pos_config__allow_order_when_product_out_of_stock
msgid "Allow Order when Product is Out Of Stock"
msgstr ""

#. module: az_ks_pos_low_stock_alert
#: model_terms:ir.ui.view,arch_db:az_ks_pos_low_stock_alert.pos_config
msgid "Allow Order when Product is Out of Stock"
msgstr ""

#. module: az_ks_pos_low_stock_alert
#: model_terms:ir.ui.view,arch_db:az_ks_pos_low_stock_alert.pos_config
msgid "Allow order when product is out-of-stock"
msgstr ""

#. module: az_ks_pos_low_stock_alert
#. openerp-web
#: code:addons/az_ks_pos_low_stock_alert/static/src/js/ks_utils.js:0
#, python-format
msgid "Cannot order a product more than its availability"
msgstr ""

#. module: az_ks_pos_low_stock_alert
#: model_terms:ir.ui.view,arch_db:az_ks_pos_low_stock_alert.pos_config
msgid "Check this to display product stock"
msgstr ""

#. module: az_ks_pos_low_stock_alert
#: model_terms:ir.ui.view,arch_db:az_ks_pos_low_stock_alert.pos_config
msgid "Display Product Stock"
msgstr ""

#. module: az_ks_pos_low_stock_alert
#: model_terms:ir.ui.view,arch_db:az_ks_pos_low_stock_alert.pos_config
msgid "Display Quantity of Products in POS"
msgstr ""

#. module: az_ks_pos_low_stock_alert
#: model:ir.model.fields,field_description:az_ks_pos_low_stock_alert.field_pos_config__display_stock
msgid "Display Stock of products in POS"
msgstr ""

#. module: az_ks_pos_low_stock_alert
#. openerp-web
#: code:addons/az_ks_pos_low_stock_alert/static/src/js/ks_low_stock.js:0
#, python-format
msgid "Empty Serial/Lot Number"
msgstr ""

#. module: az_ks_pos_low_stock_alert
#: model:ir.model.fields,field_description:az_ks_pos_low_stock_alert.field_pos_config__minimum_stock_alert
msgid "Minimum Limit to change the stock color for the product"
msgstr ""

#. module: az_ks_pos_low_stock_alert
#: model_terms:ir.ui.view,arch_db:az_ks_pos_low_stock_alert.pos_config
msgid "Minimum Stock Alert"
msgstr ""

#. module: az_ks_pos_low_stock_alert
#. openerp-web
#: code:addons/az_ks_pos_low_stock_alert/static/src/js/ks_low_stock.js:0
#, python-format
msgid "One or more product(s) required serial/lot number."
msgstr ""

#. module: az_ks_pos_low_stock_alert
#. openerp-web
#: code:addons/az_ks_pos_low_stock_alert/static/src/xml/ks_low_stock.xml:0
#, python-format
msgid "Out-Of-Stock"
msgstr ""

#. module: az_ks_pos_low_stock_alert
#: model_terms:ir.ui.view,arch_db:az_ks_pos_low_stock_alert.pos_config
msgid "POS Low Stock Alert"
msgstr ""

#. module: az_ks_pos_low_stock_alert
#: model:ir.model,name:az_ks_pos_low_stock_alert.model_pos_config
msgid "Point of Sale Configuration"
msgstr ""

#. module: az_ks_pos_low_stock_alert
#: model_terms:ir.ui.view,arch_db:az_ks_pos_low_stock_alert.pos_config
msgid "Show stock in red color when it is lower than"
msgstr ""


===== .\az_ks_pos_low_stock_alert\models\ks_pos_config.py =====
#
# @Author: KSOLVES India Private Limited
# @Email: sales@ksolves.com
#


from odoo import api, fields, models

class PosConfig(models.Model):
    _inherit = 'pos.config'

    display_stock = fields.Boolean(string = 'Display Stock of products in POS', default = True)
    minimum_stock_alert = fields.Integer(string='Minimum Limit to change the stock color for the product', default = 0)
    allow_order_when_product_out_of_stock = fields.Boolean(string = 'Allow Order when Product is Out Of Stock', default = True)

===== .\az_ks_pos_low_stock_alert\models\product_product.py =====
from odoo import api, fields, models


class ProductProduct(models.Model):
    _inherit = 'product.product'

    def get_qty_in_location(self, pos_config_id):
        picking_type_id = self.env['pos.config'].search([('id', '=', pos_config_id)]).picking_type_id
        location_id = picking_type_id.default_location_src_id
        return self.env['stock.quant']._get_available_quantity(self, location_id)


===== .\az_ks_pos_low_stock_alert\models\__init__.py =====
from . import ks_pos_config
from . import product_product

===== .\az_ks_pos_low_stock_alert\static\description\index.html =====
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Odoo</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <link href="https://fonts.googleapis.com/css?family=Montserrat" rel="stylesheet">
    <link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet"
          integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/css?family=Roboto:400,500,700&display=swap" rel="stylesheet">
    <link href=https://apps.odoocdn.com/web/content/7247337-184ae0e/1/web.assets_frontend.css" rel="stylesheet">

</head>
<!-- odoo description page css -->

<body>
<!-- Header -->
<main class="container">
    <header class="py-2">
            <div class="row align-items-center">
                <div class="col-12 col-md-4">
                    <span class="btn pr-2">
                        <img src="images/ksolves-logo.png" alt="ksolves-logo" style="height:50px">
                    </span>
                </div>
                <div class="col-6 col-md">
                     <div class="text-md-right">
                        <a href="https://apps.odoo.com/apps/modules/browse?search=ksolves" target="_blank" class="btn btn-sm py-2 px-md-3"
                              style="font-size: 14px; background-color: #203038;color:#fff;"><i class="fa fa-list-alt mr-1"></i>
                              <span class="d-none d-sm-inline">Ksolves</span> All Apps
                        </a>
                    </div>
                </div>
                <div class="col-6 col-md-5 text-md-right">
                    <span class="btn btn-sm py-2 px-md-3 mr-1" style="font-size: 13px;font-size: 14px; font-weight: 500;background-color: #203038;color:#fff;"><i class="fa fa-check mr-1"></i> Community</span>
                    <span class="btn btn-sm py-2 px-md-3 mr-1" style="font-size: 13px;font-size: 14px; font-weight: 500;background-color: #203038;color:#fff;"><i class="fa fa-check mr-1"></i> Enterprise</span>
<!--                    <span class="btn btn-sm py-2 px-md-3" style="font-size: 13px;font-size: 14px; font-weight: 500;background-color: #203038;color:#fff;"><i class="fa fa-check mr-1"></i> Enterprise</span>-->
                </div>
            </div>
            <hr/>
        </header>

    <div id="loempia_tabs" class="container py-5 oe_styling_v8"
         style="color: #0b3b52;font-family: 'Open sans','sans-serif';">
        <div class="row mb-5">
            <div class="col-12 col-md-12 text-center text-md-left">
                <center><h1 style="color: #203038;"><u>POS Low Stock Alert</u></h1></center>
            </div>
        </div>
        <div class="row align-items-center mb-4" style="margin-top:-25px">
            <div class="col-12 col-md-12">
                <h2 class="pr-md-5 mb-4" style="font-size: 24px;color: #3c3c3c;">Make your POS session smoother than
                    ever by keeping a close tab on the stock of your products and highlighting the ones going below the
                    minimum quantity defined.</h2>
                <h4 class="font-weight-bold mb-3" style="font-size: 20px"><span style="color:#E13B34;">Hot</span>
                    Features</h4>
                <ul class="list-unstyled">
                    <li class="mb-2">
                        <i class="fa fa-free-code-camp" style="font-size:18px;color:#E13B34;"></i>
                        <span style="font-size:18px" class="ml-2">Display the available quantity of all products in a POS session</span>
                    </li>
                    <li class="mb-2">
                        <i class="fa fa-free-code-camp" style="font-size:18px;color:#E13B34;"></i>
                        <span style="font-size:18px" class="ml-2">Differentiate between in stock products, the products going below the minimum quantity defined, and the out-of-stock products on the basis of colors</span>
                    </li>
                    <li>
                        <i class="fa fa-free-code-camp" style="font-size:18px;color:#E13B34;"></i>
                        <span style="font-size:18px"
                              class="ml-2">In stock products’ stock is highlighted in green color</span>
                    </li>
                    <li>
                        <i class="fa fa-free-code-camp" style="font-size:18px;color:#E13B34;"></i>
                        <span style="font-size:18px" class="ml-2">Products who have their quantity equal to or less than the minimum quantity defined have their stock highlighted in red color</span>
                    </li>
                    <li>
                        <i class="fa fa-free-code-camp" style="font-size:18px;color:#E13B34;"></i>
                        <span style="font-size:18px" class="ml-2">Out-of-stock products listing is faded in translucent white with an overlay Out-of-Stock being displayed on them in the foreground</span>
                    </li>
                    <li>
                        <i class="fa fa-free-code-camp" style="font-size:18px;color:#E13B34;"></i>
                        <span style="font-size:18px" class="ml-2">Flexibility to restrict order even when a product is out-of-stock</span>
                    </li>
                    <li>
                        <i class="fa fa-free-code-camp" style="font-size:18px;color:#E13B34;"></i>
                        <span style="font-size:18px" class="ml-2">The products listing is sorted in such a way to ensure that out of stock products are always listed towards the end</span>
                    </li>
                </ul>
            </div>
        </div>



        <!-- tab view start -->
        <div>
            <div class="justify-content-center d-flex">
                <!-- Nav pills -->
                <ul class="nav o_tab_nav"
                    style="border: 1px solid #203038;  border-radius: 6px 6px;overflow:hidden;background-color:transparent">
                    <li class="nav-item" style="border-radius: 6px 0 0 6px;">
                        <a class="nav-link active px-md-4 list-group-item-beta-dark list-group-item-action"
                           data-toggle="pill" href="#Features"
                           style="border-radius: 6px 0 0 6px; border-right: 1px solid#203038;opacity: 1;padding:16px;">Features</a>
                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link px-md-4 list-group-item-beta-dark list-group-item-action" data-toggle="pill"
                                           href="#Release"
                                           style="border-radius: 0px; border-right: 1px solid #203038;opacity: 1;padding:16px;">Releases</a>
                                    </li>
                    <!--          <li class="nav-item">-->
                    <!--            <a class="nav-link px-md-4" data-toggle="pill" href="#UserGuide"  style="border-radius: 0px; border-right: 1px solid #203038;opacity: 1;padding:16px;">User Guide</a>-->
                    <!--          </li>-->
                    <li class="nav-item">
                        <a class="nav-link px-md-4 list-group-item-beta-dark list-group-item-action" data-toggle="pill"
                           href="#FAQ" style="border-radius: 0px;opacity: 1;padding:16px;">FAQ's</a>
                    </li>
                </ul>
            </div>

            <!-- Tab panes -->
            <div class="tab-content py-5">
                <div class="tab-pane active" id="Features">
                    <div class="row">
                        <div class="col-12 col-md-4">
                            <ul class="nav o_tab_nav"
                                style="text-transform: capitalize; font-size: 18px; border-radius: 6px 6px;background-color: transparent">
                                <li class="nav-item w-100 mb-3">
                                    <a class="nav-link d-flex align-items-center px-3 py-2 list-group-item-beta-dark list-group-item-action active"
                                       data-toggle="pill" href="#Advance1"
                                       style="border-radius:30px; border: 1px solid #203038;opacity:1;letter-spacing: inherit;text-transform: capitalize;transition: 0.3s ease-in-out;"><i
                                            class="fa fa-gear mr-2" style="font-size: 20px;"></i>Pos Setting Menu</a>
                                </li>
                                <li class="nav-item w-100 mb-3">
                                    <a class="nav-link d-flex align-items-center px-3 py-2 list-group-item-beta-dark list-group-item-action"
                                       data-toggle="pill" href="#Advance2"
                                       style="border-radius:30px; border: 1px solid #203038;opacity:1;letter-spacing: inherit;text-transform: capitalize;transition: 0.3s ease-in-out;"><i
                                            class="fa fa-truck mr-2" style="font-size: 20px;"></i>Display Product Stock</a>
                                </li>
                                <li class="nav-item w-100 mb-3">
                                    <a class="nav-link d-flex align-items-center px-3 py-2 list-group-item-beta-dark list-group-item-action"
                                       data-toggle="pill" href="#Advance3"
                                       style="border-radius:30px; border: 1px solid #203038;opacity:1;letter-spacing: inherit;text-transform: capitalize;transition: 0.3s ease-in-out;"><i
                                            class="fa fa-list-ul mr-2" style="font-size: 20px;"></i>Defining
                                        Quantity</a>
                                <li class="nav-item w-100 mb-3">
                                    <a class="nav-link d-flex align-items-center px-3 py-2 list-group-item-beta-dark list-group-item-action"
                                       data-toggle="pill" href="#Advance5"
                                       style="border-radius:30px; border: 1px solid #203038;opacity:1;letter-spacing: inherit;text-transform: capitalize;transition: 0.3s ease-in-out;"><i
                                            class="fa  fa-cart-arrow-down mr-2" style="font-size: 20px;"></i>Low On
                                        Stock Items</a>
                                </li>
                                <li class="nav-item w-100 mb-3">
                                    <a class="nav-link d-flex align-items-center px-3 py-2 list-group-item-beta-dark list-group-item-action"
                                       data-toggle="pill" href="#Advance6"
                                       style="border-radius:30px; border: 1px solid #203038;opacity:1;letter-spacing: inherit;text-transform: capitalize;transition: 0.3s ease-in-out;"><i
                                            class="fa fa-shopping-cart mr-2" style="font-size: 20px;"></i>Order
                                        Unavailable Item</a>
                                </li>
                            </ul>
                        </div>
                        <div class="col-12 col-md-8 pt-4 pt-md-0">
                            <div class="tab-content h-100">
                                <div class="tab-pane active" id="Advance1">
                                    <h4>Pos Setting Menu</h4>
                                    <div class="pb-4" style="font-size: 18px;">Under Settings menu, there’s a subsection
                                        for POS Low Stock Alert app wherein you have the option of checking/unchecking
                                        two fields namely,
                                        Display Product Stock and Allow order when a product is Out-of-stock, and input
                                        the numerical value for Minimum Stock Alert.
                                    </div>
                                    <div class="pb-1">
                                        <img src="images/app_screen/2.png" alt="" class="img-fluid">
                                    </div>
                                </div>
                                <div class="tab-pane" id="Advance2">
                                    <h4>Display Product Stock</h4>
                                    <div class="pb-4" style="font-size: 18px;">On checking the Display Product Stock,
                                        the products available in a POS session will display their respective stock
                                        quantity on their product listing in green color.
                                    </div>
                                    <div class="pb-1">
                                        <img src="images/app_screen/3.png" alt="" class="img-fluid">
                                    </div>
                                </div>
                                <div class="tab-pane" id="Advance3">
                                    <h4>Defining Quantity</h4>
                                    <div class="pb-4" style="font-size: 18px;">The User can define the Minimum Stock
                                        quantity for all products in the Input field provided for Minimum Stock Alert.
                                    </div>
                                    <div class="pb-1">
                                        <img src="images/app_screen/5.png" alt="" class="img-fluid">
                                    </div>
                                </div>
                                <!--                            <div class="tab-pane" id="Advance4">-->
                                <!--                                <h4>Advanced Search Option</h4>-->
                                <!--                                <div class="pb-4" style="font-size: 18px;"> This option provides an advanced search-->
                                <!--                                    option for menu items.-->
                                <!--                                </div>-->
                                <!--                                <div class="pb-1">-->
                                <!--                                    <images src="./images/screensort/advance-search-option.jpg" alt="" class="images-fluid">-->
                                <!--                                </div>-->
                                <!--                            </div>-->
                                <div class="tab-pane" id="Advance5">
                                    <h4>Low On Stock Items</h4>
                                    <div class="pb-4" style="font-size: 18px;">When a product’s quantity becomes equal
                                        to or goes below the minimum quantity defined, the said products stock will be
                                        highlighted in red.
                                    </div>
                                    <div class="pb-1">
                                        <img src="images/app_screen/6.png" alt="" class="img-fluid">
                                    </div>
                                    <h4 style="padding-top:60px; padding-bottom:30px;">Allow order when a product is
                                        out-of-stock Setting</h4>
                                    <div class="pb-4" style="font-size: 18px;">
                                        When a product becomes out-of-stock, its product listing is faded in translucent
                                        white with an overlay Out-of-Stock being displayed on it in the foreground. This
                                        use case only occurs when you have unchecked the Allow order when a product is
                                        out-of-stock option in the POS shop settings.
                                    </div>
                                    <div class="pb-1">
                                        <img src="images/app_screen/7.png" alt="" class="img-fluid">
                                    </div>
                                    <span><b>Note: A POS user will not be able to add out-of-stock products to order if they have unchecked the Allow order when a product is out-of-stock option.</b></span>
                                </div>
                                <div class="tab-pane" id="Advance6">
                                    <h4>Order Unavailable Item</h4>
                                    <div class="pb-4" style="font-size: 18px;">If a POS user tries to order a quantity
                                        of a product more than the available stock quantity of the said product, then a
                                        warning message pop-up will be displayed indicating that the user is trying to
                                        order more than the available quantity.
                                    </div>
                                    <div class="pb-1">
                                        <img src="images/app_screen/8.png" alt="" class="img-fluid">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade" id="Release">
                    <section class="card mb-5" style="border: none;">
                        <div class="card-body pb-5">
                            <div class="text-center pb-5 pt-4">
                                <h2 style="font-weight: 600; font-size: 2.5rem;">Our Releases</h2>
                            </div>
                            <div class="row justify-content-center">
                                <div class="col-sm-8" style="position: relative;">
                                    <div class="d-flex mb-4" style=" position: relative;">
                                        <div class="list-group-item-beta-dark list-group-item-action active w-auto"
                                             style="min-width: 65px;left: 0;box-sizing: border-box;padding: 10px;text-align: center; color: #fff;border-top-left-radius: 5px;border-bottom-left-radius: 5px;border: 1px solid#203038;">
                                            <span style="font-size: 20px; font-weight: 700;display: block;">24th</span>
                                            <span style="display: block;font-size: 0.8em;text-transform: uppercase;">February, 20203 </span>
                                        </div>
                                        <div class="w-100"
                                             style="padding: 1.5rem 2rem;border-top-right-radius: 10px;box-shadow: 0 15px 35px rgba(50, 50, 93, 0.1), 0 5px 15px rgba(0, 0, 0, 0.07);background-color: #fff;border-bottom-right-radius: 10px;border: 1px solid#203038;">
                                            <div class="timeline__content">
                                                <h3 style="font-weight: 400; margin-bottom:20px">Release
                                                    1.0.1</h3>
                                                <p style="color:#666; margin-bottom: 10px;">
                                                <span
                                                        style="font-size:12px;position:relative;">■</span>
                                                    <b>Enhancement</b> - Product is listed on the shop, based on the product quantity.
                                                </p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section>
                </div>
                <div class="tab-pane fade" id="UserGuide">
                    User Guide
                </div>
                <div class="tab-pane fade" id="FAQ">
                    <div class="card-body p-0">
                        <div class="text-center pb-5">
                            <h2 style="color: #0b3b52; font-weight: 600; font-size: 2.5rem;">Frequently Asked
                                Question</h2>
                        </div>
                        <div class="s_faq mx-2 mx-md-5 mb-5">
                            <div id="accordion">
                                <div class="card shadow mb-4" style="border: none; border-left: 10px solid #203038;">
                                    <div class="card-header py-4 pl-4 pr-5 bg-white position-relative d-flex justify-content-between"
                                         style="border: none;">
                                        <div class="pr-5" style="font-size: 1.6rem; font-weight: 600; color: #0b3b52;">
                                            Need
                                            some customization in this app, whom to contact?
                                        </div>
                                        <a class="card-link" data-toggle="collapse" href="#faqOne" style="
                                      width: 48px;
                                      height: 40px;
                                      line-height: 11px;
                                      background-color: rgba(8, 101, 99, 0.1);
                                      border-radius: 2px;
                                      padding: 0;
                                      font-size: 24px;"></a>
                                    </div>
                                    <div id="faqOne" class="collapse" data-parent="#accordion">
                                        <div class="card-body pt-0 pl-4">
                                            <div style="font-size: 1.4rem; color: #0b3b52;">
                                                Please drop email at sales@ksolves.com or raise a ticket through Odoo
                                                store
                                                itself.
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="card shadow mb-4" style="border: none; border-left: 10px solid #203038;">
                                    <div class="card-header py-4 pl-4 pr-5 bg-white position-relative d-flex justify-content-between"
                                         style="border: none;">
                                        <div class="pr-5" style="font-size: 1.6rem; font-weight: 600; color: #0b3b52;">
                                            Is this app compatible with Odoo Enterprise?
                                        </div>
                                        <a class="card-link collapsed" data-toggle="collapse" href="#faqThree" style="
                                      width: 48px;
                                      height: 40px;
                                      line-height: 11px;
                                      background-color: rgba(8, 101, 99, 0.1);
                                      border-radius: 2px;
                                      padding: 0;
                                      font-size: 24px;"></a>
                                    </div>
                                    <div id="faqThree" class="collapse" data-parent="#accordion">
                                        <div class="card-body pt-0 pl-4">
                                            <div style="font-size: 1.4rem; color: #0b3b52;">
                                                Yes, our app works with Odoo Enterprise as well as Community.
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- tab view / end -->
        </div>

        <section class="mb-5">
            <div class="text-center p-2 d-flex justify-content-center align-items-center col-lg-9"
                 style="background-color: #0b3b52;
            box-shadow: 1px 2px 11px rgba(0, 0, 0, 0), 1px 11px 12px rgba(0, 0, 0, 0.22);margin: auto;">
                <h3 class="font-weight-bold mb-0 mr-3 text-light">Note: </h3>
                <h5 class="mb-0 text-light" style="margin-top: 2px;">
                    Extensively Tested on Odoo Vanilla with Ubuntu OS
                </h5>
            </div>
        </section>
        <section class="card shadow-sm mb-5">
            <div class="card-body">
                <h2 class="w-100 text-center mb-3" style="font-weight: 400;">Ksolves Suggested Apps</h2>
                <div class="text-center w-100 mb-1">
                    <img src="images/line.png" alt="ksolves">
                </div>
                <div id="demo" class="carousel slide pb-5 col-12 col-lg-8 mx-auto" data-ride="carousel">
                    <!-- Indicators -->
                    <ul class="carousel-indicators">
                        <li data-target="#demo" style="background-color: #9d7092;" data-slide-to="0"
                            class="active"></li>
                        <li data-target="#demo" style="background-color: #9d7092;" data-slide-to="1"></li>
                    </ul>
                    <!-- The slideshow -->
                    <div class="carousel-inner pt-4 pt-lg-5 ">
                        <div class="carousel-item px-4 active">
                            <div class="row pb-sm-4 no-lg-gutters">
                                <div class="col-6 col-sm-3 text-center">
                                    <a href="https://apps.odoo.com/apps/modules/15.0/ks_dashboard_ninja/"
                                       class="d-block"
                                       target="_blank" style="text-decoration: none;">
                                        <img src="images/app-logo/dashboard-ninja.png" alt="dashboard-ninja">
                                        <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                            <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">
                                                Dashboard
                                                <br> Ninja</h5>
                                        </div>
                                    </a>
                                </div>
                                <div class="col-6 col-sm-3 text-center">
                                    <a href="https://apps.odoo.com/apps/modules/15.0/ks_list_view_manager/"
                                       target="_blank"
                                       style="text-decoration: none;">
                                        <img src="images/app-logo/list-view-manager.png" alt="list-view-manager">
                                        <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                            <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">List
                                                View
                                                <br> Manager</h5>
                                        </div>
                                    </a>
                                </div>
                                <div class="col-6 col-sm-3 text-center">
                                    <a href="https://apps.odoo.com/apps/modules/13.0/ks_sticky_pivot_view/"
                                       class="d-block"
                                       target="_blank" style="text-decoration: none;">
                                        <img src="images/app-logo/sticky-pivot-view.png" alt="sticky-pivot-view">
                                        <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                            <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">Sticky
                                                <br>Pivot
                                                View</h5>
                                        </div>
                                    </a>
                                </div>
                            <div class="col-6 col-sm-3 text-center">
                                <a href="https://apps.odoo.com/apps/modules/14.0/ks_woocommerce/" class="d-block"
                                   target="_blank" style="text-decoration: none;">
                                    <img src="images/app-logo/woocommerce.png" alt="woocoomerce" style="width:90px; border: 3px solid #203038; border-radius: 10px;">
                                    <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                        <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">Woo <br>Commerce
                                        </h5>
                                    </div>
                                </a>
                            </div>
                            </div>
                            <div class="row pt-3 pb-4 no-gutters">
                                <div class="col-6 col-sm-3 text-center">
                                    <a href="https://apps.odoo.com/apps/modules/13.0/ks_theme_base/" target="_blank"
                                       style="text-decoration: none;">
                                        <img src="images/app-logo/ksolves-theme-base.png" alt="ksolves-theme-base">
                                        <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                            <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">Ksolves
                                                <br>Theme
                                                Base</h5>
                                        </div>
                                    </a>
                                </div>
                                <div class="col-6 col-sm-3 text-center">
                                    <a href="https://apps.odoo.com/apps/modules/14.0/ks_pos_order_notes/"
                                       class="d-block"
                                       target="_blank" style="text-decoration: none;">
                                        <img src="images/app-logo/pos-per-item.png" alt="pos-per-item">
                                        <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                            <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">POS Per
                                                Item
                                                <br>& Order Note</h5>
                                        </div>
                                    </a>
                                </div>
                                <div class="col-6 col-sm-3 text-center">
                                    <a href="https://apps.odoo.com/apps/modules/15.0/ks_pos_dashboard_ninja/"
                                       target="_blank" style="text-decoration: none;">
                                        <img src="images/app-logo/pos_dashboard_ninja.png" alt="pos_dashboard_ninja">
                                        <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                            <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">POS <br>Dashboard
                                                Ninja</h5>
                                        </div>
                                    </a>
                                </div>
                                <div class="col-6 col-sm-3 text-center">
                                    <a href="https://apps.odoo.com/apps/modules/14.0/web_listview_sticky_header/"
                                       class="d-block" target="_blank" style="text-decoration: none;">
                                        <img src="images/app-logo/listview_sticky_header.png"
                                             alt="listview_sticky_header">
                                        <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                            <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">List
                                                View
                                                <br>Sticky Header</h5>
                                        </div>
                                    </a>
                                </div>
                            </div>
                        </div>
                        <div class="carousel-item px-4">
                            <div class="row pb-sm-4 no-gutters">
                            <div class="col-6 col-sm-3 text-center">
                                <a href="https://apps.odoo.com/apps/modules/15.0/ks_office365_contacts/" class="d-block"
                                   target="_blank" style="text-decoration: none;">
                                    <img src="images/app-logo/office365_contact.png" alt="Office365 Contacts">
                                    <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                        <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">Office
                                            365<br>Contacts</h5>
                                    </div>
                                </a>
                            </div>
                                <div class="col-6 col-sm-3 text-center">
                                    <a href="https://apps.odoo.com/apps/modules/13.0/universal_discount/"
                                       class="d-block"
                                       target="_blank" style="text-decoration: none;">
                                        <img src="images/app-logo/universal_discount.png" alt="Universal Discount">
                                        <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                            <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">
                                                Universal
                                                <br>Discount</h5>
                                        </div>
                                    </a>
                                </div>
                                <div class="col-6 col-sm-3 text-center">
                                    <a href="https://apps.odoo.com/apps/modules/13.0/ks_chat_edit_and_delete/"
                                       target="_blank" style="text-decoration: none;">
                                        <img src="images/app-logo/chat_edit_and_delete.png" alt="chat_edit_and_delete">
                                        <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                            <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">Odoo
                                                Chat
                                                <br>Edit/Delete</h5>
                                        </div>
                                    </a>
                                </div>
                            <div class="col-6 col-sm-3 text-center">
                                <a href="https://apps.odoo.com/apps/modules/15.0/ks_office365_calendar/" class="d-block"
                                   target="_blank" style="text-decoration: none;">
                                    <img src="images/app-logo/office365_calendar.png" alt="Office365 Calendar">
                                    <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                        <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">Office
                                            365<br>Calendar</h5>
                                    </div>
                                </a>
                            </div>
                            </div>
                            <div class="row pt-3 pb-4 no-gutters">
                                <div class="col-6 col-sm-3 text-center">
                                    <a href="https://apps.odoo.com/apps/modules/13.0/universal_tax/" target="_blank"
                                       style="text-decoration: none;">
                                        <img src="images/app-logo/universal_tax.png" alt="universal_tax">
                                        <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                            <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">
                                                Universal
                                                <br>Tax</h5>
                                        </div>
                                    </a>
                                </div>
                                <div class="col-6 col-sm-3 text-center">
                                    <a href="https://apps.odoo.com/apps/modules/13.0/ks_toggle_switch/" class="d-block"
                                       target="_blank" style="text-decoration: none;">
                                        <img src="images/app-logo/toggle_switch.png" alt="toggle_switch">
                                        <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                            <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">Toggle
                                                <br>Switch
                                            </h5>
                                        </div>
                                    </a>
                                </div>
                                <div class="col-6 col-sm-3 text-center">
                                    <a href="https://apps.odoo.com/apps/modules/13.0/odoo_paytm_gateway/"
                                       target="_blank"
                                       style="text-decoration: none;">
                                        <img src="images/app-logo/odoo_paytm_gateway.png" alt="odoo_paytm_gateway">
                                        <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                            <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">Odoo
                                                Paytm
                                                <br>Gateway</h5>
                                        </div>
                                    </a>
                                </div>
                                <div class="col-6 col-sm-3 text-center">
                                    <a href="https://apps.odoo.com/apps/modules/14.0/ks_low_stock_alert/"
                                       class="d-block"
                                       target="_blank" style="text-decoration: none;">
                                        <img src="images/app-logo/low_stock_alert.png" alt="low_stock_alert">
                                        <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                            <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">Low
                                                Stock
                                                <br>Alert</h5>
                                        </div>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Left and right controls -->
                    <a class="carousel-control-prev" href="#demo" data-slide="prev" style="left: -5%; width: 60px;">
                        <i class="fa fa-angle-left" style="font-size: 5vw;color: #333;"></i>
                    </a>
                    <a class="carousel-control-next" href="#demo" data-slide="next" style="right: -5%; width: 60px;">
                        <i class="fa fa-angle-right" style="font-size: 5vw;color: #333;"></i>
                    </a>
                </div>
            </div>
        </section>

        <div class="row pb-sm-5 px-1 pb-4">
            <h2 class="w-100 text-center my-3" style="font-weight: 400;">Ksolves Odoo Services</h2>
            <div class="text-center w-100 mb-4">
                <img src="images/line.png" alt="ksolves">
            </div>
            <div class="col-12 col-sm-6 col-md-4" style="margin-bottom: 20px;">
                <div class="card text-center bg-info" style="min-height: 90px;">
                    <div class="pt-4">
                        <img src="images/new_support.png" alt="support">
                    </div>
                    <div class="px-3 pt-3 pb-2">
                        <h5 class="card-title text-white" style="font-size: 19px; font-weight: 400;">Odoo
                            Implementation</h5>
                    </div>
                </div>
            </div>
            <div class="col-12 col-sm-6 col-md-4" style="margin-bottom: 20px;">
                <div class="card text-center" style="min-height: 90px; background-color: #2ebeb4">
                    <div class="pt-4">
                        <img src="images/new_apps.png" alt="apps">
                    </div>
                    <div class="px-3 pt-3 pb-2">
                        <h5 class="card-title text-white" style="font-size: 19px; font-weight: 400;">Odoo Community
                            Apps</h5>
                    </div>
                </div>
            </div>
            <div class="col-12 col-sm-6 col-md-4" style="margin-bottom: 20px;">
                <div class="card text-center"
                     style="min-height: 90px;background-color: #00a393; background-color: #98b1c4; ">
                    <div class="pt-4">
                        <img src="images/new_support2.png" alt="support2">
                    </div>
                    <div class="px-3 pt-3 pb-2">
                        <h5 class="card-title text-white" style="font-size: 19px; font-weight: 400;">Odoo Support &amp;
                            Maintenance</h5>
                    </div>
                </div>
            </div>
            <div class="col-12 col-sm-6 col-md-4" style="margin-bottom: 20px;">
                <div class="card text-center" style="min-height: 90px; background-color: #2f4e6f;">
                    <div class="pt-4">
                        <img src="images/new_custom.png" alt="custom">
                    </div>
                    <div class="px-3 pt-3 pb-2">
                        <h5 class="card-title text-white" style="font-size: 19px; font-weight: 400;">Odoo
                            Customization</h5>
                    </div>
                </div>
            </div>
            <div class="col-12 col-sm-6 col-md-4" style="margin-bottom: 20px;">
                <div class="card text-center" style="min-height: 90px; background-color: #f89c24;">
                    <div class="pt-4">
                        <img src="images/new_integrated.png" alt="integrated">
                    </div>
                    <div class="px-3 pt-3 pb-2">
                        <h5 class="card-title text-white" style="font-size: 19px; font-weight: 400;">Odoo Integration
                            Services</h5>
                    </div>
                </div>
            </div>
            <div class="col-12 col-sm-6 col-md-4" style="margin-bottom: 20px;">
                <div class="card text-center bg-primary" style="min-height: 90px;">
                    <div class="pt-4">
                        <img src="images/new_develop.png" alt="develop">
                    </div>
                    <div class="px-3 pt-3 pb-2">
                        <h5 class="card-title text-white" style="font-size: 19px; font-weight: 400;">Odoo Developer
                            Outsourcing</h5>
                    </div>
                </div>
            </div>
        </div>

        <div class="row no-gutters mx-0 justify-content-sm-between justify-content-center"
             style="border-top: 1px solid black;">
            <div class="mb-sm-0 mb-3 d-flex align-items-center">
                <img src="images/letter.svg" style="width: 35px;height: 35px;margin-right: 20px">
                <span style="font-size: 18px;">sales@ksolves.com</span>
            </div>
            <div class="d-flex align-items-center">
                <span style="font-size: 18px;">+91 120-4299799‬</span>
                <img src="images/smartphone.svg" style="width: 35px;height: 35px;margin-left: 20px;">
            </div>
        </div>
    </div>
</main>

<link href="https://apps.odoocdn.com/web/content/7247337-184ae0e/1/web.assets_frontend.css" rel="stylesheet">
<link rel="stylesheet" type="text/css" href="style.css">
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
</body>
</html>



===== .\az_ks_pos_low_stock_alert\static\description\style.css =====
===== .\az_ks_pos_low_stock_alert\static\description\images\description-icon.svg =====
<svg id="Description-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000"><defs><style>.cls-1{fill:#e32235;}</style></defs><title>Description-icon</title><path d="M196.89,977.58H590.38c5.28-3.59,11.29-6.46,15.73-10.9Q715.84,857.11,825.24,747.22a32.84,32.84,0,0,0,10.18-24.87c-.26-39.67-.07-79.35-.08-119q0-231.06-.19-462.12C835,89,798.44,42.56,748.3,29c-5.6-1.52-11.24-2.87-16.86-4.3H196.89c-12.28,3.92-25.37,6.24-36.69,12.05-47.1,24.16-67.82,63.68-67.62,116.48.6,158.15.24,316.3.26,474.45,0,78.45-.59,156.91.32,235.35.6,51.48,36.52,96.12,85.91,110.07C185,974.71,191,976.08,196.89,977.58Zm356.6-59.79c-2.75.21-4,.39-5.2.39q-168.37,0-336.76-.08C177.4,918,152,891.44,152,856.46q-.09-354.91,0-709.81c0-37.12,25.25-62.47,62.29-62.53q133.13-.2,266.25-.09,117.82,0,235.64.06c33.25.08,60,26.11,60,58.31q.09,272.12-.08,544.22c0,2.64-.35,5.28-.55,8.24h-12q-88.59,0-177.19,0c-21.34,0-32.93,12-32.92,33.65q.06,67.46,0,134.89ZM613.4,873V754.65H731.09Z"/><path class="cls-1" d="M464.14,523.59q-87.64,0-175.28,0c-14.58,0-25.2,8-29.29,21.2-3.68,11.86.11,25.33,10.82,31.94a40,40,0,0,0,19.87,5.8c97.69.36,195.38.25,293.07.25q26.43,0,52.86,0c20.57,0,33.93-11.8,33.81-29.81-.12-17.59-13.41-29.36-33.36-29.37q-86.25,0-172.5,0Z"/><path class="cls-1" d="M465.1,461.85H637.61c18.92,0,32.28-12.1,32.39-29.39.1-17.46-13-29.79-32-29.8q-174.36-.07-348.72,0c-17.95,0-31.08,12.77-31,29.89.11,16.72,13,29.26,30.56,29.29Q377,462,465.1,461.85Z"/><path class="cls-1" d="M465.14,324.12q56.57,0,113.12,0c19.06,0,32.37-12.19,32.35-29.4,0-17.45-13.05-29.77-32-29.79q-114.53-.14-229,0c-18.9,0-31.9,12.46-31.82,30,.08,17.29,13.26,29.22,32.44,29.23Q407.64,324.17,465.14,324.12Z"/></svg>

===== .\az_ks_pos_low_stock_alert\static\description\images\FAQ.svg =====
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 963.43 888.71"><defs><style>.cls-1{fill:none;stroke-width:34.06px;}.cls-1,.cls-2{stroke:#231f20;stroke-miterlimit:10;}.cls-2{fill:#e32235;stroke-width:0.97px;}</style></defs><title>Asset 5</title><g id="Layer_2" data-name="Layer 2"><g id="FAQ"><path class="cls-1" d="M229.72,639.2c-30.22,0-59.2.22-88.18-.08-17.59-.18-35.48.74-52.68-2.13C46.93,630,17,592.89,17,550.41q0-222,.06-444.07c0-49.54,39.38-89.26,88.61-89.27q374.49-.08,749,0c53.24,0,91.64,38.31,91.67,91.39q.1,220.49,0,441c0,50.28-39.09,89.64-89.28,89.7q-164.42.23-328.84-.14c-9.32,0-16,2.41-22.72,9q-107.73,105.75-216,210.92c-9.77,9.55-20.61,15.17-34.5,11.71-16.31-4.06-25.38-16.83-25.39-35.72q0-86.11.09-172.23C229.72,655.17,229.72,647.64,229.72,639.2Z"/><path class="cls-2" d="M756.17,407.55c6.44,6.15,12.46,11.34,17.83,17.13,13.64,14.72,9.36,34.26-9,42.37s-37.27,4.93-51-10.2c-9.31-10.28-18.16-14.58-33.4-13.49-73.92,5.3-123.92-43-124.16-117.19-.07-22.14,3.76-43.29,13.82-63.08,23.53-46.25,73.94-69.38,127.77-58.8,48,9.44,82.65,50.51,86.76,101.92C787.71,343,781.14,377,756.17,407.55ZM720.5,326.19c-2.29-12.71-3.18-23.85-6.41-34.27-6.37-20.62-19.75-30.7-40.14-31.5-20-.78-34.94,7.89-43.21,26.15-11.3,25-11.24,50.42.58,75.16,8,16.81,22.23,25.15,41,24.54,18.6-.6,32.93-8.89,39.68-26.5C716.28,348.69,718,336.63,720.5,326.19Z"/><path class="cls-2" d="M429.86,205.87c4.49,0,9,0,13.48,0,12.86.07,21.8,6.1,26.15,18.14q32.7,90.53,65,181.18c5.35,15.1-2.83,29.75-18.16,34.22-17.69,5.14-41.51-.67-47.45-24.25-6.28-24.93-7.6-24.58-33.9-24.42-9.68.05-19.41.6-29-.18-8.25-.67-11.83,2.74-13.58,10.26-1.48,6.36-4.4,12.39-5.84,18.76-5.48,24.24-44.68,27.69-58.3,11.7-6.67-7.81-8.37-16.69-4.93-26.14q33-90.94,66.46-181.76c4.26-11.58,13.06-17.45,25.53-17.47h14.52Zm14.28,130.46-15-45.64-2.24.17c-4.82,14.84-9.64,29.68-14.78,45.47Z"/><path class="cls-2" d="M242.81,262.82v36.49c13.84,0,27.21-.07,40.58,0,18.69.11,30,10.84,29.92,28.17C313.2,344.34,302,354.86,283.9,355c-13.4.08-26.8,0-41.54,0,0,18.12.17,35.27,0,52.42-.26,21.23-13,33.52-33.87,33-18-.46-30.32-11.54-30.46-29.8q-.7-89.16,0-178.33c.11-16.06,11.43-26.23,27.36-26.31q42.49-.22,85,0c17.91.09,29.17,11.05,29.14,27.89s-11.22,27.59-29.21,27.74c-14.85.12-29.71.13-44.57.23C245.08,261.81,244.46,262.23,242.81,262.82Z"/></g></g></svg>

===== .\az_ks_pos_low_stock_alert\static\description\images\Hot-Features-icon.svg =====
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000"><defs><style>.cls-1{fill:#010101;}.cls-2{fill:#e32235;}</style></defs><title>Hot-Features-icon</title><g id="Hot-Features-icon"><g id="surface1"><path class="cls-1" d="M78.35,829.47h32.43V797H78.35A32.44,32.44,0,0,1,45.91,764.6V115.91A32.44,32.44,0,0,1,78.35,83.47H791.91a32.44,32.44,0,0,1,32.44,32.44v32.43h32.43V115.91A64.87,64.87,0,0,0,791.91,51H78.35a64.87,64.87,0,0,0-64.87,64.87V764.6A64.87,64.87,0,0,0,78.35,829.47Z"/><path class="cls-1" d="M78.35,115.91h32.43v32.43H78.35Z"/><path class="cls-1" d="M143.22,115.91h32.43v32.43H143.22Z"/><path class="cls-1" d="M208.09,115.91h32.43v32.43H208.09Z"/><path class="cls-1" d="M143.22,894.34a64.87,64.87,0,0,0,64.87,64.87H921.65a64.87,64.87,0,0,0,64.87-64.87V245.65a64.87,64.87,0,0,0-64.87-64.87H208.09a64.87,64.87,0,0,0-64.87,64.87Zm32.43-648.69a32.44,32.44,0,0,1,32.44-32.44H921.65a32.44,32.44,0,0,1,32.44,32.44V894.34a32.44,32.44,0,0,1-32.44,32.44H208.09a32.44,32.44,0,0,1-32.44-32.44Z"/><path class="cls-1" d="M208.09,245.65h32.43v32.43H208.09Z"/><path class="cls-1" d="M273,245.65h32.43v32.43H273Z"/><path class="cls-1" d="M337.83,245.65h32.43v32.43H337.83Z"/><path class="cls-1" d="M208.09,310.52H921.65V343H208.09Z"/><path class="cls-1" d="M208.09,391.6H337.83V424H208.09Z"/><path class="cls-1" d="M208.09,456.47h97.3v32.44h-97.3Z"/><path class="cls-2" d="M564.87,521.34A113.53,113.53,0,1,0,678.39,634.86,113.51,113.51,0,0,0,564.87,521.34Zm0,194.61A81.09,81.09,0,1,1,646,634.86,81.09,81.09,0,0,1,564.87,716Z"/><path class="cls-2" d="M824.35,586.21A16.21,16.21,0,0,0,808.13,570H765.27a206.88,206.88,0,0,0-12.83-31l30.31-30.29a16.25,16.25,0,0,0,0-22.94L713.94,417A16.25,16.25,0,0,0,691,417l-30.29,30.3a209.05,209.05,0,0,0-31-12.81V391.6a16.21,16.21,0,0,0-16.22-16.21h-97.3A16.21,16.21,0,0,0,500,391.6v42.87a209.17,209.17,0,0,0-31,12.81L438.73,417a16.24,16.24,0,0,0-22.93,0L347,485.79a16.23,16.23,0,0,0,0,22.94L377.28,539c-1.35,2.66-2.66,5.32-3.89,8a209.77,209.77,0,0,0-8.92,23H321.61a16.21,16.21,0,0,0-16.22,16.21v97.31a16.21,16.21,0,0,0,16.22,16.21h42.86a206.88,206.88,0,0,0,12.83,31L347,761a16.22,16.22,0,0,0,0,22.93l68.81,68.82a16.24,16.24,0,0,0,22.93,0L469,822.45a210.25,210.25,0,0,0,31,12.81v42.87a16.21,16.21,0,0,0,16.22,16.21h97.3a16.21,16.21,0,0,0,16.22-16.21V835.26a210.13,210.13,0,0,0,31-12.81L691,852.75a16.25,16.25,0,0,0,22.94,0l68.81-68.82a16.24,16.24,0,0,0,0-22.93l-30.31-30.29a206.88,206.88,0,0,0,12.83-31h42.86a16.21,16.21,0,0,0,16.22-16.21ZM791.91,667.3H753.09a16.22,16.22,0,0,0-15.7,12.16,177.35,177.35,0,0,1-19,45.87,16.22,16.22,0,0,0,2.49,19.7l27.42,27.44-45.86,45.88L675,790.91a16.22,16.22,0,0,0-19.71-2.5,177,177,0,0,1-45.85,19,16.21,16.21,0,0,0-12.17,15.69v38.83H532.43V823.08a16.2,16.2,0,0,0-12.16-15.69,177,177,0,0,1-45.85-19,16.24,16.24,0,0,0-19.72,2.5l-27.43,27.44-45.86-45.88L408.83,745a16.22,16.22,0,0,0,2.49-19.7,177.35,177.35,0,0,1-19-45.87,16.22,16.22,0,0,0-15.7-12.16H337.83V602.43h38.82a16.22,16.22,0,0,0,15.7-12.16,176.88,176.88,0,0,1,10.54-29.73,180.32,180.32,0,0,1,8.43-16.21,16.23,16.23,0,0,0-2.49-19.69L381.41,497.2l45.86-45.88,27.43,27.44a16.22,16.22,0,0,0,19.72,2.49,177,177,0,0,1,45.85-19,16.21,16.21,0,0,0,12.16-15.69V407.82H597.3v38.83a16.21,16.21,0,0,0,12.17,15.69,177,177,0,0,1,45.85,19,16.22,16.22,0,0,0,19.71-2.5l27.44-27.44,45.86,45.88L720.91,524.7a16.22,16.22,0,0,0-2.49,19.7,177.35,177.35,0,0,1,19,45.87,16.22,16.22,0,0,0,15.7,12.16h38.82Z"/><path class="cls-1" d="M824.35,861.91h97.3v32.43h-97.3Z"/></g></g></svg>

===== .\az_ks_pos_low_stock_alert\static\description\images\letter.svg =====
<svg height="512" viewBox="0 0 64 64" width="512" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><linearGradient id="New_Gradient_Swatch_1" gradientUnits="userSpaceOnUse" x1="32" x2="32" y1="8.462" y2="55.216"><stop offset="0" stop-color="#fff33b"/><stop offset=".014" stop-color="#fee72e"/><stop offset=".042" stop-color="#fed51b"/><stop offset=".07" stop-color="#fdca10"/><stop offset=".1" stop-color="#fdc70c"/><stop offset=".4" stop-color="#f3903f"/><stop offset=".8" stop-color="#ed683c"/><stop offset="1" stop-color="#e93e3a"/></linearGradient><linearGradient id="New_Gradient_Swatch_1-2" x1="36" x2="36" xlink:href="#New_Gradient_Swatch_1" y1="8.462" y2="55.216"/><linearGradient id="New_Gradient_Swatch_1-3" x1="18" x2="18" xlink:href="#New_Gradient_Swatch_1" y1="8.462" y2="55.216"/><linearGradient id="New_Gradient_Swatch_1-5" x1="22" x2="22" xlink:href="#New_Gradient_Swatch_1" y1="8.462" y2="55.216"/><g id="Mail-6" data-name="Mail"><path d="m57 10h-50a5.006 5.006 0 0 0 -5 5v34a5.006 5.006 0 0 0 5 5h50a5.006 5.006 0 0 0 5-5v-34a5.006 5.006 0 0 0 -5-5zm-50 2h50a3 3 0 0 1 3 3v.46l-28 18.345-28-18.345v-.46a3 3 0 0 1 3-3zm53 5.851v27.383l-21.817-13.09zm-34.183 14.293-21.817 13.09v-27.383zm31.183 19.856h-50a3 3 0 0 1 -3-3v-1.434l23.675-14.2 3.777 2.474a1 1 0 0 0 1.1 0l3.777-2.474 23.671 14.2v1.434a3 3 0 0 1 -3 3z" fill="url(#New_Gradient_Swatch_1)"/><path d="m22 48h28v2h-28z" fill="url(#New_Gradient_Swatch_1-2)"/><path d="m16 48h4v2h-4z" fill="url(#New_Gradient_Swatch_1-3)"/><path d="m26 44h20v2h-20z" fill="url(#New_Gradient_Swatch_1-2)"/><path d="m20 44h4v2h-4z" fill="url(#New_Gradient_Swatch_1-5)"/></g></svg>

===== .\az_ks_pos_low_stock_alert\static\description\images\Odoo-Community-Apps.svg =====
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000"><defs><style>.cls-1{fill:#010101;}.cls-2{fill:#e32235;}</style></defs><title>Odoo-Community-Apps</title><g id="Layer_3" data-name="Layer 3"><path class="cls-1" d="M60.63,299.32V143.88a24.55,24.55,0,0,1,24.55-24.55H916.12a24.56,24.56,0,0,1,24.55,24.55V737.41A24.55,24.55,0,0,1,916.12,762H619.35a24.55,24.55,0,0,1,0-49.1H891.57V168.43H109.73v130.9a24.55,24.55,0,0,1-49.1,0ZM975.45,831.57H25.84a24.55,24.55,0,0,0,0,49.1H975.45a24.55,24.55,0,0,0,0-49.1ZM85.18,441.42A24.55,24.55,0,0,0,60.63,466V737.41A24.55,24.55,0,0,0,85.18,762H381.94a24.55,24.55,0,0,0,0-49.1H109.73V466A24.55,24.55,0,0,0,85.18,441.42ZM500.65,710.27a27.14,27.14,0,1,1-27.15,27.14,27.14,27.14,0,0,1,27.15-27.14Z"/><rect class="cls-2" x="238.61" y="271.8" width="205.89" height="56.76"/><rect class="cls-2" x="238.61" y="421.81" width="205.89" height="56.76"/><rect class="cls-2" x="238.61" y="571.82" width="205.89" height="56.76"/><rect class="cls-2" x="558.61" y="231.8" width="205.89" height="56.76"/><rect class="cls-2" x="558.61" y="341.81" width="205.89" height="56.76"/><rect class="cls-2" x="558.61" y="461.82" width="205.89" height="56.76"/><rect class="cls-2" x="558.61" y="581.8" width="205.89" height="56.76"/></g></svg>

===== .\az_ks_pos_low_stock_alert\static\description\images\Odoo-Customization.svg =====
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000"><defs><style>.cls-1{fill:#010101;}.cls-2{fill:#e32235;}</style></defs><title>Odoo-Customization</title><g id="Layer_2" data-name="Layer 2"><g id="surface1"><path class="cls-1" d="M79.67,839.4h32.44V807H79.67a32.43,32.43,0,0,1-32.43-32.44V125.84A32.43,32.43,0,0,1,79.67,93.4H793.24a32.43,32.43,0,0,1,32.43,32.44v32.43h32.44V125.84A64.88,64.88,0,0,0,793.24,61H79.67A64.88,64.88,0,0,0,14.8,125.84V774.53A64.87,64.87,0,0,0,79.67,839.4Z"/><path class="cls-1" d="M79.67,125.84h32.44v32.43H79.67Z"/><path class="cls-1" d="M144.54,125.84H177v32.43H144.54Z"/><path class="cls-1" d="M209.41,125.84h32.44v32.43H209.41Z"/><path class="cls-1" d="M144.54,904.27a64.87,64.87,0,0,0,64.87,64.87H923a64.87,64.87,0,0,0,64.87-64.87V255.58A64.87,64.87,0,0,0,923,190.71H209.41a64.87,64.87,0,0,0-64.87,64.87ZM177,255.58a32.43,32.43,0,0,1,32.43-32.44H923a32.43,32.43,0,0,1,32.43,32.44V904.27A32.43,32.43,0,0,1,923,936.71H209.41A32.43,32.43,0,0,1,177,904.27Z"/><path class="cls-1" d="M209.41,255.58h32.44V288H209.41Z"/><path class="cls-1" d="M274.28,255.58h32.44V288H274.28Z"/><path class="cls-1" d="M339.15,255.58h32.43V288H339.15Z"/><path class="cls-1" d="M209.41,320.45H923v32.43H209.41Z"/><path class="cls-1" d="M209.41,401.53H339.15V434H209.41Z"/><path class="cls-1" d="M209.41,466.4h97.31v32.44H209.41Z"/><path class="cls-2" d="M566.19,531.27A113.53,113.53,0,1,0,679.72,644.8,113.52,113.52,0,0,0,566.19,531.27Zm0,194.61a81.09,81.09,0,1,1,81.09-81.08A81.08,81.08,0,0,1,566.19,725.88Z"/><path class="cls-2" d="M825.67,596.14a16.21,16.21,0,0,0-16.22-16.21H766.59a204.8,204.8,0,0,0-12.83-31l30.31-30.29a16.22,16.22,0,0,0,0-22.93l-68.81-68.82a16.24,16.24,0,0,0-22.93,0L662,457.21a210.25,210.25,0,0,0-31-12.81V401.53a16.2,16.2,0,0,0-16.21-16.21H517.54a16.21,16.21,0,0,0-16.22,16.21V444.4a210.58,210.58,0,0,0-31,12.81l-30.29-30.3a16.25,16.25,0,0,0-22.94,0l-68.81,68.82a16.24,16.24,0,0,0,0,22.93L378.61,549c-1.36,2.66-2.66,5.32-3.9,8a209.71,209.71,0,0,0-8.91,23H322.93a16.2,16.2,0,0,0-16.21,16.21v97.31a16.2,16.2,0,0,0,16.21,16.21H365.8a205.79,205.79,0,0,0,12.82,31l-30.31,30.29a16.25,16.25,0,0,0,0,22.94l68.81,68.81a16.25,16.25,0,0,0,22.94,0l30.29-30.3a209.5,209.5,0,0,0,31,12.81v42.87a16.21,16.21,0,0,0,16.22,16.21h97.31a16.2,16.2,0,0,0,16.21-16.21V845.19a209.17,209.17,0,0,0,31-12.81l30.29,30.3a16.24,16.24,0,0,0,22.93,0l68.81-68.81a16.23,16.23,0,0,0,0-22.94l-30.31-30.29a204.8,204.8,0,0,0,12.83-31h42.86a16.21,16.21,0,0,0,16.22-16.21Zm-32.43,81.09H754.41a16.23,16.23,0,0,0-15.7,12.16,177.35,177.35,0,0,1-19,45.87,16.21,16.21,0,0,0,2.5,19.7l27.42,27.44-45.87,45.88-27.43-27.44a16.22,16.22,0,0,0-19.71-2.5,177,177,0,0,1-45.86,19A16.21,16.21,0,0,0,598.63,833v38.83H533.76V833a16.21,16.21,0,0,0-12.16-15.69,177,177,0,0,1-45.86-19,16.22,16.22,0,0,0-19.71,2.5l-27.44,27.44L382.73,782.4,410.15,755a16.22,16.22,0,0,0,2.5-19.7,177.38,177.38,0,0,1-19-45.87A16.22,16.22,0,0,0,378,677.23H339.15V612.36H378a16.22,16.22,0,0,0,15.7-12.16,180.41,180.41,0,0,1,19-45.94,16.23,16.23,0,0,0-2.5-19.69l-27.42-27.44,45.86-45.88L456,488.7a16.2,16.2,0,0,0,19.71,2.48,177.29,177.29,0,0,1,45.86-19,16.23,16.23,0,0,0,12.16-15.69V417.75h64.87v38.83a16.21,16.21,0,0,0,12.16,15.69,177,177,0,0,1,45.86,19,16.22,16.22,0,0,0,19.71-2.5l27.43-27.44,45.87,45.88-27.42,27.44a16.21,16.21,0,0,0-2.5,19.7,177.35,177.35,0,0,1,19,45.87,16.23,16.23,0,0,0,15.7,12.16h38.83Z"/><path class="cls-1" d="M825.67,871.84H923v32.43H825.67Z"/></g></g></svg>

===== .\az_ks_pos_low_stock_alert\static\description\images\Odoo-Developer-Outsourcing.svg =====
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000"><defs><style>.cls-1{fill:#010101;}.cls-2{fill:#e42135;}</style></defs><title>Odoo-Developer-Outsourcing</title><g id="Layer_6" data-name="Layer 6"><path class="cls-1" d="M870.11,554.82H854.48a98.15,98.15,0,0,0,20.36-59.94V467.54a98.69,98.69,0,1,0-197.37,0v21.25L531.73,343.05a29.2,29.2,0,0,0-30.66-6.83,29.2,29.2,0,0,0-30.66,6.83L324.67,488.79V467.54a98.69,98.69,0,0,0-197.38,0v27.34a98.15,98.15,0,0,0,20.37,59.94H132A127,127,0,0,0,5.13,681.71V938.39a19.38,19.38,0,0,0,19.38,19.38h81.84a19.64,19.64,0,0,0,5.57-.82,19.75,19.75,0,0,0,5.57.82h217a19.38,19.38,0,0,0,19.38-19.38V872.53a19.38,19.38,0,0,0-38.75,0V919H136.87V698.28a19.38,19.38,0,0,0-38.75,0V919H43.88V681.71A88.24,88.24,0,0,1,132,593.57H266.66a19.32,19.32,0,0,0,13.66-5.64l0,0L481.58,386.67a213.28,213.28,0,0,1-36.39,112.49L318.4,687.46a19.34,19.34,0,0,0-3.31,10.82v21.21a19.38,19.38,0,0,0,38.75,0v-15.3L477.32,520.8a253.1,253.1,0,0,0,23.75-44.18,253.72,253.72,0,0,0,23.74,44.18L648.3,704.19v234.2a19.38,19.38,0,0,0,19.37,19.38h217a19.69,19.69,0,0,0,5.57-.82,19.64,19.64,0,0,0,5.57.82h81.85A19.38,19.38,0,0,0,997,938.39V681.71A127,127,0,0,0,870.11,554.82ZM285.92,494.88a59.94,59.94,0,0,1-119.88,0V467.54a59.94,59.94,0,1,1,119.88,0Zm430.29-27.34a59.95,59.95,0,1,1,119.89,0v27.34a59.95,59.95,0,0,1-119.89,0ZM958.26,919H904V775.67a19.37,19.37,0,1,0-38.74,0V919H687V698.28a19.39,19.39,0,0,0-3.3-10.82L557,499.17a213.25,213.25,0,0,1-36.39-112.5L721.77,587.89c.26.26.5.47.73.67a19.32,19.32,0,0,0,13,5H870.11a88.25,88.25,0,0,1,88.15,88.14V919Z"/><path class="cls-1" d="M898.33,684.58A19.35,19.35,0,1,0,904,698.27,19.46,19.46,0,0,0,898.33,684.58Z"/><path class="cls-1" d="M348.16,787.15a19.36,19.36,0,1,0,5.68,13.7A19.52,19.52,0,0,0,348.16,787.15Z"/><path class="cls-2" d="M747.66,147.87a19.21,19.21,0,0,0-27.13-1.2L590.38,265.73l-83.11-72a19.19,19.19,0,0,0-25.15,0L338.71,317.91a19.21,19.21,0,1,0,25.14,29L494.69,233.63,578.15,306a19.2,19.2,0,0,0,25.54-.35L746.46,175A19.22,19.22,0,0,0,747.66,147.87Z"/><path class="cls-2" d="M814.35,84.57a19.23,19.23,0,0,0-17.18-5.34L688.33,99.72a19.21,19.21,0,0,0-10,32.46L766,219.89A19.21,19.21,0,0,0,798.44,210l21.13-108.2A19.22,19.22,0,0,0,814.35,84.57ZM767.64,167.2l-36.46-36.46,45.25-8.52Z"/></g></svg>

===== .\az_ks_pos_low_stock_alert\static\description\images\Odoo-Implementation.svg =====
<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000"><defs><style>.cls-1{fill:#010101;}.cls-2{fill:#e32235;}</style></defs><title>Odoo-Implementation</title><path class="cls-1" d="M335.81,5.77C199,5.77,88.06,116.69,88.06,253.52V435.19A115.77,115.77,0,0,0,203.68,550.81h16.51v-33H203.68a82.67,82.67,0,0,1-82.58-82.58V253.52c0-118.59,96.12-214.71,214.71-214.71s214.71,96.12,214.71,214.71V435.19a82.68,82.68,0,0,1-82.58,82.58H451.42v33h16.52A115.75,115.75,0,0,0,583.55,435.19V253.52C583.55,116.69,472.63,5.77,335.81,5.77Z"/><path class="cls-1" d="M141.59,784.16l12.08-19-27.9-17.7-12.07,19a164.63,164.63,0,0,0,6.82,186.36v43.91h33V947.19a16.49,16.49,0,0,0-3.62-10.32A131.6,131.6,0,0,1,141.59,784.16Z"/><path class="cls-2" d="M913.87,5.77H699.16a82.69,82.69,0,0,0-82.58,82.58V253.52a82.69,82.69,0,0,0,82.58,82.58h33v66.06a16.52,16.52,0,0,0,28.2,11.68l77.74-77.74h75.74a82.68,82.68,0,0,0,82.58-82.58V88.35A82.68,82.68,0,0,0,913.87,5.77Zm49.55,247.75a49.54,49.54,0,0,1-49.55,49.54H831.29a16.56,16.56,0,0,0-11.68,4.84l-54.38,54.39V319.58a16.52,16.52,0,0,0-16.52-16.52H699.16a49.55,49.55,0,0,1-49.55-49.54V88.35a49.55,49.55,0,0,1,49.55-49.54H913.87a49.54,49.54,0,0,1,49.55,49.54Z"/><rect class="cls-2" x="699.16" y="88.35" width="115.61" height="33.03"/><rect class="cls-2" x="847.81" y="88.35" width="66.06" height="33.03"/><rect class="cls-2" x="699.16" y="154.42" width="214.71" height="33.03"/><rect class="cls-2" x="699.16" y="220.48" width="115.61" height="33.03"/><path class="cls-1" d="M557.92,766.47l-12.08-19L518,765.15l12.07,19a131.55,131.55,0,0,1-8.34,152.69,16.54,16.54,0,0,0-3.62,10.32v49.55h33V952.83A164.65,164.65,0,0,0,557.92,766.47Z"/><path class="cls-1" d="M979.94,567.32H831.29A115.61,115.61,0,0,0,715.91,678.23l-49.78,89.61V699.45A115.74,115.74,0,0,0,550.52,583.84H490.15l-.45-.35-.29.35h-38a33,33,0,0,1-33-33V511.94A165.16,165.16,0,0,0,501,369.13V237a165.64,165.64,0,0,0-19.82-78.39,16.52,16.52,0,0,0-21.47-7.1L180.13,283.05A16.49,16.49,0,0,0,170.65,298v71.14a165.11,165.11,0,0,0,82.58,142.81v38.87a33,33,0,0,1-33,33H121.1A115.75,115.75,0,0,0,5.48,699.45V996.74h33V699.45a82.67,82.67,0,0,1,82.58-82.58h52.55L322.38,824.68a16.5,16.5,0,0,0,13.21,6.9h.22A16.52,16.52,0,0,0,349,825l156.9-208.1h44.6a82.69,82.69,0,0,1,82.58,82.58V831.58a16.52,16.52,0,0,0,30.95,8l77.86-140.14h94.68l-161,297.29h37.57l161.1-297.29h6.61A115.74,115.74,0,0,0,996.45,583.84,16.52,16.52,0,0,0,979.94,567.32ZM203.68,369.13V308.48l255-120A132.13,132.13,0,0,1,467.94,237V369.13a132.13,132.13,0,0,1-264.26,0ZM336.15,787.19l-51-71.22H389.83Zm78.67-104.25H261.48L214.2,616.87h6a66.07,66.07,0,0,0,66.07-66.06V526.68a165,165,0,0,0,99.09,0v24.13a66.07,66.07,0,0,0,66.07,66.06h13.21Zm466-16.52H750.36a82.73,82.73,0,0,1,80.93-66.07H961.77A82.72,82.72,0,0,1,880.84,666.42Z"/></svg>

===== .\az_ks_pos_low_stock_alert\static\description\images\Odoo-Integration-Services.svg =====
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000"><defs><style>.cls-1{fill:#040305;}.cls-2{fill:#e32235;}</style></defs><title>Odoo-Integration-Services</title><g id="Layer_5" data-name="Layer 5"><path class="cls-1" d="M864.29,359.32V323.43L997,317.26V250.68l-132.71-6.17V216.89H760.52V95.1A50.13,50.13,0,0,0,710.5,45H290.87A50.14,50.14,0,0,0,240.81,95.1V216.89H137.08v27.62L4.41,250.68v66.58l132.67,6.17v35.89H240.82V436.7H137.08v27.56L4.41,470.44V537l132.67,6.2v35.9H240.82v85.67H137.08v27.62L4.41,698.56v66.57l132.67,6.18V807.2H240.82V912.45a50.08,50.08,0,0,0,50.06,50H710.5a50.07,50.07,0,0,0,50-50V807.2H864.29V771.31L997,765.13V698.56l-132.71-6.18V664.76H760.52V579.09H864.29v-35.9L997,537V470.44l-132.71-6.18V436.7H760.52V359.32ZM970.68,723.65V740L838,746.15v34.69h-73.3V691.06H838v26.42ZM838,518.16v34.63h-73.3V463H838v26.44l132.71,6.18V512ZM970.68,275.81v16.35L838,298.34V333h-73.3V243.19H838v26.42ZM710.5,936.13H290.87a23.76,23.76,0,0,1-23.74-23.71V95.1a23.78,23.78,0,0,1,23.74-23.78H710.49A23.77,23.77,0,0,1,734.2,95.1V912.42A23.74,23.74,0,0,1,710.5,936.13ZM30.69,740V723.65l132.71-6.19V691h73.32v89.78H163.4V746.14Zm0-228V495.58L163.4,489.4V463h73.32v89.79H163.4V518.13Zm0-219.8V275.81l132.71-6.18V243.21h73.32V333H163.4V298.36Z"/><circle class="cls-2" cx="332.82" cy="142.97" r="32.5"/></g></svg>

===== .\az_ks_pos_low_stock_alert\static\description\images\Odoo-Support-Maintenance.svg =====
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000"><defs><style>.cls-1{fill:#010101;}.cls-2{fill:#e32235;}</style></defs><title>Odoo-Support-Maintenance</title><g id="Layer_4" data-name="Layer 4"><path class="cls-1" d="M435.7,320.68A49.37,49.37,0,0,0,386.39,370h32.88a16.44,16.44,0,1,1,32.87,0H485A49.37,49.37,0,0,0,435.7,320.68Z"/><path class="cls-1" d="M567.2,320.68A49.37,49.37,0,0,0,517.89,370h32.87a16.44,16.44,0,1,1,32.87,0h32.88A49.37,49.37,0,0,0,567.2,320.68Z"/><path class="cls-2" d="M501.45,764.46a65.75,65.75,0,1,0,65.75,65.75A65.82,65.82,0,0,0,501.45,764.46Zm0,98.62a32.87,32.87,0,1,1,32.87-32.87A32.9,32.9,0,0,1,501.45,863.08Z"/><path class="cls-1" d="M895.93,961.7V748c0-135.95-110.6-246.55-246.55-246.55h-17.9A199.27,199.27,0,0,0,648.05,485h17.77A82.28,82.28,0,0,0,748,402.86v-29a73.84,73.84,0,0,0-.2-123C745.62,116.83,636.05,8.38,501.45,8.38S257.28,116.83,255.1,250.9A73.92,73.92,0,0,0,296,386.42h11.2a196.85,196.85,0,0,0,64.25,115.06H353.52C217.57,501.48,107,612.08,107,748V961.7H8.35v32.88h986.2V961.7ZM715.13,402.86a49.23,49.23,0,0,1-42.72,48.64,195.55,195.55,0,0,0,23.31-65.08h11.19a69.77,69.77,0,0,0,8.22-.84ZM748,312.46a41.14,41.14,0,0,1-41.09,41.09h-8.22V271.37h8.22A41.14,41.14,0,0,1,748,312.46ZM304.21,353.55H296a41.09,41.09,0,0,1,0-82.18h8.22ZM296,238.49a70.55,70.55,0,0,0-7.43.76c8.09-110.5,100.37-198,212.89-198s204.8,87.5,212.89,198a70,70,0,0,0-7.43-.76H695.72C680,145.36,599,74.13,501.45,74.13S322.9,145.36,307.19,238.49ZM665.8,271c-118.62-4.18-197.22-52.68-197.22-98.21a16.44,16.44,0,0,0-32.88,0c0,41.07-42.47,75.11-97.66,81.14C346.8,171.45,416.74,107,501.45,107,591.93,107,665.57,180.52,665.8,271ZM337.08,353.55V286.88C388.42,282.43,432,257.67,453.72,223c34.38,45.56,114.74,77.63,212.1,80.9v49.64a163.34,163.34,0,0,1-33.19,98.62H501.45V485h98.19a163.49,163.49,0,0,1-166,18.08C376.81,477.25,337.08,420,337.08,353.55ZM450.65,543.92a191.29,191.29,0,0,0,101.61,0L501.45,645.53Zm24.21,121.93h-29l-65.74-131.5h29Zm118.93-131.5h29L557,665.85h-29ZM189.15,748V961.7h-49.3V748c0-114.48,90.56-207.94,203.76-213.17l65.5,131H271.34A82.27,82.27,0,0,0,189.15,748ZM780.87,961.7H222V748a49.37,49.37,0,0,1,49.31-49.31H731.56A49.37,49.37,0,0,1,780.87,748Zm82.19,0H813.75V748a82.27,82.27,0,0,0-82.19-82.18H593.79l65.5-131c113.2,5.23,203.77,98.69,203.77,213.17Z"/><rect class="cls-2" x="715.13" y="813.77" width="32.87" height="115.06"/><rect class="cls-2" x="715.13" y="748.03" width="32.87" height="32.87"/><rect class="cls-2" x="863.06" y="156.31" width="32.87" height="32.87"/><rect class="cls-2" x="863.06" y="222.06" width="32.87" height="32.87"/><rect class="cls-2" x="863.06" y="287.8" width="32.87" height="32.87"/><rect class="cls-2" x="106.97" y="353.55" width="32.87" height="32.87"/><rect class="cls-2" x="106.97" y="419.3" width="32.87" height="32.87"/><rect class="cls-2" x="106.97" y="485.04" width="32.87" height="32.87"/></g></svg>

===== .\az_ks_pos_low_stock_alert\static\description\images\Screenshot-icon.svg =====
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000"><defs><style>.cls-1{fill:none;stroke:#e32235;stroke-miterlimit:10;stroke-width:50px;}.cls-2{fill:#231f20;}</style></defs><title>Screenshot-icon</title><g id="ScreenShot-icon"><path d="M990.24,16.26V440.89H922.75V159.69H81.31V928.27h356.8v68H9.18v-980ZM109.58,49.51C91,50.27,79.07,60.81,79.14,82.13c.07,19.68,11.1,31.64,30.52,32.52,20.66.94,32.89-10.69,34.58-31.39C145.76,64.59,131.07,49.89,109.58,49.51ZM250.22,77.79c-2.38-17.12-13.5-28.88-34.5-28.21-19.91.64-30.42,12.2-30.94,32.05-.51,19.13,14,33.59,32.84,33.38S250.76,99.89,250.22,77.79Zm71.25-28.38c-18.9.82-30.83,11.46-30.72,32.79.1,19.69,11.15,31,30.66,32.67,18.63,1.59,34-13,34.72-31.67C356.81,64.35,342.73,49.73,321.47,49.41Z"/><circle class="cls-1" cx="718.46" cy="724.42" r="189.5"/><rect class="cls-2" x="887.81" y="659.88" width="40.3" height="152.59" transform="translate(1644.13 -171.78) rotate(90)"/><rect class="cls-2" x="505.81" y="659.88" width="40.3" height="152.59" transform="translate(1262.13 210.22) rotate(90)"/><rect class="cls-2" x="698.31" y="835.74" width="40.3" height="152.59" transform="translate(1436.92 1824.06) rotate(180)"/><rect class="cls-2" x="698.31" y="458.63" width="40.3" height="152.59" transform="translate(1436.92 1069.85) rotate(180)"/></g></svg>

===== .\az_ks_pos_low_stock_alert\static\description\images\Setup-icon.svg =====
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000"><defs><style>.cls-1,.cls-2{fill:none;stroke-miterlimit:10;stroke-width:35px;}.cls-1{stroke:#231f20;}.cls-2{stroke:#e32235;}</style></defs><title>Setup-icon</title><g id="Setup-icon"><path class="cls-1" d="M549.86,479.74A78.17,78.17,0,0,1,640.36,494l31.7-31.69A223.27,223.27,0,0,0,966.38,215.69a20.34,20.34,0,0,0-34.45-11.14l-47.06,47.07a98.15,98.15,0,0,1-138.8-138.8l47.07-47.06A20.33,20.33,0,0,0,782,31.31,222.88,222.88,0,0,0,588.22,93.77c-63.63,63.63-80.76,156.11-51.49,235.34L468,397.85Z"/><path class="cls-1" d="M424.6,604.3l-81.54-81.53L57.94,807.88A94.93,94.93,0,0,0,192.2,942.13L438,696.35A78.18,78.18,0,0,1,424.6,604.3Z"/><path class="cls-2" d="M606.45,528.18a29.88,29.88,0,0,0-42.23,0l-17,17L244,242l14.17-14.17a29.87,29.87,0,0,0-3.41-45.16l-123.7-91.1a29.86,29.86,0,0,0-38.82,2.93L39.72,147a29.86,29.86,0,0,0-2.93,38.82l91.1,123.7A29.87,29.87,0,0,0,173.05,313l14.18-14.18L490.41,602,472.2,620.2a29.85,29.85,0,0,0,0,42.23l279.69,279.7A94.93,94.93,0,0,0,886.15,807.88Z"/></g></svg>

===== .\az_ks_pos_low_stock_alert\static\description\images\smartphone.svg =====
<?xml version="1.0" encoding="iso-8859-1"?>
<!-- Generator: Adobe Illustrator 21.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px"
     viewBox="0 0 966.653 966.653" style="enable-background:new 0 0 966.653 966.653;" xml:space="preserve">
<g>
	<g id="smartphone_1_">
		
			<linearGradient id="SVGID_1_" gradientUnits="userSpaceOnUse" x1="483.3267" y1="995.5009" x2="483.3267" y2="-20.2906" gradientTransform="matrix(1 0 0 -1 0 949.7782)">
			<stop  offset="0" style="stop-color:#FFF33B"/>
			<stop  offset="0.014" style="stop-color:#FEE72E"/>
			<stop  offset="0.042" style="stop-color:#FED51B"/>
			<stop  offset="0.07" style="stop-color:#FDCA10"/>
			<stop  offset="0.1" style="stop-color:#FDC70C"/>
			<stop  offset="0.4" style="stop-color:#F3903F"/>
			<stop  offset="0.8" style="stop-color:#ED683C"/>
			<stop  offset="1" style="stop-color:#E93E3A"/>
		</linearGradient>
		<path style="fill:url(#SVGID_1_);" d="M694.718,0H271.936c-25.606,0.027-46.357,20.778-46.383,46.383V920.27
			c0.027,25.606,20.778,46.357,46.383,46.383h422.782c25.606-0.027,46.357-20.778,46.383-46.383V46.383
			C741.074,20.778,720.323,0.027,694.718,0z M271.936,32.222h422.782c7.814,0.018,14.144,6.348,14.161,14.161v50.282H257.774V46.383
			C257.792,38.569,264.122,32.24,271.936,32.222z M708.879,128.887v708.879H257.774V128.887H708.879z M694.718,934.432H271.936
			c-7.814-0.018-14.144-6.348-14.161-14.161v-50.282h451.105v50.282C708.861,928.084,702.531,934.414,694.718,934.432z"/>
		
			<linearGradient id="SVGID_2_" gradientUnits="userSpaceOnUse" x1="483.3267" y1="994.5021" x2="483.3267" y2="5.2613" gradientTransform="matrix(1 0 0 -1 0 949.7782)">
			<stop  offset="0" style="stop-color:#FFF33B"/>
			<stop  offset="0.014" style="stop-color:#FEE72E"/>
			<stop  offset="0.042" style="stop-color:#FED51B"/>
			<stop  offset="0.07" style="stop-color:#FDCA10"/>
			<stop  offset="0.1" style="stop-color:#FDC70C"/>
			<stop  offset="0.4" style="stop-color:#F3903F"/>
			<stop  offset="0.8" style="stop-color:#ED683C"/>
			<stop  offset="1" style="stop-color:#E93E3A"/>
		</linearGradient>
		<rect x="434.994" y="48.333" style="fill:url(#SVGID_2_);" width="96.665" height="32.222"/>
		
			<linearGradient id="SVGID_3_" gradientUnits="userSpaceOnUse" x1="676.6573" y1="998.7875" x2="676.6573" y2="-11.0591" gradientTransform="matrix(1 0 0 -1 0 949.7782)">
			<stop  offset="0" style="stop-color:#FFF33B"/>
			<stop  offset="0.014" style="stop-color:#FEE72E"/>
			<stop  offset="0.042" style="stop-color:#FED51B"/>
			<stop  offset="0.07" style="stop-color:#FDCA10"/>
			<stop  offset="0.1" style="stop-color:#FDC70C"/>
			<stop  offset="0.4" style="stop-color:#F3903F"/>
			<stop  offset="0.8" style="stop-color:#ED683C"/>
			<stop  offset="1" style="stop-color:#E93E3A"/>
		</linearGradient>
		<rect x="660.546" y="48.333" style="fill:url(#SVGID_3_);" width="32.222" height="32.222"/>
		
			<linearGradient id="SVGID_4_" gradientUnits="userSpaceOnUse" x1="483.3267" y1="978.3428" x2="483.3267" y2="-21.08" gradientTransform="matrix(1 0 0 -1 0 949.7782)">
			<stop  offset="0" style="stop-color:#FFF33B"/>
			<stop  offset="0.014" style="stop-color:#FEE72E"/>
			<stop  offset="0.042" style="stop-color:#FED51B"/>
			<stop  offset="0.07" style="stop-color:#FDCA10"/>
			<stop  offset="0.1" style="stop-color:#FDC70C"/>
			<stop  offset="0.4" style="stop-color:#F3903F"/>
			<stop  offset="0.8" style="stop-color:#ED683C"/>
			<stop  offset="1" style="stop-color:#E93E3A"/>
		</linearGradient>
		<rect x="451.105" y="886.099" style="fill:url(#SVGID_4_);" width="64.444" height="32.222"/>
	</g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
</svg>


===== .\az_ks_pos_low_stock_alert\static\description\images\WorkFlow-icon.svg =====
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000"><defs><style>.cls-1{fill:#e32235;}</style></defs><title>WorkFlow-icon</title><g id="Workflow-icon"><path class="cls-1" d="M185.58,835.55c-6.66-8-12.25-14.63-17.74-21.34-12.15-14.8-11.4-35.26,1.64-46.39,13.21-11.27,33.07-8.79,46,5.75,20.29,22.82,40.3,45.9,61,68.39,14.13,15.38,12.81,37.2.28,52.3-19.91,24-41.08,47-62.09,70C201,979.17,183.4,979.54,168,966.06c-12.48-10.91-13-29.17-1.23-43.71,5.87-7.23,11.84-14.35,19.2-23.26H47c-21.81,0-35.48-13.3-35.49-35q-.11-176.45,0-352.89c0-21.49,13.33-35,34.42-35q103.82-.07,207.64,0c15.14,0,27.71,9.17,31.82,22.63,3.86,12.64-1.28,27.82-13.4,34.64a43.43,43.43,0,0,1-20.25,5.12c-55.56.42-111.13.27-166.69.3H75.37V835.55Z"/><path class="cls-1" d="M815.41,538.92c7.52,9.13,13.56,16.27,19.38,23.59,11.43,14.39,9.9,33.81-3.45,45.49-13.56,11.87-31.31,10.87-44.27-3.35q-32.49-35.67-64.21-72c-10.9-12.44-10.36-34,.68-46.49q32.33-36.5,64.75-72.89c12-13.47,28.86-14.79,43.47-3.35,13.28,10.4,15.6,28.37,5,42.56-6.15,8.25-13,16-20.5,25.06H926.52V181.34H880.28c-44.2,0-88.41.1-132.61-.07-15.93-.06-29.06-10.59-32.06-24.89a31.25,31.25,0,0,1,18.4-35,37.4,37.4,0,0,1,14.16-2.72q103.85-.23,207.69,0C978.07,118.67,990,131,990,153.26q.06,174.54,0,349.09c0,23.7-12.28,36.34-35.73,36.45-42.57.18-85.15.1-127.73.12Z"/><path d="M502,372.45q68.73,0,137.44,0c22.86,0,34.36,11.11,34.41,33.93q.23,102.35,0,204.71c0,20.3-14.13,34.26-34.43,34.28q-137,.07-273.92,0c-25.6,0-37.91-12.88-37.88-38.66.06-65.64.44-131.28-.22-196.91-.21-20.47,13.09-38.19,37.12-37.64C410.32,373.2,456.16,372.45,502,372.45ZM609.86,581.61V435.8H391.69V581.61Z"/><path d="M499.79,285q-68.7,0-137.4,0c-21.42,0-34.65-13.09-34.69-34.49q-.15-101.36,0-202.7c0-22.39,13.43-35.62,35.91-35.63q137.42-.08,274.82,0c23,0,35.38,12.4,35.41,35.68q.12,100.86,0,201.72c0,22.8-12.81,35.41-35.67,35.43Q569,285,499.79,285ZM610.18,76H391.5V222H610.18Z"/><path d="M500.74,717.83q69.19,0,138.37,0c22.7,0,34.69,12,34.73,35q.13,101.34,0,202.69c0,21.83-13.5,35.15-35.37,35.16q-137.4.08-274.81,0c-22.49,0-36-13.35-36-35.59-.05-66.92.35-133.83-.24-200.74-.17-19.77,13.39-37.4,36.89-36.83C409.77,718.61,455.27,717.83,500.74,717.83ZM609.88,927.18V781H391.49V927.18Z"/></g></svg>

===== .\az_ks_pos_low_stock_alert\static\src\css\ks_low_stock.css =====
/*
    @Author: KSOLVES India Private Limited
    @Email: sales@ksolves.com
*/

.pos .quantity-count{
    color: white;
    line-height: 13px;
    padding: 2px 7px;
    border-radius: 2px;
    font-weight: bold;
    position: absolute;
    top: 2px;
    left: 2px;
}

.pos .product{
    transition: all 1s ease;
}

.pos .quantity-count.warn{
    background: #EF5350;
}

.pos .quantity-count.normal{
    background: #32a868;
}

.pos .product .overlay {
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.4);
  z-index: 2;
  pointer-events: none;
  display: flex;
  align-items: center;
  justify-content: center;
}

.pointer-none {
    pointer-events: none;
}

.pos .popup.popup-error p.body {
     white-space:pre-wrap;
}

.pos .text{
  font-size: 15px;
  color: black;
  line-height: 1;
  text-align: center;
}

===== .\az_ks_pos_low_stock_alert\static\src\js\ks_low_stock.js =====
odoo.define('az_ks_pos_low_stock_alert.ks_low_stock', function (require) {
    "use strict";

    let ks_models = require('point_of_sale.models');
    const KsPaymentScreen = require('point_of_sale.PaymentScreen');
    const ks_utils = require('az_ks_pos_low_stock_alert.utils');
    const Registries = require('point_of_sale.Registries');

    const { float_is_zero } = require('web.utils');

    ks_models.load_fields('product.product', ['type', 'qty_available']);
    let ks_super_pos = ks_models.PosModel.prototype;

    ks_models.PosModel = ks_models.PosModel.extend({
        initialize: function (session, attributes) {
            this.ks_load_product_quantity_after_product();
            ks_super_pos.initialize.call(this, session, attributes);
        },


        ks_get_model_reference: function (ks_model_name) {
            let ks_model_index = this.models.map(function (e) {
                return e.model;
            }).indexOf(ks_model_name);
            if (ks_model_index > -1) {
                return this.models[ks_model_index];
            }
            return false;
        },

        ks_load_product_quantity_after_product: function () {
            let ks_product_model = this.ks_get_model_reference('product.product');
            let ks_product_super_loaded = ks_product_model.loaded;
            ks_product_model.loaded = (self, ks_products) => {

                /*
                #  /\_/\
                # ( ◕‿◕ )
                #  >   <
                # Get the product qty in the location
                 */
                ks_products.forEach(ks_product => {
                    this.rpc({
                        model: 'product.product',
                        method: 'get_qty_in_location',
                        args: [ks_product.id, self.env.pos.config.id],
                    }).then(function (qty) {
                        self.db.qty_by_product_id[ks_product.id] = qty;
                    })
                });
                // ______ (｡◔‿◔｡) ________ End of code


                let done = $.Deferred();
                if (!self.config.allow_order_when_product_out_of_stock) {
                    let ks_blocked_product_ids = [];
                    for (let i = 0; i < ks_products.length; i++) {
                        if (ks_products[i].qty_available <= 0 && ks_products[i].type == 'product') {
                            ks_blocked_product_ids.push(ks_products[i].id);
                        }
                    }
                    let ks_blocked_products = ks_products.filter(function (p, index, arr) {
                        return ks_blocked_product_ids.includes(p.id);
                    });
                    ks_products = ks_products.concat(ks_blocked_products);
                }

                ks_product_super_loaded(self, ks_products);
                self.ks_update_qty_by_product_id(self, ks_products);
                done.resolve();
            }
        },

        ks_update_qty_by_product_id(self, ks_products) {
            if (!self.db.qty_by_product_id) {
                self.db.qty_by_product_id = {};
            }
            ks_products.forEach(ks_product => {
                self.db.qty_by_product_id[ks_product.id] = ks_product.qty_available;
            });
            self.ks_update_qty_on_product();
        },

        ks_update_qty_on_product: function () {
            let self = this;
            let ks_products = self.db.product_by_id;
            let ks_product_quants = self.db.qty_by_product_id;
            for (let pro_id in self.db.qty_by_product_id) {
                ks_products[pro_id].qty_available = ks_product_quants[pro_id];
            }
        },

        push_single_order: function (ks_order, opts) {
            let ks_pushed = ks_super_pos.push_single_order.call(this, ks_order, opts);
            if (ks_order) {
                this.ks_update_product_qty_from_order(ks_order);
            }
            return ks_pushed;
        },

        ks_update_product_qty_from_order: function (ks_order) {
            let self = this;
            ks_order.orderlines.forEach(line => {
                let ks_product = line.get_product();
                if (ks_product.type == 'product') {
                    ks_product.qty_available -= line.get_quantity();
                    self.ks_update_qty_by_product_id(self, [ks_product]);
                }
            });
        }
    });

    // overriding the existing class to validate the payment order
    const ks_payment = (KsPaymentScreen) =>
        class extends KsPaymentScreen {

            async validateOrder(isForceValidate) {
                if (this.env.pos.get_order().orderlines.length > 0) {
                    if (await this._isOrderValid(isForceValidate) && ks_utils.ks_validate_order_items_availability(this.env.pos.get_order(), this.env.pos.config)) {
                        // remove pending payments before finalizing the validation

                        for (let line of this.paymentLines) {
                            if (!line.is_done()) this.currentOrder.remove_paymentline(line);
                        }
                    }
                    await this._finalizeValidation();
                } else {










                const order = this.currentOrder;
                const change = order.get_change();
                const paylaterPaymentMethod = this.env.pos.payment_methods.filter(
                    (method) =>
                        this.env.pos.config.payment_method_ids.includes(method.id) && method.type == 'pay_later'
                )[0];
                const existingPayLaterPayment = order
                    .get_paymentlines()
                    .find((payment) => payment.payment_method.type == 'pay_later');
                if (
                    order.get_orderlines().length === 0 &&
                    !float_is_zero(change, this.env.pos.currency.decimals) &&
                    paylaterPaymentMethod &&
                    !existingPayLaterPayment
                ) {
                    const client = order.get_client();
                    if (client) {
                        const { confirmed } = await this.showPopup('ConfirmPopup', {
                            title: this.env._t('The order is empty'),
                            body: _.str.sprintf(
                                this.env._t('Do you want to deposit %s to %s?'),
                                this.env.pos.format_currency(change),
                                order.get_client().name
                            ),
                            confirmText: this.env._t('Yes'),
                        });
                        if (confirmed) {
                            const paylaterPayment = order.add_paymentline(paylaterPaymentMethod);
                            paylaterPayment.set_amount(-change);
                            return super.validateOrder(...arguments);
                        }
                    } else {
                        const { confirmed } = await this.showPopup('ConfirmPopup', {
                            title: this.env._t('The order is empty'),
                            body: _.str.sprintf(
                                this.env._t(
                                    'Do you want to deposit %s to a specific customer? If so, first select him/her.'
                                ),
                                this.env.pos.format_currency(change)
                            ),
                            confirmText: this.env._t('Yes'),
                        });
                        if (confirmed) {
                            const { confirmed: confirmedClient, payload: newClient } = await this.showTempScreen(
                                'ClientListScreen'
                            );
                            if (confirmedClient) {
                                order.set_client(newClient);
                            }
                            const paylaterPayment = order.add_paymentline(paylaterPaymentMethod);
                            paylaterPayment.set_amount(-change);
                            return super.validateOrder(...arguments);
                        }
                    }
                } else {
                    return super.validateOrder(...arguments);
                }
            }





        }
};

Registries.Component.extend(KsPaymentScreen, ks_payment);

return KsPaymentScreen;

})
;

===== .\az_ks_pos_low_stock_alert\static\src\js\ks_product_list.js =====
/*
    @Author: KSOLVES India Private Limited
    @Email: sales@ksolves.com
*/

odoo.define('az_ks_pos_low_stock_alert.ks_product_list', function (require) {
    "use strict";
    const KsProductItem = require('point_of_sale.ProductItem');
    const Registries = require('point_of_sale.Registries');

    const ks_product_item = (KsProductItem) =>
        class extends KsProductItem {
            addOverlay (){

               let task;
               clearInterval(task);
               task = setTimeout(function () {
                   $(".overlay").parent().addClass('pointer-none');
               }, 100);
            }
        };

    Registries.Component.extend(KsProductItem,ks_product_item);
    return KsProductItem;
})

===== .\az_ks_pos_low_stock_alert\static\src\js\ks_product_screen.js =====
/*
    @Author: KSOLVES India Private Limited
    @Email: sales@ksolves.com
*/

odoo.define('az_ks_pos_low_stock_alert.ks_product_screen', function (require) {
    "use strict";
    const KsProductScreen = require('point_of_sale.ProductScreen');
    const ks_utils = require('az_ks_pos_low_stock_alert.utils');
    const Registries = require('point_of_sale.Registries');

    const ks_product_screen = (KsProductScreen) =>
        class extends KsProductScreen {
            _onClickPay() {
                let self = this;
                let order = self.env.pos.get_order();
                if(ks_utils.ks_validate_order_items_availability(self.env.pos.get_order(), self.env.pos.config)) {
                    let has_valid_product_lot = _.every(order.orderlines.models, function(line){
                        return line.has_valid_product_lot();
                    });
                    if(!has_valid_product_lot){
                        self.showPopup('ConfirmPopup',{
                            'title': _t('Empty Serial/Lot Number'),
                            'body':  _t('One or more product(s) required serial/lot number.'),
                            confirm: function(){
                                self.showScreen('PaymentScreen');
                            },
                        });
                    } else{
                        this.showScreen('PaymentScreen');
                    }
                }

        }
    };

    Registries.Component.extend(KsProductScreen,ks_product_screen);

    return KsProductScreen;
    });

===== .\az_ks_pos_low_stock_alert\static\src\js\ks_product_widget.js =====
odoo.define('az_ks_pos_low_stock_alert.ksProductWidget', function(require) {
    'use strict';

    const { useState } = owl;
    const { patch } = require('web.utils');
    const PosComponent = require('point_of_sale.ProductsWidget');
    const Registries = require('point_of_sale.Registries');

    patch(PosComponent.prototype, 'az_ks_pos_low_stock_alert.KsProductWidget', {
        get productsToDisplay() {
            const list = this._super();
            return list.sort((a, b) => b.qty_available - a.qty_available);
        }

    })

});


===== .\az_ks_pos_low_stock_alert\static\src\js\ks_utils.js =====
/*
    @Author: KSOLVES India Private Limited
    @Email: sales@ksolves.com
*/

odoo.define('az_ks_pos_low_stock_alert.utils', function (require) {
    "use strict";

    let _t = require('web.core')._t;
    const { Gui } = require('point_of_sale.Gui');

    function ks_validate_order_items_availability(ks_order, config, ks_gui) {

        let isValid = true, ks_order_line;

        if(!config.allow_order_when_product_out_of_stock) {
            for(let i = 0; i < ks_order.get_orderlines().length ; i++) {
                ks_order_line = ks_order.get_orderlines()[i];
                if(ks_order_line.get_product().type == 'product' && (ks_order_line.get_quantity() > ks_order_line.get_product().qty_available)) {
                    isValid = false;
                    break;
                }
            }
        }
        if(!isValid){
            Gui.showPopup('ErrorPopup', {
                title: _t('Cannot order a product more than its availability'),
                body: _t(ks_order_line.get_product().display_name + ' has only ' + ks_order_line.get_product().qty_available + ' items available. \n You\'re trying to order ' + ks_order_line.get_quantity() + '.'),
            });
        }
        return isValid;
    }

    return {
        ks_validate_order_items_availability: ks_validate_order_items_availability
    }
});

===== .\az_ks_pos_low_stock_alert\static\src\xml\ks_low_stock.xml =====
<?xml version="1.0" encoding="UTF-8"?>

<!--
    @Author: KSOLVES India Private Limited
    @Email: sales@ksolves.com
-->

<templates id="az_ks_pos_low_stock_alert.template" xml:space="preserve">
    <t t-name="ProductItem" t-inherit="point_of_sale.ProductItem" t-inherit-mode="extension" owl="1">
        <xpath expr="//div[hasclass('product-img')]" position="before">
            <t t-if="(props.product.type == 'product' and (env.pos.config.allow_order_when_product_out_of_stock == false) and props.product.qty_available lte 0)">
                <div class="overlay">
                    <t t-esc="addOverlay()"><span class="text">Out-Of-Stock</span></t>
                </div>
            </t>
        </xpath>

        <xpath expr="//div[hasclass('product-img')]" position="after">
            <t t-if="(props.product.type == 'product' and env.pos.config.display_stock)">
                <span t-attf-class="quantity-count {{props.product.qty_available lte env.pos.config.minimum_stock_alert ? 'warn' : 'normal'}}">
                    <t t-esc="props.product.qty_available"/>
                </span>
            </t>
        </xpath>
    </t>
</templates>

===== .\az_ks_pos_low_stock_alert\views\assets.xml =====
<?xml version="1.0" encoding="utf-8"?>

<!--
    @Author: KSOLVES India Private Limited
    @Email: sales@ksolves.com
-->

<odoo>
    <data>
        <template id="az_ks_pos_low_stock_alert.assets" inherit_id="point_of_sale.assets" name="point_of_sale assets">
            <xpath expr="." position="inside">
                <link rel="stylesheet" href="/az_ks_pos_low_stock_alert/static/src/css/ks_low_stock.css"/>
                <script type="text/javascript" src="/az_ks_pos_low_stock_alert/static/src/js/ks_utils.js"/>
                <script type="text/javascript" src="/az_ks_pos_low_stock_alert/static/src/js/ks_low_stock.js"/>
                <script type="text/javascript" src="/az_ks_pos_low_stock_alert/static/src/js/ks_product_list.js"/>
                <script type="text/javascript" src="/az_ks_pos_low_stock_alert/static/src/js/ks_product_screen.js"/>
            </xpath>
        </template>
    </data>
</odoo>


===== .\az_ks_pos_low_stock_alert\views\config.xml =====
<?xml version="1.0" encoding="utf-8"?>

<!--
    @Author: KSOLVES India Private Limited
    @Email: sales@ksolves.com
-->

<odoo>
    <record id="pos_config" model="ir.ui.view">
        <field name="name">pos.config</field>
        <field name="model">pos.config</field>
        <field name="inherit_id" ref="point_of_sale.pos_config_view_form"/>
        <field name="arch" type="xml">
            <xpath expr='//div[@id="inventory_location"]' position='after'>
                <h2>POS Low Stock Alert</h2>
                <div class="row mt16 o_settings_container" id="pos_session_stock">
                    <div class="col-xs-12 col-md-6 o_setting_box" title="Display Quantity of Products in POS">
                         <div class="o_setting_left_pane">
                            <field name="display_stock"/>
                        </div>
                        <div class="o_setting_right_pane">
                            <label for="display_stock" string="Display Product Stock"/>
                            <div class="text-muted">
                                Check this to display product stock
                            </div>
                        </div>
                    </div>

                    <div class="col-xs-12 col-md-6 o_setting_box" title="Allow Order when Product is Out of Stock">
                         <div class="o_setting_left_pane">
                            <field name="allow_order_when_product_out_of_stock"/>
                        </div>
                        <div class="o_setting_right_pane">
                            <label for="allow_order_when_product_out_of_stock" string="Allow order when product is out-of-stock"/>
                        </div>
                    </div>

                    <div class="col-xs-12 col-md-6 o_setting_box" attrs="{'invisible':[('display_stock', '=', False)]}">
                        <div class="o_setting_right_pane">
                            <label for="minimum_stock_alert" string="Minimum Stock Alert"/>
                            <div class="text-muted">
                                Show stock in red color when it is lower than
                            </div>
                            <field name="minimum_stock_alert"/>
                        </div>
                    </div>


                </div>
            </xpath>
        </field>
    </record>
</odoo>

===== .\az_sales_report\__init__.py =====
# -*- coding: utf-8 -*-

from . import wizard
from . import report

===== .\az_sales_report\__manifest__.py =====
# -*- coding: utf-8 -*-

{
    "name" : "AZ Sales Report",
    "version" : "15.0.0.0",
    "category" : "Sales",
    'summary': 'Sales Report by Product',
    "description": """Sales Report by Product""",
    "author": "Ehab Mosilhy",
    "depends" : ['base','sale_management'],
    "data": [
        'security/ir.model.access.csv',
        'report/sales_report.xml',
        'report/sales_report_template.xml',
        'wizard/sales_report_view.xml',
            ],
}


===== .\az_sales_report\i18n\ar.po =====
===== .\az_sales_report\i18n\ar_001.po =====
===== .\az_sales_report\report\sales_report.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <record id="paperformat_stock_card_report" model="report.paperformat">
        <field name="name">Sales Report Template</field>
        <field name="default" eval="True"/>
        <field name="format">A4</field>
        <field name="orientation">Portrait</field>
        <field name="margin_top">40</field>
        <field name="margin_bottom">15</field>
        <field name="margin_left">5</field>
        <field name="margin_right">5</field>
        <field name="header_line" eval="False"/>
        <field name="header_spacing">40</field>
        <field name="dpi">90</field>
    </record>

    <record id="sales_report_action_view" model="ir.actions.report">
        <field name="name">Sales Report</field>
        <field name="model">az.sales.report</field>
        <field name="binding_model_id" ref="model_az_sales_report"/>
        <field name="report_type">qweb-pdf</field>
        <field name="report_name">az_sales_report.sales_report_template</field>
        <field name="report_file">az_sales_report.sales_report_template</field>
        <field name="paperformat_id" ref="paperformat_stock_card_report"/>
        <field name="binding_type">report</field>
    </record>
</odoo>

===== .\az_sales_report\report\sales_report_template.xml =====
===== .\az_sales_report\report\sales_report_view.py =====
# -*- coding: utf-8 -*-

from odoo import models, api, fields, _
import operator
from datetime import datetime, date
from odoo.tools.float_utils import float_round


class SalesReportTemplate(models.AbstractModel):
    _name = 'report.az_sales_report.sales_report_template'
    _description = 'Stock Card Report Template'

    def get_product_detail(self, data):
        # Retrieve date range for filtering stock moves
        company_id  = data.get('company_id')
        start_date_data = data.get('date_from')
        end_date_data = data.get('date_to')

        # Depending on the report type, construct the product IDs SQL
        product_ids = data.get('product_ids')
        product_ids_clause = ""
        params = [start_date_data, end_date_data, company_id]

        if product_ids:
            product_ids_clause = "AND aml.product_id IN %s"
            params.append(tuple(product_ids.ids))

        # Construct the SQL to fetch all relevant stock moves
        stock_move_sql = f"""
               SELECT
            aml.product_id,
            pt.code as code,
            pt.name as name,
            SUM(aml.quantity) as quantity,
            SUM(aml.price_total) as total_price_tax,
            SUM(aml.price_subtotal) as total_price_no_tax
        FROM account_move_line aml
        JOIN account_move am ON aml.move_id = am.id
        JOIN product_product pp ON aml.product_id = pp.id
        JOIN product_template pt ON pp.product_tmpl_id = pt.id
        WHERE am.invoice_date BETWEEN %s AND %s
        AND am.state = 'posted'
        {product_ids_clause}
        AND am.move_type IN ('out_invoice', 'out_refund')
        and am.company_id = %s
        GROUP BY aml.product_id, pt.code, pt.name
        order by pt.code
        """
        self.env.cr.execute(stock_move_sql, tuple(params))
        stock_moves = self.env.cr.dictfetchall()

        sums={}
        for move in stock_moves:
            sums['qty'] = sums.get('qty', 0) + move.get('quantity', 0)
            sums['total_price_tax'] = sums.get('total_price_tax', 0) + move.get('total_price_tax', 0)
            sums['total_price_no_tax'] = sums.get('total_price_no_tax', 0) + move.get('total_price_no_tax', 0)

        stock_moves.append(sums)
        return stock_moves

    @api.model
    def _get_report_values(self, docids, data=None):
        date_from = data['form']['date_from']
        date_to = data['form']['date_to']
        company_id = data['form']['company_id'][0]
        product_ids = self.env['product.product'].search([('product_tmpl_id', 'in', data['form']['product_tmpl_ids'])])

        data = {
            'date_from': date_from,
            'date_to': date_to,
            'product_ids': product_ids,
            'company_id': company_id,
        }
        docargs = {
            'doc_model': 'az.sales.report',
            'data': data,
            'get_product_detail': self.get_product_detail,
        }
        return docargs


===== .\az_sales_report\report\__init__.py =====
# -*- coding: utf-8 -*-

from . import sales_report_view



===== .\az_sales_report\security\ir.model.access.csv =====
"id","name","model_id:id","group_id:id","perm_read","perm_write","perm_create","perm_unlink"
az_sales_report.access_sales_report,access_sales_report,az_sales_report.model_az_sales_report,base.group_user,1,1,1,1

===== .\az_sales_report\wizard\sales_report.py =====
# -*- coding: utf-8 -*-

from odoo import fields, models, api
from odoo.exceptions import  ValidationError

class SalesReport(models.TransientModel):
    _name = "az.sales.report"
    _description = "Sales Report"

    date_from = fields.Date('Start Date', required=True)
    date_to = fields.Date('End Date', required=True)
    company_id = fields.Many2one('res.company',string="Company", default=lambda self: self.env.company
                                 , required=True)
    product_tmpl_ids = fields.Many2many('product.template',string="Product")

    @api.constrains('date_from', 'date_to')
    def _check_dates(self):
        for record in self:
            if record.date_from and record.date_to:
                if record.date_to < record.date_from:
                    raise ValidationError("End date must be greater than start date!")

    def get_sales_report(self):
        [data] = self.read()
        datas = {
             'ids': [1],
             'model': 'az.sales.report',
             'form': data
        }
        action = self.env.ref('az_sales_report.sales_report_action_view').report_action(self, data=datas)
        return action


===== .\az_sales_report\wizard\sales_report_view.xml =====
<?xml version="1.0" encoding="utf-8"?>

<odoo>
    <data>
        <record id="sales_report_form" model="ir.ui.view">
            <field name="name">sales.report.form.view</field>
            <field name="model">az.sales.report</field>
            <field name="arch" type="xml">
                <form string="Sales Report">
                    <sheet>
                        <group>
                            <group>
                                <field name="company_id"/>
                            </group>
                            <group>
                                <field name="date_from"/>
                                <field name="date_to"/>
                            </group>
                        </group>
                        <div>
                            <group>
                                <field name="product_tmpl_ids">
                                    <tree>
                                        <field name="code" string="Code"/>
                                        <field name="name"/>
                                    </tree>
                                </field>
                            </group>
                        </div>
                    </sheet>
                    <footer>
                        <button name="get_sales_report" type="object" string="Print" class="btn btn-primary"/>
                        <button string="Cancel" class="btn-secondary" special="cancel"/>
                    </footer>
                </form>
            </field>
        </record>

        <record id="sales_report_action_form" model="ir.actions.act_window">
            <field name="name">Sales Report</field>
            <field name="res_model">az.sales.report</field>
            <field name="view_mode">form</field>
            <field name="target">new</field>
        </record>

        <menuitem id="sales_report_menu"
                  name="Sales Report📈"
                  parent="sale.menu_sale_report"
                  action="sales_report_action_form"
                  sequence="10"/>
    </data>
</odoo>

===== .\az_sales_report\wizard\__init__.py =====
# -*- coding: utf-8 -*-

from . import sales_report

===== .\az_temporary\__init__.py =====
from . import models


===== .\az_temporary\__manifest__.py =====
{
    "name": "Azbah - Temp",
    "version": "15.0.1",
    "license": "LGPL-3",
    "depends": ["base","account", "stock","az_account_batch_purchase"],
    "data": [
        "views/bank_statement.xml",
        "views/invoice_without_po.xml",
    ],
}


===== .\az_temporary\migrations\15.0.1\pre-migration.py =====
from odoo import apix, SUPERUSER_ID

def migrate(cr, version):
    env = api.Environment(cr, SUPERUSER_ID, {})
    invoices_to_update = env['account.move'].search([('invoice_origin', '=', False), ('batch_purchase_id', '!=', False)])
    for invoice in invoices_to_update:
        invoice.write({'invoice_origin': invoice.batch_purchase_id})


===== .\az_temporary\models\account_move.py =====
from odoo import models, fields, api
from datetime import timedelta


class AccountMove(models.Model):
    _inherit = 'account.move'

    def _fix_date(self, _move, picking, picking_out, _date):
        picking.date = _date
        picking.date_done
        picking.scheduled_date
        picking_out.date
        picking_out.date_done
        picking_out.scheduled_date
        _move.date = _date

    def get_serial(self, direction):
        last_picking = self.env['stock.picking'].search([
            ('name', 'like', f'S01/{direction.upper()}/X%')
        ], order='name desc', limit=1)

        if last_picking:
            last_count = int(last_picking.name.split('X')[-1])
            count = last_count + 1
        else:
            count = 1

        picking_name = f"S01/{direction.upper()}/X{str(count).zfill(4)}"
        return picking_name

    def action_solve_all_invoices(self):
        excluded_ids = sorted([252615,309713,197524,188653,187511,178693,176535,174604,161080,198559,154013,268762,132386,267511,267220,267210,266861,266376,266369,122170,121320,264511,102956,88269,79262,72766,261018,257539,36083,252272,251164])
        bills = self.env['account.move'].search([('invoice_origin', '=', False),
                                                 ('batch_purchase_id', '=', False)
                                                 ,('state', '=', 'posted')
                                                 ,('invoice_date', '!=', False)
                                                 ,('journal_id', '=',2) # Journal for Vendor Bills
                                                 , ('id', 'not in',excluded_ids )
                                                 ])
        for record in bills:
            try:
                record.action_create_stock_transfer(record)
            except Exception as e:
                # Roll back the transaction in case of an exception
                self.env.cr.rollback()
                print(f"Invoice: {record.name} - {record.id} - Error: {str(e)}")
                continue


    def action_create_stock_transfer(self, rec=None):

        if not rec:
            rec=self
        for record in rec:
            if not record.invoice_origin and not record.batch_purchase_id:
                    # Access move lines associated with the account move
                    move_lines = record.invoice_line_ids
                    picking_type = self.env['stock.picking.type'].search([], limit=1)  # Adjust the domain as needed

                    # Create the initial stock picking (Vendor to S1)
                    picking_vals = {
                        'move_type': 'direct',
                        'picking_type_id': picking_type.id,
                        'partner_id': record.partner_id.id,
                        'location_id': 4,  # Vendor location
                        'location_dest_id': 536,  # S1 location
                        'date': record.invoice_date,
                        'date_done': record.invoice_date,
                        'scheduled_date': record.invoice_date,
                        'origin': record.name,
                        'name': self.get_serial('IN')
                    }

                    picking = self.env['stock.picking'].create(picking_vals)
                    # print (f'record_id {record.id}')
                    # Create stock moves for the initial picking
                    for line in move_lines:
                        self.env['stock.move'].create({
                            'name': line.name or 'Vendor to S1',
                            'product_id': line.product_id.id,
                            'product_uom': line.product_uom_id.id,
                            'product_uom_qty': line.quantity,
                            'quantity_done': line.quantity,
                            'date': record.invoice_date,
                            'date_deadline': record.invoice_date,
                            'picking_id': picking.id,
                            'location_id': picking.location_id.id,
                            'location_dest_id': picking.location_dest_id.id,
                        })

                    # Confirm and mark as done the initial picking
                    picking.action_confirm()
                    picking.action_assign()

                    picking.button_validate()

                    del picking_vals['partner_id']
                    # Create the subsequent stock picking (S1 to Production)
                    picking_vals.update({
                        'picking_type_id': 552,  # (الرئيسى-القديمة) (MAIN-OLD) التسلسل للخارج
                        'location_id': 536,  # S1 location
                        'location_dest_id': 5,  # Production location
                        'date': fields.Datetime.add(record.invoice_date, hours=1),
                        'date_done': fields.Datetime.add(record.invoice_date, hours=1),
                        'scheduled_date': fields.Datetime.add(record.invoice_date, hours=1),
                        'name': self.get_serial('OUT')
                    })
                    picking_out = self.env['stock.picking'].create(picking_vals)

                    # Create stock moves for the subsequent picking
                    for line in move_lines:
                        _move = self.env['stock.move'].create({
                            'name': line.name or 'S1 to Production',
                            'product_id': line.product_id.id,
                            'product_uom': line.product_uom_id.id,
                            'quantity_done': line.quantity,
                            'product_uom_qty': line.quantity,
                            'date': fields.Datetime.add(record.invoice_date, hours=1),
                            'picking_id': picking_out.id,
                            'location_id': picking_out.location_id.id,
                            'location_dest_id': picking_out.location_dest_id.id,
                        })

                    # Confirm and mark as done the subsequent picking
                    picking_out.action_confirm()
                    picking_out.action_assign()
                    picking_out.button_validate()

                    record.invoice_origin = picking_out.name
                    self._fix_date(_move, picking, picking_out, record.invoice_date)



===== .\az_temporary\models\edit_amount.py =====
from odoo import fields, models, api


class AccountBankStatement(models.Model):
    _inherit = 'account.bank.statement'
    new_amount = fields.Char("القيمة الجديدة")

    def button_edit_amount(self):
        if self.new_amount:
            self.new_amount = float(self.new_amount.replace(",", ""))
            sql = f"update account_bank_statement_line set amount={self.new_amount} where statement_id={self.id}; "
            sql2 = """
                    UPDATE account_bank_statement AS s
                    SET balance_end = (
                    SELECT SUM(amount)
                    FROM account_bank_statement_line AS l
                    WHERE l.statement_id = s.id
                   ) + s.balance_start;
            """
            sql3 = """
            update account_bank_statement set balance_end_real=balance_end; -- where balance_end_real<>balance_end;
            """

            self.env.cr.execute(sql)
            self.env.cr.execute(sql2)
            self.env.cr.execute(sql3)


===== .\az_temporary\models\stock_picking.py =====
from odoo import fields, models, api


from odoo import SUPERUSER_ID, _, api, fields, models
from odoo.exceptions import UserError

class StockPicking(models.Model):
    _inherit = 'stock.picking'

    # The field date_done needs to be read-writeable because it is used for enetering old data
    date_done = fields.Datetime(readonly=False)


    def _action_done(self):
        """Call `_action_done` on the `stock.move` of the `stock.picking` in `self`.
        This method makes sure every `stock.move.line` is linked to a `stock.move` by either
        linking them to an existing one or a newly created one.

        If the context key `cancel_backorder` is present, backorders won't be created.

        :return: True
        :rtype: bool
        """
        self._check_company()

        todo_moves = self.mapped('move_lines').filtered(lambda self: self.state in ['draft', 'waiting', 'partially_available', 'assigned', 'confirmed'])
        for picking in self:
            if picking.owner_id:
                picking.move_lines.write({'restrict_partner_id': picking.owner_id.id})
                picking.move_line_ids.write({'owner_id': picking.owner_id.id})
        todo_moves._action_done(cancel_backorder=self.env.context.get('cancel_backorder'))

        # ______ (｡◔‿◔｡) ________ Disable changing Effective Date
        #self.write({'date_done': fields.Datetime.now(), 'priority': '0'})

        # if incoming moves make other confirmed/partially_available moves available, assign them
        done_incoming_moves = self.filtered(lambda p: p.picking_type_id.code == 'incoming').move_lines.filtered(lambda m: m.state == 'done')
        done_incoming_moves._trigger_assign()

        self._send_confirmation_email()
        return True


    def write(self, vals):
        if len(self) == 1:
            if 'date_done' in vals and vals.get('date_done'):
                vals['date'] = vals.get('date_done')
            elif 'date_done' in self and self.date_done:
                vals['date'] = self.date_done
        res = super(StockPicking, self).write(vals)
        ml= self.env['stock.move.line'].search([('picking_id', 'in', self.ids)])
        if 'date' in  vals:
            for l in ml:
                l.date=vals.get('date')
                l.move_id.date=vals.get('date')

        return res

===== .\az_temporary\models\__init__.py =====
from . import edit_amount
from . import stock_picking
from . import account_move


===== .\az_temporary\views\bank_statement.xml =====
<?xml version='1.0' encoding='utf-8'?>
<odoo>


    <record id="view_bank_statement_amount" model="ir.ui.view">
        <field name="name">account.bank.statement.amount</field>
        <field name="model">account.bank.statement</field>
        <field name="inherit_id" ref="account.view_bank_statement_form"/>

        <field name="arch" type="xml">
            <div name="button_box" position="inside">
                <button class="oe_stat_button" name="button_edit_amount"
                        type="object"
                        string="Edit Amount" icon="fa-pencil"/>
            </div>
            <xpath expr="//label[@for='balance_start']" position="before">
                <field name="new_amount"/>
            </xpath>
        </field>

    </record>

</odoo>


===== .\az_temporary\views\invoice_without_po.xml =====
<?xml version='1.0' encoding='utf-8'?>
<odoo>
    <data>
        <record id="az_account_move_inherited" model="ir.ui.view">
            <field name="name">az.account.move.no.po</field>
            <field name="model">account.move</field>
            <field name="inherit_id" ref="account.view_move_form"/>
            <field name="arch" type="xml">
                <xpath expr="//header" position="inside">
                    <button string="Create Stock Transfer" type="object"
                            name="action_create_stock_transfer"
                            attrs="{'invisible': [('invoice_origin', '!=', False)]}"
                            class="oe_highlight"/>


                     <button string="Automatic Invoices" type="object"
                            name="action_solve_all_invoices"
                            attrs="{'invisible': ['|',('invoice_origin', '!=', False), ('batch_purchase_id', '!=', False)]}"
                            class="oe_highlight"/>

                </xpath>
            </field>
        </record>
    </data>
</odoo>


===== .\bi_pos_restrict_zero_qty\LICENSE =====
Odoo Proprietary License v1.0

This software and associated files (the "Software") may only be used (executed,
modified, executed after modifications) if you have purchased a valid license
from the authors, typically via Odoo Apps, or if you have received a written
agreement from the authors of the Software (see the COPYRIGHT file).

You may develop Odoo modules that use the Software as a library (typically
by depending on it, importing it and using its resources), but without copying
any source code or material from the Software. You may distribute those
modules under the license of your choice, provided that this license is
compatible with the terms of the Odoo Proprietary License (For example:
LGPL, MIT, or proprietary licenses similar to this one).

It is forbidden to publish, distribute, sublicense, or sell copies of the Software
or modified copies of the Software.

The above copyright notice and this permission notice must be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.



===== .\bi_pos_restrict_zero_qty\ReadME.txt =====
=> 15.0.0.1(26/07/2023) :Remove quantity validation for service product. 


===== .\bi_pos_restrict_zero_qty\__init__.py =====
# -*- coding: utf-8 -*-
# Part of BrowseInfo. See LICENSE file for full copyright and licensing details.


from . import models



===== .\bi_pos_restrict_zero_qty\__manifest__.py =====
# -*- coding: utf-8 -*-
# Part of BrowseInfo. See LICENSE file for full copyright and licensing details.

{
    'name': 'POS Restrict Zero Quantity',
    'version': '15.0.0.1',
    'category': 'Point of Sale',
    'summary': 'Point Of Sale Restrict Zero Quantity pos restrict negative stock sales of products with zero or negative stock levels pos restrict zero stock product pos Restrict product with zero Quantity pos order line restriction with zero Quantity on pos',
    'description' :"""
       The Point Of Sale Restrict Zero Quantity Odoo App helps users to prevents the sales of products with zero or negative stock levels, ensuring that businesses never run out of stock. Additionally, the app can be configured to display a warning message when the stock level of a product is getting low. When a customer attempts to purchase a product with a stock level below the minimum, the app will display an error message, preventing the sale from going through.
    """,
    'author': 'BrowseInfo',
    'website': 'https://www.browseinfo.in',
    'depends': ['base','point_of_sale'],
    'data': [
        'views/pos_config_view.xml',
    ],
    'assets':{
        'point_of_sale.assets': [
            'bi_pos_restrict_zero_qty/static/src/css/**/*',
            'bi_pos_restrict_zero_qty/static/src/js/**/*',
         ],
        'web.assets_qweb': [
            'bi_pos_restrict_zero_qty/static/src/xml/**/*',
        ]
    },
    'demo': [],
    'test': [],
    'license':'OPL-1',
    'installable': True,
    'auto_install': False,
    'live_test_url':'https://youtu.be/6pUwaykhfQE',
    "images":['static/description/Banner.gif'],
}


===== .\bi_pos_restrict_zero_qty\models\pos.py =====
# -*- coding: utf-8 -*-
# Part of BrowseInfo. See LICENSE file for full copyright and licensing details.

from odoo import api, fields, models, _


class PosConfig(models.Model):
	_inherit = "pos.config"

	restrict_zero_qty = fields.Boolean(string='Restrict Zero Quantity')



===== .\bi_pos_restrict_zero_qty\models\product_product.py =====
from odoo import api, fields, models


class ProductProduct(models.Model):
    _inherit = 'product.product'

    def get_qty_in_location(self, pos_config_id):
        picking_type_id = self.env['pos.config'].search([('id', '=', pos_config_id)]).picking_type_id
        location_id = picking_type_id.default_location_src_id
        return self.env['stock.quant']._get_available_quantity(self, location_id)


===== .\bi_pos_restrict_zero_qty\models\__init__.py =====
# -*- coding: utf-8 -*-
# Part of BrowseInfo. See LICENSE file for full copyright and licensing details.

from . import pos
from . import product_product

===== .\bi_pos_restrict_zero_qty\security\ir.model.access.csv =====
id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink


===== .\bi_pos_restrict_zero_qty\static\description\index.html =====
<section class="oe_container lead mt64">
	<div>
		<div class="col-md-12 mt16" style="padding:0;">
            <div class="col-md-12" style="padding:0;">
                <div class="panel-group mb0 mt0" role="tablist" id="priceAccordeon" style="padding:0;">
                    <div class="panel-heading mb0 mt0 collapsed" role="tab" data-toggle="collapse" data-parent="#priceAccordeon" data-target="#priceAccordeon_area" aria-expanded="false" style="margin-left:0;padding:0 0 2px 0;text-align:right;">
                        <strong>
                        	<div style="background-color:#875A7B;color:white;padding:5px;margin-bottom:3px;text-align:center;border-radius:5px;white-space:nowrap;display: inline-block;">
                                <strong style="color:white;">
                                    Supported :
                                </strong>
                            </div>
                            <div style="background-color:#875A7B;color:white;padding:5px;margin-bottom:3px;text-align:center;border-radius:5px;white-space:nowrap;display: inline-block;">
                                <strong style="color:white;" title="The tool is compatible with the Odoo Enterprise version">
                                    <i class="fa fa-check" style="margin-left:4px;"> </i>
                                    Enterprise
                                </strong>
                            </div>
                            <div style="background-color:#875A7B;padding:5px;margin-top:3px;text-align:center;border-radius:5px;white-space:nowrap;display: inline-block;">
                                <strong style="color:white;" title="The tool is compatible with the Odoo Community version">
                                    <i class="fa fa-check" style="margin-left:4px;"> </i>
                                    Community
                                </strong>
                            </div>
                            <div style="background-color:#875A7B;color:white;padding:5px;margin-bottom:3px;text-align:center;border-radius:5px;white-space:nowrap;display: inline-block;">
                                <strong style="color:white;" title="The tool might be installed to Odoo.sh if you have a linked private git repository">
                                    <i class="fa fa-check" style="margin-left:4px;"> </i>
                                    Odoo.sh
                                </strong>
                            </div>
                        </strong>
                    </div>
                </div>
            </div>
        </div>
	</div>
</section>

<section class="oe_container lead bi_title_box">
	<div >
		<div >
			<h2 class="oe_slogan bi_title" style="color:#5082c4;">
				<b>Point of Sales Restrict Zero Quantity Odoo App</b>
			</h2>
			<h3 class="oe_slogan bi_title" style="color: ##201111;">
				<b>POS Order Line Restrict Zero Quantity Odoo Apps</b>
			</h3>
			<p class="oe_slogan">
				Point Of Sale Restrict Zero Quantity Odoo App helps users to prevent the sales of products with zero or negative stock levels, ensuring that businesses never run out of stock. Additionally, the app can be configured to display a warning message when the stock level of a product is getting low. When a customer attempts to purchase a product with a stock level below the minimum, the app will display an error message, preventing the sale from going through.
			</p>
		</div>
	</div>
</section>

<section class="oe_container lead bi_features">
	<div >
		<div>
			<h3 class="oe_slogan" style="opacity:1;background: linear-gradient(to right, #86bcf2 0%, #e2f2f8 100%);padding: 10px 0px;color: ##201111;letter-spacing: 0.2em;text-transform: uppercase;text-shadow: 0.1em .04em 0.1em #7d8c88;"><b>Features</b></h3>
		</div>
		<div class="row">
			<div class="col" style="margin: 10px;">
				<div class="row">
					<div class="col-md-3 text-center">
						<img class="img img-responsive" style="max-width:100%;" src="features/8021071.png"/>
					</div>
					<div class="col-md-9">
					  <h4><b>Restrict Zero Quantity Configuration</b></h4>
					  <span class="oe_slogan">User have option to enable or disable zero quantity configuration.</span>
					</div>
				</div>
			</div>
			<div class="col" style="margin: 10px;">
				<div class="row">
					<div class="col-md-3 text-center">
						<img class="img img-responsive" style="max-width:100%;" src="features/5139322.png"/>
					</div>
					<div class="col-md-9">
						<h4><b>Zero Quantity Product Validation</b></h4>
						<span class="oe_slogan">Raise warning on point of sale if product quantity is zero.</span>
					</div>
				</div>
			</div>
		</div>
	</div>
</section>

<section class="oe_container lead mt64">
	<div >
		<div class="oe_slogan oe_spaced text-center">
			<a class="btn mt8 mr8" title="Demo Request" style="background-color: #2875aa;color: #FFFFFF !important;font-size: 20px;font-weight: bold;border-radius: 7px;" href="mailto:sales@browseinfo.in?Subject=Demo Request for POS Restrict Zero Quantity Odoo App" target="_top"> Demo Request </a>
			<a class="btn mt8 ml8" title="Video Tutorial" style="background-color: #2875aa;color: #FFFFFF !important;font-size: 20px;font-weight: bold;border-radius: 7px;" href="https://youtu.be/6pUwaykhfQE" target="_blank"> Video Tutorial</a>
		</div>
	</div>
</section>

<section class="oe_container lead">
	<div>
		<div>
			<p class="oe_slogan" style="color: #49a3fe;font-size: 35px;font-style: italic;font-weight:bolder;">Restrict Zero Quantity Configuration</p>
			<p class="oe_slogan">User have option to enable and disable configuration for restrict zero quantity validatoin.</p>
			<img class="img-border img-responsive thumbnail mb16" style="border: 3px solid black;" src="1_pos_config.png">
		</div>
	</div>
</section>

<section class="oe_container lead">
	<div>
		<div>
			<p class="oe_slogan" style="color: #49a3fe;font-size: 35px;font-style: italic;font-weight:bolder;">On Hand Qty</p>
			<p class="oe_slogan">User can see product with zero on hand quantity.</p>
			<img class="img-border img-responsive thumbnail mb16" style="border: 3px solid black;" src="2_onhand.png">
		</div>
	</div>
</section>

<section class="oe_container lead">
	<div>
		<div>
			<p class="oe_slogan" style="color: #49a3fe;font-size: 35px;font-style: italic;font-weight:bolder;">Zero Quantity Product Validation</p>
			<p class="oe_slogan">User can see warning when user selects product with zero quantity and click "Payment" button in point of sale screen.</p>
			<img class="img-border img-responsive thumbnail mb16" style="border: 3px solid black;" src="3_warning.png">
		</div>
	</div>
</section>

<section class="oe_container oe_dark" style="min-width: 110%;margin-left: -5%;">
	<div>
		<div class="row">
			<div class="col-sm-4" style="margin: auto;">
				<p class="oe_slogan" style="font-size: 35px;color: #5082c4;font-style: italic;font-weight: bold;">Apps May You Like</p>
			</div>
		</div>
		<div class="row col-sm-12" style="margin-left: 1%;padding: 1% 8%;">
			<div class="col-sm-4" style="padding: 5px;padding-right: 10px;">
				<a href="https://apps.odoo.com/apps/modules/15.0/bi_pos_reprint_reorder/">
					<img class="img img-responsive" src="related/bi_pos_reprint_reorder.png" style="width: 100%;"/>
				</a>
			</div>
			<div class="col-sm-4" style="padding: 5px;padding-right: 10px;">
				<a href="https://apps.odoo.com/apps/modules/15.0/bi_pos_warranty/">
					<img class="img img-responsive" src="related/bi_pos_warranty.png" style="width: 100%;"/>
				</a>
			</div>
			<div class="col-sm-4" style="padding: 5px;padding-right: 10px;">
				<a href="https://apps.odoo.com/apps/modules/15.0/bi_pos_screen_margin/">
					<img class="img img-responsive" src="related/bi_pos_screen_margin.png" style="width: 100%;"/>
				</a>
			</div>
			<div class="col-sm-4" style="padding: 5px;padding-right: 10px;">
				<a href="https://apps.odoo.com/apps/modules/15.0/bi_pos_return_order/">
					<img class="img img-responsive" src="related/bi_pos_return_order.png" style="width: 100%;"/>
				</a>
			</div>
			<div class="col-sm-4" style="padding: 5px;padding-right: 10px;">
				<a href="https://apps.odoo.com/apps/modules/15.0/pos_coupons_gift_voucher/">
					<img class="img img-responsive" src="related/pos_coupons_gift_voucher.png" style="width: 100%;"/>
				</a>
			</div>
			<div class="col-sm-4" style="padding: 5px;padding-right: 10px;">
				<a href="https://apps.odoo.com/apps/modules/15.0/pos_home_delivery/">
					<img class="img img-responsive" src="related/pos_home_delivery.png" style="width: 100%;"/>
				</a>
			</div>
		</div>
	</div>
</section>

<section class="oe_container oe_dark" style="min-width: 110%;margin-left: -5%;">
	<div>
		<div class="row">
			<div class="col-sm-4" style="margin: auto;">
				<p class="oe_slogan" style="font-size: 35px;color: #5082c4;font-style: italic;font-weight: bold;">Most Demanded Apps</p>
			</div>
		</div>
		<div class="row col-sm-12" style="margin-left: 1%;padding: 1% 8%;">
			<div class="col-sm-4" style="padding: 5px;padding-right: 10px;">
				<a href="https://apps.odoo.com/apps/modules/15.0/pos_orders_all/">
					<img class="img img-responsive" src="demanded/all_in_one_pos.png" style="width: 100%;"/>
				</a>
			</div>
			<div class="col-sm-4" style="padding: 5px;padding-right: 10px;">
				<a href="https://apps.odoo.com/apps/modules/15.0/bi_customer_overdue_statement/">
					<img class="img img-responsive" src="demanded/customer_overdue.png" style="width: 100%;"/>
				</a>
			</div>
			<div class="col-sm-4" style="padding: 5px;padding-right: 10px;">
				<a href="https://apps.odoo.com/apps/modules/15.0/generic_excel_report/">
					<img class="img img-responsive" src="demanded/generic_excel_report.png" style="width: 100%;"/>
				</a>
			</div>
			<div class="col-sm-4" style="padding: 5px;padding-right: 10px;">
				<a href="https://apps.odoo.com/apps/modules/15.0/sales_commission_generic/">
					<img class="img img-responsive" src="demanded/sale_commision.png" style="width: 100%;"/>
				</a>
			</div>
			<div class="col-sm-4" style="padding: 5px;padding-right: 10px;">
				<a href="https://apps.odoo.com/apps/modules/15.0/bi_generic_import/">
					<img class="img img-responsive" src="demanded/bi_generic_import.png" style="width: 100%;"/>
				</a>
			</div>
			<div class="col-sm-4" style="padding: 5px;padding-right: 10px;">
				<a href="https://apps.odoo.com/apps/modules/15.0/branch/">
					<img class="img img-responsive" src="demanded/branch.png" style="width: 100%;"/>
				</a>
			</div>
		</div>	
	</div>
</section>

<section class="oe_container">
	<div >
		<div >
			<h2 class="oe_slogan">Free Support</h2>
			<h3 class="oe_slogan" style="font-size: 21px; color: #000000 !important;">You will get 90 Days free support incase any bugs or issue (Except data recovery).</h3>
			<p class="oe_slogan" style="font-size: 18px; ">
		At BrowseInfo we offer  end to end solution for Odoo services. Which includes analysis &amp; consultation on the workflows and integration part.  Please note that You're not allowed to distribute this module after purchase! Incase of any question regarding this module feel free to email us on <a href="mailto:ticket@browseinfo.in">ticket@browseinfo.in</a> or raise a ticket on support.
			</p>
		</div>
	</div>
</section>

<section class="oe_container lead">
	<div >
		<div >
			<div class="img img-responsive text-center">
				<a href="http://www.browseinfo.in" target="new" style="display: grid;">
					<img src="bi_logo.png" style="margin: auto;max-width: 350px;">
				</a>
			</div>
		</div>
		<div class="oe_slogan oe_spaced text-center">
			<a class="btn mt8" title="Query and Demo" style="background-color: #3497db;color: #FFFFFF !important;font-size: 20px;font-weight: bold;" href="mailto:sales@browseinfo.in?Subject=Demo Request for POS Restrict Zero Quantity Odoo App" target="_blank"> Query and Demo </a>
			<a class="btn mt8" title="Email on Support" style="background-color: #3497db;color: #FFFFFF !important;font-size: 20px;font-weight: bold;" href="mailto:ticket@browseinfo.in?Subject=Support Request for POS Restrict Zero Quantity Odoo App" target="_blank"> Support Request </a>
		</div>
	</div>
</section>

===== .\bi_pos_restrict_zero_qty\static\src\css\qty.css =====
/*
    @Author: KSOLVES India Private Limited
    @Email: sales@ksolves.com
*/

.pos .quantity-count{
    color: white;
    line-height: 13px;
    padding: 2px 7px;
    border-radius: 2px;
    font-weight: bold;
    position: absolute;
    top: 2px;
    left: 2px;
}

.pos .product{
    transition: all 1s ease;
}

.pos .quantity-count.warn{
    background: #EF5350;
}

.pos .quantity-count.normal{
    background: #32a868;
}

.pos .product .overlay {
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.4);
  z-index: 2;
  pointer-events: none;
  display: flex;
  align-items: center;
  justify-content: center;
}

.pointer-none {
    pointer-events: none;
}

.pos .popup.popup-error p.body {
     white-space:pre-wrap;
}

.pos .text{
  font-size: 15px;
  color: black;
  line-height: 1;
  text-align: center;
}

===== .\bi_pos_restrict_zero_qty\static\src\js\models.js =====
odoo.define('bi_pos_restrict_zero_qty.pos', function(require) {
	"use strict";

	const models = require('point_of_sale.models');
	var model_list = models.PosModel.prototype.models;
	var product_model = null;
	var exports = {};

	models.load_fields('product.product', ['qty_available','type']);


});

===== .\bi_pos_restrict_zero_qty\static\src\js\productItem.js =====
odoo.define('bi_pos_restrict_zero_qty.ProductItem', function(require) {
    'use strict';

    const ProductItem = require('point_of_sale.ProductItem');
    const Registries = require('point_of_sale.Registries');



    const ProductItemInherit = (ProductItem)=>
    class extends ProductItem {
         constructor() {
                super(...arguments);
            }

            async updateQtyAvailable() {
            let config_id = this.env.pos.config_id;
            let qty_available = await this.rpc({
                model: 'product.product',
                method: 'get_qty_in_location',
                args: [this.props.product.id, config_id],
            });
            this.props.product.qty_available = qty_available;
        }

        get price() {
            const unitPrice = this.props.product.get_display_price(this.pricelist, 1);
            const formattedUnitPrice = this.env.pos.format_currency(unitPrice.toFixed(2), 'Product Price');
            this.updateQtyAvailable();
            if (this.props.product.to_weight) {
                return `${formattedUnitPrice}/${
                    this.env.pos.units_by_id[this.props.product.uom_id[0]].name
                }`;
            } else {
                return formattedUnitPrice;
            }
        }
    }





    Registries.Component.extend(ProductItem, ProductItemInherit);

    return ProductItemInherit;
});


===== .\bi_pos_restrict_zero_qty\static\src\js\ProductScreen.js =====
odoo.define('bi_pos_restrict_zero_qty.productScreen', function(require) {
    "use strict";

    const ProductScreen = require('point_of_sale.ProductScreen');
    const Registries = require('point_of_sale.Registries');
    var rpc = require('web.rpc')

    const BiProductScreen = (ProductScreen) =>
        class extends ProductScreen {
            constructor() {
                super(...arguments);
            }
            async _onClickPay() {
                var self = this;
                let order = this.env.pos.get_order();
                let lines = order.get_orderlines();
                let pos_config = self.env.pos.config;
                let call_super = true;
                var config_id=self.env.pos.config.id;
                let prod_used_qty = {};
                if(pos_config.restrict_zero_qty){
                    for (let line of lines) {
                        let prd = line.product;
                        let prd_qty_available = await this.rpc({
                            model: 'product.product',
                            method: 'get_qty_in_location',
                            context: {current_pos_config_id: config_id},
                            args: [prd.id, config_id],
                        });
                        if (prd.type == 'product'){
                            if(prd.id in prod_used_qty){
                                let old_qty = prod_used_qty[prd.id][1];
                                prod_used_qty[prd.id] = [prd_qty_available,line.quantity+old_qty]
                            }else{
                                prod_used_qty[prd.id] = [prd_qty_available,line.quantity]
                            }
                        }
                        if(prd_qty_available <= 0){
                            if (prd.type == 'product'){
                                call_super = false;
                                let wrning = prd.display_name + ' is out of stock.';
                                self.showPopup('ErrorPopup', {
                                    title: self.env._t('Zero Quantity Not allowed'),
                                    body: self.env._t(wrning),
                                });
                            }
                        }
                    }

                    $.each(prod_used_qty, function( i, pq ){
                        let product = self.env.pos.db.get_product_by_id(i);
                        let check = pq[0] - pq[1];
                        let wrning = product.display_name + ' is out of stock.';
                        if (product.type == 'product'){
                            if (check < 0){
                                call_super = false;
                                self.showPopup('ErrorPopup', {
                                    title: self.env._t('Deny Order'),
                                    body: self.env._t(wrning),
                                });
                            }
                        }
                    });

                }
                if(call_super){
                    super._onClickPay();
                }
            }
        };

    Registries.Component.extend(ProductScreen, BiProductScreen);

    return ProductScreen;

});


===== .\bi_pos_restrict_zero_qty\static\src\xml\qty.xml =====
<?xml version="1.0" encoding="UTF-8"?>


<templates id="az_ks_pos_low_stock_alert.template" xml:space="preserve">
    <t t-name="ProductItem" t-inherit="point_of_sale.ProductItem" t-inherit-mode="extension" owl="1">

        <xpath expr="//div[hasclass('product-img')]" position="after">
                <span class="quantity-count normal" >
                    <t t-esc="props.product.qty_available"/>
                </span>
        </xpath>
    </t>
</templates>

===== .\bi_pos_restrict_zero_qty\views\pos_config_view.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>
        <record model="ir.ui.view" id="custom_pos_config_extended_form_view">
            <field name="name">pos.config.form.extended.view</field>
            <field name="model">pos.config</field>
            <field name="inherit_id" ref="point_of_sale.pos_config_view_form"/>
            <field name="arch" type="xml">
                <xpath expr="//div[@id='iface_orderline_customer_notes']" position="before">
                    <div class="col-12 col-lg-6 o_setting_box">
                        <div class="o_setting_left_pane">
                            <field name="restrict_zero_qty"/>
                        </div>
                        <div class="o_setting_right_pane">
                            <label for="restrict_zero_qty" string="Restrict Zero Quantity"/>
                            <div class="text-muted">
                                Zero Quantity Product Validation
                            </div>
                        </div>
                    </div>
                </xpath>    
            </field>
        </record>
    </data>
</odoo>


===== .\custom_invoice_templates\__init__.py =====
# -*- coding: utf-8 -*-
from . import models

===== .\custom_invoice_templates\__manifest__.py =====
# -*- coding: utf-8 -*-
{
    'name': 'Azbah Custom Invoice Templates',
    'version': '15.1',
    'summary': 'Custom Templates for Azbah Invoices',
    'description': "",
    'depends': ['base', 'account_accountant', 'web',  'account','sale'],
    'data': [
        'report/customer_invoice.xml',
        'report/payment_receipt.xml',
        'report/journal_entry.xml',
    ],

    'assets': {
        'web.assets_common': [
            'custom_invoice_templates/static/src/css/*.css',
            'custom_invoice_templates/static/src/fonts/*.ttf',
        ],
    }
}


===== .\custom_invoice_templates\models\account_move.py =====

from odoo import api, models, modules, fields


class AccountMoveLine(models.Model):
    _inherit = 'account.move.line'
    
    
    amount_tax = fields.Monetary(string='Tax Amount', compute='compute_amount_taxed_per_line',currency_field='company_currency_id',store=True)
    
    
    @api.depends('product_id','tax_ids','quantity','price_subtotal')
    def compute_amount_taxed_per_line(self):
        for rec in self:
            total_tax = 0
            if rec.tax_ids:
                for tax_line in rec.tax_ids:
                    total_tax += tax_line.amount
            rec.amount_tax = ( rec.price_subtotal * total_tax) / 100

===== .\custom_invoice_templates\models\delegate_move.py =====
from odoo import models, api, fields, _ 
from werkzeug.routing import ValidationError


class delegate(models.Model):

    _inherit = 'account.move'
    delegate_id = fields.Many2one('hr.employee', tracking=True, domain = [('is_delegate', '=', True)])


===== .\custom_invoice_templates\models\delegate_sale_order.py =====
from datetime import time, datetime, timedelta
from functools import partial
from itertools import groupby

from odoo import models, api, fields, _


class SaleAdvancePaymentInv(models.Model):
    _inherit = 'sale.order'
    _description = "Sales Advance Payment Invoice"
    _order = 'date_order desc, id desc'
    _check_company_auto = True


    delegate = fields.Many2one('res.partner', tracking=True, string="Delegate")


    def _prepare_invoice(self):
        values= super(SaleAdvancePaymentInv, self)._prepare_invoice()


        values.update( {

            'delegate_id': self.delegate.id,

        })
        return values





===== .\custom_invoice_templates\models\res_company_inherit.py =====
# -*- coding: utf-8 -*-
###############################################################################
#
#    ATIT.
#    Copyright (C) 2020-TODAY ATIT.
#
###############################################################################
from odoo import models, api, fields, _


class Company(models.Model):
    _inherit = 'res.company'
    iso_number = fields.Char(default='ISO 22000:2005')

===== .\custom_invoice_templates\models\__init__.py =====
# -*- coding: utf-8 -*-
from . import res_company_inherit
from . import account_move
from . import delegate_move
from . import delegate_sale_order

===== .\custom_invoice_templates\report\customer_invoice.xml =====
===== .\custom_invoice_templates\report\journal_entry.xml =====
===== .\custom_invoice_templates\report\payment_receipt.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>
        <template id="inherit_account_payment_receipt"
                  inherit_id="account.report_payment_receipt_document">

            <xpath expr="//div[@class='page']" position="replace">

                <div class="page">
                    <h3>
                        <strong>Payment Receipt:
                            <span t-field="o.name"/>
                        </strong>
                    </h3>
                    <div class="row mt64">
                        <div class="col-6" t-if="o.date">
                            <strong>Payment Date:</strong>
                            <span t-field="o.date"/>
                        </div>
                        <div class="col-6" t-if="o.payment_type and o.payment_type == 'transfer'">
                            <strong>Payment Type:</strong>
                            <span t-field="o.payment_type"/>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6" t-if="o.partner_type">
                            <t t-if="o.partner_type == 'customer'">
                                <strong>Customer:</strong>
                            </t>
                            <t t-if="o.partner_type == 'supplier'">
                                <strong>Vendor:</strong>
                            </t>
                            <span t-field="o.partner_id"/>
                        </div>
                        <div class="col-6" t-if="o.payment_method_id">
                            <strong>Payment Method:</strong>
                            <span t-field="o.payment_method_id.name"/>
                        </div>
                        <div class="col-6" t-if="o.journal_id and o.payment_type == 'transfer'">
                            <strong>Journal:</strong>
                            <span t-field="o.journal_id"/>
                        </div>
                    </div>
                    <div class="row mb64">
                        <div class="col-6" t-if="o.amount">
                            <strong>Payment Amount:</strong>
                            <span t-field="o.amount"
                                  t-options="{'widget': 'monetary', 'display_currency': o.currency_id}"/>
                        </div>
                        <div class="col-6" t-if="o.destination_journal_id and o.payment_type == 'transfer'">
                            <strong>Transfer To:</strong>
                            <span t-field="o.destination_journal_id"/>
                        </div>

                    </div>
                    <div class="row mb64">
                        <div class="col-6" t-if="o.ref">
                            <strong>Memo:</strong>
                            <span t-field="o.ref"/>
                        </div>
                    </div>
                    <t t-if="o.payment_type != 'transfer'">
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>
                                        <span>Invoice Date</span>
                                    </th>
                                    <th>
                                        <span>Invoice Number</span>
                                    </th>
                                    <th>
                                        <span>Reference</span>
                                    </th>
                                    <th class="text-right">
                                        <span>Original Amount</span>
                                    </th>
                                    <th class="text-right">
                                        <span>Amount Paid</span>
                                    </th>
                                    <th class="text-right">
                                        <span>Balance</span>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr t-foreach="o.reconciled_invoice_ids" t-as="inv">
                                    <td>
                                        <span t-field="inv.invoice_date"/>
                                    </td>
                                    <td>
                                        <span t-field="inv.name"/>
                                    </td>
                                    <td>
                                        <span t-field="inv.ref"/>
                                    </td>
                                    <td class="text-right">
                                        <span t-field="inv.amount_total"/>
                                    </td>
                                    <td class="text-right">
                                        <span t-esc="o.amount"
                                              t-options="{'widget': 'monetary', 'display_currency': inv.currency_id}"/>
                                    </td>
                                    <td class="text-right">
                                        <span t-field="inv.amount_residual"/>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </t>
                </div>
            </xpath>
        </template>


    </data>
</odoo>

===== .\custom_invoice_templates\report\sanad_template.xml =====
===== .\custom_invoice_templates\report\_trash\delivery_note_template.xml =====
===== .\custom_invoice_templates\report\_trash\journal_entries_report_template.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>

    <template id="azbah_journal_entries_header">
        <div class="header" style="direction:rtl !important;">
            <br/>
            <div class="row" style="direction:rtl !important;">
                <div class="col-4" style="font-size: 30px;direction:rtl !important;">
                    <center style="direction:ltr !important;">
                        <br/>
                        <strong style="direction:rtl !important;">التاريخ</strong>
                        <span t-field="o.date" style="direction:rtl !important;"/>
                        <strong style="direction:v !important;">Date</strong>
                    </center>
                </div>
                <div class="col-4" style="font-size: 30px;direction:ltr !important;">
                    <center style="direction:rtl !important;">
                        <br/>
                        <strong style="direction:rtl !important;">قيود اليومية</strong>
                        <br/>
                        <strong style="direction:rtl !important;">Journal entries</strong>
                    </center>
                </div>
                <div class="col-4" style="direction:rtl !important;">
                    <br/>
                    <center style="direction:rtl !important;margin-top:3px;">
                        <img t-if="o.company_id.logo"
                             t-att-src="image_data_uri(o.company_id.logo)" alt="Logo"
                             style="max-height:133px;direction:rtl !important;"/>
                    </center>
                </div>
            </div>
            <div class="row" style="direction:ltr !important;">
                <div class="col-4">
                    <div style="border-bottom: 2px solid black;margin-bottom: 5px;"/>
                    <div style="border-bottom: 2px solid black;margin-bottom: 5px;"/>
                    <div style="border-bottom: 2px solid black;margin-bottom: 5px;"/>
                </div>
                <div class="col-4"/>
                <div class="col-4">
                    <div style="border-bottom: 2px solid black;margin-bottom: 5px;"/>
                    <div style="border-bottom: 2px solid black;margin-bottom: 5px;"/>
                    <div style="border-bottom: 2px solid black;margin-bottom: 5px;"/>
                </div>
            </div>
            <br/>
        </div>
        <div class="article" t-att-data-oe-model="o and o._name"
             t-att-data-oe-id="o and o.id"
             t-att-data-oe-lang="o and o.env.context.get('lang')">
            <t t-raw="0"/>
        </div>

    </template>
    <template id="azbah_template_journal_entries_report">
        <t t-call="web.html_container">
            <t t-foreach="docs" t-as="o">
                <t t-call="custom_invoice_templates.azbah_journal_entries_header">
                    <style>
                        @font-face {
                        font-family: 'Almarai';
                        font-style: normal;}
                        td, th {
                        border: 1px solid black;
                        text-align:center;
                        }
                    </style>
                    <br/>
                    <div class="page" style="padding-top:55px">
                        <div>
                            <div style="text-align:center;margin-top:170px;margin-left:60px;font-size: 25px;">
                                <div>
                                    <strong>
                                        <span t-esc="o.name"/>
                                    </strong>

                                </div>
                            </div>
                        </div>
                        <div style="float:left;text-align:right; margin-top: 40px !important;">
                            <div class="col-md-12"
                                 style=" font-size: 18px; direction:rtl !important;direction:ltr !important;">

                                <div class="col-md-6" style=" width:100%;">

                                    <table class="table table-borderless"
                                           style="text-align:left;margin-top:10px;float:right;">
                                        <tr style="text-align:right;" t-if="o.delegate_id.name">
                                            <td style="text-align:right;padding:5px;">
                                                <strong>Delegate name :</strong>
                                                <span t-esc="o.delegate_id.name"/>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="text-align:right;padding:5px;">
                                                <strong>
                                                    Reference:
                                                </strong>

                                                <span t-esc="o.ref"/>
                                            </td>
                                        </tr>
                                    </table>

                                </div>

                            </div>
                        </div>
                        <div style="text-align:right; ;margin-left:550px;  margin-top: 37px !important;direction:ltr !important;">
                            <div class="col-md-12"
                                 style=" font-size: 18px; direction:rtl !important;">
                                <div class="col-md-6" style=" width:100%;">

                                    <table class="table table-borderless"
                                           style="text-align:left;margin-top:10px;float:left;">
                                        <tr style="text-align:left;">
                                            <td style="text-align:right;">
                                                <strong>
                                                   Journal :
                                                </strong>
                                                <span t-esc="o.journal_id.name"/>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="text-align:right;">
                                                <strong>
                                                    Accounting Date:
                                                </strong>
                                                <span t-field="o.date"/>
                                            </td>
                                        </tr>
                                    </table>
                                </div>

                            </div>
                        </div>
                        <div style="font-size: 10px; direction:rtl !important;margin-top:25px;direction:rtl !important;">

                            <table class="table table-bordered">
                                <thead style="background-color:#326fa8;">
                                    <tr>
                                        <th style="vertical-align: middle;font-size: 15px;text-align:center;width:20px;">
                                            Account
                                        </th>
                                        <th scope="col"
                                            style="vertical-align: middle;font-size: 15px;text-align:center;width:20px;">
                                            Partner
                                        </th>
                                        <th scope="col"
                                            style="vertical-align: middle;font-size: 15px;text-align:center;;width:20px;">
                                            Taxes

                                        </th>
                                        <th scope="col"
                                            style="vertical-align: middle;font-size: 15px;text-align:center;">
                                            Label
                                        </th>

                                        <th scope="col"
                                            style="vertical-align: middle;font-size: 15px;text-align:center;;width:20px;">
                                            Debit
                                        </th>
                                        <th scope="col"
                                            style="vertical-align: middle;font-size: 15px;text-align:center;;width:20px;">
                                            Crédit
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr t-foreach="o.line_ids" t-as="lines">
                                        <td style="text-align:left;font-size: 20px;width:20px;">
                                            <div>
                                                <span style="text-align:left;font-size: 16px;"
                                                      t-esc="lines.account_id.name"/>

                                            </div>

                                        </td>
                                        <td style="vertical-align: middle;font-size: 13px;;width:20px;">


                                            <div>
                                                <span style="text-align:left;font-size: 16px;"
                                                      t-esc="lines.partner_id.name"/>

                                            </div>


                                        </td>
                                        <td style="vertical-align: middle;text-align:center;font-size: 13px;width:40px;">
                                            <div>
                                                <span style="text-align:left;font-size: 16px;"
                                                      t-esc="lines.tax_ids.name"/>
                                            </div>
                                        </td>
                                        <td style="width:25px;vertical-align: middle;text-align:center;font-size: 13px;">
                                            <div>
                                                <span style="text-align:left;font-size: 16px;"
                                                      t-esc="lines.name"/>

                                            </div>
                                        </td>
                                        <td style="vertical-align: middle;text-align:center;font-size: 13px;;width:20px;">
                                            <div>
                                                <span style="text-align:left;font-size: 16px;"
                                                      t-esc="lines.debit"/>

                                            </div>
                                        </td>
                                        <td style="vertical-align: middle;text-align:center;font-size: 13px;;width:20px;">
                                            <div>
                                                <span style="text-align:left;font-size: 16px;"
                                                      t-esc="lines.credit"/>

                                            </div>
                                        </td>

                                    </tr>
                                </tbody>
                            </table>

                        </div>

                    </div>


                </t>
            </t>

        </t>

    </template>


    <record id="paperformat_azbah_id" model="report.paperformat">
        <field name="name">AZBAH Paper format</field>
        <field name="default" eval="True"/>
        <field name="format">custom</field>
        <field name="page_height">297</field>
        <field name="page_width">210</field>
        <field name="orientation">Portrait</field>
        <field name="margin_top">1</field>
        <field name="margin_bottom">5</field>
        <field name="margin_left">1</field>
        <field name="margin_right">1</field>
        <field name="header_line" eval="False"/>
        <field name="header_spacing">10</field>
        <field name="dpi">90</field>
    </record>

    <record id="report_azbah_journal_entriess" model="ir.actions.report">
        <field name="name">custom_invoice_templates.azbah_template_journal_entries_report</field>
        <field name="model">account.move</field>
        <field name="report_type">qweb-pdf</field>
        <field name="report_name">odoo_process_costing_manufacturing.report_mrporder_cost</field>
        <field name="report_file">custom_invoice_templates.azbah_template_journal_entries_report</field>
        <field name="paper_format">custom_invoice_templates.paperformat_azbah_id</field>
    </record>



</odoo>

===== .\custom_invoice_templates\report\_trash\loading_unloading_sheet_template.xml =====
===== .\custom_invoice_templates\report\_trash\purchase_order_template.xml =====
===== .\custom_invoice_templates\report\_trash\receipt_review_report_template.xml =====
===== .\custom_invoice_templates\report\_trash\report.xml =====
===== .\custom_invoice_templates\static\src\fonts\Cairo\OFL.txt =====
Copyright 2009 The Cairo Project Authors (gaber@gaberism.net)

This Font Software is licensed under the SIL Open Font License, Version 1.1.
This license is copied below, and is also available with a FAQ at:
http://scripts.sil.org/OFL


-----------------------------------------------------------
SIL OPEN FONT LICENSE Version 1.1 - 26 February 2007
-----------------------------------------------------------

PREAMBLE
The goals of the Open Font License (OFL) are to stimulate worldwide
development of collaborative font projects, to support the font creation
efforts of academic and linguistic communities, and to provide a free and
open framework in which fonts may be shared and improved in partnership
with others.

The OFL allows the licensed fonts to be used, studied, modified and
redistributed freely as long as they are not sold by themselves. The
fonts, including any derivative works, can be bundled, embedded, 
redistributed and/or sold with any software provided that any reserved
names are not used by derivative works. The fonts and derivatives,
however, cannot be released under any other type of license. The
requirement for fonts to remain under this license does not apply
to any document created using the fonts or their derivatives.

DEFINITIONS
"Font Software" refers to the set of files released by the Copyright
Holder(s) under this license and clearly marked as such. This may
include source files, build scripts and documentation.

"Reserved Font Name" refers to any names specified as such after the
copyright statement(s).

"Original Version" refers to the collection of Font Software components as
distributed by the Copyright Holder(s).

"Modified Version" refers to any derivative made by adding to, deleting,
or substituting -- in part or in whole -- any of the components of the
Original Version, by changing formats or by porting the Font Software to a
new environment.

"Author" refers to any designer, engineer, programmer, technical
writer or other person who contributed to the Font Software.

PERMISSION & CONDITIONS
Permission is hereby granted, free of charge, to any person obtaining
a copy of the Font Software, to use, study, copy, merge, embed, modify,
redistribute, and sell modified and unmodified copies of the Font
Software, subject to the following conditions:

1) Neither the Font Software nor any of its individual components,
in Original or Modified Versions, may be sold by itself.

2) Original or Modified Versions of the Font Software may be bundled,
redistributed and/or sold with any software, provided that each copy
contains the above copyright notice and this license. These can be
included either as stand-alone text files, human-readable headers or
in the appropriate machine-readable metadata fields within text or
binary files as long as those fields can be easily viewed by the user.

3) No Modified Version of the Font Software may use the Reserved Font
Name(s) unless explicit written permission is granted by the corresponding
Copyright Holder. This restriction only applies to the primary font name as
presented to the users.

4) The name(s) of the Copyright Holder(s) or the Author(s) of the Font
Software shall not be used to promote, endorse or advertise any
Modified Version, except to acknowledge the contribution(s) of the
Copyright Holder(s) and the Author(s) or with their explicit written
permission.

5) The Font Software, modified or unmodified, in part or in whole,
must be distributed entirely under this license, and must not be
distributed under any other license. The requirement for fonts to
remain under this license does not apply to any document created
using the Font Software.

TERMINATION
This license becomes null and void if any of the above conditions are
not met.

DISCLAIMER
THE FONT SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL THE
COPYRIGHT HOLDER BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL
DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM
OTHER DEALINGS IN THE FONT SOFTWARE.


===== .\custom_invoice_templates\static\src\scss\report.scss =====
@font-face{
	  font-family: 'Cairo';
  font-style: normal;
  font-weight: 700;
	src:url('/custom_invoice_templates/static/src/font/Cairo/Cairo-Regular.ttf') format('truetype');
	}
	@font-face{
	  font-family: 'Almarai';
  font-style: normal;
  font-weight: 700;
	src:url('/custom_invoice_templates/static/src/font/Almarai/Almarai-Regular.ttf') format('truetype');
	}

$o-company-font: 'Cairo' !important;


body {
   
   font-family:'Cairo' !important;
}
.page {
   
    font-family:'Cairo' !important;
    
}
.article {
   
    font-family:'Cairo' !important;
    
}
.address{
font-family:'Cairo' !important;
}
.footer{
font-family:'Cairo' !important;
}
.article.o_report_layout_standard.o_company_1_layout {
    font-family: "Cairo" !important;
}

===== .\custom_invoice_templates\views\delegate.xml =====
<?xml version="1.0" encoding="utf-8"?>
        <odoo>

    <record id="delegate_move_view" model="ir.ui.view">
            <field name="name">delegate</field>
            <field name="model">account.move</field>
            <field name="inherit_id" ref="account.view_move_form"></field>
            <field name="arch" type="xml">
                <field name="ref" position="after">
                    <field name="delegate_id"   string="delegate"/>
                </field>


            </field>
        </record>
</odoo>

===== .\dashboard_pos\README.rst =====
POS Dashboard v15
=================
POS Dashboard

Installation
============
	- www.odoo.com/documentation/14.0/setup/install.html
	- Install our custom addon

Configuration
=============

    No additional configurations needed

Credits
=======
Developer: Irfan v13 @ cybrosys, Contact: odoo@cybrosys.com
           Jibin James V14 @ cybrosys, Contact: odoo@cybrosys.com
           Irfan V15 @ cybrosys, Contact: odoo@cybrosys.com



===== .\dashboard_pos\__init__.py =====
# -*- coding: utf-8 -*-
###################################################################################
#
#    Cybrosys Technologies Pvt. Ltd.
#    Copyright (C) 2020-TODAY Cybrosys Technologies (<https://www.cybrosys.com>).
#    Author: Irfan (<https://www.cybrosys.com>)
#
#    This program is free software: you can modify
#    it under the terms of the GNU Affero General Public License (AGPL) as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
###################################################################################

from . import models


===== .\dashboard_pos\__manifest__.py =====
# -*- coding: utf-8 -*-
###################################################################################
#
#    Cybrosys Technologies Pvt. Ltd.
#    Copyright (C) 2020-TODAY Cybrosys Technologies (<https://www.cybrosys.com>).
#    Author: Irfan (<https://www.cybrosys.com>)
#
#    This program is free software: you can modify
#    it under the terms of the GNU Affero General Public License (AGPL) as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
###################################################################################
{
    'name': "POS Dashboard",
    'version': '15.0.1.0.0',
    'summary': """POS Dashboard""",
    'description': """POS Dashboard""",
    'category': 'Point of Sale',
    'author': 'Cybrosys Techno Solutions',
    'company': 'Cybrosys Techno Solutions',
    'maintainer': 'Cybrosys Techno Solutions',
    'website': "https://www.cybrosys.com",
    'depends': ['hr', 'point_of_sale'],
    'external_dependencies': {
        'python': ['pandas'],
    },
    'data': [
        'views/dashboard_views.xml'
    ],
     'assets': {
        'web.assets_backend': [
            'dashboard_pos/static/src/js/pos_dashboard.js',
            'dashboard_pos/static/src/css/pos_dashboard.css',
            'https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.js',
        ],
        'web.assets_qweb': [
            'dashboard_pos/static/src/xml/pos_dashboard.xml',
        ],
    },
    'images': ['static/description/banner.png'],
    'license': "AGPL-3",
    'installable': True,
    'application': False,
}

===== .\dashboard_pos\doc\RELEASE_NOTES.md =====
## Module <pos_dashboard>

#### 09.10.2021
#### Version 15.0.1.0.0

##### Initial Commit for pos_dashboard



===== .\dashboard_pos\models\pos_dashboard.py =====
# -*- coding: utf-8 -*-
###################################################################################
#
#    Cybrosys Technologies Pvt. Ltd.
#    Copyright (C) 2020-TODAY Cybrosys Technologies (<https://www.cybrosys.com>).
#    Author: Irfan (<https://www.cybrosys.com>)
#
#    This program is free software: you can modify
#    it under the terms of the GNU Affero General Public License (AGPL) as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
###################################################################################
import pytz
from odoo import models, fields, api
from datetime import timedelta, datetime, date


class PosDashboard(models.Model):
    _inherit = 'pos.order'

    @api.model
    def get_department(self, option):
        company_id = self.env.company.id
        if option == 'pos_hourly_sales':

            user_tz = self.env.user.tz if self.env.user.tz else pytz.UTC
            query = '''select  EXTRACT(hour FROM date_order at time zone 'utc' at time zone '{}') 
                       as date_month,sum(amount_total) from pos_order where  
                       EXTRACT(month FROM date_order::date) = EXTRACT(month FROM CURRENT_DATE) 
                       AND pos_order.company_id = ''' + str(
                       company_id) + ''' group by date_month '''
            query = query.format(user_tz)
            label = 'HOURS'
        elif option == 'pos_monthly_sales':
            query = '''select  date_order::date as date_month,sum(amount_total) from pos_order where 
             EXTRACT(month FROM date_order::date) = EXTRACT(month FROM CURRENT_DATE) AND pos_order.company_id = ''' + str(
                company_id) + '''  group by date_month '''
            label = 'DAYS'
        else:
            query = '''select TO_CHAR(date_order,'MON')date_month,sum(amount_total) from pos_order where
             EXTRACT(year FROM date_order::date) = EXTRACT(year FROM CURRENT_DATE) AND pos_order.company_id = ''' + str(
                company_id) + ''' group by date_month'''
            label = 'MONTHS'

        self._cr.execute(query)
        docs = self._cr.dictfetchall()
        order = []
        for record in docs:
            order.append(record.get('sum'))
        today = []
        for record in docs:
            today.append(record.get('date_month'))
        final = [order, today, label]
        return final

    @api.model
    def get_details(self):
        company_id = self.env.company.id
        cr = self._cr
        cr.execute(
            """select pos_payment_method.name,sum(amount) from pos_payment inner join pos_payment_method on 
            pos_payment_method.id=pos_payment.payment_method_id group by pos_payment_method.name ORDER 
            BY sum(amount) DESC; """)
        payment_details = cr.fetchall()
        cr.execute(
            '''select hr_employee.name,sum(pos_order.amount_paid) as total,count(pos_order.amount_paid) as orders 
            from pos_order inner join hr_employee on pos_order.user_id = hr_employee.user_id 
            where pos_order.company_id =''' + str(company_id) + '''GROUP BY hr_employee.name order by total DESC;''')
        salesperson = cr.fetchall()
        total_sales = []
        for rec in salesperson:
            rec = list(rec)
            sym_id = rec[1]
            company = self.env.company
            if company.currency_id.position == 'after':
                rec[1] = "%s %s" % (sym_id, company.currency_id.symbol)
            else:
                rec[1] = "%s %s" % (company.currency_id.symbol, sym_id)
            rec = tuple(rec)
            total_sales.append(rec)
        cr.execute(
            '''select DISTINCT(product_template.name) as product_name,sum(qty) as total_quantity from 
       pos_order_line inner join product_product on product_product.id=pos_order_line.product_id inner join 
       product_template on product_product.product_tmpl_id = product_template.id  where pos_order_line.company_id =''' + str(
                company_id) + ''' group by product_template.id ORDER 
       BY total_quantity DESC Limit 10 ''')
        selling_product = cr.fetchall()
        sessions = self.env['pos.config'].search([])
        sessions_list = []
        dict = {
            'closing_control': 'Closed',
            'opened': 'Opened',
            'new_session': 'New Session',
            'opening_control': "Opening Control"
        }
        for session in sessions:
            sessions_list.append({
                'session': session.name,
                'status': dict.get(session.pos_session_state)
            })
        payments =[]
        for rec in payment_details:
            rec = list(rec)
            sym_id = rec[1]
            company = self.env.company
            if company.currency_id.position == 'after':
                rec[1] = "%s %s" % (sym_id, company.currency_id.symbol)
            else:
                rec[1] = "%s %s" % (company.currency_id.symbol, sym_id)
            rec = tuple(rec)
            payments.append(rec)
        return {
            'payment_details': payments,
            'salesperson': total_sales,
            'selling_product': sessions_list,
        }

    @api.model
    def get_refund_details(self):
        default_date = datetime.today().date()
        pos_order = self.env['pos.order'].search([])
        total = 0
        today_refund_total = 0
        total_order_count = 0
        total_refund_count = 0
        today_sale = 0
        a = 0
        for rec in pos_order:
            if rec.amount_total < 0.0 and rec.date_order.date() == default_date:
                today_refund_total = today_refund_total + 1
            total_sales = rec.amount_total
            total = total + total_sales
            total_order_count = total_order_count + 1
            if rec.date_order.date() == default_date:
                today_sale = today_sale + 1
            if rec.amount_total < 0.0:
                total_refund_count = total_refund_count + 1
        magnitude = 0
        while abs(total) >= 1000:
            magnitude += 1
            total /= 1000.0
        # add more suffixes if you need them
        val = '%.2f%s' % (total, ['', 'K', 'M', 'G', 'T', 'P'][magnitude])
        pos_session = self.env['pos.session'].search([])
        total_session = 0
        for record in pos_session:
            total_session = total_session + 1
        return {
            'total_sale': val,
            'total_order_count': total_order_count,
            'total_refund_count': total_refund_count,
            'total_session': total_session,
            'today_refund_total': today_refund_total,
            'today_sale': today_sale,
        }

    @api.model
    def get_the_top_customer(self, ):
        company_id = self.env.company.id
        query = '''select res_partner.name as customer,pos_order.partner_id,sum(pos_order.amount_paid) as amount_total from pos_order 
        inner join res_partner on res_partner.id = pos_order.partner_id where pos_order.company_id = ''' + str(
            company_id) + ''' GROUP BY pos_order.partner_id,
        res_partner.name  ORDER BY amount_total  DESC LIMIT 10;'''
        self._cr.execute(query)
        docs = self._cr.dictfetchall()
        print(docs)

        order = []
        for record in docs:
            order.append(record.get('amount_total'))
        day = []
        for record in docs:
            day.append(record.get('customer'))
        final = [order, day]
        return final

    @api.model
    def get_the_top_products(self):
        company_id = self.env.company.id

        query = '''select DISTINCT(product_template.name) as product_name,sum(qty) as total_quantity from 
       pos_order_line inner join product_product on product_product.id=pos_order_line.product_id inner join 
       product_template on product_product.product_tmpl_id = product_template.id where pos_order_line.company_id = ''' + str(
            company_id) + ''' group by product_template.id ORDER 
       BY total_quantity DESC Limit 10 '''

        self._cr.execute(query)
        top_product = self._cr.dictfetchall()

        total_quantity = []
        for record in top_product:
            # if record.get('total_quantity') != 0:
            #     print(total_quantity.append(record.get('total_quantity')))
            total_quantity.append(record.get('total_quantity'))
        product_name = []
        for record in top_product:
            product_name.append(record.get('product_name'))
        final = [total_quantity, product_name]
        return final

    @api.model
    def get_the_top_categories(self):
        company_id = self.env.company.id
        query = '''select DISTINCT(product_category.complete_name) as product_category,sum(qty) as total_quantity 
        from pos_order_line inner join product_product on product_product.id=pos_order_line.product_id  inner join 
        product_template on product_product.product_tmpl_id = product_template.id inner join product_category on 
        product_category.id =product_template.categ_id where pos_order_line.company_id = ''' + str(
            company_id) + ''' group by product_category ORDER BY total_quantity DESC '''
        self._cr.execute(query)
        top_product = self._cr.dictfetchall()
        total_quantity = []
        for record in top_product:
            total_quantity.append(record.get('total_quantity'))
        product_categ = []
        for record in top_product:
            product_categ.append(record.get('product_category'))
        final = [total_quantity, product_categ]
        return final


===== .\dashboard_pos\models\__init__.py =====
# -*- coding: utf-8 -*-
###################################################################################
#
#    Cybrosys Technologies Pvt. Ltd.
#    Copyright (C) 2020-TODAY Cybrosys Technologies (<https://www.cybrosys.com>).
#    Author: Irfan (<https://www.cybrosys.com>)
#
#    This program is free software: you can modify
#    it under the terms of the GNU Affero General Public License (AGPL) as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
###################################################################################

from . import pos_dashboard


===== .\dashboard_pos\static\description\index.html =====
<div class="container" style="padding: 4rem 1.5rem !important">
    <div class="row" style="height: 900px !important;">
        <div class="col-sm-12 col-md-12 col-lg-12"
            style="padding: 4rem 1rem !important; background-color: #714B67 !important; height: 600px !important; border-radius: 20px !important;">
            <h1
                style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #FFFFFF !important;  font-size: 3.5rem !important; text-align: center !important;">
                POS Dashboard</h1>
            <p
                style="font-family: 'Montserrat', sans-serif !important; font-weight: 300 !important; color: #FFFFFF !important;  font-size: 1.4rem !important; text-align: center !important;">
                Detailed Dashboard View for POS
            </p>
            <img src="./assets/screenshots/hero.png" class="img-responsive" width="100%" height="auto" />
        </div>
    </div>

    <div class="row">
        <div class="col-md-12" style="border-bottom: 1px solid #d5d5d5 !important; margin-bottom: 2rem !important">
            <h2
                style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #714B67 !important; font-size: 1.5rem !important;">
                <i class="fa fa-compass mr-2"></i>Explore this module
            </h2>
        </div>
        <div class="col-md-6">
            <a href="#overview" style="text-decoration: none !important;">
                <div class="row"
                    style="background-color: #f5f2f5 !important; border-radius: 10px !important; margin: 1rem !important; padding: 1.5em !important; height: 100px !important;">
                    <div class="col-8">
                        <h3
                            style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #714B67 !important; font-size: 1.2rem !important;">
                            Overview</h3>
                        <p
                            style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #714B67 !important; font-size: 0.9rem !important;">
                            Learn more about this module</p>
                    </div>
                    <div class="col-4 text-right d-flex justify-content-end align-items-center">
                        <i class="fa fa-chevron-right" style="color: #714B67 !important;"></i>
                    </div>
                </div>
            </a>
        </div>

        <div class="col-md-6">
            <a href="#features" style="text-decoration: none !important;">
                <div class="row"
                    style="background-color: #f5f2f5 !important; border-radius: 10px !important; margin: 1rem !important; padding: 1.5em !important; height: 100px !important;">
                    <div class="col-8">
                        <h3
                            style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #714B67 !important; font-size: 1.2rem !important;">
                            Features</h3>
                        <p
                            style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #714B67 !important; font-size: 0.9rem !important;">
                            View features of this module</p>
                    </div>
                    <div class="col-4 text-right d-flex justify-content-end align-items-center">
                        <i class="fa fa-chevron-right" style="color: #714B67 !important;"></i>
                    </div>
                </div>
            </a>
        </div>
        <div class="col-md-6">
            <a href="#screenshots" style="text-decoration: none !important;">
                <div class="row"
                    style="background-color: #f5f2f5 !important; border-radius: 10px !important; margin: 1rem !important; padding: 1.5em !important; height: 100px !important;">
                    <div class="col-8">
                        <h3
                            style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #714B67 !important; font-size: 1.2rem !important;">
                            Screenshots</h3>
                        <p
                            style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #714B67 !important; font-size: 0.9rem !important;">
                            See key screenshots of this module</p>
                    </div>
                    <div class="col-4 text-right d-flex justify-content-end align-items-center">
                        <i class="fa fa-chevron-right" style="color: #714B67 !important;"></i>
                    </div>
                </div>
            </a>
        </div>

    </div>


    <div class="row" id="overview">
        <div class="col-md-12" style="border-bottom: 1px solid #d5d5d5 !important; margin: 2rem 0 !important">
            <h2
                style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #714B67 !important; font-size: 1.5rem !important;">
                <i class="fa fa-pie-chart mr-2"></i>Overview
            </h2>
        </div>

        <div class="col-mg-12 pl-3">
            <p
                style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #282F33 !important; font-size: 1rem !important; line-height: 30px !important;">
                This module helps you to see the Overview of POS, here You can see the total orders, sessions, top
                customers, top products etc.</p>

        </div>
    </div>

    <div class="row" id="features">
        <div class="col-md-12" style="border-bottom: 1px solid #d5d5d5 !important; margin: 2rem 0 !important">
            <h2
                style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #714B67 !important; font-size: 1.5rem !important;">
                <i class="fa fa-star mr-2"></i>Features
            </h2>
        </div>

        <div class="col-md-6 pl-3 py-3 d-flex">
            <div>
                <img src="assets/icons/check.png">
            </div>
            <div>
                <h4
                    style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
                    Total POS Orders</h4>
                <p
                    style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #282F33 !important; font-size: 1rem !important;">
                    View total POS order count.</p>
            </div>
        </div>

        <div class="col-md-6 pl-3 py-3 d-flex">
            <div>
                <img src="assets/icons/check.png">
            </div>
            <div>
                <h4
                    style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
                    Session Details</h4>
                <p
                    style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #282F33 !important; font-size: 1rem !important;">
                    See session details.</p>
            </div>
        </div>

        <div class="col-md-6 pl-3 py-3 d-flex">
            <div>
                <img src="assets/icons/check.png">
            </div>
            <div>
                <h4
                    style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
                    Refund Details</h4>
                <p
                    style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #282F33 !important; font-size: 1rem !important;">
                    View refund details.</p>
            </div>
        </div>

        <div class="col-md-6 pl-3 py-3 d-flex">
            <div>
                <img src="assets/icons/check.png">
            </div>
            <div>
                <h4
                    style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
                    Sale Details </h4>
                <p
                    style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #282F33 !important; font-size: 1rem !important;">
                    View sale details.</p>
            </div>
        </div>

        <div class="col-md-6 pl-3 py-3 d-flex">
            <div>
                <img src="assets/icons/check.png">
            </div>
            <div>
                <h4
                    style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
                    Sale Report Charts</h4>
                <p
                    style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #282F33 !important; font-size: 1rem !important;">
                    View Sale Report Charts.</p>
            </div>
        </div>

        <div class="col-md-6 pl-3 py-3 d-flex">
            <div>
                <img src="assets/icons/check.png">
            </div>
            <div>
                <h4
                    style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
                    Top Products</h4>
                <p
                    style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #282F33 !important; font-size: 1rem !important;">
                    View top products.</p>
            </div>
        </div>

    </div>

    <div class="row" id="screenshots">
        <div class="col-md-12" style="border-bottom: 1px solid #d5d5d5 !important; margin: 2rem 0 !important">
            <h2
                style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #714B67 !important; font-size: 1.5rem !important;">
                <i class="fa fa-image mr-2"></i>Screenshots
            </h2>
        </div>

        <div class="col-lg-12 my-2">
            <h4 class="mt-2"
                style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
                Open POS</h4>
            <p
                style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #282F33 !important; font-size: 1rem !important;">
                After installation, open POS</p>

            <img src="assets/screenshots/screenshot1.png" class="img-responsive img-thumbnail border" width="100%"
                height="auto" />
        </div>

        <div class="col-lg-12 my-2">
            <h4 class="mt-2"
                style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
                Order and Session details.</h4>
            <p
                style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #282F33 !important; font-size: 1rem !important;">
                Order and Session counts are displayed in the dashboard.
            </p>

            <img src="assets/screenshots/screenshot2.png" class="img-responsive img-thumbnail border" width="100%"
                height="auto" />
        </div>


        <div class="col-lg-12 my-2">
            <h4 class="mt-2"
                style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
                Details in Charts</h4>
            <p
                style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #282F33 !important; font-size: 1rem !important;">
                Possible to see the POS details in different charts.</p>
            <img src="assets/screenshots/screenshot3.png" class="img-responsive img-thumbnail border" width="100%"
                height="auto" />
        </div>


        <div class="col-lg-12 my-2">
            <h4 class="mt-2"
                style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
                Bank, session &amp; salesperson details</h4>
            <p
                style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #282F33 !important; font-size: 1rem !important;">
                Details like bank, session status, salesperson details are listed.</p>
            <img src="assets/screenshots/screenshot4.png" class="img-responsive img-thumbnail border" width="100%"
                height="auto" />
        </div>

    </div>

    <!-- SUGGESTED PRODUCTS -->
    <div class="row">
        <div class="col-lg-12 d-flex flex-column justify-content-center"
            style="text-align: center; padding: 2.5rem 1rem !important;">
            <h2 style="color: #212529 !important;">Suggested Products</h2>
            <hr
                style="border: 3px solid #714B67 !important; background-color: #714B67 !important; width: 80px !important; margin-bottom: 2rem !important;" />

            <div id="demo1" class="row carousel slide" data-ride="carousel">
                <!-- The slideshow -->
                <div class="carousel-inner">
                    <div class="carousel-item active" style="min-height:0px">
                        <div class="col-xs-12 col-sm-4 col-md-4 mb16 mt16" style="float:left">
                            <a href="https://apps.odoo.com/apps/modules/15.0/sales_credit_limit/" target="_blank">
                                <div style="border-radius:10px">
                                    <img class="img img-responsive center-block"
                                        style="border-top-left-radius:10px; border-top-right-radius:10px"
                                        src="./assets/modules/1.png">
                                </div>
                            </a>
                        </div>
                        <div class="col-xs-12 col-sm-4 col-md-4 mb16 mt16" style="float:left">
                            <a href="https://apps.odoo.com/apps/modules/15.0/product_to_quotation/" target="_blank">
                                <div style="border-radius:10px">
                                    <img class="img img-responsive center-block"
                                        style="border-top-left-radius:10px; border-top-right-radius:10px"
                                        src="./assets/modules/2.png">
                                </div>
                            </a>
                        </div>
                        <div class="col-xs-12 col-sm-4 col-md-4 mb16 mt16" style="float:left">
                            <a href="https://apps.odoo.com/apps/modules/15.0/dynamic_accounts_report/" target="_blank">
                                <div style="border-radius:10px">
                                    <img class="img img-responsive center-block"
                                        style="border-top-left-radius:10px; border-top-right-radius:10px"
                                        src="./assets/modules/3.png">
                                </div>
                            </a>
                        </div>
                    </div>
                    <div class="carousel-item" style="min-height:0px">
                        <div class="col-xs-12 col-sm-4 col-md-4 mb16 mt16" style="float:left">
                            <a href="https://apps.odoo.com/apps/modules/15.0/hr_payroll_community/" target="_blank">
                                <div style="border-radius:10px">
                                    <img class="img img-responsive center-block"
                                        style="border-top-left-radius:10px; border-top-right-radius:10px"
                                        src="./assets/modules/4.png">
                                </div>
                            </a>
                        </div>
                        <div class="col-xs-12 col-sm-4 col-md-4 mb16 mt16" style="float:left">
                            <a href="https://apps.odoo.com/apps/modules/15.0/product_barcode/" target="_blank">
                                <div style="border-radius:10px">
                                    <img class="img img-responsive center-block"
                                        style="border-top-left-radius:10px; border-top-right-radius:10px"
                                        src="./assets/modules/5.png">
                                </div>
                            </a>
                        </div>
                        <div class="col-xs-12 col-sm-4 col-md-4 mb16 mt16" style="float:left">
                            <a href="https://apps.odoo.com/apps/modules/15.0/inventory_barcode_scanning/"
                                target="_blank">
                                <div style="border-radius:10px">
                                    <img class="img img-responsive center-block"
                                        style="border-top-left-radius:10px; border-top-right-radius:10px"
                                        src="./assets/modules/6.png">
                                </div>
                            </a>
                        </div>
                    </div>
                </div>
                <!-- Left and right controls -->
                <a class="carousel-control-prev" href="#demo1" data-slide="prev"
                    style="left:-25px;width: 35px;color: #000;"> <span class="carousel-control-prev-icon"><i
                            class="fa fa-chevron-left" style="font-size:24px"></i></span> </a> <a
                    class="carousel-control-next" href="#demo1" data-slide="next"
                    style="right:-25px;width: 35px;color: #000;">
                    <span class="carousel-control-next-icon"><i class="fa fa-chevron-right"
                            style="font-size:24px"></i></span>
                </a>
            </div>
        </div>
    </div>
    <!-- END OF SUGGESTED PRODUCTS -->

    <!-- OUR SERVICES -->
    <section class="container" style="margin-top: 6rem !important;">
        <div class="row">
            <div class="col-lg-12 d-flex flex-column justify-content-center align-items-center">
                <h2 style="color: #212529 !important;">Our Services</h2>
                <hr
                    style="border: 3px solid #714B67 !important; background-color: #714B67 !important; width: 80px !important; margin-bottom: 2rem !important;" />
            </div>

            <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
                <div class="d-flex justify-content-center align-items-center mx-3 my-3"
                    style="background-color: #1dd1a1 !important; border-radius: 15px !important; height: 80px; width: 80px;">
                    <img src="assets/icons/cogs.png" class="img-responsive" height="48px" width="48px">
                </div>
                <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
                    Odoo
                    Customization</h6>
            </div>

            <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
                <div class="d-flex justify-content-center align-items-center mx-3 my-3"
                    style="background-color: #ff6b6b !important; border-radius: 15px !important; height: 80px; width: 80px;">
                    <img src="assets/icons/wrench.png" class="img-responsive" height="48px" width="48px">
                </div>
                <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
                    Odoo
                    Implementation</h6>
            </div>

            <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
                <div class="d-flex justify-content-center align-items-center mx-3 my-3"
                    style="background-color: #6462CD !important; border-radius: 15px !important; height: 80px; width: 80px;">
                    <img src="assets/icons/lifebuoy.png" class="img-responsive" height="48px" width="48px">
                </div>
                <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
                    Odoo
                    Support</h6>
            </div>


            <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
                <div class="d-flex justify-content-center align-items-center mx-3 my-3"
                    style="background-color: #ffa801 !important; border-radius: 15px !important; height: 80px; width: 80px;">
                    <img src="assets/icons/user.png" class="img-responsive" height="48px" width="48px">
                </div>
                <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
                    Hire
                    Odoo
                    Developer</h6>
            </div>

            <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
                <div class="d-flex justify-content-center align-items-center mx-3 my-3"
                    style="background-color: #54a0ff  !important; border-radius: 15px !important; height: 80px; width: 80px;">
                    <img src="assets/icons/puzzle.png" class="img-responsive" height="48px" width="48px">
                </div>
                <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
                    Odoo
                    Integration</h6>
            </div>

            <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
                <div class="d-flex justify-content-center align-items-center mx-3 my-3"
                    style="background-color: #6d7680 !important; border-radius: 15px !important; height: 80px; width: 80px;">
                    <img src="assets/icons/update.png" class="img-responsive" height="48px" width="48px">
                </div>
                <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
                    Odoo
                    Migration</h6>
            </div>


            <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
                <div class="d-flex justify-content-center align-items-center mx-3 my-3"
                    style="background-color: #786fa6 !important; border-radius: 15px !important; height: 80px; width: 80px;">
                    <img src="assets/icons/consultation.png" class="img-responsive" height="48px" width="48px">
                </div>
                <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
                    Odoo
                    Consultancy</h6>
            </div>

            <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
                <div class="d-flex justify-content-center align-items-center mx-3 my-3"
                    style="background-color: #f8a5c2 !important; border-radius: 15px !important; height: 80px; width: 80px;">
                    <img src="assets/icons/training.png" class="img-responsive" height="48px" width="48px">
                </div>
                <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
                    Odoo
                    Implementation</h6>
            </div>

            <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
                <div class="d-flex justify-content-center align-items-center mx-3 my-3"
                    style="background-color: #e6be26 !important; border-radius: 15px !important; height: 80px; width: 80px;">
                    <img src="assets/icons/license.png" class="img-responsive" height="48px" width="48px">
                </div>
                <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
                    Odoo
                    Licensing Consultancy</h6>
            </div>
        </div>
    </section>
    <!-- END OF END OF OUR SERVICES -->

    <!-- OUR INDUSTRIES -->
    <section class="container" style="margin-top: 6rem !important;">
        <div class="row">
            <div class="col-lg-12 d-flex flex-column justify-content-center align-items-center">
                <h2 style="color: #212529 !important;">Our Industries</h2>
                <hr
                    style="border: 3px solid #714B67 !important; background-color: #714B67 !important; width: 80px !important; margin-bottom: 2rem !important;" />
            </div>

            <div class="col-lg-3">
                <div class="my-4 d-flex flex-column justify-content-center"
                    style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
                    <img src="./assets/icons/trading-black.png" class="img-responsive mb-3" height="48px" width="48px">
                    <h5
                        style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
                        Trading
                    </h5>
                    <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
                        Easily procure
                        and
                        sell your products</p>
                </div>
            </div>

            <div class="col-lg-3">
                <div class="my-4 d-flex flex-column justify-content-center"
                    style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
                    <img src="./assets/icons/pos-black.png" class="img-responsive mb-3" height="48px" width="48px">
                    <h5
                        style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
                        POS
                    </h5>
                    <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
                        Easy
                        configuration
                        and convivial experience</p>
                </div>
            </div>

            <div class="col-lg-3">
                <div class="my-4 d-flex flex-column justify-content-center"
                    style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
                    <img src="./assets/icons/education-black.png" class="img-responsive mb-3" height="48px"
                        width="48px">
                    <h5
                        style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
                        Education
                    </h5>
                    <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
                        A platform for
                        educational management</p>
                </div>
            </div>

            <div class="col-lg-3">
                <div class="my-4 d-flex flex-column justify-content-center"
                    style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
                    <img src="./assets/icons/manufacturing-black.png" class="img-responsive mb-3" height="48px"
                        width="48px">
                    <h5
                        style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
                        Manufacturing
                    </h5>
                    <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
                        Plan, track and
                        schedule your operations</p>
                </div>
            </div>

            <div class="col-lg-3">
                <div class="my-4 d-flex flex-column justify-content-center"
                    style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
                    <img src="./assets/icons/ecom-black.png" class="img-responsive mb-3" height="48px" width="48px">
                    <h5
                        style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
                        E-commerce &amp; Website
                    </h5>
                    <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
                        Mobile
                        friendly,
                        awe-inspiring product pages</p>
                </div>
            </div>

            <div class="col-lg-3">
                <div class="my-4 d-flex flex-column justify-content-center"
                    style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
                    <img src="./assets/icons/service-black.png" class="img-responsive mb-3" height="48px" width="48px">
                    <h5
                        style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
                        Service Management
                    </h5>
                    <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
                        Keep track of
                        services and invoice</p>
                </div>
            </div>

            <div class="col-lg-3">
                <div class="my-4 d-flex flex-column justify-content-center"
                    style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
                    <img src="./assets/icons/restaurant-black.png" class="img-responsive mb-3" height="48px"
                        width="48px">
                    <h5
                        style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
                        Restaurant
                    </h5>
                    <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
                        Run your bar or
                        restaurant methodically</p>
                </div>
            </div>

            <div class="col-lg-3">
                <div class="my-4 d-flex flex-column justify-content-center"
                    style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
                    <img src="./assets/icons/hotel-black.png" class="img-responsive mb-3" height="48px" width="48px">
                    <h5
                        style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
                        Hotel Management
                    </h5>
                    <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
                        An
                        all-inclusive
                        hotel management application</p>
                </div>
            </div>

        </div>
    </section>

    <!-- END OF END OF OUR INDUSTRIES -->

    <!-- FOOTER -->
    <!-- Footer Section -->
    <section class="container" style="margin: 5rem auto 2rem;">
        <div class="row" style="max-width:1540px;">
            <div class="col-lg-12 d-flex flex-column justify-content-center align-items-center">
                <h2 style="color: #212529 !important;">Need Help?</h2>
                <hr
                    style="border: 3px solid #714B67 !important; background-color: #714B67 !important; width: 80px !important; margin-bottom: 2rem !important;" />
            </div>
        </div>

        <!-- Contact Cards -->
        <div class="row d-flex justify-content-center align-items-center"
            style="max-width:1540px; margin: 0 auto 2rem auto;">

            <div class="col-lg-12" style="padding: 0rem 3rem 2rem; border-radius: 10px; margin-right: 3rem; ">

                <div class="row mt-4">
                    <div class="col-lg-4">
                        <a href="mailto:odoo@cybrosys.com" target="_blank" class="btn btn-block mb-2 deep_hover"
                            style="text-decoration: none;  background-color: #4d4d4d; color: #FFF;  border-radius: 4px;"><i
                                class="fa fa-envelope mr-2"></i>odoo@cybrosys.com</a>
                    </div>
                    <div class="col-lg-4">
                        <a href="https://api.WhatsApp.com/send?phone=918606827707" target="_blank"
                            class="btn btn-block mb-2 deep_hover"
                            style="text-decoration: none;  background-color: #25D366; color: #FFF;  border-radius: 4px;"><i
                                class="fa fa-WhatsApp mr-2"></i>WhatsApp</a>
                    </div>
                    <div class="col-lg-4">
                        <a href="mailto:info@cybrosys.com" target="_blank" class="btn btn-block deep_hover"
                            style="text-decoration: none; background-color: #4d4d4d; color: #FFF;  border-radius: 4px;"><i
                                class="fa fa-envelope mr-2"></i>info@cybrosys.com</a>
                    </div>
                </div>
            </div>

        </div>
        <!-- End of Contact Cards -->
    </section>
    <!-- Footer -->
    <section class="oe_container" style="padding: 2rem 3rem 1rem;">
        <div class="row" style="max-width:1540px; margin: 0 auto; margin-right: 3rem; ">
            <!-- Logo -->
            <div class="col-lg-12 d-flex justify-content-center align-items-center" style="margin-top: 3rem;">
                <img src="https://www.cybrosys.com/images/logo.png" width="200px" height="auto" />
            </div>
            <!-- End of Logo -->
            <div class="col-lg-12">
                <hr
                    style="margin-top: 3rem;background: linear-gradient(90deg, rgba(2,0,36,0) 0%, rgba(229,229,229,1) 33%, rgba(229,229,229,1) 58%, rgba(0,212,255,0) 100%); height: 2px; border-style: none;">
                <!-- End of Footer Section -->
            </div>
        </div>
    </section>
    <!-- END OF FOOTER -->

</div>

===== .\dashboard_pos\static\src\css\pos_dashboard.css =====
.oh_dashboards{
    padding-top :15px;
    background-color: #f8faff !important;
}

.oh-card h4 {
    font-size: 1.1rem;
}
.breadcrumbs {
    margin-top: 0;
}

.buttons button {
  margin: 2px 0; }

/* Button Reset */
.btn, .button {
  display: inline-block;
  font-weight: 400;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  transition: all .15s ease-in-out;
  border-radius: 0;
  cursor: pointer; }


/*    Widget One
---------------------------*/
.stat-content {
    display: inline-block;
    width: 66%;
}
.stat-icon{
    display: inline-block;
}

.stat-widget-one .stat-icon {
    vertical-align: top;
    margin: auto;
    width: 100%;
    color: #01c490;
}

.stat-widget-one .stat-icon i {
  font-size: 30px;
  font-weight: 900;
  display: inline-block;
  color: #01c490;}

.stat-widget-one .stat-text {
    font-size: 14px;
    color: #868e96;
    font-weight: bold;
}

.stat-widget-one .stat-digit {
  font-size: 24px;
  color: #02448b; }

.stat-count {
  font-size: 20px;
  text-align: center;
  color: #00438b;}

.stat-title {
  font-size: 17px;
  text-align: center;
  color: #00438b; }

.mb-0{
    font-size: 20px;
    position: relative;
    text-align: center;
}
.mb-0 .dash-title {
    font-size: 20px;
    text-align: center;
    color: rgba(255, 255, 255, 0.81);
}
.hr_birthday {
    font-size: 28px;
    text-align: center;
    padding: 20px 0;
    color: #00438b;
    font-weight: 600;
}
body .text-color {
    color: #00438b;
}
.slice {
    stroke: #fff;
    stroke-width: 0px;
}

/* Leave graph */

path {  stroke: #fff; }
path:hover {  opacity:0.9; }
rect:hover {  fill:#934da5; }
.axis {  font: 10px sans-serif; }
.legend tr{    border-bottom:1px solid grey; }
.legend tr:first-child{    border-top:1px solid grey; }

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.x.axis path {  display: none; }
.legend{
    border-collapse: collapse;
    border-spacing: 0px;
    display: inline-block;
}
.legend td, .legend .legend_col{
    padding:4px 5px;
    vertical-align:bottom;
}
.legendFreq, .legendPerc{
    align:right;
    width:50px;
}

/* Leave broadfactor graph */

.broad_factor_graph .axis path,
.broad_factor_graph .axis line {
	fill: none;
	stroke: black;
	shape-rendering: crispEdges;
}
.broad_factor_graph .axis text {
	font-family: sans-serif;
	font-size: 11px;
}

.broad_factor_graph rect {
	-moz-transition: all 0.3s;
	-webkit-transition: all 0.3s;
	-o-transition: all 0.3s;
	transition: all 0.3s;
}
.broad_factor_graph rect:hover{
	fill: #ff618a;
}

#broad_factor_pdf {
    background-color: #ffffff;
    border: 0;
    color : #000000;
    float: right;
}
#broad_factor_pdf i {
    color: red;
}

.leave_broad_factor{
    overflow-x: auto !important;
    overflow-y: hidden !important;
    height: auto;
}

/*=====================New Dashboard===========================*/

.oh_dashboards {
    background-color: #f8faff !important;
    padding: 0px !important;

}
.container-fluid.o_pos_dashboard {
    padding: 0px !important;
}
.employee-prof {

    padding: 0px;
    height: 100%;
    background-color: #3e6282;
    /*background-image: linear-gradient(180deg, #3e6282, #41666f);*/
    position: fixed;
    z-index: 999;
}
.employee-prof .oh-card:hover {

    transform:none !important;
    box-shadow: none !important;

}

/*.dummy{
    height:130vh;
}*/
.oh-card {

    padding-top: 0px;
    padding: 0px;
    margin-bottom: 1.5rem;
    border-radius: 0px;
    box-shadow: none;
    background: none;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;

}
.oh-card:hover {

    transform: translateY(-2px) translateZ(0) !important;
    box-shadow: 0 10px 10px 0 rgba(62, 57, 107, 0.12), 0 0 0 transparent !important;

}
.employee-prof .employee-icon {

    float: left;
    padding-right: 0px;
    width: 100%;
    height: 185px;
    overflow: hidden;
    background: #fff;

}
.employee-prof .employee-icon img{
    width: 100%;
    background: #fff;
}

.employee-prof .employee-name h2 {

    text-align: center;
    font-weight: 300;
    text-transform: uppercase;
    font-size: 17px;
    margin-top: 12px;
    margin-bottom: 2px;
    color: #fff;

}
.media-body.employee-name {

    background: #466b8d;
    float: left;
    margin: 0;
    width: 100%

}
.employee-prof .employee-name p {

    margin: 0 0 9px;
    text-align: center;
    font-size: 12px;
    color: #f3f3f3;

}
.employee-prof p {
    margin: 0 0 9px;
    color: #fff;
}
.employee-gender {
    width: 40%;
    margin-left: 10%;
    padding: 8% 10% 4%;
    text-align: center;
    border-right: 1px solid #4d769b;
    margin-top: 14%;
    float: left;
    border-bottom: 1px solid #4d769b;
}
.employee-gender p {
    margin: 0px 0 4px !important;
    color: #fff;
}
.employee-age {
    width: 40%;
    margin-right: 10%;
    padding: 4% 10% 7%;
    text-align: center;
    margin-top: 18%;
    float: left;
    border-bottom: 1px solid #4d769b;
}
.employee-age p {
    margin: 0 0 1px;
    color: #fff;
}
.employee-experience {

    width: 100%;
    text-align: center;
    padding-top: 8%;
    float: left;
    padding-bottom: 3%;

}
.employee-country {
    width: 40%;
    margin-left: 10%;
    padding: 9% 0% 4%;
    text-align: center;
    border-right: 1px solid #4d769b;
    margin-top: 2%;
    float: left;
    border-top: 1px solid #4d769b;

}
.employee-country p {
    margin: 0px 0 1px !important;
    color: #fff;
}
.employee-mobile {
    width: 40%;
    margin-right: 10%;
    padding: 9% 0% 7%;
    text-align: center;
    margin-top: 2%;
    float: left;
    border-top: 1px solid #4d769b;
}
.employee-mobile p {
    margin: 0 0 1px;
    color: #fff;
}
.oh-payslip {

    margin-top: 4.5%;

}
.oh-payslip .stat-icon {

    width: 30%;
    height: 85px;
    text-align: center;
    background: #ff8762;
    color: #fff;
    width: 32%;
    padding-top: 2%;
    font-size: xxx-large;

}
.oh-payslip .oh-card {

    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);

}
.stat-widget-one .stat-text {

    font-size: 14px;
    color: #ff8762;
    margin-top: 2.3rem;
    margin-left: 1rem;

}
.stat-widget-one .stat-digit {
    font-size: 26px;
    color:#993232;
    margin-left: 1rem;
    margin-top: -1px;
    font-family: initial
}

.stat-widget-one .stat-icon i {

    font-size: 25px;
    font-weight: 900;
    display: inline-block;
    color: #fff;

}
.stat-widget-one {

    background-color: white;
    text-align: left;

}
.stat-widget-one {
    width: 100%;
}
.oh-payslip .stat-icon {

    width: 30%;
    height: 85px;
    text-align: center;
    padding-top: 2%;

}
.oh-timesheets .stat-icon{
    background: #5ebade !important;
}
.oh-contracts .stat-icon{
    background: #b298e1 !important;
}
.oh-broad-factor .stat-icon{
    background: #70cac1 !important;
}
.oh-timesheets .stat-widget-one .stat-text {
    color: #5ebade;
}
.oh-contracts .stat-widget-one .stat-text {
    color: #b298e1;
}
.oh-broad-factor .stat-widget-one .stat-text {
    color: #70cac1;
}
.leave-manager {

    background-color: #fff;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
    padding: 0px;
    margin: 15px;

}
.hr_leave_request_approve {
    padding: 0;
    padding-bottom: 0em;
    padding-top: 0em;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
}
.leaves_request_month {
    padding: 0;
        padding-top: 0px;
        padding-bottom: 0px;
    padding-bottom: 0em;
    padding-top: 0em;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    border-bottom: 1px solid #f1f1f133;
}
.leaves_request_today{
    padding: 0;
    padding-bottom: 0em;
    padding-top: 0em;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;

}
.hr_leave_request_approve:hover, .leaves_request_month:hover, .leaves_request_today:hover{
    transform: translateY(-2px) translateZ(0) !important;
    box-shadow: 0 10px 10px 0 rgba(62, 57, 107, 0.12), 0 0 0 transparent !important;
}
.hr_leave_request_approve p {
    font-size: 14px;
    color: #ff8762;
    margin-left: 1rem;
    margin-bottom: 0px;
    text-align: left;
    width: 64%;
    font-weight: bold;
    float: left;
}
.leaves_request_today p {
    font-size: 14px;
    color: #5ebade;
    margin-left: 1rem;
    margin-bottom: 0px;
    text-align: left;
    width:64%;
    float:left;
    font-weight: bold;
}
.leaves_request_month p{
    font-size: 14px;
    color: #b298e1;
    margin-left: 1rem;
    margin-bottom:0px;
    text-align: left;
    width:64%;
    float:left;
    font-weight: bold;
}
h4 .stat-count {
    font-size: 17px;
    text-align: center;
    color: #000 !important;
    margin-top: 0px;
    width: 100%;
    float: left;
    margin: 0;
}
.leave-manager h4 {
    float: left;
    width: 23%;

}
.hr_leave_request_approve h4 {

    padding: 5.2rem 0;
    margin: 0;
    background: #ff8762;
    color: #fff;

}
.leaves_request_today h4 {

    padding: 2.2rem 0;
    margin: 0 !important;
    background: #5ebade;
    color: #fff;

}
.leaves_request_month h4 {

    padding: 2.1rem 0;
    margin: 0 !important;
    background: #b298e1;
    color: #fff;

}
.leaves_request_today  h4 .stat-count ,.leaves_request_month h4 .stat-count , .hr_leave_request_approve h4 .stat-count
{
    color:#fff !important;
}
.graph_view .legend {
    margin-bottom: 27px;
    display: inline-block;
    border-collapse: collapse;
    border-spacing: 0px;
    margin-left: 29px;
}
.hr-chart-1{
    margin: 15px 0px;
    background: #fff;
    padding: 0px !important;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
}
.hr-chart-1:hover{
    transform: translateY(-2px) translateZ(0) !important;
    box-shadow: 0 10px 10px 0 rgba(62, 57, 107, 0.12), 0 0 0 transparent !important;
}
.stat-head {
    text-align: left !important;
    font-weight: 300;
    font-size: 15px;
    margin-bottom: 25px;
    margin-left: 24px;
    width: 100%;
}
.emp_graph {
    padding-left: 90px;
    height: auto;
    padding-bottom: 65px;
    text-align: center !important;
}
.hr_leave_allocations_approve p {
    font-size: 14px;
    color: #ff8762;
    margin-left: 1rem;
    margin-bottom: 0px;
    text-align: left;
    width: 70%;
    float: left;
    font-weight: bold;
}
.hr_leave_allocations_approve h4 {

    padding: 2.5rem 0;
    margin: 0;
    background: #ff8762;
    color: #fff;
    width: 26%;
    float: left;
}
.hr_leave_allocations_approve .stat-count {

    font-size: 17px;
    text-align: center;
    color: #fff !important;
    margin-top: 0px;
    width: 100%;
    float: left;
    margin: 0;

}
.hr_leave_allocations_approve {

    padding: 0;
    padding-top: 0px;
    padding-bottom: 0px;
    padding-bottom: 0em;
    padding-top: 0em;
    box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    background: #fff;
    height: 80px;

}
.hr_leave_allocations_approve:hover{
    transform: translateY(-2px) translateZ(0) !important;
    box-shadow: 0 10px 10px 0 rgba(62, 57, 107, 0.12), 0 0 0 transparent !important;
}
.leave-manager {

    background-color: #fff;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
    padding: 0px;
    margin: 15px;
        margin-right: 15px;
    margin-right: 0px;
    width: 95% !important;
    padding: 0;

}
.hr_job_application_approve {
    padding: 0;
        padding-top: 0px;
        padding-bottom: 0px;
    padding-top: 0px;
    padding-bottom: 0px;
    padding-top: 0px;
    padding-bottom: 0px;
    padding-bottom: 0em;
    padding-top: 0em;
    box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    background: #fff;
    margin-top: 15px;
    height: 80px;

}
.hr_job_application_approve p {
    font-size: 14px;
    color: #70cac1;
    margin-left: 1rem;
    margin-bottom: 0px;
    text-align: left;
    width: 70%;
    float: left;
    font-weight: bold;
}
.hr_job_application_approve h4 {

    padding: 2.5rem 0;
    margin: 0;
    background: #70cac1;
    color: #fff;
    width: 26%;
    float: left;

}
.hr_job_application_approve .stat-count {

    font-size: 17px !important;
    color: #fff !important;
    margin-top: 0px !important;
    width: 100%;
    float: left;
    margin: 0;
    margin: 0px !important;
    text-align: center !important;
    width: 100% !important;

}
.hr_job_application_approve:hover{
    transform: translateY(-2px) translateZ(0) !important;
    box-shadow: 0 10px 10px 0 rgba(62, 57, 107, 0.12), 0 0 0 transparent !important;
}
.hr_attendance_login .oh-card {
    margin: 0;
        margin-bottom: 0px;
    margin-bottom: 0px;
    background: #134c8a;
    padding-bottom: 7px;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
}
.hr_attendance_login .stat-widget-one {
    background: none;
}
.hr_attendance_login .stat-widget-one .stat-icon {
    text-align: center;
    padding-top: 9px;
}
.hr_attendance_login .stat-content {
    width: 100%;
    color: #fff !important;
}
.hr_attendance_login .stat-widget-one .stat-text {
    margin: 0;
    text-align: center;
    width: 100% !important;
    padding: 0;
    color: #fff;
}
.hr_attendance_login .stat-widget-one .stat-icon .fa {
    font-size: 50px;
}
.hr_attendance_login .stat-widget-one .stat-icon .fa {
    font-size: 50px;
    margin: 0px;
    box-shadow: none;
}
.hr_attendance_login {
    margin-top: 1.5%;
}
.monthly_leave_graph_view .oh-card {
    background: #fff;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
    padding: 15px;
}
.broad_factor_graph .oh-card {
    padding: 15px !important;
    background: #fff;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
    padding: 15px;
}
.leave_broad_factor {
    overflow-x: auto !important;
    overflow-y: hidden !important;
    height: 336px;
    padding: 0px;
        padding-left: 0px;
}
#broad_factor_pdf {

    background-color: #ffffff;
    float: right;
    border-radius: 30px;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
    border: 1px solid #4ec3b7;
    color: #757575;
    padding-top: 9px;
    color: #4ec3b7;

}
#broad_factor_pdf:hover{
    transform: translateY(-2px) translateZ(0) !important;
    box-shadow: 0 10px 10px 0 rgba(62, 57, 107, 0.12), 0 0 0 transparent !important;
}
.hr_birthday {
    font-size: 17px;
    text-align: center;
    padding: 20px 0;
    color: #00438b;
    font-weight: 300;
}
.hr_notification img {
    width: 40px;
    height: 40px;
    border-radius: 100%;
}
.hr_notification {
    background: #fff;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
    height: 316px;
    overflow-y: auto;
    margin-bottom: 15px;
}
.hr_notification .media {
    border-bottom: 1px solid #e6e6e6;
    padding-bottom: 6px;
    margin-bottom: 10px;
}
.hr_notification .text-color.display-6 {
    margin: 0px 0 3px;
    color: #2d2d2d;
}
.hr_notification p {
    margin: 0 0 1px;
    color: #666;
    font-size: 10px;
}
.hr_notification_head {
    font-size: 17px;
    text-align: center;
    padding: 12px 0;
    color: #fff;
    font-weight: 300;
    background: #de6a5e;
    margin-bottom: 9px;
}
.monthly_leave_trend .oh-card{
    background: #fff;
    transition: none !important;
    will-change: none !important;
    box-shadow: none !important;
    margin-bottom: 5px;
}

.monthly_leave_trend path {
    stroke: #70cac1;
    stroke-width: 2;
    fill: none;
}

.monthly_leave_trend .axis path,
.monthly_leave_trend .axis line {
    fill: none;
    stroke: grey;
    stroke-width: 1;
    shape-rendering: crispEdges;
}
.monthly_leave_trend circle{
    fill: #ffffff;
    stroke: #44b7ac;
    stroke-width: 1.5;
}
.hr-chart-1 {
    margin: 15px 0px;
    background: #fff;
    padding: 0px !important;
        padding-top: 0px;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
    padding-top: 3px !important;
}
.monthly_leave_trend {
    background: #fff;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
}
.monthly_leave_trend:hover{
    transform: translateY(-2px) translateZ(0) !important;
    box-shadow: 0 10px 10px 0 rgba(62, 57, 107, 0.12), 0 0 0 transparent !important;
}


/*----------------------*/
.monthly_join_resign_trend{
    padding-right: 0px !important;
}

.monthly_join_resign_trend .oh-card {
    background: #fff;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
    padding: 15px;
}

.monthly_join_resign_trend .axis path,
.monthly_join_resign_trend .axis line {
      fill: none;
      shape-rendering: crispEdges;
    }

.monthly_join_resign_trend .line {
      fill: none;
      stroke-width: 3px;

    }

.monthly_join_resign_trend .area {
      fill: steelblue;
      opacity: 0.5;
    }

.monthly_join_resign_trend .dot {
      fill: steelblue;
      stroke: steelblue;
      stroke-width: 1.5px;
    }

/*----------------------------------------*/


.monthly_attrition_rate path {
    stroke: #70cac1;
    stroke-width: 2;
    fill: none;
}

.monthly_attrition_rate .axis path,
.monthly_attrition_rate .axis line {
    fill: none;
    stroke: grey;
    stroke-width: 1;
    shape-rendering: crispEdges;
}
.monthly_attrition_rate circle{
    fill: #ffffff;
    stroke: #44b7ac;
    stroke-width: 1.5;
}

.monthly_attrition_rate .oh-card {
    background: #fff;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
    padding: 15px;
}

.monthly_attrition_rate .oh-card:hover{
    transform: translateY(-2px) translateZ(0) !important;
    box-shadow: 0 10px 10px 0 rgba(62, 57, 107, 0.12), 0 0 0 transparent !important;
}


.row.main-section {
    margin-right: 0px; !important;
}
/* width */
.hr_notification::-webkit-scrollbar {
  width: 4px;
}

/* Track */
.hr_notification::-webkit-scrollbar-track {
  background: #f1f1f1;
}

/* Handle */
.hr_notification::-webkit-scrollbar-thumb {
  background: #5ebade;
}

/* Handle on hover */
.hr_notification::-webkit-scrollbar-thumb:hover {
  background: #598da1;
}

.oh-card-body {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.oh-ribbon {
  position: absolute;
  left: -5px; top: -5px;
  z-index: 1;
  overflow: hidden;
  width: 150px; height: 150px;
  text-align: right;
}
.oh-ribbon span {
    font-size: 10px;
    font-weight: bold;
    color: #FFF;
    text-transform: uppercase;
    text-align: center;
    line-height: 20px;
    transform: rotate(-45deg);
    -webkit-transform: rotate(-45deg);
    width: 200px;
    display: block;
    background: #79A70A;
    background: linear-gradient(#2989d8 0%, #1e5799 100%);
    box-shadow: 0 3px 10px -5px rgba(0, 0, 0, 1);
    position: absolute;
    top: 56px;
    left: -35px;
}
.oh-ribbon span::before {
  content: "";
  position: absolute; left: 0px; top: 100%;
  z-index: -1;
  border-left: 3px solid #1e5799;
  border-right: 3px solid transparent;
  border-bottom: 3px solid transparent;
  border-top: 3px solid #1e5799;
}
.oh-ribbon span::after {
  content: "";
  position: absolute; right: 0px; top: 100%;
  z-index: -1;
  border-left: 3px solid transparent;
  border-right: 3px solid #1e5799;
  border-bottom: 3px solid transparent;
  border-top: 3px solid #1e5799;
}

.o_action_manager{
     overflow-y: scroll !important;
    max-width:100%;
 }

 .hr_notification {

    margin-top: 20px;
}

.stat_count{
    margin-top: -111px;
    margin-left: 35px;
    font-size: 48px;
}


.stat-head {
    text-align: left !important;
    font-weight: 300;
    font-size: 18px;
    margin-bottom: 25px;
    margin-left: 24px;
    width: 100%;
    margin-top: 57px;
}

===== .\dashboard_pos\static\src\js\pos_dashboard.js =====
odoo.define('dashboard_pos.Dashboard', function (require) {
"use strict";

var AbstractAction = require('web.AbstractAction');
var ajax = require('web.ajax');
var core = require('web.core');
var rpc = require('web.rpc');
var session = require('web.session');
var web_client = require('web.web_client');
var _t = core._t;
var QWeb = core.qweb;

var PosDashboard = AbstractAction.extend({
    template: 'PosDashboard',
    events: {
            'click .pos_order_today':'pos_order_today',
            'click .pos_order':'pos_order',
            'click .pos_total_sales':'pos_order',
            'click .pos_session':'pos_session',
            'click .pos_refund_orders':'pos_refund_orders',
            'click .pos_refund_today_orders':'pos_refund_today_orders',
            'change #pos_sales': 'onclick_pos_sales',
    },

    init: function(parent, context) {
        this._super(parent, context);
        this.dashboards_templates = ['PosOrders','PosChart','PosCustomer'];
        this.payment_details = [];
        this.top_salesperson = [];
        this.selling_product = [];
        this.total_sale = [];
        this.total_order_count = [];
        this.total_refund_count = [];
        this.total_session = [];
        this.today_refund_total = [];
        this.today_sale = [];
    },

    willStart: function() {
        var self = this;
        return $.when(ajax.loadLibs(this), this._super()).then(function() {
            return self.fetch_data();
        });
    },

    start: function() {
        var self = this;
        this.set("title", 'Dashboard');
        return this._super().then(function() {
            self.render_dashboards();
            self.render_graphs();
            self.$el.parent().addClass('oe_background_grey');
        });
    },

    fetch_data: function() {
        var self = this;
        var def1 =  this._rpc({
                model: 'pos.order',
                method: 'get_refund_details'
        }).then(function(result) {
           self.total_sale = result['total_sale'],
           self.total_order_count = result['total_order_count']
           self.total_refund_count = result['total_refund_count']
           self.total_session = result['total_session']
           self.today_refund_total = result['today_refund_total']
           self.today_sale = result['today_sale']
        });
      var def2 = self._rpc({
            model: "pos.order",
            method: "get_details",
        })
        .then(function (res) {
            self.payment_details = res['payment_details'];
            self.top_salesperson = res['salesperson'];
            self.selling_product = res['selling_product'];
        });
        return $.when(def1,def2);
    },

    render_dashboards: function() {
        var self = this;
            _.each(this.dashboards_templates, function(template) {
                self.$('.o_pos_dashboard').append(QWeb.render(template, {widget: self}));
            });
    },
      render_graphs: function(){
        var self = this;
         self.render_top_customer_graph();
         self.render_top_product_graph();
         self.render_product_category_graph();
    },
//      get_emp_image_url: function(employee){
//        return window.location.origin + '/web/image?model=pos.order&field=image&id='+employee;
//    },




       pos_order_today: function(e){
        var self = this;
        var date = new Date();
        var yesterday = new Date(date.getTime());
        yesterday.setDate(date.getDate() - 1);
        console.log(yesterday)
        e.stopPropagation();
        e.preventDefault();

        session.user_has_group('hr.group_hr_user').then(function(has_group){
            if(has_group){
                var options = {
                    on_reverse_breadcrumb: self.on_reverse_breadcrumb,
                };
                self.do_action({
                    name: _t("Today Order"),
                    type: 'ir.actions.act_window',
                    res_model: 'pos.order',
                    view_mode: 'tree,form,calendar',
                    view_type: 'form',
                    views: [[false, 'list'],[false, 'form']],
                    domain: [['date_order','<=', date],['date_order', '>=', yesterday]],
                    target: 'current'
                }, options)
            }
        });

    },


      pos_refund_orders: function(e){
        var self = this;
        var date = new Date();
//        alert(date,"date")
        var yesterday = new Date(date.getTime());
        yesterday.setDate(date.getDate() - 1);
        console.log(yesterday)
        e.stopPropagation();
        e.preventDefault();

        session.user_has_group('hr.group_hr_user').then(function(has_group){
            if(has_group){
                var options = {
                    on_reverse_breadcrumb: self.on_reverse_breadcrumb,
                };
                self.do_action({
                    name: _t("Refund Orders"),
                    type: 'ir.actions.act_window',
                    res_model: 'pos.order',
                    view_mode: 'tree,form,calendar',
                    view_type: 'form',
                    views: [[false, 'list'],[false, 'form']],
                    domain: [['amount_total', '<', 0.0]],

//                    domain: [['date_order', '=', date]],
                    target: 'current'
                }, options)
            }
        });

    },
    pos_refund_today_orders: function(e){
        var self = this;
        var date = new Date();
//        alert(date,"date")
        var yesterday = new Date(date.getTime());
        yesterday.setDate(date.getDate() - 1);
        console.log(yesterday)
        e.stopPropagation();
        e.preventDefault();

        session.user_has_group('hr.group_hr_user').then(function(has_group){
            if(has_group){
                var options = {
                    on_reverse_breadcrumb: self.on_reverse_breadcrumb,
                };
                self.do_action({
                    name: _t("Refund Orders"),
                    type: 'ir.actions.act_window',
                    res_model: 'pos.order',
                    view_mode: 'tree,form,calendar',
                    view_type: 'form',
                    views: [[false, 'list'],[false, 'form']],
                    domain: [['amount_total', '<', 0.0],['date_order','<=', date],['date_order', '>=', yesterday]],
//                    domain: [['date_order', '=', date]],
                    target: 'current'
                }, options)
            }
        });

    },

        pos_order: function(e){
        var self = this;
        var date = new Date();
        var yesterday = new Date(date.getTime());
        yesterday.setDate(date.getDate() - 1);
        console.log(yesterday)
        e.stopPropagation();
        e.preventDefault();
        session.user_has_group('hr.group_hr_user').then(function(has_group){
            if(has_group){
                var options = {
                    on_reverse_breadcrumb: self.on_reverse_breadcrumb,
                };
                self.do_action({
                    name: _t("Total Order"),
                    type: 'ir.actions.act_window',
                    res_model: 'pos.order',
                    view_mode: 'tree,form,calendar',
                    view_type: 'form',
                    views: [[false, 'list'],[false, 'form']],
//                    domain: [['amount_total', '<', 0.0]],
                    target: 'current'
                }, options)
            }
        });

    },
    pos_session: function(e){
        var self = this;
        e.stopPropagation();
        e.preventDefault();
        session.user_has_group('hr.group_hr_user').then(function(has_group){
            if(has_group){
                var options = {
                    on_reverse_breadcrumb: self.on_reverse_breadcrumb,
                };
                self.do_action({
                    name: _t("sessions"),
                    type: 'ir.actions.act_window',
                    res_model: 'pos.session',
                    view_mode: 'tree,form,calendar',
                    view_type: 'form',
                    views: [[false, 'list'],[false, 'form']],
//                     domain: [['state','=', In Progress]],
                    target: 'current'
                }, options)
            }
        });

    },

     onclick_pos_sales:function(events){
        var option = $(events.target).val();
        console.log('came monthly')
       var self = this
        var ctx = self.$("#canvas_1");
            rpc.query({
                model: "pos.order",
                method: "get_department",
                args: [option],
            }).then(function (arrays) {
            console.log(arrays)
          var data = {
            labels: arrays[1],
            datasets: [
              {
                label: arrays[2],
                data: arrays[0],
                backgroundColor: [
                  "rgba(255, 99, 132,1)",
                  "rgba(54, 162, 235,1)",
                  "rgba(75, 192, 192,1)",
                  "rgba(153, 102, 255,1)",
                  "rgba(10,20,30,1)"
                ],
                borderColor: [
                 "rgba(255, 99, 132, 0.2)",
                  "rgba(54, 162, 235, 0.2)",
                  "rgba(75, 192, 192, 0.2)",
                  "rgba(153, 102, 255, 0.2)",
                  "rgba(10,20,30,0.3)"
                ],
                borderWidth: 1
              },

            ]
          };

  //options
          var options = {
            responsive: true,
            title: {
              display: true,
              position: "top",
              text: "SALE DETAILS",
              fontSize: 18,
              fontColor: "#111"
            },
            legend: {
              display: true,
              position: "bottom",
              labels: {
                fontColor: "#333",
                fontSize: 16
              }
            },
            scales: {
              yAxes: [{
                ticks: {
                  min: 0
                }
              }]
            }
          };

          //create Chart class object
          if (window.myCharts != undefined)
          window.myCharts.destroy();
          window.myCharts = new Chart(ctx, {
//          var chart = new Chart(ctx, {
            type: "bar",
            data: data,
            options: options
          });

        });
        },


     render_top_customer_graph:function(){
       var self = this
        var ctx = self.$(".top_customer");
            rpc.query({
                model: "pos.order",
                method: "get_the_top_customer",
            }).then(function (arrays) {


          var data = {
            labels: arrays[1],
            datasets: [
              {
                label: "",
                data: arrays[0],
                backgroundColor: [
                  "rgb(148, 22, 227)",
                  "rgba(54, 162, 235)",
                  "rgba(75, 192, 192)",
                  "rgba(153, 102, 255)",
                  "rgba(10,20,30)"
                ],
                borderColor: [
                 "rgba(255, 99, 132,)",
                  "rgba(54, 162, 235,)",
                  "rgba(75, 192, 192,)",
                  "rgba(153, 102, 255,)",
                  "rgba(10,20,30,)"
                ],
                borderWidth: 1
              },

            ]
          };

  //options
          var options = {
            responsive: true,
            title: {
              display: true,
              position: "top",
              text: " Top Customer",
              fontSize: 18,
              fontColor: "#111"
            },
            legend: {
              display: true,
              position: "bottom",
              labels: {
                fontColor: "#333",
                fontSize: 16
              }
            },
            scales: {
              yAxes: [{
                ticks: {
                  min: 0
                }
              }]
            }
          };

          //create Chart class object
          var chart = new Chart(ctx, {
            type: "pie",
            data: data,
            options: options
          });

        });
        },

     render_top_product_graph:function(){
       var self = this
        var ctx = self.$(".top_selling_product");
            rpc.query({
                model: "pos.order",
                method: "get_the_top_products",
            }).then(function (arrays) {


          var data = {
            labels: arrays[1],
            datasets: [
              {
                label: "Quantity",
                data: arrays[0],
                backgroundColor: [
                  "rgba(255, 99, 132,1)",
                  "rgba(54, 162, 235,1)",
                  "rgba(75, 192, 192,1)",
                  "rgba(153, 102, 255,1)",
                  "rgba(10,20,30,1)"
                ],
                borderColor: [
                 "rgba(255, 99, 132, 0.2)",
                  "rgba(54, 162, 235, 0.2)",
                  "rgba(75, 192, 192, 0.2)",
                  "rgba(153, 102, 255, 0.2)",
                  "rgba(10,20,30,0.3)"
                ],
                borderWidth: 1
              },

            ]
          };

  //options
          var options = {
            responsive: true,
            title: {
              display: true,
              position: "top",
              text: " Top products",
              fontSize: 18,
              fontColor: "#111"
            },
            legend: {
              display: true,
              position: "bottom",
              labels: {
                fontColor: "#333",
                fontSize: 16
              }
            },
            scales: {
              yAxes: [{
                ticks: {
                  min: 0
                }
              }]
            }
          };

          //create Chart class object
          var chart = new Chart(ctx, {
            type: "horizontalBar",
            data: data,
            options: options
          });

        });
        },

     render_product_category_graph:function(){
           var self = this
        var ctx = self.$(".top_product_categories");
            rpc.query({
                model: "pos.order",
                method: "get_the_top_categories",
            }).then(function (arrays) {


          var data = {
            labels: arrays[1],
            datasets: [
              {
                label: "Quantity",
                data: arrays[0],
                backgroundColor: [
                  "rgba(255, 99, 132,1)",
                  "rgba(54, 162, 235,1)",
                  "rgba(75, 192, 192,1)",
                  "rgba(153, 102, 255,1)",
                  "rgba(10,20,30,1)"
                ],
                borderColor: [
                 "rgba(255, 99, 132, 0.2)",
                  "rgba(54, 162, 235, 0.2)",
                  "rgba(75, 192, 192, 0.2)",
                  "rgba(153, 102, 255, 0.2)",
                  "rgba(10,20,30,0.3)"
                ],
                borderWidth: 1
              },


            ]
          };

  //options
          var options = {
            responsive: true,
            title: {
              display: true,
              position: "top",
              text: " Top product categories",
              fontSize: 18,
              fontColor: "#111"
            },
            legend: {
              display: true,
              position: "bottom",
              labels: {
                fontColor: "#333",
                fontSize: 16
              }
            },
            scales: {
              yAxes: [{
                ticks: {
                  min: 0
                }
              }]
            }
          };

          //create Chart class object
          var chart = new Chart(ctx, {
            type: "horizontalBar",
            data: data,
            options: options
          });

        });
        },
});


core.action_registry.add('pos_dashboard', PosDashboard);

return PosDashboard;

});


===== .\dashboard_pos\static\src\xml\pos_dashboard.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">
    <t t-name="PosDashboard">
        <div class="oh_dashboards">
            <div class="container-fluid o_pos_dashboard">
            </div>
        </div>
    </t>
    <t t-name="PosOrders">
        <div class="row main-section">
            <div class="col-md-4 col-sm-6 pos_order_today oh-payslip">
                        <div class="oh-card" style="width: 288px;">
                            <div class="oh-card-body">
                                <div class="stat-widget-one">
<!--                                    <div class="stat-icon" style="background:#5bcbd0"><t t-esc="widget.today_sale"/></div>-->

                                    <div class="stat-icon" style="background:#5bcbd0"><i class="fa fa-shopping-bag"/></div>
                                    <div class="stat-content">
                                        <div class="stat-head">Today Orders</div>
                                        <div class="stat_count"><t t-esc="widget.today_sale"/></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
            <div class="col-md-4 col-sm-6 pos_order oh-payslip">
                                    <div class="oh-card" style="width: 288px;">
                                        <div class="oh-card-body">
                                            <div class="stat-widget-one">
<!--                                                <div class="stat-icon" style="background:#645bd0"><t t-esc="widget.total_order_count"/></div>-->
                                                <div class="stat-icon" style="background:#645bd0"><i class="fa fa-shopping-bag"/></div>
                                                <div class="stat-content">
                                                    <div class="stat-head">Total Orders</div>
                                                    <div class="stat_count"><t t-esc="widget.total_order_count"/></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
            <div class="col-md-4 col-sm-6 pos_total_sales oh-payslip">
                                    <div class="oh-card" style="width: 350px;">
                                        <div class="oh-card-body">
                                            <div class="stat-widget-one">
                                                <div class="stat-icon" style="background:#85d05b"><i class="fa fa-shopping-cart"/></div>
                                                <!--                                                <div class="stat-icon" style="width:150px;background:##85d05b"><t t-esc="widget.total_sale"/></div>-->
                                                <div class="stat-content">
                                                    <div class="stat-head">Total Sales</div>
                                                    <div class="stat_count"><t t-esc="widget.total_sale"/></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
            <div class="col-md-4 col-sm-6 pos_session oh-payslip">
                                            <div class="oh-card" style="width: 288px;">
                                                <div class="oh-card-body">
                                                    <div class="stat-widget-one">
                                                        <div class="stat-icon" style="background:#d05bb8"><i class="fa fa-signal"/></div>
                                                        <div class="stat-content">
                                                            <div class="stat-head">Sessions</div>
                                                            <div class="stat_count"><t t-esc="widget.total_session"/></div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                </div>

            <div class="col-md-4 col-sm-6 pos_refund_orders oh-payslip">
                                    <div class="oh-card" style="width: 288px;">
                                        <div class="oh-card-body">
                                            <div class="stat-widget-one">
                                                <div class="stat-icon" style="background:#d0c35b"><i class="fa fa-minus-circle"/></div>
                                                <div class="stat-content">
                                                    <div class="stat-head">Total Refund Orders</div>
                                                    <div class="stat_count"><t t-esc="widget.total_refund_count"/></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
            <div class="col-md-4 col-sm-6 pos_refund_today_orders oh-payslip">
                                    <div class="oh-card" style="width: 350px;">
                                        <div class="oh-card-body">
                                            <div class="stat-widget-one">
                                                <div class="stat-icon" style="background:#5b8ed0"><i class="fa fa-minus-circle"/></div>
                                                <div class="stat-content">
                                                    <div class="stat-head">Today Refund Order</div>
                                                    <div class="stat_count"><t t-esc="widget.today_refund_total"/></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

            </div>
        </t>
    <t t-name="PosChart">
        <div class="col-xs-12 col-sm-12 col-lg-12 col-md-12">
            <div class="row" style="margin:0px;">
                <div class="col-md-6" id="col-graph">
                    <div class="card">
                        <div class="card-header">
                            <div class="card-title">
                                <b>
                                    <h3 class="custom-h3">SALE REPORT</h3>
                                </b>
                            </div>
                            <div class="card-tools">
                            <select id="pos_sales">
<!--                                <option value="pos_hourly_sales">Select</option>-->
                                <option style="display:none;"> -- select an option -- </option>
                                <option value="pos_hourly_sales">Hourly</option>
                                <option value="pos_monthly_sales">Monthly</option>
                                <option value="pos_year_sales">Yearly</option>
                            </select>
                        </div>
                        </div>
                        <div class="card-body mt-3" id="in_ex_body_hide">
                             <div class="row">
                                <div class="col-md-12">
                                   <p id="myelement1"></p>
                                    <div class="chart">
                                      <canvas id="canvas_1" width="200" height="90"></canvas>
                                   </div>
                                </div>
                             </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6 col-lg-6  top_customer_graph_view">
                    <div class="oh-card text-color">
                        <div class="oh-card-body pb-0">
                            <h4 class="mb-0">
                            </h4>
                        </div>
                        <canvas class="top_customer" width="200" height="120"/>
                    </div>
                </div>
                <div class="col-sm-6 col-lg-6  selling_product_graph_view">
                    <div class="oh-card text-color">
                        <div class="oh-card-body pb-0">
                            <h4 class="mb-0">
                            </h4>
                        </div>
                        <canvas class="top_selling_product" width="200" height="120"/>
                    </div>
                </div>
                <div class="col-sm-6 col-lg-6  selling_product_graph_view">
                    <div class="oh-card text-color">
                        <div class="oh-card-body pb-0">
                            <h4 class="mb-0">
                            </h4>
                        </div>
                        <canvas class="top_product_categories" width="200" height="120"/>
                    </div>
                </div>
            </div>
        </div>

    </t>

    <t t-name="PosCustomer">
         <div class="employee_dashboard_main">
        <div class="row main-section">
            <div class="col-md-4 col-lg-4">
                <div class="hr_notification" style="background: #fff;transition: transform 0.2s ease, box-shadow 0.2s ease;will-change: transform, box-shadow;box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
                height: 316px;overflow-y: auto;margin-bottom: 15px;">
                    <div class="hr_notification_head"
                         style="font-size: 17px;text-align: center;padding: 12px 0;color: #fff;font-weight: 300;background: #de6a5e;margin-bottom: 9px;">
                   Sale by Salesperson
                    </div>
                    <div class="col-sm-12 col-lg-12" style="padding:0;">
                            <div class="text-color">
                                <div class="">
                                <div class="media">
                                <div class="media-body">
                                    <table class="table table-sm">
                                        <thead>
                                            <tr>
                                                <th rowspan="12">Name&#160;&#160;&#160;</th>
                                                <th rowspan="12">orders</th>
                                                <th rowspan="12">Amount</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                             <t t-foreach="widget.top_salesperson" t-as="salesperson">
                                                <tr>
                                                    <td>
                                                        <h2 class="text-color display-6" style="font-size: 15px;">
                                                            <t t-esc="salesperson[0]"/>
                                                        </h2>
                                                    </td>
                                                    <td>
                                                        <h2 class="text-color display-6" style="font-size: 15px;">
                                                            <t t-esc="salesperson[2]"/>
                                                        </h2>
                                                    </td>
                                                    <td>
                                                        <h2 class="text-color display-6" style="font-size: 15px;">
                                                            <t t-esc="salesperson[1]"/>
                                                        </h2>
                                                    </td>
                                                </tr>
                                            </t>
                                        </tbody>
                                    </table>
                                </div></div></div></div>
                            </div>
                    </div>
            </div>
            <div class="col-md-4 col-lg-4">
                    <div class="hr_notification" style="background: #fff;transition: transform 0.2s ease, box-shadow 0.2s ease;will-change: transform, box-shadow;box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
                    height: 316px;overflow-y: auto;margin-bottom: 15px;">
                        <div class="hr_notification_head"
                             style="font-size: 17px;text-align: center;padding: 12px 0;color: #fff;font-weight: 300;background:#de6a5e;;margin-bottom: 9px;">
                          Payment Method
                        </div>
                        <div class="col-sm-12 col-lg-12" style="padding:0;">
                                <div class="text-color">
                                    <div class="">
                                    <div class="media">
                                    <div class="media-body">
                                        <table class="table table-sm">
                                            <thead>
                                                <tr>
                                                    <th rowspan="12">Payment Method&#160;&#160;&#160;</th>
                                                    <th rowspan="12">Amount</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                 <t t-foreach="widget.payment_details" t-as="payment_method">
                                                    <tr>
                                                        <td>
                                                            <h2 class="text-color display-6" style="font-size: 15px;">
                                                                <t t-esc="payment_method[0]"/>
                                                            </h2>
                                                        </td>
                                                        <td>
                                                            <h2 class="text-color display-6" style="font-size: 15px;">
                                                                <t t-esc="payment_method[1]"/>
                                                            </h2>
                                                        </td>
                                                    </tr>
                                                </t>
                                            </tbody>
                                        </table>
                                    </div></div></div></div>
                                </div>
                    </div>
            </div>


            <div class="col-md-4 col-lg-4">
                <div class="hr_notification" style="background: #fff;transition: transform 0.2s ease, box-shadow 0.2s ease;will-change: transform, box-shadow;box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
                height: 316px;overflow-y: auto;margin-bottom: 15px;">
                    <div class="hr_notification_head"
                         style="font-size: 17px;text-align: center;padding: 12px 0;color: #fff;font-weight: 300;background: #de6a5e;margin-bottom: 9px;">
                 Session Status
                    </div>
                    <div class="col-sm-12 col-lg-12" style="padding:0;">
                            <div class="text-color">
                                <div class="">
                                <div class="media">
                                <div class="media-body">
                                    <table class="table table-sm">
                                        <thead>
                                            <tr>
                                                <th rowspan="12">Session&#160;&#160;&#160;</th>
                                                <th rowspan="12">Status</th>
                                                <!--                                                <th rowspan="12">Amount</th>-->
                                            </tr>
                                        </thead>
                                        <tbody>
                                             <t t-foreach="widget.selling_product" t-as="session">
                                                <tr>
                                                    <td>
                                                        <h2 class="text-color display-6" style="font-size: 15px;">
                                                            <t t-esc="session['session']"/>
                                                        </h2>
                                                    </td>
                                                    <td>
                                                        <h2 class="text-color display-6" style="font-size: 15px;">
                                                            <t t-esc="session['status']"/>
                                                        </h2>
                                                    </td>
                                                    <!--                                                    <td>-->
                                                    <!--                                                        <h2 class="text-color display-6" style="font-size: 15px;">-->
                                                    <!--                                                            <t t-esc="salesperson[1]"/>-->
                                                    <!--                                                        </h2>-->
                                                    <!--                                                    </td>-->
                                                </tr>
                                            </t>
                                        </tbody>
                                    </table>
                                </div></div></div></div>
                            </div>
                    </div>
            </div>

            </div>
         </div>


    </t>
</templates>


===== .\dashboard_pos\views\dashboard_views.xml =====
<odoo>
    <data>
        <record id="action_pos_dashboard" model="ir.actions.client">
            <field name="name">Dashboard</field>
            <field name="tag">pos_dashboard</field>
        </record>

        <menuitem name="Dashboard" id="pos_dashboard" parent="point_of_sale.menu_point_rep"
                  sequence="1"
                  groups="point_of_sale.group_pos_manager"
                  action="action_pos_dashboard"/>
    </data>

</odoo>


===== .\scripts\bk_script.sh =====

#!/bin/bash

# vars
now=$(date +"%Y_%m_%d_%H.%M")
bk_dir=/home/azbah/odoo/db_backup
db_name="AZBAH"
admin_pass=sam6
file_name=$db_name"_"$now".zip"

bk_path_and_file=${bk_dir}/$file_name


#read -p "Press [Enter] key to start backup..."

# create a backup
curl -X POST \
    -F "master_pwd=${admin_pass}" \
    -F "name=${db_name}" \
    -F "backup_format=zip" \
    -o ${bk_path_and_file} \
    http://127.0.0.1:8015/web/database/backup

rclone copy ${bk_path_and_file} gdrive:odoo15_bk

# delete old backups
#find ${bk_dir} -type f -mtime +7 -name "${db_name}.*.zip" -delete
#sudo find ${bk_dir} -type f -mtime +7 -name "${db_name}.*.zip" -delete 2>&1 | tee ./find_error.log
sudo find db_backup/ -name "AZB*" -type f -mtime +7 -delete 2>&1 | tee ./find_error.log


===== .\scripts\docker-compose.yml =====
version: '3.1'

networks:
  monitoring:
    driver: bridge

services:
  odoo15:
    image: odoo:15.0
    container_name: odoo15
    restart: always
    user: root
    depends_on:
      - db15
    ports:
      - "0.0.0.0:8015:8069"
      - "8075:8072"
    volumes:
      - odoo15:/var/lib/odoo
      - .:/etc/odoo
      - ../monitor/logs/odoo:/var/log/odoo
      - ../addons_azba/addons_ent:/mnt/addons_ent
      - ../addons_azba/ejad:/mnt/addons_ejad
      - ../addons_azba/misc:/mnt/misc
      - ../addons_azba/reporting:/mnt/addons_reporting
      - ../addons_azba/web_extra:/mnt/addons_web_extra
      - ../addons_azba/azba:/mnt/addons_azba
    environment:
      - HOST=db15
      - USER=odoo
      - PASSWORD=myodoo
      - POSTGRES_SUPERUSER=true
      - ODOO_HTTP_SOCKET_TIMEOUT=600
    networks:
      - monitoring

  db15:
    image: postgres:15.0
    container_name: db15
    restart: always
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=myodoo
      - POSTGRES_USER=odoo
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - db15:/var/lib/postgresql/data/pgdata
      - ./postgresql.conf:/var/lib/postgresql/data/pgdata/postgresql.conf
    ports:
      - "5432:5432"
    networks:
      - monitoring

  

volumes:
  odoo15:
  db15:
 


===== .\scripts\find_error.log =====
find: ‘db_backup/’: No such file or directory


===== .\scripts\index.html =====
<h1>Mooha1</h1>


===== .\scripts\log_rotate.sh =====
#!/bin/bash

# Define the log files to check
files=( "/home/azbah/odoo/monitor/logs/odoo/odoo.log" "/home/azbah/odoo/monitor/logs/postgresql/postgresql.log" )

# Define the size limit in MB
limit=100

# Define the sequence prefix
prefix="_0"

# Define the maximum number of files to keep
max_files=10


  for file in "${files[@]}"; do
    # Check the size of the file
    size=$(du -m "$file" | cut -f1)

    # If the size exceeds the limit, rotate the file
    if [ "$size" -gt "$limit" ]; then
      # Determine the next suffix
      suffix=$(ls "${file}${prefix}"* 2> /dev/null | awk -F "${prefix}" '{print $2}' | sort -nr | head -n 1)
      suffix=$((suffix + 1))

      # Rename the file and add the suffix
      new_file="${file}${prefix}${suffix}"
      mv "$file" "$new_file"

      # Compress the new file
      gzip "$new_file"

      # If the number of files exceeds the maximum, remove the last one
      num_files=$(ls "${file}${prefix}"* 2> /dev/null | wc -l)
      if [ "$num_files" -gt "$max_files" ]; then
        last_file=$(ls "${file}${prefix}"* 2> /dev/null | sort | head -n 1)
        rm "$last_file"
      fi
    fi
  done


===== .\scripts\odoo.conf =====
[options]

;workers = 17

limit_memory_hard = 15368706371
                    
limit_memory_soft = 14831835734
limit_request = 8192

limit_time_cpu = 1800
limit_time_real = 1800


admin_passwd=sam6
addons_path = /mnt/addons_ent,
		/mnt/addons_ejad,
		/mnt/misc,
		/mnt/addons_reporting,
		/mnt/addons_web_extra,
		/mnt/addons_azba
data_dir = /var/lib/odoo

proxy_mode = True

; Logging
log_handler = odoo.http:DEBUG,odoo.addons:DEBUG,odoo.modules:DEBUG,werkzeug:DEBUG,odoo:DEBUG
# logfile=/var/log/odoo/odoo.log

===== .\scripts\odoo.conf.before.chakanaya =====
[options]

workers = 20
limit_memory_hard = 123211874304
limit_memory_soft = 102676561920
limit_request = 81920

; Timeout for worker processes
timeout = 3600

limit_time_cpu = 600
limit_time_real = 1200
max_cron_threads = 2

db_maxconn=200
dbfilter = (?!.*_perf$)

admin_passwd=sam6
addons_path = /mnt/addons_ent,
		/mnt/addons_ejad,
		/mnt/misc,
		/mnt/addons_reporting,
		/mnt/addons_web_extra,
		/mnt/addons_azba
data_dir = /var/lib/odoo


proxy_mode = True
log_handler = odoo.http:DEBUG,werkzeug:DEBUG




===== .\scripts\postgresql.conf =====
# Generated by PGConfig 3.1.0 (1d600ea0d1d79f13dd7ed686f9e2befc1fcf9226)
# https://api.pgconfig.org/v1/tuning/get-config?format=conf&include_pgbadger=true&log_format=csvlog&max_connections=200&pg_version=15&environment_name=WEB&total_ram=16GB&cpus=8&drive_type=SSD&arch=x86-64&os_type=linux

# Memory Configuration
#shared_buffers = 4GB
#effective_cache_size = 12GB
#work_mem = 20MB
#maintenance_work_mem = 819MB

# Checkpoint Related Configuration
#min_wal_size = 2GB
#max_wal_size = 3GB
#checkpoint_completion_target = 0.9
#wal_buffers = -1

# Network Related Configuration
listen_addresses = '*'
#max_connections = 200

# Storage Configuration
random_page_cost = 1.1
effective_io_concurrency = 200

# Worker Processes Configuration
#max_worker_processes = 8
#max_parallel_workers_per_gather = 2
#max_parallel_workers = 2

# Logging configuration for pgbadger
logging_collector = on
log_checkpoints = on
log_connections = on
log_disconnections = on
log_lock_waits = on
log_temp_files = 0
lc_messages = 'C'

# Adjust the minimum time to collect the data
log_min_duration_statement = '10s'
log_autovacuum_min_duration = 0

# CSV Configuration
log_destination = 'csvlog'



===== .\scripts\postgresql.old =====
# Generated by PGConfig 3.1.0 (1d600ea0d1d79f13dd7ed686f9e2befc1fcf9226)
# https://api.pgconfig.org/v1/tuning/get-config?format=conf&include_pgbadger=true&log_format=csvlog&max_connections=200&pg_version=15&environment_name=WEB&total_ram=16GB&cpus=8&drive_type=SSD&arch=x86-64&os_type=linux

# Memory Configuration
shared_buffers = 4GB
effective_cache_size = 12GB
work_mem = 20MB
maintenance_work_mem = 819MB

# Checkpoint Related Configuration
min_wal_size = 2GB
max_wal_size = 3GB
checkpoint_completion_target = 0.9
wal_buffers = -1

# Network Related Configuration
listen_addresses = '*'
max_connections = 200

# Storage Configuration
random_page_cost = 1.1
effective_io_concurrency = 200

# Worker Processes Configuration
max_worker_processes = 8
max_parallel_workers_per_gather = 2
max_parallel_workers = 2

# Logging configuration for pgbadger
logging_collector = on
log_checkpoints = on
log_connections = on
log_disconnections = on
log_lock_waits = on
log_temp_files = 0
lc_messages = 'C'

# Adjust the minimum time to collect the data
log_min_duration_statement = '10s'
log_autovacuum_min_duration = 0

# CSV Configuration
log_destination = 'csvlog'



===== .\scripts\staging_azbah3.sh =====
#!/bin/bash

# Set the admin password
admin_pass=sam6

# Set the name of the database to be backed up
db_name=azbah3

# Set the path and file name for the backup file
bk_path_and_file=/home/azbah/staging/bk/${db_name}.zip
echo "Starting Backup ... "
# Backup the database from the live server
curl -X POST \
    -F "master_pwd=${admin_pass}" \
    -F "name=${db_name}" \
    -F "backup_format=zip" \
    -o ${bk_path_and_file} \
    http://127.0.0.1:8015/web/database/backup

echo "Starting Restore ... "
# Restore the backed up database to the staging server
curl -X POST -F "master_pwd=${admin_pass}" -F "backup_file=@./azbah3.zip" -F "name=azbah3" -F "copy=true" http://127.0.0.1:8055/web/database/restore


===== .\scripts\staging_bk.sh =====
#!/bin/bash

# Set the admin password
admin_pass=sam6

# Set the name of the database to be backed up
db_name=AZBAH

# Set the path and file name for the backup file
bk_path_and_file=/home/azbah/staging/bk/${db_name}.zip
echo "Starting Backup ... "
# Backup the database from the live server
curl -X POST \
    -F "master_pwd=${admin_pass}" \
    -F "name=${db_name}" \
    -F "backup_format=zip" \
    -o ${bk_path_and_file} \
    http://127.0.0.1:8099/web/database/backup

echo "Starting Restore ... "
# Restore the backed up database to the staging server
#curl -X POST -F "master_pwd=${admin_pass}" -F "backup_file=@./AZBAH.zip" -F "name=AZBAH" -F "copy=true" http://127.0.0.1:8055/web/database/restore


===== .\scripts\CI_CD\flow_01.py =====
import os
import time
import json
from git import Repo
from datetime import datetime
# from docker import DockerClient

# Initialize Docker client
# client = DockerClient.from_env()

# Define the path to your repository
repo_path = r'd:\odoo_15\odoo\addons_azba'

# Initialize the repository
repo = Repo(repo_path)

# Define the paths for production and staging
paths = {
    'production': 'odoo/addons_azba/',
    'staging': 'beta/addons_azba/'
}

# Define the docker-compose paths for production and staging
docker_compose_paths = {
    'production': 'odoo/scripts',
    'staging': 'beta'
}

while True:
    # Check for new commits every 30 seconds
    time.sleep(3)
    repo.remotes.origin.fetch()

    # Check if there are new commits
    if repo.head.commit.hexsha != repo.remotes.origin.refs.master.commit.hexsha:
        print ('New commits detected ...')
        input("Please enter to continue ...")
        # Read the .update file
        with open('~/odoo/addons_azba/.update', 'r') as file:
            data = json.load(file)

        # Get the current date/time stamp
        timestamp = datetime.now().strftime('%Y%m%d%H%M%S')

        print (f"""Will create a new branch for {data["target"]} with name {'master_' + {timestamp}} ...""")
        input("Please enter to continue ...")

        # Create a new branch without checking it out
        new_branch = repo.create_head('master_' + timestamp, 'origin/master')

        print(f"""Will Pull the changes into {paths[data['target']]} ...""")
        input("Please enter to continue ...")

        # Pull the changes in the selected target
        os.chdir(paths[data['target']])
        os.system('git pull')



        # Update the docker-compose file
        print(f"""Will Update the docker-compose file {paths[data['target']]} ...""")
        print(f"odoo -d {data['target']} -u {','.join(data['addons'])}")
        input("Please enter to continue ...")

        with open('docker-compose.yml', 'r') as file:
            docker_compose = yaml.safe_load(file)

        docker_compose['services']['odoo']['command'] = f"odoo -d {data['target']} -u {','.join(data['addons'])}"

        with open('docker-compose.yml', 'w') as file:
            yaml.dump(docker_compose, file)

        # Restart the selected installations
        os.chdir(docker_compose_paths[data['target']])
        os.system('docker-compose restart')


===== .\stock_card_report\README.rst =====
=================
Stock Card Report
=================

.. 
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! This file is generated by oca-gen-addon-readme !!
   !! changes will be overwritten.                   !!
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! source digest: sha256:99a8eb509031fd2e19d4ee059dab367e0f3f905238babb8ce9ce7105c43c1836
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png
    :target: https://odoo-community.org/page/development-status
    :alt: Beta
.. |badge2| image:: https://img.shields.io/badge/licence-AGPL--3-blue.png
    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html
    :alt: License: AGPL-3
.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Fstock--logistics--reporting-lightgray.png?logo=github
    :target: https://github.com/OCA/stock-logistics-reporting/tree/15.0/stock_card_report
    :alt: OCA/stock-logistics-reporting
.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png
    :target: https://translation.odoo-community.org/projects/stock-logistics-reporting-15-0/stock-logistics-reporting-15-0-stock_card_report
    :alt: Translate me on Weblate
.. |badge5| image:: https://img.shields.io/badge/runboat-Try%20me-875A7B.png
    :target: https://runboat.odoo-community.org/builds?repo=OCA/stock-logistics-reporting&target_branch=15.0
    :alt: Try me on Runboat

|badge1| |badge2| |badge3| |badge4| |badge5|

Stock Card Report is the report that display movement (in/out) of a product in a specified location and date range.

**Table of contents**

.. contents::
   :local:

Usage
=====

To use this module, you need to:

#. Go to Inventory > Reporting > Stock Card.
#. Select Start date, End date, Products, Location.
#. Choose View or Export PDF or Export XLSX or Cancel.

Bug Tracker
===========

Bugs are tracked on `GitHub Issues <https://github.com/OCA/stock-logistics-reporting/issues>`_.
In case of trouble, please check there if your issue has already been reported.
If you spotted it first, help us to smash it by providing a detailed and welcomed
`feedback <https://github.com/OCA/stock-logistics-reporting/issues/new?body=module:%20stock_card_report%0Aversion:%2015.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.

Do not contact contributors directly about support or help with technical issues.

Credits
=======

Authors
~~~~~~~

* Ecosoft

Contributors
~~~~~~~~~~~~

* Pimolnat Suntian <pimolnats@ecosoft.co.th>
* Prapassorn Sornkaew <prapassorn.s@prothaitechnology.com>
* Emad Shaaban <emad.shaaban92@gmail.com>

Maintainers
~~~~~~~~~~~

This module is maintained by the OCA.

.. image:: https://odoo-community.org/logo.png
   :alt: Odoo Community Association
   :target: https://odoo-community.org

OCA, or the Odoo Community Association, is a nonprofit organization whose
mission is to support the collaborative development of Odoo features and
promote its widespread use.

This module is part of the `OCA/stock-logistics-reporting <https://github.com/OCA/stock-logistics-reporting/tree/15.0/stock_card_report>`_ project on GitHub.

You are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.


===== .\stock_card_report\__init__.py =====
# Copyright 2019 Ecosoft Co., Ltd. (http://ecosoft.co.th)
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl).

from . import wizard
from . import reports


===== .\stock_card_report\__manifest__.py =====
# Copyright 2019 Ecosoft Co., Ltd. (http://ecosoft.co.th)
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl).

{
    "name": "Stock Card Report",
    "summary": "Add stock card report on Inventory Reporting.",
    "version": "15.0.1.0.0",
    "category": "Warehouse",
    "website": "https://github.com/OCA/stock-logistics-reporting",
    "author": "Ecosoft, Odoo Community Association (OCA)",
    "license": "AGPL-3",
    "depends": ["stock", "date_range", "report_xlsx_helper"],
    "data": [
        "security/ir.model.access.csv",
        "data/paper_format.xml",
        "data/report_data.xml",
        "reports/stock_card_report.xml",
        "wizard/stock_card_report_wizard_view.xml",
    ],
    "assets": {
        "web.assets_backend": [
            "stock_card_report/static/src/css/**/*",
            "stock_card_report/static/src/js/**/*",
        ]
    },
    "installable": True,
}


===== .\stock_card_report\data\paper_format.xml =====
<odoo>

    <record id="paperformat_stock_card" model="report.paperformat">
        <field name="name">Stock Card A4</field>
        <field name="default" eval="True" />
        <field name="format">A4</field>
        <field name="page_height">0</field>
        <field name="page_width">0</field>
        <field name="orientation">Portrait</field>
        <field name="margin_top">28</field>
        <field name="margin_bottom">28</field>
        <field name="margin_left">7</field>
        <field name="margin_right">7</field>
        <field name="header_line" eval="False" />
        <field name="header_spacing">24</field>
        <field name="dpi">90</field>
    </record>

</odoo>


===== .\stock_card_report\data\report_data.xml =====
<?xml version="1.0" encoding="utf-8" ?>
<odoo>

    <record id="action_report_stock_card_report_html" model="ir.actions.client">
        <field name="name">Stock Card Report</field>
        <field name="tag">stock_card_report_backend</field>
        <field name="context" eval="{'active_model': 'report.stock.card.report'}" />
    </record>

    <record id="action_stock_card_report_pdf" model="ir.actions.report">
        <field name="name">Stock Card PDF</field>
        <field name="model">report.stock.card.report</field>
        <field name="report_type">qweb-pdf</field>
        <field name="report_name">stock_card_report.report_stock_card_report_pdf</field>
        <field name="report_file">stock_card_report.report_stock_card_report_pdf</field>
        <field
            name="print_report_name"
        >'Stock Card Report - [%s]' % (object.location_id.complete_name)</field>
        <field name="paperformat_id" ref="stock_card_report.paperformat_stock_card" />
    </record>

    <record id="action_stock_card_report_xlsx" model="ir.actions.report">
        <field name="name">Stock Card XLSX</field>
        <field name="model">report.stock.card.report</field>
        <field name="report_type">xlsx</field>
        <field
            name="report_name"
        >stock_card_report.report_stock_card_report_xlsx</field>
        <field name="report_file">Stock Card Report</field>
    </record>

</odoo>


===== .\stock_card_report\i18n\es.po =====
# Translation of Odoo Server.
# This file contains the translation of the following modules:
# 	* stock_card_report
#
msgid ""
msgstr ""
"Project-Id-Version: Odoo Server 13.0\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: 2023-10-28 16:00+0000\n"
"Last-Translator: Ivorra78 <informatica@totmaterial.es>\n"
"Language-Team: none\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: \n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 4.17\n"

#. module: stock_card_report
#: model:ir.actions.report,print_report_name:stock_card_report.action_stock_card_report_pdf
msgid "'Stock Card Report - [%s]' % (object.location_id.complete_name)"
msgstr "'Stock Card Report - [%s]' % (object.location_id.complete_name)"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_buttons
msgid "<span class=\"fa fa-download\"/>Export"
msgstr "<span class=\"fa fa-download\"/>Exportar"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_buttons
msgid "<span class=\"fa fa-print\"/>Print"
msgstr "<span class=\"fa fa-print\"/>Imprimir"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.internal_layout
msgid "<span class=\"page\"/>/<span class=\"topage\"/>"
msgstr "<span class=\"page\"/>/<span class=\"topage\"/>"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_lines_header
msgid "Balance"
msgstr "Saldo"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.stock_card_report_wizard_form
msgid "Cancel"
msgstr "Cancelar"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__create_uid
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__create_uid
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__create_uid
msgid "Created by"
msgstr "Creado por"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__create_date
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__create_date
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__create_date
msgid "Created on"
msgstr "Creado el"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__date
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_lines_header
msgid "Date"
msgstr "Fecha"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__date_from
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_report_filters
msgid "Date From"
msgstr "Fecha Desde"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__date_to
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_report_filters
msgid "Date To"
msgstr "Fecha Hasta"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__display_name
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__display_name
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__display_name
msgid "Display Name"
msgstr "Mostrar Nombre"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__date_to
msgid "End Date"
msgstr "Fecha Fin"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.stock_card_report_wizard_form
msgid "Export PDF"
msgstr "Exportar a PDF"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.stock_card_report_wizard_form
msgid "Export XLSX"
msgstr "Exportar XLSX"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__id
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__id
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__id
msgid "ID"
msgstr "ID (identificación)"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_lines_header
msgid "In"
msgstr "En"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_report_base
msgid "Initial"
msgstr "Inicial"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__is_initial
msgid "Is Initial"
msgstr "Es Inicial"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report____last_update
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard____last_update
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view____last_update
msgid "Last Modified on"
msgstr "Última Modifiación el"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__write_uid
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__write_uid
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__write_uid
msgid "Last Updated by"
msgstr "Actualizado por Última vez por"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__write_date
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__write_date
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__write_date
msgid "Last Updated on"
msgstr "Ultima Actualización el"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__location_id
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__location_id
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__location_id
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_report_filters
msgid "Location"
msgstr "Localización"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__location_dest_id
msgid "Location Dest"
msgstr "Ubicación Destino"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_lines_header
msgid "Out"
msgstr "Fuera"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__date_range_id
msgid "Period"
msgstr "Periodo"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__picking_id
msgid "Picking"
msgstr "Recogida"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__product_ids
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_id
msgid "Product"
msgstr "Producto"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_in
msgid "Product In"
msgstr "Producto En"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_out
msgid "Product Out"
msgstr "Producto Fuera"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_qty
msgid "Product Qty"
msgstr "Cantd de Producto"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_uom
msgid "Product Uom"
msgstr "Udm del Producto"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_uom_qty
msgid "Product Uom Qty"
msgstr "Producto Uom Ctd"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__product_ids
msgid "Products"
msgstr "Productos"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__reference
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_lines_header
msgid "Reference"
msgstr "Referencia"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__results
msgid "Results"
msgstr "Resultados"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__date_from
msgid "Start Date"
msgstr "fecha de Inicio"

#. module: stock_card_report
#: model:ir.actions.act_window,name:stock_card_report.stock_card_report_action
#: model:ir.ui.menu,name:stock_card_report.stock_card_report_menu
msgid "Stock Card"
msgstr "Tarjeta de Inventario"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_report_base
msgid "Stock Card -"
msgstr "Tarjeta de Inventario -"

#. module: stock_card_report
#: model:ir.actions.report,name:stock_card_report.action_stock_card_report_pdf
msgid "Stock Card PDF"
msgstr "PDF Tarjeta de Inventario"

#. module: stock_card_report
#: model:ir.actions.client,name:stock_card_report.action_report_stock_card_report_html
#: model:ir.model,name:stock_card_report.model_report_stock_card_report
msgid "Stock Card Report"
msgstr "Informe de la Tarjeta de Inventario"

#. module: stock_card_report
#: model:ir.model,name:stock_card_report.model_stock_card_report_wizard
msgid "Stock Card Report Wizard"
msgstr "Asistente de Informe de Tarjeta de Inventario"

#. module: stock_card_report
#: model:ir.model,name:stock_card_report.model_report_stock_card_report_report_stock_card_report_xlsx
msgid "Stock Card Report XLSX"
msgstr "Informe de la Tarjeta de Inventario XLSX"

#. module: stock_card_report
#: model:ir.model,name:stock_card_report.model_stock_card_view
msgid "Stock Card View"
msgstr "Vista de la Tarjeta de Inventario"

#. module: stock_card_report
#: model:ir.actions.report,name:stock_card_report.action_stock_card_report_xlsx
msgid "Stock Card XLSX"
msgstr "Tarjeta de Inventario XLSX"

#. module: stock_card_report
#: model:ir.model.fields,help:stock_card_report.field_report_stock_card_report__results
msgid "Use compute fields, so there is nothing store in database"
msgstr ""
"Utilizar campos de cálculo, por lo que no se almacena nada en la base de "
"datos"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.stock_card_report_wizard_form
msgid "View"
msgstr "Vista"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.stock_card_report_wizard_form
msgid "or"
msgstr "o"


===== .\stock_card_report\i18n\es_EC.po =====
# Translation of Odoo Server.
# This file contains the translation of the following modules:
# 	* stock_card_report
#
msgid ""
msgstr ""
"Project-Id-Version: Odoo Server 13.0\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: 2020-09-29 16:03+0000\n"
"Last-Translator: johnnypiguave <jpiguave@spearhead.global>\n"
"Language-Team: none\n"
"Language: es_EC\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: \n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 3.10\n"

#. module: stock_card_report
#: model:ir.actions.report,print_report_name:stock_card_report.action_stock_card_report_pdf
msgid "'Stock Card Report - [%s]' % (object.location_id.complete_name)"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_buttons
msgid "<span class=\"fa fa-download\"/>Export"
msgstr "Exportar"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_buttons
msgid "<span class=\"fa fa-print\"/>Print"
msgstr "Imprimir"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.internal_layout
msgid "<span class=\"page\"/>/<span class=\"topage\"/>"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_lines_header
msgid "Balance"
msgstr "Saldo"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.stock_card_report_wizard_form
msgid "Cancel"
msgstr "Cancelar"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__create_uid
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__create_uid
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__create_uid
msgid "Created by"
msgstr "Creado por"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__create_date
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__create_date
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__create_date
msgid "Created on"
msgstr "Creado el"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__date
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_lines_header
msgid "Date"
msgstr "Fecha"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__date_from
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_report_filters
msgid "Date From"
msgstr "Fecha desde"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__date_to
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_report_filters
msgid "Date To"
msgstr "Fecha hasta"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__display_name
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__display_name
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__display_name
msgid "Display Name"
msgstr "Nombre a mostrar"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__date_to
msgid "End Date"
msgstr "Fecha final"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.stock_card_report_wizard_form
msgid "Export PDF"
msgstr "Exportar a PDF"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.stock_card_report_wizard_form
msgid "Export XLSX"
msgstr "Exportar XLSX"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__id
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__id
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__id
msgid "ID"
msgstr "ID"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_lines_header
msgid "In"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_report_base
msgid "Initial"
msgstr "Inicial"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__is_initial
msgid "Is Initial"
msgstr "Es inicial"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report____last_update
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard____last_update
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view____last_update
msgid "Last Modified on"
msgstr "Última modificación el"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__write_uid
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__write_uid
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__write_uid
msgid "Last Updated by"
msgstr "Última actualización por"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__write_date
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__write_date
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__write_date
msgid "Last Updated on"
msgstr "Ultima actualización en"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__location_id
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__location_id
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__location_id
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_report_filters
msgid "Location"
msgstr "Ubicación"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__location_dest_id
msgid "Location Dest"
msgstr "Ubicación destino"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_lines_header
msgid "Out"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__date_range_id
msgid "Period"
msgstr "Periodo"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__picking_id
msgid "Picking"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__product_ids
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_id
msgid "Product"
msgstr "Producto"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_in
msgid "Product In"
msgstr "Entrada"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_out
msgid "Product Out"
msgstr "Salida"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_qty
msgid "Product Qty"
msgstr "Cantidad"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_uom
msgid "Product Uom"
msgstr "Unidad de medida"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_uom_qty
msgid "Product Uom Qty"
msgstr "Cantidad uom"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__product_ids
msgid "Products"
msgstr "Productos"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__reference
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_lines_header
msgid "Reference"
msgstr "Referencia"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__results
msgid "Results"
msgstr "Resultado"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__date_from
msgid "Start Date"
msgstr "Fecha inicio"

#. module: stock_card_report
#: model:ir.actions.act_window,name:stock_card_report.stock_card_report_action
#: model:ir.ui.menu,name:stock_card_report.stock_card_report_menu
msgid "Stock Card"
msgstr "Kardex"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_report_base
msgid "Stock Card -"
msgstr "Kardex -"

#. module: stock_card_report
#: model:ir.actions.report,name:stock_card_report.action_stock_card_report_pdf
msgid "Stock Card PDF"
msgstr "Kardex PDF"

#. module: stock_card_report
#: model:ir.actions.client,name:stock_card_report.action_report_stock_card_report_html
#: model:ir.model,name:stock_card_report.model_report_stock_card_report
msgid "Stock Card Report"
msgstr "Reporte Kardex"

#. module: stock_card_report
#: model:ir.model,name:stock_card_report.model_stock_card_report_wizard
msgid "Stock Card Report Wizard"
msgstr "Kardex Wizard"

#. module: stock_card_report
#: model:ir.model,name:stock_card_report.model_report_stock_card_report_report_stock_card_report_xlsx
msgid "Stock Card Report XLSX"
msgstr "Reporte Kardex XLSX"

#. module: stock_card_report
#: model:ir.model,name:stock_card_report.model_stock_card_view
msgid "Stock Card View"
msgstr "Vista Kardex"

#. module: stock_card_report
#: model:ir.actions.report,name:stock_card_report.action_stock_card_report_xlsx
msgid "Stock Card XLSX"
msgstr "Kardex XLSX"

#. module: stock_card_report
#: model:ir.model.fields,help:stock_card_report.field_report_stock_card_report__results
msgid "Use compute fields, so there is nothing store in database"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.stock_card_report_wizard_form
msgid "View"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.stock_card_report_wizard_form
msgid "or"
msgstr ""

#~ msgid "'Stock Card Report - [%s]' % object.location_id.display_name"
#~ msgstr "Reporte kardex"

#~ msgid "Input"
#~ msgstr "Ingreso"

#~ msgid "Output"
#~ msgstr "Salida"


===== .\stock_card_report\i18n\stock_card_report.pot =====
# Translation of Odoo Server.
# This file contains the translation of the following modules:
# 	* stock_card_report
#
msgid ""
msgstr ""
"Project-Id-Version: Odoo Server 15.0\n"
"Report-Msgid-Bugs-To: \n"
"Last-Translator: \n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: \n"
"Plural-Forms: \n"

#. module: stock_card_report
#: model:ir.actions.report,print_report_name:stock_card_report.action_stock_card_report_pdf
msgid "'Stock Card Report - [%s]' % (object.location_id.complete_name)"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_buttons
msgid "<span class=\"fa fa-download\"/>Export"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_buttons
msgid "<span class=\"fa fa-print\"/>Print"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.internal_layout
msgid "<span class=\"page\"/>/<span class=\"topage\"/>"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_lines_header
msgid "Balance"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.stock_card_report_wizard_form
msgid "Cancel"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__create_uid
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__create_uid
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__create_uid
msgid "Created by"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__create_date
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__create_date
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__create_date
msgid "Created on"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__date
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_lines_header
msgid "Date"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__date_from
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_report_filters
msgid "Date From"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__date_to
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_report_filters
msgid "Date To"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__display_name
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__display_name
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__display_name
msgid "Display Name"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__date_to
msgid "End Date"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.stock_card_report_wizard_form
msgid "Export PDF"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.stock_card_report_wizard_form
msgid "Export XLSX"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__id
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__id
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__id
msgid "ID"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_lines_header
msgid "In"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_report_base
msgid "Initial"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__is_initial
msgid "Is Initial"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report____last_update
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard____last_update
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view____last_update
msgid "Last Modified on"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__write_uid
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__write_uid
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__write_uid
msgid "Last Updated by"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__write_date
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__write_date
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__write_date
msgid "Last Updated on"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__location_id
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__location_id
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__location_id
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_report_filters
msgid "Location"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__location_dest_id
msgid "Location Dest"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_lines_header
msgid "Out"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__date_range_id
msgid "Period"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__picking_id
msgid "Picking"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__product_ids
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_id
msgid "Product"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_in
msgid "Product In"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_out
msgid "Product Out"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_qty
msgid "Product Qty"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_uom
msgid "Product Uom"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_uom_qty
msgid "Product Uom Qty"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__product_ids
msgid "Products"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__reference
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_lines_header
msgid "Reference"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__results
msgid "Results"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__date_from
msgid "Start Date"
msgstr ""

#. module: stock_card_report
#: model:ir.actions.act_window,name:stock_card_report.stock_card_report_action
#: model:ir.ui.menu,name:stock_card_report.stock_card_report_menu
msgid "Stock Card"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_report_base
msgid "Stock Card -"
msgstr ""

#. module: stock_card_report
#: model:ir.actions.report,name:stock_card_report.action_stock_card_report_pdf
msgid "Stock Card PDF"
msgstr ""

#. module: stock_card_report
#: model:ir.actions.client,name:stock_card_report.action_report_stock_card_report_html
#: model:ir.model,name:stock_card_report.model_report_stock_card_report
msgid "Stock Card Report"
msgstr ""

#. module: stock_card_report
#: model:ir.model,name:stock_card_report.model_stock_card_report_wizard
msgid "Stock Card Report Wizard"
msgstr ""

#. module: stock_card_report
#: model:ir.model,name:stock_card_report.model_report_stock_card_report_report_stock_card_report_xlsx
msgid "Stock Card Report XLSX"
msgstr ""

#. module: stock_card_report
#: model:ir.model,name:stock_card_report.model_stock_card_view
msgid "Stock Card View"
msgstr ""

#. module: stock_card_report
#: model:ir.actions.report,name:stock_card_report.action_stock_card_report_xlsx
msgid "Stock Card XLSX"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,help:stock_card_report.field_report_stock_card_report__results
msgid "Use compute fields, so there is nothing store in database"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.stock_card_report_wizard_form
msgid "View"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.stock_card_report_wizard_form
msgid "or"
msgstr ""


===== .\stock_card_report\readme\CONTRIBUTORS.rst =====
* Pimolnat Suntian <pimolnats@ecosoft.co.th>
* Prapassorn Sornkaew <prapassorn.s@prothaitechnology.com>
* Emad Shaaban <emad.shaaban92@gmail.com>


===== .\stock_card_report\readme\DESCRIPTION.rst =====
Stock Card Report is the report that display movement (in/out) of a product in a specified location and date range.


===== .\stock_card_report\readme\USAGE.rst =====
To use this module, you need to:

#. Go to Inventory > Reporting > Stock Card.
#. Select Start date, End date, Products, Location.
#. Choose View or Export PDF or Export XLSX or Cancel.


===== .\stock_card_report\reports\stock_card_report.py =====
# Copyright 2019 Ecosoft Co., Ltd. (http://ecosoft.co.th)
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl).

from odoo import api, fields, models


class StockCardView(models.TransientModel):
    _name = "stock.card.view"
    _description = "Stock Card View"
    _order = "date"

    date = fields.Datetime()
    product_id = fields.Many2one(comodel_name="product.product")
    product_qty = fields.Float()
    product_uom_qty = fields.Float()
    product_uom = fields.Many2one(comodel_name="uom.uom")
    reference = fields.Char()
    location_id = fields.Many2one(comodel_name="stock.location")
    location_dest_id = fields.Many2one(comodel_name="stock.location")
    is_initial = fields.Boolean()
    product_in = fields.Float()
    product_out = fields.Float()
    picking_id = fields.Many2one(comodel_name="stock.picking")

    def name_get(self):
        result = []
        for rec in self:
            name = rec.reference
            if rec.picking_id.origin:
                name = "{} ({})".format(name, rec.picking_id.origin)
            result.append((rec.id, name))
        return result


class StockCardReport(models.TransientModel):
    _name = "report.stock.card.report"
    _description = "Stock Card Report"

    # Filters fields, used for data computation
    date_from = fields.Date()
    date_to = fields.Date()
    product_ids = fields.Many2many(comodel_name="product.product")
    location_id = fields.Many2one(comodel_name="stock.location")

    # Data fields, used to browse report data
    results = fields.Many2many(
        comodel_name="stock.card.view",
        compute="_compute_results",
        help="Use compute fields, so there is nothing store in database",
    )

    def _compute_results(self):
        self.ensure_one()
        date_from = self.date_from or "0001-01-01"
        self.date_to = self.date_to or fields.Date.context_today(self)
        locations = self.env["stock.location"].search(
            [("id", "child_of", [self.location_id.id])]
        )
        self._cr.execute(
            """
            SELECT move.date, move.product_id, move.product_qty,
                move.product_uom_qty, move.product_uom, move.reference,
                move.location_id, move.location_dest_id,
                case when move.location_dest_id in %s
                    then move.product_qty end as product_in,
                case when move.location_id in %s
                    then move.product_qty end as product_out,
                case when move.date < %s then True else False end as is_initial,
                move.picking_id
            FROM stock_move move
            WHERE (move.location_id in %s or move.location_dest_id in %s)
                and move.state = 'done' and move.product_id in %s
                and CAST(move.date AS date) <= %s
            ORDER BY move.date, move.reference
        """,
            (
                tuple(locations.ids),
                tuple(locations.ids),
                date_from,
                tuple(locations.ids),
                tuple(locations.ids),
                tuple(self.product_ids.ids),
                self.date_to,
            ),
        )
        stock_card_results = self._cr.dictfetchall()
        ReportLine = self.env["stock.card.view"]
        self.results = [ReportLine.new(line).id for line in stock_card_results]

    def _get_initial(self, product_line):
        product_input_qty = sum(product_line.mapped("product_in"))
        product_output_qty = sum(product_line.mapped("product_out"))
        return product_input_qty - product_output_qty

    def print_report(self, report_type="qweb"):
        self.ensure_one()
        action = (
            report_type == "xlsx"
            and self.env.ref("stock_card_report.action_stock_card_report_xlsx")
            or self.env.ref("stock_card_report.action_stock_card_report_pdf")
        )
        return action.report_action(self, config=False)

    def _get_html(self):
        result = {}
        rcontext = {}
        report = self.browse(self._context.get("active_id"))
        if report:
            rcontext["o"] = report
            result["html"] = self.env.ref(
                "stock_card_report.report_stock_card_report_html"
            )._render(rcontext)
        return result

    @api.model
    def get_html(self, given_context=None):
        return self.with_context(**(given_context or {}))._get_html()


===== .\stock_card_report\reports\stock_card_report.xml =====
<odoo>

    <template id="stock_card_report.internal_layout">
        <div class="article">
            <link
                href="/stock_card_report/static/src/css/report.css"
                rel="stylesheet"
            />
            <t t-out="0" />
        </div>
        <div class="footer">
            <div class="row">
                <div class="col-6 custom_footer">
                    <span
                        t-out="context_timestamp(datetime.datetime.now()).strftime('%Y-%m-%d')"
                    />
                </div>
                <div class="col-6 text-right custom_footer">
                    <span class="page" />/<span class="topage" />
                </div>
            </div>
        </div>
    </template>

    <template id="report_buttons">
        <div class="button_row">
            <button class="o_stock_card_reports_print btn btn-sm oe_button"><span
                    class="fa fa-print"
                />Print</button>
            <button class="o_stock_card_reports_export btn btn-sm oe_button"><span
                    class="fa fa-download"
                />Export</button>
        </div>
    </template>

    <template id="report_stock_card_report_html">
        <div class="o_stock_card_reports_page">
            <t t-call="stock_card_report.report_buttons" />
            <t t-call="stock_card_report.report_stock_card_report_base" />
        </div>
    </template>

    <template id="stock_card_report.report_stock_card_report_pdf">
        <t t-call="web.html_container">
            <t t-foreach="docs" t-as="o">
                <t t-call="stock_card_report.internal_layout">
                    <t t-call="stock_card_report.report_stock_card_report_base" />
                </t>
            </t>
        </t>
    </template>

    <template id="stock_card_report.report_stock_card_report_base">
        <t t-foreach="o.product_ids" t-as="product">
            <div class="page">
                <div class="row">
                    <t t-set="title">[<t t-out="product.product_tmpl_id.code" />] <t t-out="product.name" /></t>
                    <h4 class="mt0" t-out="title" style="text-align: center;" />
                </div>
                <!-- Display filters -->
                <t t-call="stock_card_report.report_stock_card_report_filters" />
                <!-- Display stock card table -->
                <div class="act_as_table data_table mt4" style="width: 100%;">
                    <!-- Display header line-->
                    <t t-call="stock_card_report.report_stock_card_lines_header" />
                    <!-- Display initial lines -->
                    <t
                        t-set="initial"
                        t-value="o._get_initial(o.results.filtered(lambda l: l.product_id == product and l.is_initial))"
                    />
                    <div class="act_as_row lines">
                        <div class="act_as_cell" />
                        <div class="act_as_cell">
                            Initial
                        </div>
                        <div class="act_as_cell" />
                        <div class="act_as_cell" />
                        <div class="act_as_cell right">
                            <t t-out="'{0:,.3f}'.format(initial)" />
                        </div>
                    </div>
                    <!-- Display each lines -->
                    <t t-set="product_balance" t-value="initial" />
                    <t
                        t-foreach="o.results.filtered(lambda l: l.product_id == product and not l.is_initial)"
                        t-as="product_line"
                    >
                        <t
                            t-set="product_balance"
                            t-value="product_balance + product_line.product_in - product_line.product_out"
                        />
                        <t t-call="stock_card_report.report_stock_card_lines" />
                    </t>
                </div>
                <p style="page-break-before:always;" />
            </div>
        </t>
    </template>

    <template id="stock_card_report.report_stock_card_report_filters">
        <div class="act_as_table data_table" style="width: 100%;">
            <div class="act_as_row labels">
                <div class="act_as_cell">Date From</div>
                <div class="act_as_cell">Date To</div>
                <div class="act_as_cell">Location</div>
            </div>
            <div class="act_as_row">
                <div class="act_as_cell">
                    <span t-field="o.date_from" />
                </div>
                <div class="act_as_cell">
                    <span t-field="o.date_to" />
                </div>
                <div class="act_as_cell">
                    <span t-field="o.location_id" />
                </div>
            </div>
        </div>
    </template>

    <template id="stock_card_report.report_stock_card_lines_header">
        <div class="act_as_thead">
            <div class="act_as_row labels">
                <div class="act_as_cell">Date</div>
                <div class="act_as_cell">Reference</div>
                <div class="act_as_cell">In</div>
                <div class="act_as_cell">Out</div>
                <div class="act_as_cell">Balance</div>
            </div>
        </div>
    </template>

    <template id="stock_card_report.report_stock_card_lines">
        <div class="act_as_row lines">
            <div class="act_as_cell left">
                <t t-out="product_line.date.strftime('%Y-%m-%d')" />
            </div>
            <div class="act_as_cell left">
                <t t-out="product_line.display_name" />
            </div>
            <div class="act_as_cell right">
                <t t-out="'{0:,.3f}'.format(product_line.product_in)" />
            </div>
            <div class="act_as_cell right">
                <t t-out="'{0:,.3f}'.format(product_line.product_out)" />
            </div>
            <div class="act_as_cell right">
                <t t-out="'{0:,.3f}'.format(product_balance)" />
            </div>
        </div>
   </template>

</odoo>


===== .\stock_card_report\reports\stock_card_report_xlsx.py =====
# Copyright 2019 Ecosoft Co., Ltd. (http://ecosoft.co.th)
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl).

import logging

from odoo import models

from odoo.addons.report_xlsx_helper.report.report_xlsx_format import (
    FORMATS,
    XLS_HEADERS,
)

_logger = logging.getLogger(__name__)


class ReportStockCardReportXlsx(models.AbstractModel):
    _name = "report.stock_card_report.report_stock_card_report_xlsx"
    _description = "Stock Card Report XLSX"
    _inherit = "report.report_xlsx.abstract"

    def generate_xlsx_report(self, workbook, data, objects):
        self._define_formats(workbook)
        for product in objects.product_ids:
            for ws_params in self._get_ws_params(workbook, data, product):
                ws_name = ws_params.get("ws_name")
                ws_name = self._check_ws_name(ws_name)
                ws = workbook.add_worksheet(ws_name)
                generate_ws_method = getattr(self, ws_params["generate_ws_method"])
                generate_ws_method(workbook, ws, ws_params, data, objects, product)

    def _get_ws_params(self, wb, data, product):
        filter_template = {
            "1_date_from": {
                "header": {"value": "Date from"},
                "data": {
                    "value": self._render("date_from"),
                    "format": FORMATS["format_tcell_date_center"],
                },
            },
            "2_date_to": {
                "header": {"value": "Date to"},
                "data": {
                    "value": self._render("date_to"),
                    "format": FORMATS["format_tcell_date_center"],
                },
            },
            "3_location": {
                "header": {"value": "Location"},
                "data": {
                    "value": self._render("location"),
                    "format": FORMATS["format_tcell_center"],
                },
            },
        }
        initial_template = {
            "1_ref": {
                "data": {"value": "Initial", "format": FORMATS["format_tcell_center"]},
                "colspan": 4,
            },
            "2_balance": {
                "data": {
                    "value": self._render("balance"),
                    "format": FORMATS["format_tcell_amount_right"],
                }
            },
        }
        stock_card_template = {
            "1_date": {
                "header": {"value": "Date"},
                "data": {
                    "value": self._render("date"),
                    "format": FORMATS["format_tcell_date_left"],
                },
                "width": 25,
            },
            "2_reference": {
                "header": {"value": "Reference"},
                "data": {
                    "value": self._render("reference"),
                    "format": FORMATS["format_tcell_left"],
                },
                "width": 25,
            },
            "3_input": {
                "header": {"value": "In"},
                "data": {"value": self._render("input")},
                "width": 25,
            },
            "4_output": {
                "header": {"value": "Out"},
                "data": {"value": self._render("output")},
                "width": 25,
            },
            "5_balance": {
                "header": {"value": "Balance"},
                "data": {"value": self._render("balance")},
                "width": 25,
            },
        }

        ws_params = {
            "ws_name": product.name,
            "generate_ws_method": "_stock_card_report",
            "title": "Stock Card - {}".format(product.name),
            "wanted_list_filter": [k for k in sorted(filter_template.keys())],
            "col_specs_filter": filter_template,
            "wanted_list_initial": [k for k in sorted(initial_template.keys())],
            "col_specs_initial": initial_template,
            "wanted_list": [k for k in sorted(stock_card_template.keys())],
            "col_specs": stock_card_template,
        }
        return [ws_params]

    def _stock_card_report(self, wb, ws, ws_params, data, objects, product):
        ws.set_portrait()
        ws.fit_to_pages(1, 0)
        ws.set_header(XLS_HEADERS["xls_headers"]["standard"])
        ws.set_footer(XLS_HEADERS["xls_footers"]["standard"])
        self._set_column_width(ws, ws_params)
        # Title
        row_pos = 0
        row_pos = self._write_ws_title(ws, row_pos, ws_params, True)
        # Filter Table
        row_pos = self._write_line(
            ws,
            row_pos,
            ws_params,
            col_specs_section="header",
            default_format=FORMATS["format_theader_blue_center"],
            col_specs="col_specs_filter",
            wanted_list="wanted_list_filter",
        )
        row_pos = self._write_line(
            ws,
            row_pos,
            ws_params,
            col_specs_section="data",
            render_space={
                "date_from": objects.date_from or "",
                "date_to": objects.date_to or "",
                "location": objects.location_id.display_name or "",
            },
            col_specs="col_specs_filter",
            wanted_list="wanted_list_filter",
        )
        row_pos += 1
        # Stock Card Table
        row_pos = self._write_line(
            ws,
            row_pos,
            ws_params,
            col_specs_section="header",
            default_format=FORMATS["format_theader_blue_center"],
        )
        ws.freeze_panes(row_pos, 0)
        balance = objects._get_initial(
            objects.results.filtered(lambda l: l.product_id == product and l.is_initial)
        )
        row_pos = self._write_line(
            ws,
            row_pos,
            ws_params,
            col_specs_section="data",
            render_space={"balance": balance},
            col_specs="col_specs_initial",
            wanted_list="wanted_list_initial",
        )
        product_lines = objects.results.filtered(
            lambda l: l.product_id == product and not l.is_initial
        )
        for line in product_lines:
            balance += line.product_in - line.product_out
            row_pos = self._write_line(
                ws,
                row_pos,
                ws_params,
                col_specs_section="data",
                render_space={
                    "date": line.date or "",
                    "reference": line.display_name or "",
                    "input": line.product_in or 0,
                    "output": line.product_out or 0,
                    "balance": balance,
                },
                default_format=FORMATS["format_tcell_amount_right"],
            )


===== .\stock_card_report\reports\__init__.py =====
# Copyright 2019 Ecosoft Co., Ltd. (http://ecosoft.co.th)
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl).

from . import stock_card_report
from . import stock_card_report_xlsx


===== .\stock_card_report\security\ir.model.access.csv =====
id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
access_stock_card_report_wizard,access.stock.card.report.wizard,model_stock_card_report_wizard,base.group_user,1,1,1,0
access_report_stock_card_report,access.report.stock.card.report,model_report_stock_card_report,base.group_user,1,1,1,0
access_stock_card_view,access.stock.card.view,model_stock_card_view,base.group_user,1,1,1,0


===== .\stock_card_report\static\description\index.html =====
<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="generator" content="Docutils: https://docutils.sourceforge.io/" />
<title>Stock Card Report</title>
<style type="text/css">

/*
:Author: David Goodger (goodger@python.org)
:Id: $Id: html4css1.css 8954 2022-01-20 10:10:25Z milde $
:Copyright: This stylesheet has been placed in the public domain.

Default cascading style sheet for the HTML output of Docutils.

See https://docutils.sourceforge.io/docs/howto/html-stylesheets.html for how to
customize this style sheet.
*/

/* used to remove borders from tables and images */
.borderless, table.borderless td, table.borderless th {
  border: 0 }

table.borderless td, table.borderless th {
  /* Override padding for "table.docutils td" with "! important".
     The right padding separates the table cells. */
  padding: 0 0.5em 0 0 ! important }

.first {
  /* Override more specific margin styles with "! important". */
  margin-top: 0 ! important }

.last, .with-subtitle {
  margin-bottom: 0 ! important }

.hidden {
  display: none }

.subscript {
  vertical-align: sub;
  font-size: smaller }

.superscript {
  vertical-align: super;
  font-size: smaller }

a.toc-backref {
  text-decoration: none ;
  color: black }

blockquote.epigraph {
  margin: 2em 5em ; }

dl.docutils dd {
  margin-bottom: 0.5em }

object[type="image/svg+xml"], object[type="application/x-shockwave-flash"] {
  overflow: hidden;
}

/* Uncomment (and remove this text!) to get bold-faced definition list terms
dl.docutils dt {
  font-weight: bold }
*/

div.abstract {
  margin: 2em 5em }

div.abstract p.topic-title {
  font-weight: bold ;
  text-align: center }

div.admonition, div.attention, div.caution, div.danger, div.error,
div.hint, div.important, div.note, div.tip, div.warning {
  margin: 2em ;
  border: medium outset ;
  padding: 1em }

div.admonition p.admonition-title, div.hint p.admonition-title,
div.important p.admonition-title, div.note p.admonition-title,
div.tip p.admonition-title {
  font-weight: bold ;
  font-family: sans-serif }

div.attention p.admonition-title, div.caution p.admonition-title,
div.danger p.admonition-title, div.error p.admonition-title,
div.warning p.admonition-title, .code .error {
  color: red ;
  font-weight: bold ;
  font-family: sans-serif }

/* Uncomment (and remove this text!) to get reduced vertical space in
   compound paragraphs.
div.compound .compound-first, div.compound .compound-middle {
  margin-bottom: 0.5em }

div.compound .compound-last, div.compound .compound-middle {
  margin-top: 0.5em }
*/

div.dedication {
  margin: 2em 5em ;
  text-align: center ;
  font-style: italic }

div.dedication p.topic-title {
  font-weight: bold ;
  font-style: normal }

div.figure {
  margin-left: 2em ;
  margin-right: 2em }

div.footer, div.header {
  clear: both;
  font-size: smaller }

div.line-block {
  display: block ;
  margin-top: 1em ;
  margin-bottom: 1em }

div.line-block div.line-block {
  margin-top: 0 ;
  margin-bottom: 0 ;
  margin-left: 1.5em }

div.sidebar {
  margin: 0 0 0.5em 1em ;
  border: medium outset ;
  padding: 1em ;
  background-color: #ffffee ;
  width: 40% ;
  float: right ;
  clear: right }

div.sidebar p.rubric {
  font-family: sans-serif ;
  font-size: medium }

div.system-messages {
  margin: 5em }

div.system-messages h1 {
  color: red }

div.system-message {
  border: medium outset ;
  padding: 1em }

div.system-message p.system-message-title {
  color: red ;
  font-weight: bold }

div.topic {
  margin: 2em }

h1.section-subtitle, h2.section-subtitle, h3.section-subtitle,
h4.section-subtitle, h5.section-subtitle, h6.section-subtitle {
  margin-top: 0.4em }

h1.title {
  text-align: center }

h2.subtitle {
  text-align: center }

hr.docutils {
  width: 75% }

img.align-left, .figure.align-left, object.align-left, table.align-left {
  clear: left ;
  float: left ;
  margin-right: 1em }

img.align-right, .figure.align-right, object.align-right, table.align-right {
  clear: right ;
  float: right ;
  margin-left: 1em }

img.align-center, .figure.align-center, object.align-center {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

table.align-center {
  margin-left: auto;
  margin-right: auto;
}

.align-left {
  text-align: left }

.align-center {
  clear: both ;
  text-align: center }

.align-right {
  text-align: right }

/* reset inner alignment in figures */
div.align-right {
  text-align: inherit }

/* div.align-center * { */
/*   text-align: left } */

.align-top    {
  vertical-align: top }

.align-middle {
  vertical-align: middle }

.align-bottom {
  vertical-align: bottom }

ol.simple, ul.simple {
  margin-bottom: 1em }

ol.arabic {
  list-style: decimal }

ol.loweralpha {
  list-style: lower-alpha }

ol.upperalpha {
  list-style: upper-alpha }

ol.lowerroman {
  list-style: lower-roman }

ol.upperroman {
  list-style: upper-roman }

p.attribution {
  text-align: right ;
  margin-left: 50% }

p.caption {
  font-style: italic }

p.credits {
  font-style: italic ;
  font-size: smaller }

p.label {
  white-space: nowrap }

p.rubric {
  font-weight: bold ;
  font-size: larger ;
  color: maroon ;
  text-align: center }

p.sidebar-title {
  font-family: sans-serif ;
  font-weight: bold ;
  font-size: larger }

p.sidebar-subtitle {
  font-family: sans-serif ;
  font-weight: bold }

p.topic-title {
  font-weight: bold }

pre.address {
  margin-bottom: 0 ;
  margin-top: 0 ;
  font: inherit }

pre.literal-block, pre.doctest-block, pre.math, pre.code {
  margin-left: 2em ;
  margin-right: 2em }

pre.code .ln { color: grey; } /* line numbers */
pre.code, code { background-color: #eeeeee }
pre.code .comment, code .comment { color: #5C6576 }
pre.code .keyword, code .keyword { color: #3B0D06; font-weight: bold }
pre.code .literal.string, code .literal.string { color: #0C5404 }
pre.code .name.builtin, code .name.builtin { color: #352B84 }
pre.code .deleted, code .deleted { background-color: #DEB0A1}
pre.code .inserted, code .inserted { background-color: #A3D289}

span.classifier {
  font-family: sans-serif ;
  font-style: oblique }

span.classifier-delimiter {
  font-family: sans-serif ;
  font-weight: bold }

span.interpreted {
  font-family: sans-serif }

span.option {
  white-space: nowrap }

span.pre {
  white-space: pre }

span.problematic {
  color: red }

span.section-subtitle {
  /* font-size relative to parent (h1..h6 element) */
  font-size: 80% }

table.citation {
  border-left: solid 1px gray;
  margin-left: 1px }

table.docinfo {
  margin: 2em 4em }

table.docutils {
  margin-top: 0.5em ;
  margin-bottom: 0.5em }

table.footnote {
  border-left: solid 1px black;
  margin-left: 1px }

table.docutils td, table.docutils th,
table.docinfo td, table.docinfo th {
  padding-left: 0.5em ;
  padding-right: 0.5em ;
  vertical-align: top }

table.docutils th.field-name, table.docinfo th.docinfo-name {
  font-weight: bold ;
  text-align: left ;
  white-space: nowrap ;
  padding-left: 0 }

/* "booktabs" style (no vertical lines) */
table.docutils.booktabs {
  border: 0px;
  border-top: 2px solid;
  border-bottom: 2px solid;
  border-collapse: collapse;
}
table.docutils.booktabs * {
  border: 0px;
}
table.docutils.booktabs th {
  border-bottom: thin solid;
  text-align: left;
}

h1 tt.docutils, h2 tt.docutils, h3 tt.docutils,
h4 tt.docutils, h5 tt.docutils, h6 tt.docutils {
  font-size: 100% }

ul.auto-toc {
  list-style-type: none }

</style>
</head>
<body>
<div class="document" id="stock-card-report">
<h1 class="title">Stock Card Report</h1>

<!-- !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!! This file is generated by oca-gen-addon-readme !!
!! changes will be overwritten.                   !!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!! source digest: sha256:99a8eb509031fd2e19d4ee059dab367e0f3f905238babb8ce9ce7105c43c1836
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! -->
<p><a class="reference external image-reference" href="https://odoo-community.org/page/development-status"><img alt="Beta" src="https://img.shields.io/badge/maturity-Beta-yellow.png" /></a> <a class="reference external image-reference" href="http://www.gnu.org/licenses/agpl-3.0-standalone.html"><img alt="License: AGPL-3" src="https://img.shields.io/badge/licence-AGPL--3-blue.png" /></a> <a class="reference external image-reference" href="https://github.com/OCA/stock-logistics-reporting/tree/15.0/stock_card_report"><img alt="OCA/stock-logistics-reporting" src="https://img.shields.io/badge/github-OCA%2Fstock--logistics--reporting-lightgray.png?logo=github" /></a> <a class="reference external image-reference" href="https://translation.odoo-community.org/projects/stock-logistics-reporting-15-0/stock-logistics-reporting-15-0-stock_card_report"><img alt="Translate me on Weblate" src="https://img.shields.io/badge/weblate-Translate%20me-F47D42.png" /></a> <a class="reference external image-reference" href="https://runboat.odoo-community.org/builds?repo=OCA/stock-logistics-reporting&amp;target_branch=15.0"><img alt="Try me on Runboat" src="https://img.shields.io/badge/runboat-Try%20me-875A7B.png" /></a></p>
<p>Stock Card Report is the report that display movement (in/out) of a product in a specified location and date range.</p>
<p><strong>Table of contents</strong></p>
<div class="contents local topic" id="contents">
<ul class="simple">
<li><a class="reference internal" href="#usage" id="toc-entry-1">Usage</a></li>
<li><a class="reference internal" href="#bug-tracker" id="toc-entry-2">Bug Tracker</a></li>
<li><a class="reference internal" href="#credits" id="toc-entry-3">Credits</a><ul>
<li><a class="reference internal" href="#authors" id="toc-entry-4">Authors</a></li>
<li><a class="reference internal" href="#contributors" id="toc-entry-5">Contributors</a></li>
<li><a class="reference internal" href="#maintainers" id="toc-entry-6">Maintainers</a></li>
</ul>
</li>
</ul>
</div>
<div class="section" id="usage">
<h1><a class="toc-backref" href="#toc-entry-1">Usage</a></h1>
<p>To use this module, you need to:</p>
<ol class="arabic simple">
<li>Go to Inventory &gt; Reporting &gt; Stock Card.</li>
<li>Select Start date, End date, Products, Location.</li>
<li>Choose View or Export PDF or Export XLSX or Cancel.</li>
</ol>
</div>
<div class="section" id="bug-tracker">
<h1><a class="toc-backref" href="#toc-entry-2">Bug Tracker</a></h1>
<p>Bugs are tracked on <a class="reference external" href="https://github.com/OCA/stock-logistics-reporting/issues">GitHub Issues</a>.
In case of trouble, please check there if your issue has already been reported.
If you spotted it first, help us to smash it by providing a detailed and welcomed
<a class="reference external" href="https://github.com/OCA/stock-logistics-reporting/issues/new?body=module:%20stock_card_report%0Aversion:%2015.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**">feedback</a>.</p>
<p>Do not contact contributors directly about support or help with technical issues.</p>
</div>
<div class="section" id="credits">
<h1><a class="toc-backref" href="#toc-entry-3">Credits</a></h1>
<div class="section" id="authors">
<h2><a class="toc-backref" href="#toc-entry-4">Authors</a></h2>
<ul class="simple">
<li>Ecosoft</li>
</ul>
</div>
<div class="section" id="contributors">
<h2><a class="toc-backref" href="#toc-entry-5">Contributors</a></h2>
<ul class="simple">
<li>Pimolnat Suntian &lt;<a class="reference external" href="mailto:pimolnats&#64;ecosoft.co.th">pimolnats&#64;ecosoft.co.th</a>&gt;</li>
<li>Prapassorn Sornkaew &lt;<a class="reference external" href="mailto:prapassorn.s&#64;prothaitechnology.com">prapassorn.s&#64;prothaitechnology.com</a>&gt;</li>
<li>Emad Shaaban &lt;<a class="reference external" href="mailto:emad.shaaban92&#64;gmail.com">emad.shaaban92&#64;gmail.com</a>&gt;</li>
</ul>
</div>
<div class="section" id="maintainers">
<h2><a class="toc-backref" href="#toc-entry-6">Maintainers</a></h2>
<p>This module is maintained by the OCA.</p>
<a class="reference external image-reference" href="https://odoo-community.org"><img alt="Odoo Community Association" src="https://odoo-community.org/logo.png" /></a>
<p>OCA, or the Odoo Community Association, is a nonprofit organization whose
mission is to support the collaborative development of Odoo features and
promote its widespread use.</p>
<p>This module is part of the <a class="reference external" href="https://github.com/OCA/stock-logistics-reporting/tree/15.0/stock_card_report">OCA/stock-logistics-reporting</a> project on GitHub.</p>
<p>You are welcome to contribute. To learn how please visit <a class="reference external" href="https://odoo-community.org/page/Contribute">https://odoo-community.org/page/Contribute</a>.</p>
</div>
</div>
</div>
</body>
</html>


===== .\stock_card_report\static\src\css\report.css =====
.act_as_table {
    display: table !important;
    background-color: white;
}
.act_as_row {
    display: table-row !important;
    page-break-inside: avoid;
}
.act_as_cell {
    display: table-cell !important;
    page-break-inside: avoid;
}
.act_as_thead {
    display: table-header-group !important;
}
.act_as_row.labels {
    background-color: #f0f0f0 !important;
}
.data_table {
    width: 100% !important;
    border-left: 0px;
    border-right: 0px;
    text-align: center;
    font-size: 15px;
    padding-right: 3px;
    padding-left: 3px;
    padding-top: 2px;
    padding-bottom: 2px;
    border-collapse: collapse;
}
.data_table .act_as_cell {
    border: 1px solid lightGrey;
    text-align: center;
}
.data_table .act_as_cell {
    word-wrap: break-word;
}
.data_table .act_as_row.labels {
    font-weight: bold;
}
.act_as_cell.left {
    text-align: left;
}
.act_as_cell.right {
    text-align: right;
}
.custom_footer {
    font-size: 10px !important;
}
.button_row {
    padding-bottom: 10px;
}
.o_stock_card_reports_page {
    padding-top: 10px;
    width: 90%;
    margin-right: auto;
    margin-left: auto;
    font-family: Helvetica, Arial;
}


===== .\stock_card_report\static\src\js\stock_card_report_backend.esm.js =====
/** @odoo-module **/

import AbstractAction from "web.AbstractAction";
import ReportWidget from "web.Widget";
import core from "web.core";

export const report_backend = AbstractAction.extend({
    hasControlPanel: true,
    // Stores all the parameters of the action.
    events: {
        "click .o_stock_card_reports_print": "print",
        "click .o_stock_card_reports_export": "export",
    },
    init: function (parent, action) {
        this._super.apply(this, arguments);
        this.actionManager = parent;
        this.given_context = {};
        this.odoo_context = action.context;
        this.controller_url = action.context.url;
        if (action.context.context) {
            this.given_context = action.context.context;
        }
        this.given_context.active_id =
            action.context.active_id || action.params.active_id;
        this.given_context.model = action.context.active_model || false;
        this.given_context.ttype = action.context.ttype || false;
    },
    willStart: function () {
        return Promise.all([this._super.apply(this, arguments), this.get_html()]);
    },
    set_html: function () {
        var self = this;
        var def = Promise.resolve();
        if (!this.report_widget) {
            this.report_widget = new ReportWidget(this, this.given_context);
            def = this.report_widget.appendTo(this.$(".o_content"));
        }
        def.then(function () {
            self.report_widget.$el.html(self.html);
        });
    },
    start: function () {
        this.set_html();
        return this._super();
    },
    // Fetches the html and is previous report.context if any,
    // else create it
    get_html: function () {
        var self = this;
        var defs = [];
        return this._rpc({
            model: this.given_context.model,
            method: "get_html",
            args: [self.given_context],
            context: self.odoo_context,
        }).then(function (result) {
            self.html = result.html;
            defs.push(self.update_cp());
            return $.when.apply($, defs);
        });
    },
    // Updates the control panel and render the elements that have yet
    // to be rendered
    update_cp: function () {
        if (this.$buttons) {
            var status = {
                breadcrumbs: this.actionManager.get_breadcrumbs(),
                cp_content: {$buttons: this.$buttons},
            };
            return this.update_control_panel(status);
        }
    },
    do_show: function () {
        this._super();
        this.update_cp();
    },
    print: function () {
        var self = this;
        this._rpc({
            model: this.given_context.model,
            method: "print_report",
            args: [this.given_context.active_id, "qweb-pdf"],
            context: self.odoo_context,
        }).then(function (result) {
            self.do_action(result);
        });
    },
    export: function () {
        var self = this;
        this._rpc({
            model: this.given_context.model,
            method: "print_report",
            args: [this.given_context.active_id, "xlsx"],
            context: self.odoo_context,
        }).then(function (result) {
            self.do_action(result);
        });
    },
    canBeRemoved: function () {
        return Promise.resolve();
    },
});
core.action_registry.add("stock_card_report_backend", report_backend);


===== .\stock_card_report\tests\test_stock_card_report.py =====
# Copyright 2019 Ecosoft Co., Ltd. (http://ecosoft.co.th)
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl.html).

import logging
import time
from datetime import date

from odoo.tests import common
from odoo.tools import test_reports

_logger = logging.getLogger(__name__)


class TestStockCard(common.TransactionCase):
    def setUp(self):
        super().setUp()

        # Create uom:
        uom_id = self.ref("uom.product_uom_unit")

        # Create products:
        self.product_A = self.env["product.product"].create(
            {
                "name": "Product A",
                "type": "product",
                "uom_id": uom_id,
                "uom_po_id": uom_id,
            }
        )

        # Create location:
        self.location_1 = self.env.ref("stock.stock_location_stock")
        self.location_2 = self.env.ref("stock.stock_location_customers")

        # Create operation type:
        operation_type = self.env.ref("stock.picking_type_in")

        # Create stock picking:
        picking = self.env["stock.picking"].create(
            {
                "location_id": self.location_2.id,
                "location_dest_id": self.location_1.id,
                "picking_type_id": operation_type.id,
            }
        )
        self.env["stock.move"].create(
            {
                "name": self.product_A.name,
                "product_id": self.product_A.id,
                "product_uom_qty": 50.000,
                "product_uom": self.product_A.uom_id.id,
                "picking_id": picking.id,
                "location_id": self.location_2.id,
                "location_dest_id": self.location_1.id,
            }
        )
        picking.action_confirm()
        picking.move_ids_without_package.quantity_done = 50.000
        picking.button_validate()

        self.model = self._getReportModel()

        self.qweb_report_name = self._getQwebReportName()
        self.xlsx_report_name = self._getXlsxReportName()
        self.xlsx_action_name = self._getXlsxReportActionName()

        self.report_title = self._getReportTitle()

        self.base_filters = self._getBaseFilters()

        self.report = self.model.create(self.base_filters)
        self.report._compute_results()

    def test_html(self):
        test_reports.try_report(
            self.env.cr,
            self.env.uid,
            self.qweb_report_name,
            [self.report.id],
            report_type="qweb-html",
        )

    def test_qweb(self):
        test_reports.try_report(
            self.env.cr,
            self.env.uid,
            self.qweb_report_name,
            [self.report.id],
            report_type="qweb-pdf",
        )

    def test_xlsx(self):
        test_reports.try_report(
            self.env.cr,
            self.env.uid,
            self.xlsx_report_name,
            [self.report.id],
            report_type="xlsx",
        )

    def test_print(self):
        self.report.print_report("qweb")
        self.report.print_report("xlsx")

    def _getReportModel(self):
        return self.env["report.stock.card.report"]

    def _getQwebReportName(self):
        return "stock_card_report.report_stock_card_report_pdf"

    def _getXlsxReportName(self):
        return "stock_card_report.report_stock_card_report_xlsx"

    def _getXlsxReportActionName(self):
        return "stock_card_report.action_report_stock_card_report_xlsx"

    def _getReportTitle(self):
        return "Stock Card Report"

    def _getBaseFilters(self):
        return {
            "product_ids": [(6, 0, [self.product_A.id])],
            "location_id": self.location_1.id,
        }


class TestStockCardReport(common.TransactionCase):
    def setUp(self):
        super().setUp()

        # Create uom:
        uom_id = self.ref("uom.product_uom_unit")

        # Create products:
        self.product_A = self.env["product.product"].create(
            {
                "name": "Product A",
                "type": "product",
                "uom_id": uom_id,
                "uom_po_id": uom_id,
            }
        )
        self.product_B = self.env["product.product"].create(
            {
                "name": "Product B",
                "type": "product",
                "uom_id": uom_id,
                "uom_po_id": uom_id,
            }
        )

        # Create location:
        self.location_1 = self.env.ref("stock.stock_location_stock")
        self.location_2 = self.env.ref("stock.stock_location_customers")

        # Create operation type:
        operation_type = self.env.ref("stock.picking_type_in")

        # Create stock picking:
        picking_1 = self.env["stock.picking"].create(
            {
                "location_id": self.location_2.id,
                "location_dest_id": self.location_1.id,
                "picking_type_id": operation_type.id,
            }
        )
        self.env["stock.move"].create(
            {
                "name": self.product_A.name,
                "product_id": self.product_A.id,
                "product_uom_qty": 50.000,
                "product_uom": self.product_A.uom_id.id,
                "picking_id": picking_1.id,
                "location_id": self.location_2.id,
                "location_dest_id": self.location_1.id,
            }
        )
        picking_1.action_confirm()
        picking_1.move_ids_without_package.quantity_done = 50.000
        picking_1.button_validate()

        picking_2 = self.env["stock.picking"].create(
            {
                "location_id": self.location_2.id,
                "location_dest_id": self.location_1.id,
                "picking_type_id": operation_type.id,
            }
        )
        self.env["stock.move"].create(
            {
                "name": self.product_B.name,
                "product_id": self.product_B.id,
                "product_uom_qty": 100.000,
                "product_uom": self.product_B.uom_id.id,
                "picking_id": picking_2.id,
                "location_id": self.location_2.id,
                "location_dest_id": self.location_1.id,
            }
        )
        picking_2.action_confirm()
        picking_2.move_ids_without_package.quantity_done = 100.000
        picking_2.button_validate()

    def test_reports(self):
        report = self.env["report.stock.card.report"].create(
            {
                "product_ids": [(6, 0, [self.product_A.id, self.product_B.id])],
                "location_id": self.location_1.id,
            }
        )
        report._compute_results()
        report.print_report("qweb")
        report.print_report("xlsx")

    def test_get_report_html(self):
        report = self.env["report.stock.card.report"].create(
            {
                "product_ids": [(6, 0, [self.product_A.id, self.product_B.id])],
                "location_id": self.location_1.id,
            }
        )
        report._compute_results()
        report.get_html(given_context={"active_id": report.id})

    def test_wizard_date_range(self):
        date_range = self.env["date.range"]
        self.type = self.env["date.range.type"].create(
            {"name": "Month", "company_id": False, "allow_overlap": False}
        )
        dt = date_range.create(
            {
                "name": "FiscalYear",
                "date_start": time.strftime("%Y-%m-01"),
                "date_end": time.strftime("%Y-%m-28"),
                "type_id": self.type.id,
            }
        )
        wizard = self.env["stock.card.report.wizard"].create(
            {
                "date_range_id": dt.id,
                "date_from": time.strftime("%Y-%m-28"),
                "date_to": time.strftime("%Y-%m-01"),
                "product_ids": [(6, 0, [self.product_A.id, self.product_B.id])],
                "location_id": self.location_1.id,
            }
        )
        wizard._onchange_date_range_id()
        self.assertEqual(
            wizard.date_from, date(date.today().year, date.today().month, 1)
        )
        self.assertEqual(
            wizard.date_to, date(date.today().year, date.today().month, 28)
        )
        wizard._export("qweb-pdf")
        wizard.button_export_html()
        wizard.button_export_pdf()
        wizard.button_export_xlsx()


===== .\stock_card_report\tests\__init__.py =====
# Copyright 2019 Ecosoft Co., Ltd. (http://ecosoft.co.th)
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl).

from . import test_stock_card_report


===== .\stock_card_report\wizard\stock_card_report_wizard.py =====
# Copyright 2019 Ecosoft Co., Ltd. (http://ecosoft.co.th)
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl).

from odoo import api, fields, models
from odoo.tools.safe_eval import safe_eval


class StockCardReportWizard(models.TransientModel):
    _name = "stock.card.report.wizard"
    _description = "Stock Card Report Wizard"

    date_range_id = fields.Many2one(comodel_name="date.range", string="Period")
    date_from = fields.Date(string="Start Date")
    date_to = fields.Date(string="End Date")
    location_id = fields.Many2one(
        comodel_name="stock.location", string="Location", required=True
    )
    product_ids = fields.Many2many(
        comodel_name="product.product", string="Products", required=True
    )

    @api.onchange("date_range_id")
    def _onchange_date_range_id(self):
        self.date_from = self.date_range_id.date_start
        self.date_to = self.date_range_id.date_end

    def button_export_html(self):
        self.ensure_one()
        action = self.env.ref("stock_card_report.action_report_stock_card_report_html")
        vals = action.sudo().read()[0]
        context = vals.get("context", {})
        if context:
            context = safe_eval(context)
        model = self.env["report.stock.card.report"]
        report = model.create(self._prepare_stock_card_report())
        context["active_id"] = report.id
        context["active_ids"] = report.ids
        vals["context"] = context
        return vals

    def button_export_pdf(self):
        self.ensure_one()
        report_type = "qweb-pdf"
        return self._export(report_type)

    def button_export_xlsx(self):
        self.ensure_one()
        report_type = "xlsx"
        return self._export(report_type)

    def _prepare_stock_card_report(self):
        self.ensure_one()
        return {
            "date_from": self.date_from,
            "date_to": self.date_to or fields.Date.context_today(self),
            "product_ids": [(6, 0, self.product_ids.ids)],
            "location_id": self.location_id.id,
        }

    def _export(self, report_type):
        model = self.env["report.stock.card.report"]
        report = model.create(self._prepare_stock_card_report())
        return report.print_report(report_type)


===== .\stock_card_report\wizard\stock_card_report_wizard_view.xml =====
<odoo>

    <record id="stock_card_report_wizard_form" model="ir.ui.view">
        <field name="name">stock.card.report.wizard.form</field>
        <field name="model">stock.card.report.wizard</field>
        <field name="arch" type="xml">
            <form>
                <group name="criteria">
                    <group>
                        <field name="date_range_id" />
                        <field name="date_from" />
                        <field name="date_to" />
                    </group>
                    <group>
                        <field name="product_ids" widget="many2many_tags" />
                        <field name="location_id" />
                    </group>
                </group>
                <footer>
                    <button
                        name="button_export_html"
                        string="View"
                        type="object"
                        default_focus="1"
                        class="oe_highlight"
                    />
                    or
                    <button
                        name="button_export_pdf"
                        string="Export PDF"
                        type="object"
                    />
                    or
                    <button
                        name="button_export_xlsx"
                        string="Export XLSX"
                        type="object"
                    />
                    or
                    <button string="Cancel" class="oe_link" special="cancel" />
                </footer>
            </form>
        </field>
    </record>

    <record id="stock_card_report_action" model="ir.actions.act_window">
        <field name="name">Stock Card</field>
        <field name="res_model">stock.card.report.wizard</field>
        <field name="view_mode">form</field>
        <field name="target">new</field>
    </record>

    <menuitem
        id="stock_card_report_menu"
        action="stock_card_report_action"
        parent="stock.menu_warehouse_report"
        sequence="30"
    />

</odoo>


===== .\stock_card_report\wizard\__init__.py =====
# Copyright 2019 Ecosoft Co., Ltd. (http://ecosoft.co.th)
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl).

from . import stock_card_report_wizard




===== .\advanced_pos_reports\__init__.py =====
from . import wizard
from . import models

===== .\advanced_pos_reports\__manifest__.py =====
# -*- coding: utf-8 -*-
######################################################################################
#
#    Cybrosys Technologies Pvt. Ltd.
#
#    Copyright (C) 2022-TODAY Cybrosys Technologies(<https://www.cybrosys.com>).
#    Author: Cybrosys Techno Solutions(<https://www.cybrosys.com>)
#
#    This program is under the terms of the Odoo Proprietary License v1.0 (OPL-1)
#    It is forbidden to publish, distribute, sublicense, or sell copies of the Software
#    or modified copies of the Software.
#
#    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
#    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
#    ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
#    DEALINGS IN THE SOFTWARE.
#
########################################################################################

{
    'name': 'Advanced POS Reports',
    'version': '15.0.1.0.0',
    'summary': """Generates Various Reports From POS Screen and From Reporting Menu""",
    'description': """Generates various reports like Sales summary, top selling products / categories / 
                      customers report, ongoing sessions report, posted sessions report under reporting menu, """,
    'category': 'Sale',
    'author': 'Cybrosys Techno Solutions',
    'company': 'Cybrosys Techno Solutions',
    'maintainer': 'Cybrosys Techno Solutions',
    'depends': ['point_of_sale', 'pos_sale'],
    'website': 'https://www.cybrosys.com',
    'data': [
        'security/ir.model.access.csv',
        'wizard/pos_sale_details.xml',
        'wizard/top_selling.xml',
        'wizard/ongoing_session.xml',
        'wizard/posted_session.xml',
        'wizard/top_selling.xml',
        'views/reports.xml',
        'views/report_pos_saledetails.xml',
        'views/report_pos_posted_session.xml',
        'views/report_pos_ongoing_session.xml',
        'views/report_pos_top_selling_products.xml',
        'views/report_pos_top_selling_categories.xml',
        'views/report_pos_top_selling_customers.xml',
    ],
    'assets': {
        'point_of_sale.assets': [
            'advanced_pos_reports/static/src/js/ControlButtons/PaymentSummaryButton.js',
            'advanced_pos_reports/static/src/js/ControlButtons/ProductSummaryButton.js',
            'advanced_pos_reports/static/src/js/ControlButtons/CategorySummaryButton.js',
            'advanced_pos_reports/static/src/js/ControlButtons/LocationSummaryButton.js',
            'advanced_pos_reports/static/src/js/ControlButtons/OrderSummaryButton.js',
            'advanced_pos_reports/static/src/js/ControlButtons/SessionSummaryButton.js',
            'advanced_pos_reports/static/src/js/Popups/LocationSummaryPopup.js',
            'advanced_pos_reports/static/src/js/Popups/CategorySummaryPopup.js',
            'advanced_pos_reports/static/src/js/Popups/OrderSummaryPopup.js',
            'advanced_pos_reports/static/src/js/Popups/PaymentSummaryPopup.js',
            'advanced_pos_reports/static/src/js/Popups/ProductSummaryPopup.js',
            'advanced_pos_reports/static/src/js/Popups/SessionSummaryPopup.js',
            'advanced_pos_reports/static/src/js/ReceiptScreen/LocationSummaryReceiptScreen.js',
            'advanced_pos_reports/static/src/js/ReceiptScreen/CategorySummaryReceiptScreen.js',
            'advanced_pos_reports/static/src/js/ReceiptScreen/OrderSummaryReceiptScreen.js',
            'advanced_pos_reports/static/src/js/ReceiptScreen/PaymentSummaryReceiptScreen.js',
            'advanced_pos_reports/static/src/js/ReceiptScreen/ProductSummaryReceiptScreen.js',
            'advanced_pos_reports/static/src/js/ReceiptScreen/SessionSummaryReceiptScreen.js',
            'advanced_pos_reports/static/src/js/Receipts/OrderSummaryReceipt.js',
            'advanced_pos_reports/static/src/js/Receipts/PaymentSummaryReceipt.js',
            'advanced_pos_reports/static/src/js/Receipts/ProductSummaryReceipt.js',
            'advanced_pos_reports/static/src/js/Receipts/CategorySummaryReceipt.js',
            'advanced_pos_reports/static/src/js/Receipts/SessionSummaryReceipt.js',
            'advanced_pos_reports/static/src/js/Receipts/LocationSummaryReceipt.js',
            'advanced_pos_reports/static/src/css/advanced_report.css',
        ],
        'web.assets_qweb': [
            'advanced_pos_reports/static/src/xml/**/*',
        ],
    },
    'images': ['static/description/banner.png'],
    'license': 'OPL-1',
    'installable': True,
    'auto_install': False,
    'application': False,
}


===== .\advanced_pos_reports\models\pos_ongoing_session_report.py =====
from odoo import api, fields, models
from odoo.osv.expression import AND


class ReportPosOngoing(models.AbstractModel):
    _name = 'report.advanced_pos_reports.report_pos_ongoing_session'

    def get_ongoing_sessions_details(self, session_ids=False):
        domain = [('state', '=', 'opened')]
        if session_ids:
            domain = AND([domain, [('id', 'in', session_ids)]])
        sessions = self.env['pos.session'].search(domain)
        amount_total_without_tax = 0
        amount_total_tax = 0
        amount_total_return = 0
        orders = []
        for session in sessions:
            for order in session.order_ids.filtered(lambda x:x.state in ['paid', 'done', 'invoiced']):
                orders.append(order.id)
                currency = order.pricelist_id.currency_id
                amount_tax = currency.round(sum(order._amount_line_tax(line, order.fiscal_position_id) for line in order.lines))
                amount_untaxed = currency.round(sum(line.price_subtotal for line in order.lines))
                amount_return = sum(payment.amount < 0 and payment.amount or 0 for payment in order.payment_ids)
                amount_total_without_tax += amount_untaxed
                amount_total_tax += amount_tax
                amount_total_return += amount_return
        order_ids = self.env["pos.order"].search([('id', 'in', orders)])
        user_currency = self.env.company.currency_id

        total = 0.0
        for order in order_ids:
            if user_currency != order.pricelist_id.currency_id:
                total += order.pricelist_id.currency_id._convert(
                    order.amount_total, user_currency, order.company_id, order.date_order or fields.Date.today())
            else:
                total += order.amount_total
            currency = order.session_id.currency_id

        categories = []
        if order_ids:
            self.env.cr.execute("""SELECT category.name,
            sum(price_subtotal_incl) as amount FROM pos_order_line AS line,
            pos_category AS category, product_product AS product INNER JOIN
            product_template AS template ON product.product_tmpl_id = template.id WHERE line.product_id = product.id
            AND template.pos_categ_id = category.id
            AND line.order_id IN %s GROUP BY category.name """, (tuple(order_ids.ids),))
            categories = self.env.cr.dictfetchall()

        payment_ids = self.env["pos.payment"].search([('pos_order_id', 'in', order_ids.ids)]).ids
        if payment_ids:
            self.env.cr.execute("""
                SELECT method.name, sum(amount) total
                FROM pos_payment AS payment,
                     pos_payment_method AS method
                WHERE payment.payment_method_id = method.id
                    AND payment.id IN %s
                GROUP BY method.name
            """, (tuple(payment_ids),))
            payments = self.env.cr.dictfetchall()
        else:
            payments = []
        amount_total = amount_total_without_tax + amount_tax
        return {
            'sessions': sessions,
            'categories': categories,
            'today': fields.Datetime.now(),
            'total_paid': user_currency.round(total),
            'amount_total_without_tax': amount_total_without_tax,
            'amount_total_tax': amount_total_tax,
            'amount_return': amount_total_return,
            'amount_total': total,
            'payments': payments
        }

    @api.model
    def _get_report_values(self, docids, data=None):
        data = dict(data or {})
        data.update(self.get_ongoing_sessions_details(data['session_ids']))
        return data

===== .\advanced_pos_reports\models\pos_order.py =====
import logging
from odoo import models

_logger = logging.getLogger(__name__)


class PosOrder(models.Model):
    _inherit = 'pos.order'

    def get_category_summary(self, order_ids):
        orders = self.env['pos.order'].search([('id', 'in', order_ids)])
        categories = []
        if orders:
            self.env.cr.execute("""SELECT category.name, sum(price_subtotal_incl) as amount, 
                sum(qty) as qty FROM pos_order_line AS line INNER JOIN
                product_product AS product ON line.product_id = product.id INNER JOIN
                product_template AS template ON product.product_tmpl_id = template.id 
                INNER JOIN pos_category as category ON template.pos_categ_id = category.id 
                WHERE line.order_id IN %s GROUP BY category.name """, (tuple(orders.ids),))
            categories = self.env.cr.dictfetchall()
        return categories

    def get_product_summary(self, order_ids):
        orders = self.env['pos.order'].search([('id', 'in', order_ids)])
        if orders:
            self.env.cr.execute("""
                SELECT product.id, template.name, product.default_code as code, sum(qty) as qty
                FROM product_product AS product,
                     pos_order_line AS line, product_template AS template
                WHERE product.id = line.product_id AND template.id = product.product_tmpl_id
                    AND line.order_id IN %s
                GROUP BY product.id, template.name, template.default_code
            """, (tuple(orders.ids),))
            product_summary = self.env.cr.dictfetchall()
        else:
            product_summary = []
        return product_summary

    def get_order_summary(self, order_ids):
        orders = self.env['pos.order'].search([('id', 'in', order_ids)])
        order_summary = []
        for order in orders:
            order_summary.append(
                {'order_name': order.name, 'state': dict(self._fields['state'].selection).get(order.state),
                 'date_order': order.date_order, 'amount_total': order.amount_total})
        return order_summary


class PosPayment(models.Model):
    _inherit = 'pos.payment'

    def get_payment_summary(self, order_ids):
        orders = self.env['pos.order'].search([('id', 'in', order_ids)])
        payment_ids = self.env["pos.payment"].search([('pos_order_id', 'in', orders.ids)]).ids
        if payment_ids:
            self.env.cr.execute("""
                SELECT method.name, sum(amount) total
                FROM pos_payment AS payment,
                     pos_payment_method AS method
                WHERE payment.payment_method_id = method.id
                    AND payment.id IN %s
                GROUP BY method.name
                """, (tuple(payment_ids),))
            payments_summary = self.env.cr.dictfetchall()
        else:
            payments_summary = []
        return payments_summary


class PosSession(models.Model):
    _inherit = 'pos.session'

    def get_session_summary(self, session):
        if session:
            session = self.env['pos.session'].search([('id', '=', session)])
            order_ids = session.order_ids
            if order_ids:
                self.env.cr.execute("""
                    SELECT product.id, template.name, product.default_code as code, sum(qty) as qty, sum(line.price_subtotal_incl) as total
                    FROM product_product AS product,
                         pos_order_line AS line, product_template AS template
                    WHERE product.id = line.product_id AND template.id = product.product_tmpl_id
                        AND line.order_id IN %s
                    GROUP BY product.id, template.name, template.default_code
                    """, (tuple(order_ids.ids),))
                product_summary = self.env.cr.dictfetchall()
                payment_ids = self.env["pos.payment"].search([('pos_order_id', 'in', order_ids.ids)]).ids
                if payment_ids:
                    self.env.cr.execute("""
                                        SELECT method.name, sum(amount) total
                                        FROM pos_payment AS payment,
                                             pos_payment_method AS method
                                        WHERE payment.payment_method_id = method.id
                                            AND payment.id IN %s
                                        GROUP BY method.name
                                    """, (tuple(payment_ids),))
                    payments_summary = self.env.cr.dictfetchall()
                else:
                    payments_summary = []
            else:
                product_summary = []
                payments_summary = []
            session_summary = {
                'session_name': session.name,
                'start_date': session.start_at,
                'end_date': session.stop_at,
                'opening_balance': session.cash_register_balance_start,
                'closing_balance': session.cash_register_balance_end_real,
                'product_summary': product_summary,
                'payments_summary': payments_summary
            }
        return session_summary


class PosConfig(models.Model):
    _inherit = 'pos.config'

    def get_location_summary(self, location_id):
        location_quant = self.env['stock.quant'].search(
            [('location_id', '=', int(location_id))])
        location_summary = []
        for quant in location_quant.filtered(lambda x: x.product_id.available_in_pos):
            values = {
                'product_id': quant.product_id.id,
                'product': quant.product_id.name,
                'quantity': quant.available_quantity,
            }
            location_summary.append(values)
        return location_summary


===== .\advanced_pos_reports\models\pos_posted_session_report.py =====
# -*- coding: utf-8 -*-


from odoo import api, fields, models, tools, _

from odoo.osv.expression import AND


class ReportPosPosted(models.AbstractModel):
    _name = 'report.advanced_pos_reports.report_pos_posted_session'

    def get_posted_sessions_details(self, session_ids=False):
        domain = [('state', '=', 'closed')]
        if session_ids:
            domain = AND([domain, [('id', 'in', session_ids)]])
        sessions = self.env['pos.session'].search(domain)
        amount_total_without_tax = 0
        amount_total_tax = 0
        amount_total_return = 0
        orders = []
        for session in sessions:
            for order in session.order_ids.filtered(lambda x: x.state in ['paid', 'done', 'invoiced']):
                orders.append(order.id)
                currency = order.pricelist_id.currency_id
                amount_tax = currency.round(
                    sum(order._amount_line_tax(line, order.fiscal_position_id) for line in order.lines))
                amount_untaxed = currency.round(sum(line.price_subtotal for line in order.lines))
                amount_return = sum(payment.amount < 0 and payment.amount or 0 for payment in order.payment_ids)
                amount_total_without_tax += amount_untaxed
                amount_total_tax += amount_tax
                amount_total_return += amount_return
        order_ids = self.env["pos.order"].search([('id', 'in', orders)])
        user_currency = self.env.company.currency_id

        total = 0.0
        for order in order_ids:
            if user_currency != order.pricelist_id.currency_id:
                total += order.pricelist_id.currency_id._convert(
                    order.amount_total, user_currency, order.company_id, order.date_order or fields.Date.today())
            else:
                total += order.amount_total
            currency = order.session_id.currency_id

        categories = []
        if order_ids:
            self.env.cr.execute("""SELECT category.name,
                sum(price_subtotal_incl) as amount FROM pos_order_line AS line,
                pos_category AS category, product_product AS product INNER JOIN
                product_template AS template ON product.product_tmpl_id = template.id WHERE line.product_id = product.id
                AND template.pos_categ_id = category.id
                AND line.order_id IN %s GROUP BY category.name """, (tuple(order_ids.ids),))
            categories = self.env.cr.dictfetchall()

        payment_ids = self.env["pos.payment"].search([('pos_order_id', 'in', order_ids.ids)]).ids
        if payment_ids:
            self.env.cr.execute("""
                    SELECT method.name, sum(amount) total
                    FROM pos_payment AS payment,
                         pos_payment_method AS method
                    WHERE payment.payment_method_id = method.id
                        AND payment.id IN %s
                    GROUP BY method.name
                """, (tuple(payment_ids),))
            payments = self.env.cr.dictfetchall()
        else:
            payments = []

        return {
            'sessions': sessions,
            'categories': categories,
            'today': fields.Datetime.now(),
            'total_paid': user_currency.round(total),
            'amount_total_without_tax': amount_total_without_tax,
            'amount_total_tax': amount_total_tax,
            'amount_return': amount_total_return,
            'amount_total': total,
            'payments': payments
        }

    @api.model
    def _get_report_values(self, docids, data=None):
        data = dict(data or {})
        data.update(self.get_posted_sessions_details(data['session_ids']))
        return data


===== .\advanced_pos_reports\models\pos_sale_report.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.
import logging
from datetime import timedelta
from functools import partial
from itertools import groupby

import psycopg2
import pytz
import re

from odoo import api, fields, models, tools, _
from odoo.tools import float_is_zero, float_round, float_repr, float_compare
from odoo.exceptions import ValidationError, UserError
from odoo.http import request
from odoo.osv.expression import AND
import base64

_logger = logging.getLogger(__name__)


class ReportSaleDetails(models.AbstractModel):
    _name = 'report.advanced_pos_reports.report_pos_saledetails'
    _description = 'Point of Sale Details'

    @api.model
    def get_sale_details(self, date_start=False, date_stop=False, user_ids=False):
        domain = [('state', 'in', ['paid', 'invoiced', 'done'])]

        if date_start:
            date_start = fields.Datetime.from_string(date_start)
        else:
            user_tz = pytz.timezone(self.env.context.get('tz') or self.env.user.tz or 'UTC')
            today = user_tz.localize(fields.Datetime.from_string(fields.Date.context_today(self)))
            date_start = today.astimezone(pytz.timezone('UTC'))

        if date_stop:
            date_stop = fields.Datetime.from_string(date_stop)
            if (date_stop < date_start):
                date_stop = date_start + timedelta(days=1, seconds=-1)
        else:
            date_stop = date_start + timedelta(days=1, seconds=-1)

        domain = AND([domain,
                      [('date_order', '>=', fields.Datetime.to_string(date_start)),
                       ('date_order', '<=', fields.Datetime.to_string(date_stop))]
                      ])

        orders = self.env['pos.order'].search(domain)
        orders_summary = []
        amount_total = 0
        amount_tax = 0
        for user in user_ids:
            total_sales = 0
            total_tax = 0
            orders_list = []
            payments = []
            categories = []
            for order in orders.filtered(lambda x:x.user_id.id == user.id):
                total_sales += order.amount_total
                total_tax += order.amount_tax
                amount_total += order.amount_total
                amount_tax += order.amount_tax
                orders_list.append(order.id)
            if orders_list:
                payment_ids = self.env["pos.payment"].search([('pos_order_id', 'in', orders_list)]).ids
                if payment_ids:
                    self.env.cr.execute("""
                        SELECT method.name, sum(amount) total
                        FROM pos_payment AS payment,
                             pos_payment_method AS method
                        WHERE payment.payment_method_id = method.id
                            AND payment.id IN %s
                        GROUP BY method.name
                    """, (tuple(payment_ids),))
                    payments = self.env.cr.dictfetchall()
                else:
                    payments = []
                categ = self.env.cr.execute("""SELECT category.name,
                    sum(price_subtotal_incl) as amount FROM pos_order_line AS line,
                    pos_category AS category, product_product AS product INNER JOIN
                    product_template AS template ON product.product_tmpl_id = template.id 
                    WHERE line.product_id = product.id
                    AND template.pos_categ_id = category.id
                    AND line.order_id IN %s
                    GROUP BY category.name ORDER BY amount DESC
                    """, (tuple(orders_list),))
                categories = self.env.cr.dictfetchall()
            orders_summary.append({'user': user.name, 'total_sales': total_sales, 'tax': total_tax,
                                   'gross_total': total_sales, 'payments': payments, 'categories': categories})
        user_currency = self.env.company.currency_id

        return {
            'currency_precision': user_currency.decimal_places,
            'order_summary': orders_summary,
            'users': user_ids,
            'company_name': self.env.company.name,
            'amount_total_without_tax': amount_total - amount_tax,
            'amount_tax': amount_tax
        }

    @api.model
    def _get_report_values(self, docids, data=None):
        data = dict(data or {})
        users = self.env['res.users'].browse(data['user_ids'])
        data.update(self.get_sale_details(data['date_start'], data['date_stop'], users))
        return data


===== .\advanced_pos_reports\models\pos_top_selling_categories.py =====
from odoo import api, fields, models, tools, _
from odoo.osv.expression import AND


class ReportPosCategories(models.AbstractModel):
    _name = 'report.advanced_pos_reports.report_pos_top_selling_categories'

    def get_top_selling_categories_details(self, no_of_categories=False, start_date=False, end_date=False):
        order_ids = self.env["pos.order"].search([('date_order', '>=', start_date),
                                                  ('date_order', '<=', end_date), ('state', 'in', ['paid', 'done', 'invoiced'])])
        user_currency = self.env.company.currency_id
        if order_ids:
            self.env.cr.execute("""SELECT category.name,
                sum(price_subtotal_incl) as amount FROM pos_order_line AS line,
                pos_category AS category, product_product AS product INNER JOIN
                product_template AS template ON product.product_tmpl_id = template.id WHERE line.product_id = product.id
                AND template.pos_categ_id = category.id
                AND line.order_id IN %s
                GROUP BY category.name ORDER BY amount DESC LIMIT %s
                """, (tuple(order_ids.ids), no_of_categories))
            categories = self.env.cr.dictfetchall()
        return {
            'categories': categories or [],
            'today': fields.Datetime.now(),
            'start_date': start_date,
            'end_date': end_date
        }

    @api.model
    def _get_report_values(self, docids, data=None):
        data = dict(data or {})
        data.update(self.get_top_selling_categories_details(data['no_of_categories'], data['start_date'],
                                                      data['end_date']))
        return data

===== .\advanced_pos_reports\models\pos_top_selling_customers.py =====
from odoo import api, fields, models


class ReportPosCustomers(models.AbstractModel):
    _name = 'report.advanced_pos_reports.report_pos_top_selling_customers'

    def get_top_selling_customers_details(self, no_of_customers=False, start_date=False, end_date=False):
        order_ids = self.env["pos.order"].search([('date_order', '>=', start_date),
                                                  ('date_order', '<=', end_date),
                                                  ('state', 'in', ['paid', 'done', 'invoiced'])])
        user_currency = self.env.company.currency_id
        if order_ids:
            self.env.cr.execute("""SELECT partner.id, partner.name,
                            sum(amount_total) as amount FROM pos_order, res_partner AS partner 
                            WHERE partner.id= pos_order.partner_id AND pos_order.id IN %s 
                            GROUP BY partner.id, partner.name ORDER BY amount DESC LIMIT %s 
                            """, (tuple(order_ids.ids), no_of_customers))
            customers = self.env.cr.dictfetchall()
        return {
            'customers': customers or [],
            'today': fields.Datetime.now(),
            'start_date': start_date,
            'end_date': end_date
        }

    @api.model
    def _get_report_values(self, docids, data=None):
        data = dict(data or {})
        data.update(self.get_top_selling_customers_details(data['no_of_customers'], data['start_date'],
                                                           data['end_date']))
        return data


===== .\advanced_pos_reports\models\pos_top_selling_products.py =====
from odoo import api, fields, models, tools, _
from odoo.osv.expression import AND


class ReportPosProducts(models.AbstractModel):
    _name = 'report.advanced_pos_reports.report_pos_top_selling_products'

    def get_top_selling_products_details(self, no_of_products=False, start_date=False, end_date=False):
        order_ids = self.env["pos.order"].search([('date_order', '>=', start_date),
                                                  ('date_order', '<=', end_date), ('state', 'in', ['paid', 'done', 'invoiced'])])
        user_currency = self.env.company.currency_id
        categories = []
        if order_ids:
            self.env.cr.execute("""
                                SELECT product.id, template.name, uom.name AS uom, product.default_code as code, sum(qty) as qty, sum(line.price_subtotal_incl) as total
                                FROM product_product AS product,
                                     pos_order_line AS line, product_template AS template , uom_uom AS uom
                                WHERE product.id = line.product_id AND template.id = product.product_tmpl_id AND uom.id = template.uom_id
                                    AND line.order_id IN %s
                                GROUP BY product.id, template.name, template.default_code, uom.name ORDER BY qty DESC LIMIT %s
                                """, (tuple(order_ids.ids), no_of_products))
            product_summary = self.env.cr.dictfetchall()
        return {
            'products': product_summary,
            'today': fields.Datetime.now(),
            'start_date': start_date,
            'end_date': end_date
        }

    @api.model
    def _get_report_values(self, docids, data=None):
        data = dict(data or {})
        data.update(self.get_top_selling_products_details(data['no_of_products'], data['start_date'],
                                                      data['end_date']))
        return data

===== .\advanced_pos_reports\models\__init__.py =====
from . import pos_sale_report
from . import pos_posted_session_report
from . import pos_ongoing_session_report
from . import pos_order
from . import pos_top_selling_products
from . import pos_top_selling_categories
from . import pos_top_selling_customers



===== .\advanced_pos_reports\security\ir.model.access.csv =====
id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
access_pos_sale_details_wizard,access.pos.sale.details.wizard,model_pos_sale_details_wizard,point_of_sale.group_pos_manager,1,1,1,0
access_pos_sale_top_selling_wizard,access.pos.sale.top.selling.wizard,model_pos_sale_top_selling,point_of_sale.group_pos_manager,1,1,1,0
access_pos_sale_ongoing,access.pos.sale.ongoing.wizard,model_pos_sale_ongoing_wizard,point_of_sale.group_pos_manager,1,1,1,0
access_pos_sale_posted,access.pos.sale.posted.wizard,model_pos_sale_posted_wizard,point_of_sale.group_pos_manager,1,1,1,0


===== .\advanced_pos_reports\static\description\index.html =====
<div class="container" style="padding: 1rem !important; margin-bottom: 1rem !important;">
  <div class="row">
    <div class="col-sm-12 col-md-12 col-lg-12 d-flex justify-content-between" style="border-bottom: 1px solid #d5d5d5;">
      <div class="my-3">
        <img src="./assets/icons/logo.png" style="width: auto !important; height: 40px !important;">
      </div>
      <div class="my-3 d-flex align-items-center">
        <div
          style="background-color: #7C7BAD !important; color: #fff !important; font-weight: 600 !important; padding: 5px 15px 8px !important; margin: 0 5px !important;">
          <i class="fa fa-check mr-1"></i>Community
        </div>
        <div
          style="background-color: #875A7B !important; color: #fff !important; font-weight: 600 !important; padding: 5px 15px 8px !important; margin: 0 5px !important;">
          <i class="fa fa-check mr-1"></i>Enterprise
        </div>

      </div>
    </div>
  </div>
</div>

<div class="container" style="padding: 0rem 1.5rem 4rem !important">
  <div class="row" style="height: 900px !important;">
    <div class="col-sm-12 col-md-12 col-lg-12"
      style="padding: 4rem 1rem !important; background-color: #714B67 !important; height: 600px !important; border-radius: 20px !important;">
      <h1
        style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #FFFFFF !important;  font-size: 3.5rem !important; text-align: center !important;">
        Advanced POS Reports</h1>
      <p
        style="font-family: 'Montserrat', sans-serif !important; font-weight: 300 !important; color: #FFFFFF !important;  font-size: 1.4rem !important; text-align: center !important;">
        A Module for printing various POS Reports
      </p>
      <img src="./assets/screenshots/hero.gif" class="img-responsive" width="100%" height="auto" />
    </div>
  </div>

  <div class="row">
    <div class="col-md-12" style="border-bottom: 1px solid #d5d5d5 !important; margin-bottom: 2rem !important">
      <h2
        style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #714B67 !important; font-size: 1.5rem !important;">
        <i class="fa fa-compass mr-2"></i>Explore this module
      </h2>
      <div class="row">
        <div class="col-md-6">
          <a href="#overview" style="text-decoration: none !important;">
            <div class="row"
              style="background-color: #f5f2f5 !important; border-radius: 10px !important; margin: 1rem !important; padding: 1.5em !important; height: 100px !important;">
              <div class="col-8">
                <h3
                  style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #714B67 !important; font-size: 1.2rem !important;">
                  Overview</h3>
                <p
                  style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #714B67 !important; font-size: 0.9rem !important;">
                  Learn more about this module</p>
              </div>
              <div class="col-4 text-right d-flex justify-content-end align-items-center">
                <i class="fa fa-chevron-right" style="color: #714B67 !important;"></i>
              </div>
            </div>
          </a>
        </div>
        <div class="col-md-6">
          <a href="#features" style="text-decoration: none !important;">
            <div class="row"
              style="background-color: #f5f2f5 !important; border-radius: 10px !important; margin: 1rem !important; padding: 1.5em !important; height: 100px !important;">
              <div class="col-8">
                <h3
                  style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #714B67 !important; font-size: 1.2rem !important;">
                  Features</h3>
                <p
                  style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #714B67 !important; font-size: 0.9rem !important;">
                  View features of this module</p>
              </div>
              <div class="col-4 text-right d-flex justify-content-end align-items-center">
                <i class="fa fa-chevron-right" style="color: #714B67 !important;"></i>
              </div>
            </div>
          </a>
        </div>
        <div class="col-md-6">
          <a href="#screenshots" style="text-decoration: none !important;">
            <div class="row"
              style="background-color: #f5f2f5 !important; border-radius: 10px !important; margin: 1rem !important; padding: 1.5em !important; height: 100px !important;">
              <div class="col-8">
                <h3
                  style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #714B67 !important; font-size: 1.2rem !important;">
                  Screenshots</h3>
                <p
                  style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #714B67 !important; font-size: 0.9rem !important;">
                  See key screenshots of this module</p>
              </div>
              <div class="col-4 text-right d-flex justify-content-end align-items-center">
                <i class="fa fa-chevron-right" style="color: #714B67 !important;"></i>
              </div>
            </div>
          </a>
        </div>
      </div>
    </div>

  </div>

  <div class="row" id="overview">
    <div class="col-md-12" style="border-bottom: 1px solid #d5d5d5 !important; margin: 2rem 0 !important">
      <h2
        style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #714B67 !important; font-size: 1.5rem !important;">
        <i class="fa fa-pie-chart mr-2"></i>Overview
      </h2>
    </div>

    <div class="col-mg-12 pl-3">
      <p
        style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #282F33 !important; font-size: 1rem !important; line-height: 30px !important;">
        In the Advanced POS Reports app, can print various reports like Location Summary, Session Summary, Category Summary,etc. from POS Screen. Sales summary, Top Selling products/ categories / customers report, Ongoing Sessions Report, Posted Sessions Report from the reporting menu.</p>
    </div>
    </p>

  </div>


  <div class="row" id="features">
    <div class="col-md-12" style="border-bottom: 1px solid #d5d5d5 !important; margin: 2rem 0 !important">
      <h2
        style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #714B67 !important; font-size: 1.5rem !important;">
        <i class="fa fa-star mr-2"></i>Features
      </h2>
    </div>

    <div class="col-md-6 pl-3 py-3 d-flex">
      <div>
        <img src="assets/icons/check.png">
      </div>
      <div>
        <h4
          style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
          Sale Summary report prints user wise sales details</h4>
      </div>
    </div>

    <div class="col-md-6 pl-3 py-3 d-flex">
      <div>
        <img src="assets/icons/check.png">
      </div>
      <div>
        <h4
          style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
          Ongoing session report gives a summary of ongoing sessions</h4>
      </div>
    </div>

    <div class="col-md-6 pl-3 py-3 d-flex">
      <div>
        <img src="assets/icons/check.png">
      </div>
      <div>
        <h4
          style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
          Posted session report summarizes the posted sessions de
        </h4>
      </div>
    </div>

    <div class="col-md-6 pl-3 py-3 d-flex">
      <div>
        <img src="assets/icons/check.png">
      </div>
      <div>
        <h4
          style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
          Top selling Products / Categories / Customers Reports</h4>
      </div>
    </div>

    <div class="col-md-6 pl-3 py-3 d-flex">
      <div>
        <img src="assets/icons/check.png">
      </div>
      <div>
        <h4
          style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
          Payment Summary from POS Screen to get payment details of current session/ All sessions within a period
        </h4>
      </div>
    </div>

    <div class="col-md-6 pl-3 py-3 d-flex">
      <div>
        <img src="assets/icons/check.png">
      </div>
      <div>
        <h4
          style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
          Order Summary from POS Screen to get all order details of current session/ All sessions within a period
        </h4>
      </div>
    </div>

    <div class="col-md-6 pl-3 py-3 d-flex">
      <div>
        <img src="assets/icons/check.png">
      </div>
      <div>
        <h4
          style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
          Category from POS Screen to get category wise sale details current session/ All sessions within a period
        </h4>
      </div>
    </div>

  </div>

  <div class="row" id="screenshots">
    <div class="col-md-12" style="border-bottom: 1px solid #d5d5d5 !important; margin: 2rem 0 !important">
      <h2
        style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #714B67 !important; font-size: 1.5rem !important;">
        <i class="fa fa-image mr-2"></i>Screenshots
      </h2>
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Payment Summary from POS Screen</h4>
      <img src="assets/screenshots/pos_report_16.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Payment Summary of Selected dates</h4>
      <img src="assets/screenshots/pos_report_17.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Payment Summary of current session</h4>
      <img src="assets/screenshots/pos_report_18.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <img src="assets/screenshots/pos_report_19.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Category Summary from POS Screen</h4>
      <img src="assets/screenshots/pos_report_20.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Category Summary of Selected dates</h4>
      <img src="assets/screenshots/pos_report_21.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Category Summary of current session</h4>
      <img src="assets/screenshots/pos_report_22.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <img src="assets/screenshots/pos_report_23.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-2">
      <h4 class="mt-2"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Reporting Menu</h4>
      <p
        style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #282F33 !important; font-size: 1rem !important;">
        The list of custom reports</p>
      <img src="assets/screenshots/pos_report_1.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Sales summary</h4>
      <p
        style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #282F33 !important; font-size: 1rem !important;">
        User can print user wise sales summary within a period.
      </p>
      <img src="assets/screenshots/pos_report_2.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Sales summary Report</h4>
      <img src="assets/screenshots/pos_report_4.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <img src="assets/screenshots/pos_report_5.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Top Selling Products</h4>
      <img src="assets/screenshots/pos_report_3.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Generated Report</h4>
      <img src="assets/screenshots/pos_report_6.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Top Selling Categories</h4>
      <img src="assets/screenshots/pos_report_7.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Generated Report</h4>
      <img src="assets/screenshots/pos_report_8.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>


    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Top Selling Customers</h4>
      <img src="assets/screenshots/pos_report_9.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Generated Report</h4>
      <img src="assets/screenshots/pos_report_10.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>


    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Ongoing Sessions Report</h4>
      <img src="assets/screenshots/pos_report_11.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Generated Ongoing Sessions report</h4>
      <img src="assets/screenshots/pos_report_12.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Posted Sessions report</h4>
      <img src="assets/screenshots/pos_report_13.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Generated Posted Sessions report</h4>
      <img src="assets/screenshots/pos_report_14.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <img src="assets/screenshots/pos_report_14_1.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Products Summary</h4>
      <img src="assets/screenshots/pos_report_24.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Products Summary of Selected dates</h4>
      <img src="assets/screenshots/pos_report_25.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Products Summary of current session</h4>
      <img src="assets/screenshots/pos_report_26.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <img src="assets/screenshots/pos_report_27.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Order Summary</h4>
      <img src="assets/screenshots/pos_report_28.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>
    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Order Summary of Selected dates</h4>
      <img src="assets/screenshots/pos_report_29.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Order Summary of current session</h4>
      <img src="assets/screenshots/pos_report_30.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <img src="assets/screenshots/pos_report_31.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Location Summary</h4>
      <img src="assets/screenshots/pos_report_32.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>
    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Generated Location Summary</h4>
      <img src="assets/screenshots/pos_report_33.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Sessions Summary</h4>
      <img src="assets/screenshots/pos_report_34.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

    <div class="col-lg-12 my-3">
      <h4 class="mt-3"
        style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
        Generated Sessions Summary</h4>
      <img src="assets/screenshots/pos_report_35.png" class="img-responsive img-thumbnail border" width="100%"
        height="auto" />
    </div>

  </div>
  <!-- SUGGESTED PRODUCTS -->
  <div class="row">
    <div class="col-lg-12 d-flex flex-column justify-content-center"
      style="text-align: center; padding: 2.5rem 1rem !important;">
      <h2 style="color: #212529 !important;">Suggested Products</h2>
      <hr
        style="border: 3px solid #714B67 !important; background-color: #714B67 !important; width: 80px !important; margin-bottom: 2rem !important;" />

      <div id="demo1" class="row carousel slide" data-ride="carousel">
        <!-- The slideshow -->
        <div class="carousel-inner">
          <div class="carousel-item active" style="min-height:0px">
            <div class="col-xs-12 col-sm-4 col-md-4 mb16 mt16" style="float:left">
              <a href="https://apps.odoo.com/apps/modules/15.0/export_stockinfo_xls/" target="_blank">
                <div style="border-radius:10px">
                  <img class="img img-responsive center-block"
                    style="border-top-left-radius:10px; border-top-right-radius:10px"
                    src="./assets/modules/export_image.png">
                </div>
              </a>
            </div>
            <div class="col-xs-12 col-sm-4 col-md-4 mb16 mt16" style="float:left">
              <a href="https://apps.odoo.com/apps/modules/15.0/custom_gantt_view/" target="_blank">
                <div style="border-radius:10px">
                  <img class="img img-responsive center-block"
                    style="border-top-left-radius:10px; border-top-right-radius:10px"
                    src="./assets/modules/gantt_image.png">
                </div>
              </a>
            </div>
            <div class="col-xs-12 col-sm-4 col-md-4 mb16 mt16" style="float:left">
              <a href="https://apps.odoo.com/apps/modules/15.0/sales_credit_limit/" target="_blank">
                <div style="border-radius:10px">
                  <img class="img img-responsive center-block"
                    style="border-top-left-radius:10px; border-top-right-radius:10px"
                    src="./assets/modules/credit_image.png">
                </div>
              </a>
            </div>
          </div>
          <div class="carousel-item" style="min-height:0px">
            <div class="col-xs-12 col-sm-4 col-md-4 mb16 mt16" style="float:left">
              <a href="https://apps.odoo.com/apps/modules/15.0/base_account_budget/" target="_blank">
                <div style="border-radius:10px">
                  <img class="img img-responsive center-block"
                    style="border-top-left-radius:10px; border-top-right-radius:10px"
                    src="./assets/modules/budget_image.png">
                </div>
              </a>
            </div>
            <div class="col-xs-12 col-sm-4 col-md-4 mb16 mt16" style="float:left">
              <a href="https://apps.odoo.com/apps/modules/15.0/product_to_quotation/" target="_blank">
                <div style="border-radius:10px">
                  <img class="img img-responsive center-block"
                    style="border-top-left-radius:10px; border-top-right-radius:10px"
                    src="./assets/modules/quotation_image.png">
                </div>
              </a>
            </div>
            <div class="col-xs-12 col-sm-4 col-md-4 mb16 mt16" style="float:left">
              <a href="https://apps.odoo.com/apps/modules/15.0/employee_documents_expiry/" target="_blank">
                <div style="border-radius:10px">
                  <img class="img img-responsive center-block"
                    style="border-top-left-radius:10px; border-top-right-radius:10px"
                    src="./assets/modules/employee_image.png">
                </div>
              </a>
            </div>
          </div>
        </div>
        <!-- Left and right controls -->
        <a class="carousel-control-prev" href="#demo1" data-slide="prev" style="left:-25px;width: 35px;color: #000;">
          <span class="carousel-control-prev-icon"><i class="fa fa-chevron-left" style="font-size:24px"></i></span> </a>
        <a class="carousel-control-next" href="#demo1" data-slide="next" style="right:-25px;width: 35px;color: #000;">
          <span class="carousel-control-next-icon"><i class="fa fa-chevron-right" style="font-size:24px"></i></span>
        </a>
      </div>
    </div>
  </div>
  <!-- END OF SUGGESTED PRODUCTS -->

  <!-- OUR SERVICES -->
  <section class="container" style="margin-top: 6rem !important;">
    <div class="row">
      <div class="col-lg-12 d-flex flex-column justify-content-center align-items-center">
        <h2 style="color: #212529 !important;">Our Services</h2>
        <hr
          style="border: 3px solid #714B67 !important; background-color: #714B67 !important; width: 80px !important; margin-bottom: 2rem !important;" />
      </div>

      <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
        <div class="d-flex justify-content-center align-items-center mx-3 my-3"
          style="background-color: #1dd1a1 !important; border-radius: 15px !important; height: 80px; width: 80px;">
          <img src="assets/icons/cogs.png" class="img-responsive" height="48px" width="48px">
        </div>
        <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
          Odoo
          Customization</h6>
      </div>

      <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
        <div class="d-flex justify-content-center align-items-center mx-3 my-3"
          style="background-color: #ff6b6b !important; border-radius: 15px !important; height: 80px; width: 80px;">
          <img src="assets/icons/wrench.png" class="img-responsive" height="48px" width="48px">
        </div>
        <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
          Odoo
          Implementation</h6>
      </div>

      <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
        <div class="d-flex justify-content-center align-items-center mx-3 my-3"
          style="background-color: #6462CD !important; border-radius: 15px !important; height: 80px; width: 80px;">
          <img src="assets/icons/lifebuoy.png" class="img-responsive" height="48px" width="48px">
        </div>
        <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
          Odoo
          Support</h6>
      </div>


      <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
        <div class="d-flex justify-content-center align-items-center mx-3 my-3"
          style="background-color: #ffa801 !important; border-radius: 15px !important; height: 80px; width: 80px;">
          <img src="assets/icons/user.png" class="img-responsive" height="48px" width="48px">
        </div>
        <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
          Hire
          Odoo
          Developer</h6>
      </div>

      <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
        <div class="d-flex justify-content-center align-items-center mx-3 my-3"
          style="background-color: #54a0ff  !important; border-radius: 15px !important; height: 80px; width: 80px;">
          <img src="assets/icons/puzzle.png" class="img-responsive" height="48px" width="48px">
        </div>
        <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
          Odoo
          Integration</h6>
      </div>

      <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
        <div class="d-flex justify-content-center align-items-center mx-3 my-3"
          style="background-color: #6d7680 !important; border-radius: 15px !important; height: 80px; width: 80px;">
          <img src="assets/icons/update.png" class="img-responsive" height="48px" width="48px">
        </div>
        <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
          Odoo
          Migration</h6>
      </div>


      <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
        <div class="d-flex justify-content-center align-items-center mx-3 my-3"
          style="background-color: #786fa6 !important; border-radius: 15px !important; height: 80px; width: 80px;">
          <img src="assets/icons/consultation.png" class="img-responsive" height="48px" width="48px">
        </div>
        <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
          Odoo
          Consultancy</h6>
      </div>

      <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
        <div class="d-flex justify-content-center align-items-center mx-3 my-3"
          style="background-color: #f8a5c2 !important; border-radius: 15px !important; height: 80px; width: 80px;">
          <img src="assets/icons/training.png" class="img-responsive" height="48px" width="48px">
        </div>
        <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
          Odoo
          Implementation</h6>
      </div>

      <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
        <div class="d-flex justify-content-center align-items-center mx-3 my-3"
          style="background-color: #e6be26 !important; border-radius: 15px !important; height: 80px; width: 80px;">
          <img src="assets/icons/license.png" class="img-responsive" height="48px" width="48px">
        </div>
        <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
          Odoo
          Licensing Consultancy</h6>
      </div>
    </div>
  </section>
  <!-- END OF END OF OUR SERVICES -->

  <!-- OUR INDUSTRIES -->
  <section class="container" style="margin-top: 6rem !important;">
    <div class="row">
      <div class="col-lg-12 d-flex flex-column justify-content-center align-items-center">
        <h2 style="color: #212529 !important;">Our Industries</h2>
        <hr
          style="border: 3px solid #714B67 !important; background-color: #714B67 !important; width: 80px !important; margin-bottom: 2rem !important;" />
      </div>

      <div class="col-lg-3">
        <div class="my-4 d-flex flex-column justify-content-center"
          style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
          <img src="./assets/icons/trading-black.png" class="img-responsive mb-3" height="48px" width="48px">
          <h5 style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
            Trading
          </h5>
          <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
            Easily procure
            and
            sell your products</p>
        </div>
      </div>

      <div class="col-lg-3">
        <div class="my-4 d-flex flex-column justify-content-center"
          style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
          <img src="./assets/icons/pos-black.png" class="img-responsive mb-3" height="48px" width="48px">
          <h5 style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
            POS
          </h5>
          <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
            Easy
            configuration
            and convivial experience</p>
        </div>
      </div>

      <div class="col-lg-3">
        <div class="my-4 d-flex flex-column justify-content-center"
          style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
          <img src="./assets/icons/education-black.png" class="img-responsive mb-3" height="48px" width="48px">
          <h5 style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
            Education
          </h5>
          <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
            A platform for
            educational management</p>
        </div>
      </div>

      <div class="col-lg-3">
        <div class="my-4 d-flex flex-column justify-content-center"
          style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
          <img src="./assets/icons/manufacturing-black.png" class="img-responsive mb-3" height="48px" width="48px">
          <h5 style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
            Manufacturing
          </h5>
          <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
            Plan, track and
            schedule your operations</p>
        </div>
      </div>

      <div class="col-lg-3">
        <div class="my-4 d-flex flex-column justify-content-center"
          style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
          <img src="./assets/icons/ecom-black.png" class="img-responsive mb-3" height="48px" width="48px">
          <h5 style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
            E-commerce &amp; Website
          </h5>
          <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
            Mobile
            friendly,
            awe-inspiring product pages</p>
        </div>
      </div>

      <div class="col-lg-3">
        <div class="my-4 d-flex flex-column justify-content-center"
          style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
          <img src="./assets/icons/service-black.png" class="img-responsive mb-3" height="48px" width="48px">
          <h5 style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
            Service Management
          </h5>
          <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
            Keep track of
            services and invoice</p>
        </div>
      </div>

      <div class="col-lg-3">
        <div class="my-4 d-flex flex-column justify-content-center"
          style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
          <img src="./assets/icons/restaurant-black.png" class="img-responsive mb-3" height="48px" width="48px">
          <h5 style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
            Restaurant
          </h5>
          <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
            Run your bar or
            restaurant methodically</p>
        </div>
      </div>

      <div class="col-lg-3">
        <div class="my-4 d-flex flex-column justify-content-center"
          style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
          <img src="./assets/icons/hotel-black.png" class="img-responsive mb-3" height="48px" width="48px">
          <h5 style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
            Hotel Management
          </h5>
          <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
            An
            all-inclusive
            hotel management application</p>
        </div>
      </div>

    </div>
  </section>

  <!-- END OF END OF OUR INDUSTRIES -->

  <!-- FOOTER -->
  <!-- Footer Section -->
  <section class="container" style="margin: 5rem auto 2rem;">
    <div class="row" style="max-width:1540px;">
      <div class="col-lg-12 d-flex flex-column justify-content-center align-items-center">
        <h2 style="color: #212529 !important;">Need Help?</h2>
        <hr
          style="border: 3px solid #714B67 !important; background-color: #714B67 !important; width: 80px !important; margin-bottom: 2rem !important;" />
      </div>
    </div>

    <!-- Contact Cards -->
    <div class="row d-flex justify-content-center align-items-center"
      style="max-width:1540px; margin: 0 auto 2rem auto;">

      <div class="col-lg-12" style="padding: 0rem 3rem 2rem; border-radius: 10px; margin-right: 3rem; ">

        <div class="row mt-4">
          <div class="col-lg-6">
            <a href="mailto:odoo@cybrosys.com" target="_blank" class="btn btn-block mb-2 deep_hover"
              style="text-decoration: none;  background-color: #4d4d4d; color: #FFF;  border-radius: 4px;"><i
                class="fa fa-envelope mr-2"></i>odoo@cybrosys.com</a>
          </div>
          <div class="col-lg-6">
            <a href="https://api.whatsapp.com/send?phone=918606827707" target="_blank"
              class="btn btn-block mb-2 deep_hover"
              style="text-decoration: none;  background-color: #25D366; color: #FFF;  border-radius: 4px;"><i
                class="fa fa-whatsapp mr-2"></i>+91 86068 27707</a>
          </div>
        </div>
      </div>

    </div>
    <!-- End of Contact Cards -->
  </section>
  <!-- Footer -->
  <section class="oe_container" style="padding: 2rem 3rem 1rem;">
    <div class="row" style="max-width:1540px; margin: 0 auto; margin-right: 3rem; ">
      <!-- Logo -->
      <div class="col-lg-12 d-flex justify-content-center align-items-center" style="margin-top: 3rem;">
        <img src="https://www.cybrosys.com/images/logo.png" width="200px" height="auto" />
      </div>
      <!-- End of Logo -->
      <div class="col-lg-12">
        <hr
          style="margin-top: 3rem;background: linear-gradient(90deg, rgba(2,0,36,0) 0%, rgba(229,229,229,1) 33%, rgba(229,229,229,1) 58%, rgba(0,212,255,0) 100%); height: 2px; border-style: none;">
        <!-- End of Footer Section -->
      </div>
    </div>
  </section>
  <!-- END OF FOOTER -->

</div>

===== .\advanced_pos_reports\static\src\css\advanced_report.css =====



===== .\advanced_pos_reports\static\src\js\ControlButtons\CategorySummaryButton.js =====
odoo.define('advanced_pos_reports.CategorySummaryButton', function (require) {
    'use strict';

    const PosComponent = require('point_of_sale.PosComponent');
    const ProductScreen = require('point_of_sale.ProductScreen');
    const Registries = require('point_of_sale.Registries');
    const { useListener } = require('web.custom_hooks');

    class CategorySummaryButton extends PosComponent {
        constructor() {
            super(...arguments);
            useListener('click', this._onClick);
        }
        _onClick() {
            this.showPopup('CategorySummaryPopup', { title: 'Category Summary', });
        }
    }
    CategorySummaryButton.template = 'advanced_pos_reports.CategorySummaryButton';

    ProductScreen.addControlButton({
        component: CategorySummaryButton,
        condition: function () {
            return true;
        },
    });

    Registries.Component.add(CategorySummaryButton);

    return CategorySummaryButton;
});

===== .\advanced_pos_reports\static\src\js\ControlButtons\LocationSummaryButton.js =====
odoo.define('advanced_pos_reports.LocationSummaryButton', function (require) {
    'use strict';

    const PosComponent = require('point_of_sale.PosComponent');
    const ProductScreen = require('point_of_sale.ProductScreen');
    const Registries = require('point_of_sale.Registries');
    const { useListener } = require('web.custom_hooks');

    class LocationSummaryButton extends PosComponent {
        constructor() {
            super(...arguments);
            useListener('click', this._onClick);
        }
        async _onClick() {
            var locations = await this.rpc({
                   model: 'stock.location',
                    method: 'search_read',
                     args: [[['usage', '=', 'internal']]],
                });
            this.showPopup('LocationSummaryPopup', { title: 'Location Summary', locations: locations });
        }
    }
    LocationSummaryButton.template = 'advanced_pos_reports.LocationSummaryButton';

    ProductScreen.addControlButton({
        component: LocationSummaryButton,
        condition: function () {
            return true;
        },
    });

    Registries.Component.add(LocationSummaryButton);

    return LocationSummaryButton;
});

===== .\advanced_pos_reports\static\src\js\ControlButtons\OrderSummaryButton.js =====
odoo.define('advanced_pos_reports.OrderSummaryButton', function (require) {
    'use strict';

    const PosComponent = require('point_of_sale.PosComponent');
    const ProductScreen = require('point_of_sale.ProductScreen');
    const Registries = require('point_of_sale.Registries');
    const { useListener } = require('web.custom_hooks');

    class OrderSummaryButton extends PosComponent {
        constructor() {
            super(...arguments);
            useListener('click', this._onClick);
        }
        _onClick() {
            this.showPopup('OrderSummaryPopup', { title: 'Order Summary', });
//            const customer = this.env.pos.get_order().get_client();
//            const searchDetails = customer ? { fieldName: 'CUSTOMER', searchTerm: customer.name } : {};
//            this.trigger('close-popup');
//            this.showScreen('TicketScreen', {
//                ui: { filter: 'SYNCED', searchDetails },
//                destinationOrder: this.env.pos.get_order(),
//            });
        }
    }
    OrderSummaryButton.template = 'advanced_pos_reports.OrderSummaryButton';

    ProductScreen.addControlButton({
        component: OrderSummaryButton,
        condition: function () {
            return true;
        },
    });

    Registries.Component.add(OrderSummaryButton);

    return OrderSummaryButton;
});

===== .\advanced_pos_reports\static\src\js\ControlButtons\PaymentSummaryButton.js =====
odoo.define('advanced_pos_reports.PaymentSummaryButton', function (require) {
    'use strict';

    const PosComponent = require('point_of_sale.PosComponent');
    const ProductScreen = require('point_of_sale.ProductScreen');
    const Registries = require('point_of_sale.Registries');
    const { useListener } = require('web.custom_hooks');

    class PaymentSummaryButton extends PosComponent {
        constructor() {
            super(...arguments);
            useListener('click', this._onClick);
        }
        _onClick() {
            this.showPopup('PaymentSummaryPopup', { title: 'Payment Summary', });
        }
    }
    PaymentSummaryButton.template = 'advanced_pos_reports.PaymentSummaryButton';

    ProductScreen.addControlButton({
        component: PaymentSummaryButton,
        condition: function () {
            return true;
        },
    });

    Registries.Component.add(PaymentSummaryButton);

    return PaymentSummaryButton;
});

===== .\advanced_pos_reports\static\src\js\ControlButtons\ProductSummaryButton.js =====
odoo.define('advanced_pos_reports.ProductSummaryButton', function (require) {
    'use strict';

    const PosComponent = require('point_of_sale.PosComponent');
    const ProductScreen = require('point_of_sale.ProductScreen');
    const Registries = require('point_of_sale.Registries');
    const { useListener } = require('web.custom_hooks');

    class ProductSummaryButton extends PosComponent {
        constructor() {
            super(...arguments);
            useListener('click', this._onClick);
        }
        _onClick() {
            this.showPopup('ProductSummaryPopup', { title: 'Product Summary', });
//            const customer = this.env.pos.get_order().get_client();
//            const searchDetails = customer ? { fieldName: 'CUSTOMER', searchTerm: customer.name } : {};
//            this.trigger('close-popup');
//            this.showScreen('TicketScreen', {
//                ui: { filter: 'SYNCED', searchDetails },
//                destinationOrder: this.env.pos.get_order(),
//            });
        }
    }
    ProductSummaryButton.template = 'advanced_pos_reports.ProductSummaryButton';

    ProductScreen.addControlButton({
        component: ProductSummaryButton,
        condition: function () {
            return true;
        },
    });

    Registries.Component.add(ProductSummaryButton);

    return ProductSummaryButton;
});

===== .\advanced_pos_reports\static\src\js\ControlButtons\SessionSummaryButton.js =====
odoo.define('advanced_pos_reports.SessionSummaryButton', function (require) {
    'use strict';

    const PosComponent = require('point_of_sale.PosComponent');
    const ProductScreen = require('point_of_sale.ProductScreen');
    const Registries = require('point_of_sale.Registries');
    const { useListener } = require('web.custom_hooks');

    class SessionSummaryButton extends PosComponent {
        constructor() {
            super(...arguments);
            useListener('click', this._onClick);
        }
        async _onClick() {
            var sessions = await this.rpc({
                   model: 'pos.session',
                    method: 'search_read',
                    args: [[]],
                });
            this.showPopup('SessionSummaryPopup', { title: 'Session Summary', sessions: sessions});
        }
    }
    SessionSummaryButton.template = 'advanced_pos_reports.SessionSummaryButton';

    ProductScreen.addControlButton({
        component: SessionSummaryButton,
        condition: function () {
            return true;
        },
    });

    Registries.Component.add(SessionSummaryButton);

    return SessionSummaryButton;
});

===== .\advanced_pos_reports\static\src\js\Popups\CategorySummaryPopup.js =====
odoo.define('advanced_pos_reports.CategorySummaryPopup', function(require) {
    'use strict';

    const { useState } = owl.hooks;
    const AbstractAwaitablePopup = require('point_of_sale.AbstractAwaitablePopup');
    const Registries = require('point_of_sale.Registries');
    const { _lt } = require('@web/core/l10n/translation');

    class CategorySummaryPopup extends AbstractAwaitablePopup {
        constructor() {
            super(...arguments);
            this.state = useState({
                current_session: false,
                start_date: "",
                end_date: "",
            });
        }
        click_is_session(){
            var is_session = $('#is_current_session').is(':checked');
            if(is_session){
                $("#date_section").hide();
            }
            else{
                $("#date_section").show();
            }
        }
        async confirm(event) {
            var is_session = this.state.current_session;
            var start_date = this.state.start_date || '';
            var end_date = this.state.end_date || '';
            var order = this.env.pos.get_order()['sequence_number']
            var domain = []
            if(is_session){
                domain = [['session_id', '=', this.env.pos.pos_session.id]]
            }
            else{
                domain = [['date_order', '>=', start_date + ' 00:00:00'], ['date_order', '<=', end_date +  ' 23:59:59']]
            }
            var orders = await this.rpc({
				model: 'pos.order',
				method: 'search',
				args: [domain],
				});
            var order_ids = []
            $.each(orders,function(index,value){
                order_ids.push(value)
            });
            var categories = await this.rpc({
				model: 'pos.order',
				method: 'get_category_summary',
				args: [order, order_ids],
				});
            this.showScreen('CategorySummaryReceiptScreen', { categories: categories, start_date: start_date, end_date: end_date});
            super.confirm();
        }
    }
    CategorySummaryPopup.template = 'CategorySummaryPopup';
    CategorySummaryPopup.defaultProps = {
        confirmText: _lt('Print'),
        cancelText: _lt('Cancel'),
        array: [],
        isSingleItem: false,
    };

    Registries.Component.add(CategorySummaryPopup);

    return CategorySummaryPopup;
});


===== .\advanced_pos_reports\static\src\js\Popups\LocationSummaryPopup.js =====
odoo.define('advanced_pos_reports.LocationSummaryPopup', function(require) {
    'use strict';

    const { useState } = owl.hooks;
    const AbstractAwaitablePopup = require('point_of_sale.AbstractAwaitablePopup');
    const Registries = require('point_of_sale.Registries');
    const { _lt } = require('@web/core/l10n/translation');

    class LocationSummaryPopup extends AbstractAwaitablePopup {
        constructor() {
            super(...arguments);
            this.state = useState({
                selected_value: ''
            });
        }
        async confirm(event) {
            var location = this.state.selected_value;
            var locations = await this.rpc({
				model: 'pos.config',
				method: 'get_location_summary',
				args: [this.config_id, location],
				});
            this.showScreen('LocationSummaryReceiptScreen', { locations: locations});
            super.confirm();
        }
    }
    LocationSummaryPopup.template = 'LocationSummaryPopup';
    LocationSummaryPopup.defaultProps = {
        confirmText: _lt('Print'),
        cancelText: _lt('Cancel'),
        array: [],
        isSingleItem: false,
    };

    Registries.Component.add(LocationSummaryPopup);

    return LocationSummaryPopup;
});


===== .\advanced_pos_reports\static\src\js\Popups\OrderSummaryPopup.js =====
odoo.define('advanced_pos_reports.OrderSummaryPopup', function(require) {
    'use strict';

    const { useState, useRef } = owl.hooks;
    const AbstractAwaitablePopup = require('point_of_sale.AbstractAwaitablePopup');
    const Registries = require('point_of_sale.Registries');
    const { _lt } = require('@web/core/l10n/translation');

    class OrderSummaryPopup extends AbstractAwaitablePopup {
        constructor() {
            super(...arguments);
            this.state = useState({
                current_session: false,
                start_date: "",
                end_date: "",
                status: '' || 'draft' || 'paid' || 'done' || 'invoiced' || 'cancel',
            });
        }
        click_is_session(){
            var is_session = $('#is_current_session').is(':checked');
            if(is_session){
                $("#date_section").hide();
            }
            else{
                $("#date_section").show();
            }
        }
        async confirm(event) {
            var is_session = this.state.current_session;
            var start_date = this.state.start_date || '';
            var end_date = this.state.end_date || '';
            var status = this.state.status;
            var order = this.env.pos.get_order()['sequence_number']
            var domain = []
            if(is_session){
                domain = [['session_id', '=', this.env.pos.pos_session.id]]
                if(status){
                    domain = [['session_id', '=', this.env.pos.pos_session.id], ['state', '=', status]]
                }
            }
            else{
                domain = [['date_order', '>=', start_date + ' 00:00:00'],
                          ['date_order', '<=', end_date +  ' 23:59:59']]
                if(status){
                    domain = [['date_order', '>=', start_date + ' 00:00:00'],
                          ['date_order', '<=', end_date +  ' 23:59:59'],
                          ['state', '=', status]]
                }
            }
            var orders_ids = await this.rpc({
				model: 'pos.order',
				method: 'search',
				args: [domain],
				});
            var order_ids = []
            $.each(orders_ids,function(index,value){
                order_ids.push(value)
            });
            var orders = await this.rpc({
				model: 'pos.order',
				method: 'get_order_summary',
				args: [order, order_ids],
				});
            this.showScreen('OrderSummaryReceiptScreen', { orders: orders, start_date: start_date, end_date: end_date});
            super.confirm();
        }
    }
    OrderSummaryPopup.template = 'OrderSummaryPopup';
    OrderSummaryPopup.defaultProps = {
        confirmText: _lt('Print'),
        cancelText: _lt('Cancel'),
        array: [],
        isSingleItem: false,
    };

    Registries.Component.add(OrderSummaryPopup);

    return OrderSummaryPopup;
});


===== .\advanced_pos_reports\static\src\js\Popups\PaymentSummaryPopup.js =====
odoo.define('advanced_pos_reports.PaymentSummaryPopup', function(require) {
    'use strict';

    const { useState } = owl.hooks;
    const AbstractAwaitablePopup = require('point_of_sale.AbstractAwaitablePopup');
    const Registries = require('point_of_sale.Registries');
    const { _lt } = require('@web/core/l10n/translation');

    class PaymentSummaryPopup extends AbstractAwaitablePopup {

        constructor() {
            super(...arguments);
            this.state = useState({
                current_session: false,
                start_date: "",
                end_date: "",
                summary: '' || 'sales_person' || 'journal',
            });
        }
        click_is_session(){
            var is_session = $('#is_current_session').is(':checked');
            if(is_session){
                $("#date_section").hide();
            }
            else{
                $("#date_section").show();
            }
        }
        async confirm(event) {
            var is_session = this.state.current_session;
            var start_date = this.state.start_date || '';
            var end_date = this.state.end_date || '';
            var summary_type = this.state.summary;
            var order = this.env.pos.get_order()['sequence_number']
            var is_user = false;
            if(summary_type === 'sales_person'){
                is_user = true
            }
            var domain = []
            if(is_session){
                domain = [['session_id', '=', this.env.pos.pos_session.id]]
                if(summary_type == 'sales_person'){
                    domain = [['session_id', '=', this.env.pos.pos_session.id], ['user_id', '=', this.env.pos.user.id]]
                }
            }
            else{
                domain = [['date_order', '>=', start_date + ' 00:00:00'],
                          ['date_order', '<=', end_date +  ' 23:59:59']]
                if(summary_type == 'sales_person'){
                    domain = [['date_order', '>=', start_date + ' 00:00:00'],
                              ['date_order', '<=', end_date +  ' 23:59:59'],
                              ['user_id', '=', this.env.pos.user.id]]
                }
            }
            var orders = await this.rpc({
				model: 'pos.order',
				method: 'search',
				args: [domain],
				});
            var order_ids = []
            $.each(orders,function(index,value){
                order_ids.push(value)
            });
            var payment_summary = await this.rpc({
				model: 'pos.payment',
				method: 'get_payment_summary',
				args: [order, order_ids],
				});
            this.showScreen('PaymentSummaryReceiptScreen', { payment_summary: payment_summary, start_date: start_date, end_date: end_date, is_user: is_user });
            super.confirm();
        }
    }
    PaymentSummaryPopup.template = 'PaymentSummaryPopup';
    PaymentSummaryPopup.defaultProps = {
        confirmText: _lt('Print'),
        cancelText: _lt('Cancel'),
        array: [],
        isSingleItem: false,
    };

    Registries.Component.add(PaymentSummaryPopup);

    return PaymentSummaryPopup;
});


===== .\advanced_pos_reports\static\src\js\Popups\ProductSummaryPopup.js =====
odoo.define('advanced_pos_reports.ProductSummaryPopup', function(require) {
    'use strict';

    const { useState } = owl.hooks;
    const AbstractAwaitablePopup = require('point_of_sale.AbstractAwaitablePopup');
    const Registries = require('point_of_sale.Registries');
    const { _lt } = require('@web/core/l10n/translation');

    class ProductSummaryPopup extends AbstractAwaitablePopup {
        constructor() {
            super(...arguments);
            this.state = useState({
                current_session: false,
                start_date: "",
                end_date: ""
            });
        }
        click_is_session(){
            var is_session = $('#is_current_session').is(':checked');
            if(is_session){
                $("#date_section").hide();
            }
            else{
                $("#date_section").show();
            }
        }
        async confirm(event) {
            var is_session = this.state.current_session;
            var start_date = this.state.start_date || '';
            var end_date = this.state.end_date || '';
            var order = this.env.pos.get_order()['sequence_number']
            var domain = []
            if(is_session){
                domain = [['session_id', '=', this.env.pos.pos_session.id]]
            }
            else{
                domain = [['date_order', '>=', start_date + ' 00:00:00'],
                          ['date_order', '<=', end_date +  ' 23:59:59']]
            }
            var orders = await this.rpc({
				model: 'pos.order',
				method: 'search',
				args: [domain],
				});
            var order_ids = []
            $.each(orders,function(index,value){
                order_ids.push(value)
            });
            var products = await this.rpc({
				model: 'pos.order',
				method: 'get_product_summary',
				args: [order, order_ids],
				});
            this.showScreen('ProductSummaryReceiptScreen', { products: products, start_date: start_date, end_date: end_date});
            super.confirm();
        }
    }
    ProductSummaryPopup.template = 'ProductSummaryPopup';
    ProductSummaryPopup.defaultProps = {
        confirmText: _lt('Print'),
        cancelText: _lt('Cancel'),
        array: [],
        isSingleItem: false,
    };

    Registries.Component.add(ProductSummaryPopup);

    return ProductSummaryPopup;
});


===== .\advanced_pos_reports\static\src\js\Popups\SessionSummaryPopup.js =====
odoo.define('advanced_pos_reports.SessionSummaryPopup', function(require) {
    'use strict';

    const { useState } = owl.hooks;
    const AbstractAwaitablePopup = require('point_of_sale.AbstractAwaitablePopup');
    const Registries = require('point_of_sale.Registries');
    const { useAutoFocusToLast } = require('point_of_sale.custom_hooks');
    const { _lt } = require('@web/core/l10n/translation');

    class SessionSummaryPopup extends AbstractAwaitablePopup {
        constructor() {
            super(...arguments);
            this.state = useState({
                selected_value: ''
            });
        }
        async confirm(event) {
            var session = this.state.selected_value;
            var session_summary = await this.rpc({
				model: 'pos.session',
				method: 'get_session_summary',
				args: [this.env.pos.pos_session.id, session],
				});
            this.showScreen('SessionSummaryReceiptScreen', { session_summary: session_summary});
            super.confirm();
        }
    }
    SessionSummaryPopup.template = 'SessionSummaryPopup';
    SessionSummaryPopup.defaultProps = {
        confirmText: _lt('Print'),
        cancelText: _lt('Cancel'),
        array: [],
        isSingleItem: false,
    };

    Registries.Component.add(SessionSummaryPopup);

    return SessionSummaryPopup;
});


===== .\advanced_pos_reports\static\src\js\Receipts\CategorySummaryReceipt.js =====
odoo.define('advanced_pos_reports.CategorySummaryReceipt', function(require) {
    'use strict';

    const PosComponent = require('point_of_sale.PosComponent');
    const Registries = require('point_of_sale.Registries');

    class CategorySummaryReceipt extends PosComponent {
        constructor() {
            super(...arguments);
            this._categorySummaryEnv = this.props.categories
        }
        get categories() {
            return this._categorySummaryEnv;
        }
        get company() {
            return this.env.pos.company;
        }
        get cashier() {
            return this.env.pos.get_cashier();
        }
    }
    CategorySummaryReceipt.template = 'CategorySummaryReceipt';

    Registries.Component.add(CategorySummaryReceipt);

    return CategorySummaryReceipt;
});


===== .\advanced_pos_reports\static\src\js\Receipts\LocationSummaryReceipt.js =====
odoo.define('advanced_pos_reports.LocationSummaryReceipt', function(require) {
    'use strict';

    const PosComponent = require('point_of_sale.PosComponent');
    const Registries = require('point_of_sale.Registries');

    class LocationSummaryReceipt extends PosComponent {
        constructor() {
            super(...arguments);
            this._locationSummaryEnv = this.props.locations
        }
        get locations() {
            return this._locationSummaryEnv;
        }
        get company() {
            return this.env.pos.company;
        }
        get cashier() {
            return this.env.pos.get_cashier();
        }
    }
    LocationSummaryReceipt.template = 'LocationSummaryReceipt';

    Registries.Component.add(LocationSummaryReceipt);

    return LocationSummaryReceipt;
});


===== .\advanced_pos_reports\static\src\js\Receipts\OrderSummaryReceipt.js =====
odoo.define('advanced_pos_reports.OrderSummaryReceipt', function(require) {
    'use strict';

    const PosComponent = require('point_of_sale.PosComponent');
    const Registries = require('point_of_sale.Registries');

    class OrderSummaryReceipt extends PosComponent {
        constructor() {
            super(...arguments);
            this._orderSummaryEnv = this.props.orders
        }
        get orders() {
            return this._orderSummaryEnv;
        }
        get company() {
            return this.env.pos.company;
        }
        get cashier() {
            return this.env.pos.get_cashier();
        }
        getDate(order) {
            return moment(order.date_order).format('MM-DD-YYYY');
        }
    }
    OrderSummaryReceipt.template = 'OrderSummaryReceipt';

    Registries.Component.add(OrderSummaryReceipt);

    return OrderSummaryReceipt;
});


===== .\advanced_pos_reports\static\src\js\Receipts\PaymentSummaryReceipt.js =====
odoo.define('advanced_pos_reports.PaymentSummaryReceipt', function(require) {
    'use strict';

    const PosComponent = require('point_of_sale.PosComponent');
    const Registries = require('point_of_sale.Registries');

    class PaymentSummaryReceipt extends PosComponent {
        constructor() {
            super(...arguments);
            this._paymentSummaryEnv = this.props.payment_summary
        }
        get payment_summary() {
            return this._paymentSummaryEnv;
        }
        get company() {
            return this.env.pos.company;
        }
        get cashier() {
            return this.env.pos.get_cashier();
        }
//        getDate(order) {
//            return moment(order.date_order).format('MM-DD-YYYY');
//        }
    }
    PaymentSummaryReceipt.template = 'PaymentSummaryReceipt';

    Registries.Component.add(PaymentSummaryReceipt);

    return PaymentSummaryReceipt;
});


===== .\advanced_pos_reports\static\src\js\Receipts\ProductSummaryReceipt.js =====
odoo.define('advanced_pos_reports.ProductSummaryReceipt', function(require) {
    'use strict';

    const PosComponent = require('point_of_sale.PosComponent');
    const Registries = require('point_of_sale.Registries');

    class ProductSummaryReceipt extends PosComponent {
        constructor() {
            super(...arguments);
            this._productSummaryEnv = this.props.products
        }
        get products() {
            return this._productSummaryEnv;
        }
        get company() {
            return this.env.pos.company;
        }
        get cashier() {
            return this.env.pos.get_cashier();
        }
    }
    ProductSummaryReceipt.template = 'ProductSummaryReceipt';

    Registries.Component.add(ProductSummaryReceipt);

    return ProductSummaryReceipt;
});


===== .\advanced_pos_reports\static\src\js\Receipts\SessionSummaryReceipt.js =====
odoo.define('advanced_pos_reports.SessionSummaryReceipt', function(require) {
    'use strict';

    const PosComponent = require('point_of_sale.PosComponent');
    const Registries = require('point_of_sale.Registries');

    class SessionSummaryReceipt extends PosComponent {
        constructor() {
            super(...arguments);
            this._sessionSummaryEnv = this.props.session_summary
        }
        get session_summary() {
            return this._sessionSummaryEnv;
        }
        get company() {
            return this.env.pos.company;
        }
        get cashier() {
            return this.env.pos.get_cashier();
        }
    }
    SessionSummaryReceipt.template = 'SessionSummaryReceipt';

    Registries.Component.add(SessionSummaryReceipt);

    return SessionSummaryReceipt;
});


===== .\advanced_pos_reports\static\src\js\ReceiptScreen\CategorySummaryReceiptScreen.js =====
odoo.define('advanced_pos_reports.CategorySummaryReceiptScreen', function (require) {
    'use strict';

    const { Printer } = require('point_of_sale.Printer');
    const { is_email } = require('web.utils');
    const { useRef, useContext } = owl.hooks;
    const { useErrorHandlers, onChangeOrder } = require('point_of_sale.custom_hooks');
    const Registries = require('point_of_sale.Registries');
    const AbstractReceiptScreen = require('point_of_sale.AbstractReceiptScreen');

    const CategorySummaryReceiptScreen = (AbstractReceiptScreen) => {
        class CategorySummaryReceiptScreen extends AbstractReceiptScreen {
            constructor() {
                super(...arguments);
                this.categorySummary = useRef('category-summary');
            }
            confirm() {
                this.showScreen('ProductScreen');
            }
            async printSummary() {
                await this._printReceipt();
            }

        }
        CategorySummaryReceiptScreen.template = 'CategorySummaryReceiptScreen';
        return CategorySummaryReceiptScreen;
    };

    Registries.Component.addByExtending(CategorySummaryReceiptScreen, AbstractReceiptScreen);

    return CategorySummaryReceiptScreen;
});


===== .\advanced_pos_reports\static\src\js\ReceiptScreen\LocationSummaryReceiptScreen.js =====
odoo.define('advanced_pos_reports.LocationSummaryReceiptScreen', function (require) {
    'use strict';

    const { Printer } = require('point_of_sale.Printer');
    const { is_email } = require('web.utils');
    const { useRef, useContext } = owl.hooks;
    const { useErrorHandlers, onChangeOrder } = require('point_of_sale.custom_hooks');
    const Registries = require('point_of_sale.Registries');
    const AbstractReceiptScreen = require('point_of_sale.AbstractReceiptScreen');

    const LocationSummaryReceiptScreen = (AbstractReceiptScreen) => {
        class LocationSummaryReceiptScreen extends AbstractReceiptScreen {
            constructor() {
                super(...arguments);
                this.locationSummary = useRef('location-summary');
            }
            confirm() {
                this.showScreen('ProductScreen');
            }
            async printSummary() {
                await this._printReceipt();
            }

        }
        LocationSummaryReceiptScreen.template = 'LocationSummaryReceiptScreen';
        return LocationSummaryReceiptScreen;
    };

    Registries.Component.addByExtending(LocationSummaryReceiptScreen, AbstractReceiptScreen);

    return LocationSummaryReceiptScreen;
});


===== .\advanced_pos_reports\static\src\js\ReceiptScreen\OrderSummaryReceiptScreen.js =====
odoo.define('advanced_pos_reports.OrderSummaryReceiptScreen', function (require) {
    'use strict';

    const { Printer } = require('point_of_sale.Printer');
    const { is_email } = require('web.utils');
    const { useRef, useContext } = owl.hooks;
    const { useErrorHandlers, onChangeOrder } = require('point_of_sale.custom_hooks');
    const Registries = require('point_of_sale.Registries');
    const AbstractReceiptScreen = require('point_of_sale.AbstractReceiptScreen');

    const OrderSummaryReceiptScreen = (AbstractReceiptScreen) => {
        class OrderSummaryReceiptScreen extends AbstractReceiptScreen {
            constructor() {
                super(...arguments);
                this.orderSummary = useRef('order-summary');
            }
            confirm() {
                this.showScreen('ProductScreen');
            }
            async printSummary() {
                await this._printReceipt();
            }

        }
        OrderSummaryReceiptScreen.template = 'OrderSummaryReceiptScreen';
        return OrderSummaryReceiptScreen;
    };

    Registries.Component.addByExtending(OrderSummaryReceiptScreen, AbstractReceiptScreen);

    return OrderSummaryReceiptScreen;
});


===== .\advanced_pos_reports\static\src\js\ReceiptScreen\PaymentSummaryReceiptScreen.js =====
odoo.define('advanced_pos_reports.PaymentSummaryReceiptScreen', function (require) {
    'use strict';

    const { Printer } = require('point_of_sale.Printer');
    const { is_email } = require('web.utils');
    const { useRef, useContext } = owl.hooks;
    const { useErrorHandlers, onChangeOrder } = require('point_of_sale.custom_hooks');
    const Registries = require('point_of_sale.Registries');
    const AbstractReceiptScreen = require('point_of_sale.AbstractReceiptScreen');

    const PaymentSummaryReceiptScreen = (AbstractReceiptScreen) => {
        class PaymentSummaryReceiptScreen extends AbstractReceiptScreen {
            constructor() {
                super(...arguments);
                this.paymentSummary = useRef('payment-summary');
            }
            confirm() {
                this.showScreen('ProductScreen');
            }
            async printSummary() {
                await this._printReceipt();
            }
        }
        PaymentSummaryReceiptScreen.template = 'PaymentSummaryReceiptScreen';
        return PaymentSummaryReceiptScreen;
    };

    Registries.Component.addByExtending(PaymentSummaryReceiptScreen, AbstractReceiptScreen);

    return PaymentSummaryReceiptScreen;
});


===== .\advanced_pos_reports\static\src\js\ReceiptScreen\ProductSummaryReceiptScreen.js =====
odoo.define('advanced_pos_reports.ProductSummaryReceiptScreen', function (require) {
    'use strict';

    const { Printer } = require('point_of_sale.Printer');
    const { is_email } = require('web.utils');
    const { useRef, useContext } = owl.hooks;
    const { useErrorHandlers, onChangeOrder } = require('point_of_sale.custom_hooks');
    const Registries = require('point_of_sale.Registries');
    const AbstractReceiptScreen = require('point_of_sale.AbstractReceiptScreen');

    const ProductSummaryReceiptScreen = (AbstractReceiptScreen) => {
        class ProductSummaryReceiptScreen extends AbstractReceiptScreen {
            constructor() {
                super(...arguments);
                this.paymentSummary = useRef('product-summary');
            }
            confirm() {
                this.showScreen('ProductScreen');
            }
            async printSummary() {
                await this._printReceipt();
            }
        }
        ProductSummaryReceiptScreen.template = 'ProductSummaryReceiptScreen';
        return ProductSummaryReceiptScreen;
    };

    Registries.Component.addByExtending(ProductSummaryReceiptScreen, AbstractReceiptScreen);

    return ProductSummaryReceiptScreen;
});


===== .\advanced_pos_reports\static\src\js\ReceiptScreen\SessionSummaryReceiptScreen.js =====
odoo.define('advanced_pos_reports.SessionSummaryReceiptScreen', function (require) {
    'use strict';

    const { Printer } = require('point_of_sale.Printer');
    const { is_email } = require('web.utils');
    const { useRef, useContext } = owl.hooks;
    const { useErrorHandlers, onChangeOrder } = require('point_of_sale.custom_hooks');
    const Registries = require('point_of_sale.Registries');
    const AbstractReceiptScreen = require('point_of_sale.AbstractReceiptScreen');

    const SessionSummaryReceiptScreen = (AbstractReceiptScreen) => {
        class SessionSummaryReceiptScreen extends AbstractReceiptScreen {
            constructor() {
                super(...arguments);
                this.paymentSummary = useRef('product-summary');
            }
            confirm() {
                this.showScreen('ProductScreen');
            }
            async printSummary() {
                await this._printReceipt();
            }
        }
        SessionSummaryReceiptScreen.template = 'SessionSummaryReceiptScreen';
        return SessionSummaryReceiptScreen;
    };

    Registries.Component.addByExtending(SessionSummaryReceiptScreen, AbstractReceiptScreen);

    return SessionSummaryReceiptScreen;
});


===== .\advanced_pos_reports\static\src\xml\ControlButtons\CategorySummaryButton.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="advanced_pos_reports.CategorySummaryButton" owl="1">
        <div class="control-button">
            <i class="fa fa-file-text" role="img" aria-label="Category Summary" title="Category Summary" />
            Category Summary
        </div>
    </t>

</templates>

===== .\advanced_pos_reports\static\src\xml\ControlButtons\LocationSummaryButton.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="advanced_pos_reports.LocationSummaryButton" owl="1">
        <div class="control-button">
            <i class="fa fa-bar-chart" role="img" aria-label="Location Summary" title="Location Summary" />
            Location Summary
        </div>
    </t>

</templates>

===== .\advanced_pos_reports\static\src\xml\ControlButtons\OrderSummaryButton.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="advanced_pos_reports.OrderSummaryButton" owl="1">
        <div class="control-button">
            <i class="fa fa-shopping-cart" role="img" aria-label="Order Summary" title="Order Summary" />
            Order Summary
        </div>
    </t>

</templates>

===== .\advanced_pos_reports\static\src\xml\ControlButtons\PaymentSummaryButton.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="advanced_pos_reports.PaymentSummaryButton" owl="1">
        <div class="control-button">
            <i class="fa fa-credit-card" role="img" aria-label="Payment Summary" title="Payment Summary" />
            Payment Summary
        </div>
    </t>

</templates>

===== .\advanced_pos_reports\static\src\xml\ControlButtons\ProductSummaryButton.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="advanced_pos_reports.ProductSummaryButton" owl="1">
        <div class="control-button">
            <i class="fa fa-file" role="img" aria-label="Product Summary" title="Product Summary" />
            Product Summary
        </div>
    </t>

</templates>

===== .\advanced_pos_reports\static\src\xml\ControlButtons\SessionSummaryButton.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="advanced_pos_reports.SessionSummaryButton" owl="1">
        <div class="control-button">
            <i class="fa fa-sticky-note-o" role="img" aria-label="Session Summary" title="Session Summary" />
            Session Summary
        </div>
    </t>

</templates>

===== .\advanced_pos_reports\static\src\xml\Popups\CategorySummaryPopup.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="CategorySummaryPopup" owl="1">
        <div role="dialog" class="modal-dialog">
            <div class="popup popup-text">
                <header class="title">
                    <t t-esc="props.title" />
                </header>
                <main class="body">
                    <div class="order-summary">
                        <input type="checkbox" id="is_current_session" name="is_current_session"
                               style="min-height: 15px !important;width: 25px !important;box-shadow: none !important;"
                               t-on-click="click_is_session" t-model="state.current_session"/>
                        <label for="is_current_session">Current Session</label>
                        <div style="padding-top:10px;" id="date_section">
                            <table>
                                <thead>
                                    <tr>
                                        <th style="width: 25%">Start Date</th>
                                        <th style="width: 20%">End Date</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td class="flex" style="padding:5px;">
                                            <input type="date" id="start_date" t-model="state.start_date"/>
                                        </td>
                                        <td class="flex" style="padding:5px;">
                                            <input type="date" id="end_date" t-model="state.end_date"/>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </main>

                <footer class="footer">
                    <div class="button confirm" t-on-click="confirm">
                        Print
                    </div>
                    <div class="button cancel" t-on-click="cancel">
                        Cancel
                    </div>
                </footer>
            </div>
        </div>
    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\Popups\LocationSummaryPopup.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="LocationSummaryPopup" owl="1">
        <div role="dialog" class="modal-dialog">
            <div class="popup popup-text">
                <header class="title">
                    <t t-esc="props.title" />
                </header>
                <main class="body">
                    <div class="order-summary">
                        <div>
                            <div>
                                <p class="label">Locations</p>
                                <select class="popup-input" t-model="state.selected_value" style="width: 40%;">
                                    <option t-foreach="props.locations" t-as="value" t-att-value="value.id">
                                        <t t-esc="value.complete_name"/>
                                    </option>
                                </select>
                            </div>
                        </div>
                    </div>
                </main>
                <footer class="footer">
                    <div class="button confirm" t-on-click="confirm">
                        Print
                    </div>
                    <div class="button cancel" t-on-click="cancel">
                        Cancel
                    </div>
                </footer>
            </div>
        </div>
    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\Popups\OrderSummaryPopup.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="OrderSummaryPopup" owl="1">
        <div role="dialog" class="modal-dialog">
            <div class="popup popup-text">
                <header class="title">
                    <t t-esc="props.title" />
                </header>
                <main class="body">
                    <div class="order-summary">
                        <input type="checkbox" id="is_current_session" name="is_current_session"
                               style="min-height: 15px !important;width: 25px !important;box-shadow: none !important;"
                               t-on-click="click_is_session" t-model="state.current_session"/>
                        <label for="is_current_session">Current Session</label>
                        <div style="padding-top:10px;" id="date_section">
                            <table>
                                <thead>
                                    <tr>
                                        <th style="width: 25%">Start Date</th>
                                        <th style="width: 20%">End Date</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td class="flex" style="padding:5px;">
                                            <input type="date" id="start_date" t-model="state.start_date"/>
                                        </td>
                                        <td class="flex" style="padding:5px;">
                                            <input type="date" id="end_date" t-model="state.end_date"/>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <div style="margin-top: 40px;">
                            <p class="label">Status</p>
                            <select name="state" id="state" class="popup-input" style="width: 30%;" t-model="state.status" t-ref="select-status">
                                <option value="">Select status</option>
                                <option value="draft">Ongoing</option>
                                <option value="paid">Paid</option>
                                <option value="done">Done</option>
                                <option value="invoiced">Invoiced</option>
                                <option value="cancel">Cancelled</option>
                            </select>
                        </div>
                    </div>
                </main>

                <footer class="footer">
                    <div class="button confirm" t-on-click="confirm">
                        Print
                    </div>
                    <div class="button cancel" t-on-click="cancel">
                        Cancel
                    </div>
                </footer>
            </div>
        </div>
    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\Popups\PaymentSummaryPopup.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="PaymentSummaryPopup" owl="1">
        <div role="dialog" class="modal-dialog">
            <div class="popup popup-text">
                <header class="title">
                    <t t-esc="props.title" />
                </header>
                <main class="body">
                    <div class="order-summary">
                        <input type="checkbox" id="is_current_session" name="is_current_session"
                               style="min-height: 15px !important;width: 25px !important;box-shadow: none !important;"
                               t-on-click="click_is_session" t-model="state.current_session"/>
                        <label for="is_current_session">Current Session</label>
                        <div style="padding-top:10px;" id="date_section">
                            <table>
                                <thead>
                                    <tr>
                                        <th style="width: 25%">Start Date</th>
                                        <th style="width: 20%">End Date</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td class="flex" style="padding:5px;">
                                            <input type="date" id="start_date" t-model="state.start_date"/>
                                        </td>
                                        <td class="flex" style="padding:5px;">
                                            <input type="date" id="end_date" t-model="state.end_date"/>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <div style="margin-top: 40px;">
                            <p class="label">Summary</p>
                            <select name="summary" id="summary" class="popup-input" style="width: 30%;" t-model="state.summary" t-ref="select-summary">
                                <option value="" selected="1"></option>
                                <option value="sales_person">Salesperson</option>

                            </select>
                        </div>
                    </div>
                </main>

                <footer class="footer">
                    <div class="button confirm" t-on-click="confirm">
                        Print
                    </div>
                    <div class="button cancel" t-on-click="cancel">
                        Cancel
                    </div>
                </footer>
            </div>
        </div>
    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\Popups\ProductSummaryPopup.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="ProductSummaryPopup" owl="1">
        <div role="dialog" class="modal-dialog">
            <div class="popup popup-text">
                <header class="title">
                    <t t-esc="props.title" />
                </header>
                <main class="body">
                    <div class="order-summary">
                        <input type="checkbox" id="is_current_session" name="is_current_session"
                               style="min-height: 15px !important;width: 25px !important;box-shadow: none !important;"
                               t-on-click="click_is_session" t-model="state.current_session"/>
                        <label for="is_current_session">Current Session</label>
                        <div style="padding-top:10px;" id="date_section">
                            <table>
                                <thead>
                                    <tr>
                                        <th style="width: 25%">Start Date</th>
                                        <th style="width: 20%">End Date</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td class="flex" style="padding:5px;">
                                            <input type="date" id="start_date" t-model="state.start_date"/>
                                        </td>
                                        <td class="flex" style="padding:5px;">
                                            <input type="date" id="end_date" t-model="state.end_date"/>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </main>

                <footer class="footer">
                    <div class="button confirm" t-on-click="confirm">
                        Print
                    </div>
                    <div class="button cancel" t-on-click="cancel">
                        Cancel
                    </div>
                </footer>
            </div>
        </div>
    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\Popups\SessionSummaryPopup.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="SessionSummaryPopup" owl="1">
        <div role="dialog" class="modal-dialog">
            <div class="popup popup-text">
                <header class="title">
                    <t t-esc="props.title" />
                </header>
                <main class="body">
                    <div class="order-summary">
                        <div style="padding-top:10px;">
                            <div style="margin-top: 40px;">
                                <p class="label">Session</p>
                                <select class="popup-input" t-model="state.selected_value" style="width: 40%;">
                                    <option t-foreach="props.sessions" t-as="value" t-att-value="value.id">
                                        <t t-esc="value.name"/>
                                    </option>
                                </select>
                            </div>
                        </div>
                    </div>
                </main>

                <footer class="footer">
                    <div class="button confirm" t-on-click="confirm">
                        Print
                    </div>
                    <div class="button cancel" t-on-click="cancel">
                        Cancel
                    </div>
                </footer>
            </div>
        </div>
    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\Receipts\CategorySummaryReceipt.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="CategorySummaryReceipt" owl="1">
        <div class="pos-receipt">
            <t t-if="company.logo">
                <img class="pos-receipt-logo" t-att-src="company.logo" alt="Logo"/>
                <br/>
            </t>
            <t t-if="!company.logo">
                <h2 class="pos-receipt-center-align">
                    <t t-esc="company.name" />
                </h2>
                <br/>
            </t>
            <div class="pos-receipt-contact">
                <t t-if="company.contact_address">
                    <div><t t-esc="company.contact_address" /></div>
                </t>
                <t t-if="company.phone">
                    <div>Tel:<t t-esc="company.phone" /></div>
                </t>
                <t t-if="company.vat">
                    <div><t t-esc="company.vat_label"/>:<t t-esc="company.vat" /></div>
                </t>
                <t t-if="company.email">
                    <div><t t-esc="company.email" /></div>
                </t>
                <t t-if="company.website">
                    <div><t t-esc="company.website" /></div>
                </t>

                <t t-if="cashier">
                    <div class="cashier">
                        <div>--------------------------------</div>
                        <div>Served by <t t-esc="cashier.name" /></div>
                    </div>
                </t>
            </div>
            <br />

            <h4 class="pos-receipt-center-align">
                Category Summary
            </h4>

            <table style="font-size:14px !important;margin-left: auto; margin-right: auto;" t-if="props.start_date and props.end_date">
                <tr>
                    <td><strong>Start Date:</strong></td>
                    <td><t t-esc="props.start_date"/></td>

                </tr>
                <tr>
                    <td><strong>End Date:</strong></td>
                    <td><t t-esc="props.end_date"/></td>
                </tr>
            </table>

            <table style="width: 100%; margin-top:10px; font-size:14px !important;">
                <thead style="border-bottom: 2px solid black;">
					<tr>
						<th>Category</th>
						<th style="text-align: center;">Quantity</th>
						<th style="text-align: right;">Total</th>
					</tr>
				</thead>
				<tbody style="margin-top:5px;">
                    <t t-set="sub_total" t-value="0"/>
                    <t t-set="qty_total" t-value="0"/>
					<tr t-foreach="categories" t-as="category">
						<td>
							<t t-esc="category.name"/>
						</td>
						<td style="text-align: center;">
							<t t-esc="category.qty"/>
						</td>
						<td style="text-align: right;">
							<t t-esc="env.pos.format_currency_no_symbol(category.amount)"/>
						</td>
                        <t t-set="sub_total" t-value="sub_total + category.amount"/>
                        <t t-set="qty_total" t-value="qty_total + category.qty"/>
					</tr>
					<br />
					<tr style="border-top: 2px solid black;">
						<td>Total:</td>
						<td style="text-align: center;"><t t-esc="qty_total"/></td>
						<td style="text-align: right;">
							<t t-esc="env.pos.format_currency_no_symbol(sub_total)"/>
						</td>
					</tr>
				</tbody>
			</table>
        </div>

    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\Receipts\LocationSummaryReceipt.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="LocationSummaryReceipt" owl="1">
        <div class="pos-receipt">
            <t t-if="company.logo">
                <img class="pos-receipt-logo" t-att-src="company.logo" alt="Logo"/>
                <br/>
            </t>
            <t t-if="!company.logo">
                <h2 class="pos-receipt-center-align">
                    <t t-esc="company.name" />
                </h2>
                <br/>
            </t>
            <div class="pos-receipt-contact">
                <t t-if="company.contact_address">
                    <div><t t-esc="company.contact_address" /></div>
                </t>
                <t t-if="company.phone">
                    <div>Tel:<t t-esc="company.phone" /></div>
                </t>
                <t t-if="company.vat">
                    <div><t t-esc="company.vat_label"/>:<t t-esc="company.vat" /></div>
                </t>
                <t t-if="company.email">
                    <div><t t-esc="company.email" /></div>
                </t>
                <t t-if="company.website">
                    <div><t t-esc="company.website" /></div>
                </t>

                <t t-if="cashier">
                    <div class="cashier">
                        <div>--------------------------------</div>
                        <div>Served by <t t-esc="cashier.name" /></div>
                    </div>
                </t>
            </div>
            <br />

            <h4 class="pos-receipt-center-align">
                Location Summary
            </h4>

            <table style="width: 100%; margin-top:10px; font-size:14px !important;">
                <thead style="border-bottom: 2px solid black;">
					<tr>
						<th>Product</th>
						<th style="text-align: right;">Quantity</th>
					</tr>
				</thead>
				<tbody style="margin-top:5px;">
                    <t t-set="total" t-value="0"/>
					<tr t-foreach="locations" t-as="loc">
						<td>
							<t t-esc="loc.product"/>
						</td>
                        <td style="text-align:right;">
							<t t-esc="loc.quantity"/>
						</td>
                        <t t-set="total" t-value="total + loc.quantity"/>
					</tr>
					<br />
					<tr style="border-top: 2px solid black;">
						<td>Total:</td>
						<td style="text-align: right;">
							<t t-esc="total"/>
						</td>
					</tr>
				</tbody>
			</table>
        </div>
    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\Receipts\OrderSummaryReceipt.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="OrderSummaryReceipt" owl="1">
        <div class="pos-receipt">
            <t t-if="company.logo">
                <img class="pos-receipt-logo" t-att-src="company.logo" alt="Logo"/>
                <br/>
            </t>
            <t t-if="!company.logo">
                <h2 class="pos-receipt-center-align">
                    <t t-esc="company.name" />
                </h2>
                <br/>
            </t>
            <div class="pos-receipt-contact">
                <t t-if="company.contact_address">
                    <div><t t-esc="company.contact_address" /></div>
                </t>
                <t t-if="company.phone">
                    <div>Tel:<t t-esc="company.phone" /></div>
                </t>
                <t t-if="company.vat">
                    <div><t t-esc="company.vat_label"/>:<t t-esc="company.vat" /></div>
                </t>
                <t t-if="company.email">
                    <div><t t-esc="company.email" /></div>
                </t>
                <t t-if="company.website">
                    <div><t t-esc="company.website" /></div>
                </t>

                <t t-if="cashier">
                    <div class="cashier">
                        <div>--------------------------------</div>
                        <div>Served by <t t-esc="cashier.name" /></div>
                    </div>
                </t>
            </div>
            <br />

            <h4 class="pos-receipt-center-align">
                Order Summary
            </h4>

            <table style="font-size:14px !important;margin-left: auto; margin-right: auto;" t-if="props.start_date and props.end_date">
                <tr>
                    <td><strong>Start Date:</strong></td>
                    <td><t t-esc="props.start_date"/></td>

                </tr>
                <tr>
                    <td><strong>End Date:</strong></td>
                    <td><t t-esc="props.end_date"/></td>
                </tr>
            </table>

            <table style="width: 100%; margin-top:10px; font-size:14px !important;">
                <thead style="border-bottom: 2px solid black;">
					<tr>
						<th>Order Ref</th>
						<th style="text-align: center;">Status</th>
						<th style="text-align: center; width:100px;">Date</th>
						<th style="text-align: right;">Total</th>
					</tr>
				</thead>
				<tbody style="margin-top:5px;">
                    <t t-set="sub_total" t-value="0"/>
					<tr t-foreach="orders" t-as="order">
						<td>
							<t t-esc="order.order_name"/>
						</td>
						<td style="text-align: center;">
							<t t-esc="order.state"/>
						</td>
						<td style="text-align: center;">
                            <div><t t-esc="getDate(order)"/></div>
						</td>
						<td style="text-align: right;">
							<t t-esc="env.pos.format_currency_no_symbol(order.amount_total)"/>
						</td>
                        <t t-set="sub_total" t-value="sub_total + order.amount_total"/>
					</tr>
					<br />
					<tr style="border-top: 2px solid black;">
						<td>Total:</td>
						<td></td>
						<td></td>
						<td style="text-align: right;">
							<t t-esc="env.pos.format_currency_no_symbol(sub_total)"/>
						</td>
					</tr>
				</tbody>
			</table>
        </div>
    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\Receipts\PaymentSummaryReceipt.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="PaymentSummaryReceipt" owl="1">
        <div class="pos-receipt">
            <t t-if="company.logo">
                <img class="pos-receipt-logo" t-att-src="company.logo" alt="Logo"/>
                <br/>
            </t>
            <t t-if="!company.logo">
                <h2 class="pos-receipt-center-align">
                    <t t-esc="company.name" />
                </h2>
                <br/>
            </t>
            <div class="pos-receipt-contact">
                <t t-if="company.contact_address">
                    <div><t t-esc="company.contact_address" /></div>
                </t>
                <t t-if="company.phone">
                    <div>Tel:<t t-esc="company.phone" /></div>
                </t>
                <t t-if="company.vat">
                    <div><t t-esc="company.vat_label"/>:<t t-esc="company.vat" /></div>
                </t>
                <t t-if="company.email">
                    <div><t t-esc="company.email" /></div>
                </t>
                <t t-if="company.website">
                    <div><t t-esc="company.website" /></div>
                </t>

                <t t-if="cashier">
                    <div class="cashier">
                        <div>--------------------------------</div>
                        <div>Served by <t t-esc="cashier.name" /></div>
                    </div>
                </t>
            </div>
            <br />

            <h4 class="pos-receipt-center-align">
                Payment Summary
            </h4>

            <t t-if="props.is_user">
                <h5 class="pos-receipt-center-align" >
                    <div>Salesperson: <t t-esc="env.pos.user.name" /></div>
                </h5>
            </t>

            <table style="font-size:14px !important;margin-left: auto; margin-right: auto;" t-if="props.start_date and props.end_date">
                <tr>
                    <td><strong>Start Date:</strong></td>
                    <td><t t-esc="props.start_date"/></td>

                </tr>
                <tr>
                    <td><strong>End Date:</strong></td>
                    <td><t t-esc="props.end_date"/></td>
                </tr>
            </table>

            <table style="margin-top:10px; font-size:14px !important; margin-left: auto; margin-right: auto;" class="receipt-orderlines">
                <colgroup>
                   <col style="width: 50%;"/>
                   <col style="width: 50%;"/>
                </colgroup>
                <thead style="border-bottom: 1px solid black;">
					<tr>
						<th>Payment Method</th>
						<th style="text-align: right;">Amount</th>
					</tr>
				</thead>
				<tbody>
                    <t t-set="sub_total" t-value="0"/>
					<tr t-foreach="payment_summary" t-as="payment">
						<td>
							<t t-esc="payment.name"/>
						</td>
						<td style="text-align: right;">
							<t t-esc="env.pos.format_currency_no_symbol(payment.total)"/>
						</td>
                        <t t-set="sub_total" t-value="sub_total + payment.total"/>
					</tr>
					<br />
					<tr style="border-top: 2px solid black;">
						<td>Total:</td>
						<td style="text-align: right;">
							<t t-esc="env.pos.format_currency_no_symbol(sub_total)"/>
						</td>
					</tr>
				</tbody>
			</table>
        </div>

    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\Receipts\ProductSummaryReceipt.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="ProductSummaryReceipt" owl="1">
        <div class="pos-receipt">
            <t t-if="company.logo">
                <img class="pos-receipt-logo" t-att-src="company.logo" alt="Logo"/>
                <br/>
            </t>
            <t t-if="!company.logo">
                <h2 class="pos-receipt-center-align">
                    <t t-esc="company.name" />
                </h2>
                <br/>
            </t>
            <div class="pos-receipt-contact">
                <t t-if="company.contact_address">
                    <div><t t-esc="company.contact_address" /></div>
                </t>
                <t t-if="company.phone">
                    <div>Tel:<t t-esc="company.phone" /></div>
                </t>
                <t t-if="company.vat">
                    <div><t t-esc="company.vat_label"/>:<t t-esc="company.vat" /></div>
                </t>
                <t t-if="company.email">
                    <div><t t-esc="company.email" /></div>
                </t>
                <t t-if="company.website">
                    <div><t t-esc="company.website" /></div>
                </t>

                <t t-if="cashier">
                    <div class="cashier">
                        <div>--------------------------------</div>
                        <div>Served by <t t-esc="cashier.name" /></div>
                    </div>
                </t>
            </div>
            <br />

            <h4 class="pos-receipt-center-align">
                Product Summary
            </h4>

            <table style="font-size:14px !important;margin-left: auto; margin-right: auto;" t-if="props.start_date and props.end_date">
                <tr>
                    <td><strong>Start Date:</strong></td>
                    <td><t t-esc="props.start_date"/></td>

                </tr>
                <tr>
                    <td><strong>End Date:</strong></td>
                    <td><t t-esc="props.end_date"/></td>
                </tr>
            </table>

            <table style="margin-top:10px; font-size:14px !important; margin-left: auto; margin-right: auto;" class="receipt-orderlines">
                <colgroup>
                   <col style="width: 75%;"/>
                   <col style="width: 25%;"/>
                </colgroup>
                <thead style="border-bottom: 1px solid black;">
					<tr>
						<th>Product</th>
						<th style="text-align: right;">Quantity</th>
					</tr>
				</thead>
				<tbody>
                    <t t-set="total_qty" t-value="0"/>
					<tr t-foreach="products" t-as="product">
						<td>
                            <t t-if="product.code">[<t t-esc="product.code"/>] </t><t t-esc="product.name"/>
						</td>
						<td style="text-align: right;">
							<t t-esc="product.qty"/>
						</td>
                        <t t-set="total_qty" t-value="total_qty + product.qty"/>
					</tr>
					<br />
					<tr style="border-top: 2px solid black;">
						<td>Total:</td>
						<td style="text-align: right;">
							<t t-esc="total_qty"/>
						</td>
					</tr>
				</tbody>
			</table>

        </div>

    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\Receipts\SessionSummaryReceipt.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="SessionSummaryReceipt" owl="1">
        <div class="pos-receipt">
            <t t-if="company.logo">
                <img class="pos-receipt-logo" t-att-src="company.logo" alt="Logo"/>
                <br/>
            </t>
            <t t-if="!company.logo">
                <h2 class="pos-receipt-center-align">
                    <t t-esc="company.name" />
                </h2>
                <br/>
            </t>
            <div class="pos-receipt-contact">
                <t t-if="company.contact_address">
                    <div><t t-esc="company.contact_address" /></div>
                </t>
                <t t-if="company.phone">
                    <div>Tel:<t t-esc="company.phone" /></div>
                </t>
                <t t-if="company.vat">
                    <div><t t-esc="company.vat_label"/>:<t t-esc="company.vat" /></div>
                </t>
                <t t-if="company.email">
                    <div><t t-esc="company.email" /></div>
                </t>
                <t t-if="company.website">
                    <div><t t-esc="company.website" /></div>
                </t>

                <t t-if="cashier">
                    <div class="cashier">
                        <div>--------------------------------</div>
                        <div>Served by <t t-esc="cashier.name" /></div>
                    </div>
                </t>
            </div>
            <br />

            <h3 class="pos-receipt-center-align">
                Session Summary
            </h3>

            <table style="width: 100%; font-size:14px !important;" t-if="session_summary">
                <tr>
                    <td style="text-align:left;"><strong>Session</strong></td>
                    <td style="text-align:right;"><t t-esc="session_summary.session_name"/></td>

                </tr>
                <tr>
                    <td style="text-align:left;"><strong>Opening Date</strong></td>
                    <td style="text-align:right;"><t t-esc="session_summary.start_date"/></td>
                </tr>
                <tr t-if="session_summary.end_date">
                    <td style="text-align:left;"><strong>Closing Date</strong></td>
                    <td style="text-align:right;"><t t-esc="session_summary.start_date"/></td>
                </tr>
                <tr>
                    <td style="text-align:left;"><strong>Opening Balance</strong></td>
                    <td style="text-align:right;"><t t-esc="env.pos.format_currency_no_symbol(session_summary.opening_balance)"/></td>
                </tr>
                <tr t-if="session_summary.closing_balance">
                    <td style="text-align:left;"><strong>Closing Balance</strong></td>
                    <td style="text-align:right;"><t t-esc="env.pos.format_currency_no_symbol(session_summary.closing_balance)"/></td>
                </tr>
            </table>

            <h4 class="pos-receipt-center-align">
                Products
            </h4>

            <table t-if="session_summary" style="margin-top:10px; font-size:14px !important; margin-left: auto; margin-right: auto;" class="receipt-orderlines">
                <colgroup>
                   <col style="width: 60%;"/>
                   <col style="width: 20%;"/>
                   <col style="width: 20%;"/>
                </colgroup>
                <thead style="border-bottom: 1px solid black;">
					<tr>
						<th>Product</th>
						<th style="text-align: center;">Quantity</th>
						<th style="text-align: right;">Total</th>
					</tr>
				</thead>
				<tbody>
                    <t t-set="total_qty" t-value="0"/>
                    <t t-set="total" t-value="0"/>
					<tr t-foreach="session_summary.product_summary" t-as="product">
						<td>
                            <t t-if="product.code">[<t t-esc="product.code"/>] </t><t t-esc="product.name"/>
						</td>
						<td style="text-align: center;">
							<t t-esc="product.qty"/>
						</td>
                        <td style="text-align: right;">
							<t t-esc="env.pos.format_currency_no_symbol(product.total)"/>
						</td>
                        <t t-set="total_qty" t-value="total_qty + product.qty"/>
                        <t t-set="total" t-value="total + product.total"/>
					</tr>
					<br />
					<tr style="border-top: 2px solid black;">
						<td>Total:</td>
						<td style="text-align: center;">
							<t t-esc="total_qty"/>
						</td>
                        <td style="text-align: right;">
							<t t-esc="env.pos.format_currency_no_symbol(total)"/>
						</td>
					</tr>
				</tbody>
			</table>

            <h4 class="pos-receipt-center-align">
                Payments
            </h4>

            <table t-if="session_summary" style="margin-top:10px; font-size:14px !important; width:100%;" class="receipt-orderlines">
                <colgroup>
                   <col style="width: 50%;"/>
                   <col style="width: 50%;"/>
                </colgroup>
                <thead style="border-bottom: 1px solid black;">
					<tr>
						<th>Payment Method</th>
						<th style="text-align: right;">Amount</th>
					</tr>
				</thead>
				<tbody>
                    <t t-set="sub_total" t-value="0"/>
					<tr t-foreach="session_summary.payments_summary" t-as="payment">
						<td>
							<t t-esc="payment.name"/>
						</td>
						<td style="text-align: right;">
							<t t-esc="env.pos.format_currency_no_symbol(payment.total)"/>
						</td>
                        <t t-set="sub_total" t-value="sub_total + payment.total"/>
					</tr>
					<br />
					<tr style="border-top: 2px solid black;">
						<td>Total:</td>
						<td style="text-align: right;">
							<t t-esc="env.pos.format_currency_no_symbol(sub_total)"/>
						</td>
					</tr>
				</tbody>
			</table>
        </div>
    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\ReceiptScreen\CategorySummaryReceiptScreen.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="CategorySummaryReceiptScreen" owl="1">
        <div class="receipt-screen screen">
            <div class="screen-content">
                <div class="top-content">
                    <span class="button back" t-on-click="confirm">
                        <i class="fa fa-angle-double-left"></i>
                        <span> </span>
                        <span>Back</span>
                    </span>
                </div>
                <div class="centered-content">
                    <div class="button print" t-on-click="printSummary">
                        <i class="fa fa-print"></i> Print Category Summary
                    </div>
                    <div class="pos-receipt-container">
                        <CategorySummaryReceipt categories="props.categories" start_date="props.start_date" end_date="props.end_date" t-ref="catgeory-summary" />
                    </div>
                </div>
            </div>
        </div>
    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\ReceiptScreen\LocationSummaryReceiptScreen.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="LocationSummaryReceiptScreen" owl="1">
        <div class="receipt-screen screen">
            <div class="screen-content">
                <div class="top-content">
                    <span class="button back" t-on-click="confirm">
                        <i class="fa fa-angle-double-left"></i>
                        <span> </span>
                        <span>Back</span>
                    </span>
                </div>
                <div class="centered-content">
                    <div class="button print" t-on-click="printSummary">
                        <i class="fa fa-print"></i> Print Location Summary
                    </div>
                    <div class="pos-receipt-container">
                        <LocationSummaryReceipt locations="props.locations" t-ref="location-summary" />
                    </div>
                </div>
            </div>
        </div>
    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\ReceiptScreen\OrderSummaryReceiptScreen.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="OrderSummaryReceiptScreen" owl="1">
        <div class="receipt-screen screen">
            <div class="screen-content">
                <div class="top-content">
                    <span class="button back" t-on-click="confirm">
                        <i class="fa fa-angle-double-left"></i>
                        <span> </span>
                        <span>Back</span>
                    </span>
                </div>
                <div class="centered-content">
                    <div class="button print" t-on-click="printSummary">
                        <i class="fa fa-print"></i> Print Order Summary
                    </div>
                    <div class="pos-receipt-container">
                        <OrderSummaryReceipt orders="props.orders" start_date="props.start_date" end_date="props.end_date" t-ref="order-summary" />
                    </div>
                </div>
            </div>
        </div>
    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\ReceiptScreen\PaymentSummaryReceiptScreen.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="PaymentSummaryReceiptScreen" owl="1">
        <div class="receipt-screen screen">
            <div class="screen-content">
                <div class="top-content">
                    <span class="button back" t-on-click="confirm">
                        <i class="fa fa-angle-double-left"></i>
                        <span> </span>
                        <span>Back</span>
                    </span>
                </div>
                <div class="centered-content">
                    <div class="button print" t-on-click="printSummary">
                        <i class="fa fa-print"></i> Print Payment Summary
                    </div>
                    <div class="pos-receipt-container">
                        <PaymentSummaryReceipt payment_summary="props.payment_summary" start_date="props.start_date"
                                               end_date="props.end_date" t-ref="payment-summary" is_user="props.is_user"/>
                    </div>
                </div>
            </div>
        </div>
    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\ReceiptScreen\ProductSummaryReceiptSreen.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="ProductSummaryReceiptScreen" owl="1">
        <div class="receipt-screen screen">
            <div class="screen-content">
                <div class="top-content">
                    <span class="button back" t-on-click="confirm">
                        <i class="fa fa-angle-double-left"></i>
                        <span> </span>
                        <span>Back</span>
                    </span>
                </div>
                <div class="centered-content">
                    <div class="button print" t-on-click="printSummary">
                        <i class="fa fa-print"></i> Print Product Summary
                    </div>
                    <div class="pos-receipt-container">
                        <ProductSummaryReceipt products="props.products" start_date="props.start_date" end_date="props.end_date" t-ref="product-summary" />
                    </div>
                </div>
            </div>
        </div>
    </t>

</templates>


===== .\advanced_pos_reports\static\src\xml\ReceiptScreen\SessionSummaryReceiptScreen.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="SessionSummaryReceiptScreen" owl="1">
        <div class="receipt-screen screen">
            <div class="screen-content">
                <div class="top-content">
                    <span class="button back" t-on-click="confirm">
                        <i class="fa fa-angle-double-left"></i>
                        <span> </span>
                        <span>Back</span>
                    </span>
                </div>
                <div class="centered-content">
                    <div class="button print" t-on-click="printSummary">
                        <i class="fa fa-print"></i> Print Session Summary
                    </div>
                    <div class="pos-receipt-container">
                        <SessionSummaryReceipt session_summary="props.session_summary" t-ref="session-summary" />
                    </div>
                </div>
            </div>
        </div>
    </t>

</templates>


===== .\advanced_pos_reports\views\reports.xml =====
<?xml version="1.0" encoding="UTF-8" ?>
<odoo>
    <record id="action_report_pos_sale_details" model="ir.actions.act_window">
        <field name="name">Sales Summary</field>
        <field name="res_model">pos.sale.details.wizard</field>
        <field name="view_mode">form</field>
        <field name="target">new</field>
    </record>

    <record id="action_report_pos_sale_top_selling" model="ir.actions.act_window">
        <field name="name">Top Selling</field>
        <field name="res_model">pos.sale.top.selling</field>
        <field name="view_mode">form</field>
        <field name="target">new</field>
    </record>

    <record id="action_report_pos_sale_ongoing" model="ir.actions.act_window">
        <field name="name">Ongoing Sessions Report</field>
        <field name="res_model">pos.sale.ongoing.wizard</field>
        <field name="view_mode">form</field>
        <field name="target">new</field>
    </record>

    <record id="action_report_pos_sale_posted" model="ir.actions.act_window">
        <field name="name">Posted Sessions Report</field>
        <field name="res_model">pos.sale.posted.wizard</field>
        <field name="view_mode">form</field>
        <field name="target">new</field>
    </record>

    <menuitem id="menu_report_sale_order_details" name="Sales Summary" action="action_report_pos_sale_details" parent="point_of_sale.menu_point_rep" sequence="4"/>
    <menuitem id="menu_report_sale_top_selling_details" name="Top Selling" action="action_report_pos_sale_top_selling" parent="point_of_sale.menu_point_rep" sequence="4"/>
    <menuitem id="menu_report_sale_ongoing_session" name="Ongoing Sessions Report" action="action_report_pos_sale_ongoing" parent="point_of_sale.menu_point_rep" sequence="4"/>
    <menuitem id="menu_report_sale_posted_session" name="Posted Sessions Report" action="action_report_pos_sale_posted" parent="point_of_sale.menu_point_rep" sequence="4"/>

    <record id="pos_sale_details_report" model="ir.actions.report">
        <field name="name">Sales Summary</field>
        <field name="model">report.advanced_pos_reports.report_pos_saledetails</field>
        <field name="report_type">qweb-pdf</field>
        <field name="report_name">advanced_pos_reports.report_pos_saledetails</field>
    </record>

    <record id="pos_posted_sessions_report" model="ir.actions.report">
        <field name="name">Posted Sessions</field>
        <field name="model">report.advanced_pos_reports.report_pos_posted_session</field>
        <field name="report_type">qweb-pdf</field>
        <field name="report_name">advanced_pos_reports.report_pos_posted_session</field>
    </record>

    <record id="pos_ongoing_session_report" model="ir.actions.report">
        <field name="name">Ongoing Sessions</field>
        <field name="model">report.advanced_pos_reports.report_pos_ongoing_session</field>
        <field name="report_type">qweb-pdf</field>
        <field name="report_name">advanced_pos_reports.report_pos_ongoing_session</field>
    </record>

    <record id="pos_top_selling_products_report" model="ir.actions.report">
        <field name="name">Top Selling Products Report</field>
        <field name="model">report.advanced_pos_reports.report_pos_top_selling_products</field>
        <field name="report_type">qweb-pdf</field>
        <field name="report_name">advanced_pos_reports.report_pos_top_selling_products</field>
    </record>

    <record id="pos_top_selling_category_report" model="ir.actions.report">
        <field name="name">Top Selling Categories Report</field>
        <field name="model">report.advanced_pos_reports.report_pos_top_selling_categories</field>
        <field name="report_type">qweb-pdf</field>
        <field name="report_name">advanced_pos_reports.report_pos_top_selling_categories</field>
    </record>

    <record id="pos_top_selling_customer_report" model="ir.actions.report">
        <field name="name">Top Selling Customers Report</field>
        <field name="model">report.advanced_pos_reports.report_pos_top_selling_customers</field>
        <field name="report_type">qweb-pdf</field>
        <field name="report_name">advanced_pos_reports.report_pos_top_selling_customers</field>
    </record>

</odoo>

===== .\advanced_pos_reports\views\report_pos_ongoing_session.xml =====
<?xml version="1.0" encoding="utf-8" ?>
<odoo>
    <template id="report_pos_ongoing_session">
        <t t-call="web.html_container">
            <t t-call="web.external_layout">
                <div class="page">
                    <div class="text-center">
                        <h2>Ongoing Sessions Report</h2>
                    </div>

                    <table  class="table table-lg">
                        <tbody>
                            <tr>
                                <td>Report Date:</td>
                                <td style="text-align: right;">
                                    <t t-esc="today" t-options='{"widget": "date"}'/>
                                </td>
                            </tr>
                            <tr>
                                <td>Report Time:</td>
                                <td style="text-align: right;">
                                    <t t-esc="today" t-options='{"widget": "datetime",  "time_only": True}'/>
                                </td>
                            </tr>
                            <tr>
                                <td>Session(s):</td>
                                <td style="text-align: right;">
                                    <t t-foreach="sessions" t-as="session">
                                        <t t-esc="session.name"/>
                                    </t>
                                </td>
                            </tr>
                            <tr>
                                <td>Status:</td>
                                <td style="text-align: right;">
                                    Opened
                                </td>
                            </tr>
                            <tr>
                                <td>Opening Balance:</td>
                                <td style="text-align: right;">
                                    <t t-esc="sum(sessions.mapped('cash_register_balance_start'))" t-options="{'widget': 'float', 'precision': currency_precision}"/>
                                </td>
                            </tr>
                            <tr>
                                <td>Sales Without Tax:</td>
                                <td style="text-align: right;">
                                    <t t-esc="amount_total_without_tax" t-options="{'widget': 'float', 'precision': currency_precision}"/>
                                </td>
                            </tr>
                            <tr>
                                <td>Tax:</td>
                                <td style="text-align: right;">
                                    <t t-esc="amount_total_tax" t-options="{'widget': 'float', 'precision': currency_precision}"/>
                                </td>
                            </tr>
                            <tr>
                                <td>Returns:</td>
                                <td style="text-align: right;">
                                    <t t-esc="amount_return" t-options="{'widget': 'float', 'precision': currency_precision}"/>
                                </td>
                            </tr>
                            <tr>
                                <td>Total:</td>
                                <td style="text-align: right;">
                                    <t t-esc="amount_total"  t-options="{'widget': 'float', 'precision': currency_precision}"/>
                                </td>
                            </tr>

                        </tbody>
                    </table>

                    <center>
                        <h3>Department Sales</h3>
                    </center>
                    <table  class="table table-lg">
                        <tbody>
                            <t t-set="total" t-value="0"/>
                            <tr t-foreach='categories' t-as='category'>
                                <td><t t-esc="category['name']" /></td>
                                <td style="text-align: right;"><t t-esc="category['amount']"  t-options="{'widget': 'float', 'precision': currency_precision}"/></td>
                                <t t-set="total" t-value="total + category['amount']"/>
                            </tr>
                            <tr>
                                <td>Total</td>
                                <td style="text-align: right;"><t t-esc="total"  t-options="{'widget': 'float', 'precision': currency_precision}"/></td>
                            </tr>
                        </tbody>
                    </table>

                    <center>
                        <h3>Payments</h3>
                    </center>
                    <table  class="table table-sm">
                        <tbody>
                            <t t-set="total" t-value="0"/>
                            <tr t-foreach='payments' t-as='payment'>
                                <td><t t-esc="payment['name']" /></td>
                                <td style="text-align: right;"><t t-esc="payment['total']"  t-options="{'widget': 'float', 'precision': currency_precision}"/></td>
                                <t t-set="total" t-value="total + payment['total']"/>
                            </tr>
                            <tr>
                                <td>Total</td>
                                <td style="text-align: right;"><t t-esc="total"  t-options="{'widget': 'float', 'precision': currency_precision}"/></td>
                            </tr>
                        </tbody>
                    </table>



                </div>
            </t>
        </t>

    </template>
</odoo>

===== .\advanced_pos_reports\views\report_pos_posted_session.xml =====
<?xml version="1.0" encoding="utf-8" ?>
<odoo>
    <template id="report_pos_posted_session">
        <t t-call="web.html_container">
            <t t-call="web.external_layout">
                <div class="page">
                    <div class="text-center">
                        <h2>Posted Sessions Report</h2>
                    </div>

                    <table  class="table table-lg">
                        <tbody>
                            <tr>
                                <td>Report Date:</td>
                                <td style="text-align: right;">
                                    <t t-esc="today" t-options='{"widget": "date"}'/>
                                </td>
                            </tr>
                            <tr>
                                <td>Report Time:</td>
                                <td style="text-align: right;">
                                    <t t-esc="today" t-options='{"widget": "datetime",  "time_only": True}'/>
                                </td>
                            </tr>
                            <tr>
                                <td>Session(s):</td>
                                <td style="text-align: right;">
                                    <t t-foreach="sessions" t-as="session">
                                        <t t-esc="session.name"/>
                                    </t>
                                </td>
                            </tr>
                            <tr>
                                <td>Status:</td>
                                <td style="text-align: right;">
                                    Closed
                                </td>
                            </tr>
                            <tr>
                                <td>Opening Balance:</td>
                                <td style="text-align: right;">
                                    <t t-esc="sum(sessions.mapped('cash_register_balance_start'))" t-options="{'widget': 'float', 'precision': currency_precision}"/>
                                </td>
                            </tr>
                            <tr>
                                <td>Closing Balance:</td>
                                <td style="text-align: right;">
                                    <t t-esc="sum(sessions.mapped('cash_register_balance_end_real'))" t-options="{'widget': 'float', 'precision': currency_precision}"/>
                                </td>
                            </tr>
                            <tr>
                                <td>Difference:</td>
                                <td style="text-align: right;">
                                    <t t-esc="sum(sessions.mapped('cash_real_difference'))" t-options="{'widget': 'float', 'precision': currency_precision}"/>
                                </td>
                            </tr>
                            <tr>
                                <td>Sales Without Tax:</td>
                                <td style="text-align: right;">
                                    <t t-esc="amount_total_without_tax" t-options="{'widget': 'float', 'precision': currency_precision}"/>
                                </td>
                            </tr>
                            <tr>
                                <td>Tax:</td>
                                <td style="text-align: right;">
                                    <t t-esc="amount_total_tax" t-options="{'widget': 'float', 'precision': currency_precision}"/>
                                </td>
                            </tr>
                            <tr>
                                <td>Returns:</td>
                                <td style="text-align: right;">
                                    <t t-esc="amount_return" t-options="{'widget': 'float', 'precision': currency_precision}"/>
                                </td>
                            </tr>
                            <tr>
                                <td>Total:</td>
                                <td style="text-align: right;">
                                    <t t-esc="amount_total"  t-options="{'widget': 'float', 'precision': currency_precision}"/>
                                </td>
                            </tr>

                        </tbody>
                    </table>

                    <br/>

                    <center>
                        <h3>Department Sales</h3>
                    </center>
                    <table  class="table table-lg">
                        <tbody>
                            <t t-set="total" t-value="0"/>
                            <tr t-foreach='categories' t-as='category'>
                                <td><t t-esc="category['name']" /></td>
                                <td style="text-align: right;"><t t-esc="category['amount']"  t-options="{'widget': 'float', 'precision': currency_precision}"/></td>
                                <t t-set="total" t-value="total + category['amount']"/>
                            </tr>
                            <tr>
                                <td>Total</td>
                                <td style="text-align: right;"><t t-esc="total"  t-options="{'widget': 'float', 'precision': currency_precision}"/></td>
                            </tr>
                        </tbody>
                    </table>

                    <br/>

                    <center>
                        <h3>Payments</h3>
                    </center>

                    <table  class="table table-sm">
                        <tbody>
                            <t t-set="total" t-value="0"/>
                            <tr t-foreach='payments' t-as='payment'>
                                <td><t t-esc="payment['name']" /></td>
                                <td style="text-align: right;"><t t-esc="payment['total']"  t-options="{'widget': 'float', 'precision': currency_precision}"/></td>
                                <t t-set="total" t-value="total + payment['total']"/>
                            </tr>
                            <tr>
                                <td>Total</td>
                                <td style="text-align: right;"><t t-esc="total"  t-options="{'widget': 'float', 'precision': currency_precision}"/></td>
                            </tr>
                        </tbody>
                    </table>

<!--                    <p style="page-break-after:always;"/>-->


                </div>

            </t>
        </t>

    </template>
</odoo>

===== .\advanced_pos_reports\views\report_pos_saledetails.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
<data>
    <template id="report_pos_saledetails">
        <t t-set="company" t-value="env.company"/>
        <t t-call="web.html_container">
            <t t-call="web.external_layout">
                <div class="page">
                    <div class="text-center">
                        <h2>Sales Summary</h2>
                        <strong><t t-esc="date_start" t-options="{'widget': 'datetime'}"/> - <t t-esc="date_stop" t-options="{'widget': 'datetime'}"/></strong>
                    </div>
                    <t t-foreach="order_summary" t-as="record">
                        <t t-if="record['total_sales']">
                            <strong><h4>Name : <t t-esc="record['user']"/></h4></strong>
                        <br/>
                        <table  class="table table-lg">
                            <tbody>
                                <tr>
                                    <td>Sales:</td>
                                    <td style="text-align: right;"><t t-esc="record['total_sales']" t-options="{'widget': 'float', 'precision': currency_precision}"/></td>
                                </tr>
                                <tr>
                                    <td>Total:</td>
                                    <td style="text-align: right;"><t t-esc="record['total_sales']" t-options="{'widget': 'float', 'precision': currency_precision}"/></td>
                                </tr>
                                <tr>
                                    <td>Tax:</td>
                                    <td style="text-align: right;"><t t-esc="record['tax']" t-options="{'widget': 'float', 'precision': currency_precision}"/></td>
                                </tr>
                                <tr>
                                    <td>Gross Total:</td>
                                    <td style="text-align: right;"><t t-esc="record['total_sales']" t-options="{'widget': 'float', 'precision': currency_precision}"/></td>
                                </tr>
                            </tbody>
                        </table>

                        <br/>
                        <center><h3>Department Sales</h3></center>
                        <table  class="table table-lg">
                            <thead><tr>
                                <th>Category</th>
                                <th style="text-align: right;">Total</th>
                            </tr></thead>
                            <tbody>
                            <tr t-foreach="record['categories']" t-as='categ'>
                                <td><t t-esc="categ['name']" /></td>
                                <td style="text-align: right;"><t t-esc="categ['amount']" t-options="{'widget': 'float', 'precision': currency_precision}"/></td>
                            </tr>
                            </tbody>
                        </table>

                        <br/>
                        <center><h3>Payments</h3></center>
                        <table  class="table table-lg">
                            <thead><tr>
                                <th>Name</th>
                                <th style="text-align: right;">Total</th>
                            </tr></thead>
                            <tbody>
                            <tr t-foreach="record['payments']" t-as='payment'>
                                <td><t t-esc="payment['name']" /></td>
                                <td style="text-align: right;"><t t-esc="payment['total']" t-options="{'widget': 'float', 'precision': currency_precision}"/></td>
                            </tr>
                            </tbody>
                        </table>

                        <br/>
                        <br/>

                        </t>
                    </t>
                </div>
            </t>
        </t>
    </template>
</data>
</odoo>


===== .\advanced_pos_reports\views\report_pos_top_selling_categories.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>
        <template id="report_pos_top_selling_categories">
            <t t-call="web.html_container">
                <t t-call="web.external_layout">
                    <div class="page">
                        <div class="text-center">
                            <h2>Top Selling Categories</h2>
                        </div>

                        <table  class="table table-lg">
                            <tbody>
                                <tr>
                                    <td>Report Date:</td>
                                    <td style="text-align: right;">
                                        <t t-esc="today" t-options='{"widget": "date"}'/>
                                    </td>
                                </tr>
                                <tr>
                                    <td>Report Time:</td>
                                    <td style="text-align: right;">
                                        <t t-esc="today" t-options='{"widget": "datetime",  "time_only": True}'/>
                                    </td>
                                </tr>
                                <tr>
                                    <td>Start Date:</td>
                                    <td style="text-align: right;">
                                        <t t-esc="start_date"/>
                                    </td>
                                </tr>
                                <tr>
                                    <td>End Date:</td>
                                    <td style="text-align: right;">
                                        <t t-esc="end_date"/>
                                    </td>
                                </tr>
                            </tbody>
                        </table>

                        <br/>

                        <table  class="table table-lg">
                            <thead>
                                <th>Category</th>
                                <th style="text-align: right;">Total</th>
                            </thead>
                                <tbody>
                                    <tr t-foreach="categories" t-as="category">
                                        <td>
                                            <t t-esc="category['name']"/>
                                        </td>

                                        <td style="text-align: right;">
                                            <t t-esc="category['amount']"/>
                                        </td>
                                    </tr>
                                    <br />
                                </tbody>
                        </table>
                        <br/>
                    </div>

                </t>
            </t>

        </template>
    </data>
</odoo>


===== .\advanced_pos_reports\views\report_pos_top_selling_customers.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>
        <template id="report_pos_top_selling_customers">
            <t t-call="web.html_container">
                <t t-call="web.external_layout">
                    <div class="page">
                        <div class="text-center">
                            <h2>Top Customers</h2>
                        </div>

                        <table  class="table table-lg">
                            <tbody>
                                <tr>
                                    <td>Report Date:</td>
                                    <td style="text-align: right;">
                                        <t t-esc="today" t-options='{"widget": "date"}'/>
                                    </td>
                                </tr>
                                <tr>
                                    <td>Report Time:</td>
                                    <td style="text-align: right;">
                                        <t t-esc="today" t-options='{"widget": "datetime",  "time_only": True}'/>
                                    </td>
                                </tr>
                                <tr>
                                    <td>Start Date:</td>
                                    <td style="text-align: right;">
                                        <t t-esc="start_date"/>
                                    </td>
                                </tr>
                                <tr>
                                    <td>End Date:</td>
                                    <td style="text-align: right;">
                                        <t t-esc="end_date"/>
                                    </td>
                                </tr>
                            </tbody>
                        </table>

                        <br/>

                        <table  class="table table-lg">
                            <thead>
                                <th>Customer</th>
                                <th style="text-align: right;">Amount</th>
                            </thead>
                                <tbody>
                                    <tr t-foreach="customers" t-as="customer">
                                        <td>
                                            <t t-esc="customer['name']"/>
                                        </td>
                                        <td style="text-align: right;">
                                            <t t-esc="customer['amount']"/>
                                        </td>
                                    </tr>
                                    <br />
                                </tbody>
                        </table>
                        <br/>
                    </div>

                </t>
            </t>

        </template>
    </data>
</odoo>


===== .\advanced_pos_reports\views\report_pos_top_selling_products.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>
        <template id="report_pos_top_selling_products">
            <t t-call="web.html_container">
                <t t-call="web.external_layout">
                    <div class="page">
                        <div class="text-center">
                            <h2>Top Selling Products</h2>
                        </div>

                        <table  class="table table-lg">
                            <tbody>
                                <tr>
                                    <td>Report Date:</td>
                                    <td style="text-align: right;">
                                        <t t-esc="today" t-options='{"widget": "date"}'/>
                                    </td>
                                </tr>
                                <tr>
                                    <td>Report Time:</td>
                                    <td style="text-align: right;">
                                        <t t-esc="today" t-options='{"widget": "datetime",  "time_only": True}'/>
                                    </td>
                                </tr>
                                <tr>
                                    <td>Start Date:</td>
                                    <td style="text-align: right;">
                                        <t t-esc="start_date"/>
                                    </td>
                                </tr>
                                <tr>
                                    <td>End Date:</td>
                                    <td style="text-align: right;">
                                        <t t-esc="end_date"/>
                                    </td>
                                </tr>
                            </tbody>
                        </table>

                        <br/>

                        <table  class="table table-lg">
                            <thead>
                                <th>Product</th>
                                <th style="text-align: center;">Quantity</th>
                                <th style="text-align: right;">Unit</th>
                            </thead>
                                <tbody>
                                    <tr t-foreach="products" t-as="product">
                                        <td>
                                            <t t-if="product['code']">[<t t-esc="product['code']"/>] </t><t t-esc="product['name']"/>
                                        </td>
                                        <td style="text-align: center;">
                                            <t t-esc="product['qty']"/>
                                        </td>
                                        <td style="text-align: right;">
                                            <t t-esc="product['uom']"/>
                                        </td>
                                    </tr>
                                    <br />
                                </tbody>
                        </table>
                        <br/>
                    </div>

                </t>
            </t>

        </template>
    </data>
</odoo>


===== .\advanced_pos_reports\wizard\ongoing_session.py =====

from odoo import api, fields, models, _


class OngoingSession(models.TransientModel):
    _name = 'pos.sale.ongoing.wizard'
    _description = 'Point of Sale Ongoing Session Report'

    session_ids = fields.Many2many('pos.session', string='POS Sessions', domain=[('state', '=', 'opened')])

    def generate_report(self):
        data = {'session_ids': self.session_ids.ids}
        return self.env.ref('advanced_pos_reports.pos_ongoing_session_report').report_action([], data=data)



===== .\advanced_pos_reports\wizard\ongoing_session.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <record id="view_pos_sale_ongoing_session_wizard" model="ir.ui.view">
        <field name="name">pos.sale.ongoing.session.wizard.form</field>
        <field name="model">pos.sale.ongoing.wizard</field>
        <field name="arch" type="xml">
            <form string="Ongoing Session Report">
                <group>
                    <field name="session_ids" widget="many2many_tags"/>
                </group>
                <footer>
                    <button name="generate_report" string="Print" type="object" class="btn-primary" data-hotkey="q"/>
                    <button string="Cancel" class="btn-secondary" special="cancel" data-hotkey="z" />
                </footer>
            </form>
        </field>
    </record>

</odoo>


===== .\advanced_pos_reports\wizard\posted_session.py =====

from odoo import api, fields, models, _


class OngoingSession(models.TransientModel):
    _name = 'pos.sale.posted.wizard'
    _description = 'Point of Sale Posted Session Report'

    session_ids = fields.Many2many('pos.session', string='POS Sessions', domain=[('state', '=', 'closed')])

    def generate_report(self):
        data = {'session_ids': self.session_ids.ids}
        return self.env.ref('advanced_pos_reports.pos_posted_sessions_report').report_action([], data=data)

===== .\advanced_pos_reports\wizard\posted_session.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <record id="view_pos_sale_posted_session_wizard" model="ir.ui.view">
        <field name="name">pos.sale.posted.session.wizard.form</field>
        <field name="model">pos.sale.posted.wizard</field>
        <field name="arch" type="xml">
            <form string="Ongoing Session Report">
                <group>
                    <field name="session_ids" widget="many2many_tags"/>
                </group>
                <footer>
                    <button name="generate_report" string="Print" type="object" class="btn-primary" data-hotkey="q"/>
                    <button string="Cancel" class="btn-secondary" special="cancel" data-hotkey="z" />
                </footer>
            </form>
        </field>
    </record>

</odoo>


===== .\advanced_pos_reports\wizard\pos_sale_details.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from odoo import api, fields, models, _


class PosDetails(models.TransientModel):
    _name = 'pos.sale.details.wizard'
    _description = 'Point of Sale Details User Report'

    def _default_start_date(self):
        """ Find the earliest start_date of the latests sessions """
        # restrict to configs available to the user
        config_ids = self.env['pos.config'].search([]).ids
        # exclude configs has not been opened for 2 days
        self.env.cr.execute("""
            SELECT
            max(start_at) as start,
            config_id
            FROM pos_session
            WHERE config_id = ANY(%s)
            AND start_at > (NOW() - INTERVAL '2 DAYS')
            GROUP BY config_id
        """, (config_ids,))
        latest_start_dates = [res['start'] for res in self.env.cr.dictfetchall()]
        # earliest of the latest sessions
        return latest_start_dates and min(latest_start_dates) or fields.Datetime.now()

    def generate_report(self):
        data = {'date_start': self.start_date, 'date_stop': self.end_date, 'user_ids': self.user_ids.ids}
        return self.env.ref('advanced_pos_reports.pos_sale_details_report').report_action([], data=data)

    start_date = fields.Datetime(required=True, default=_default_start_date)
    end_date = fields.Datetime(required=True, default=fields.Datetime.now)
    user_ids = fields.Many2many('res.users', default=lambda s: s.env['pos.session'].search([]).mapped('user_id'))

    @api.onchange('start_date')
    def _onchange_start_date(self):
        if self.start_date and self.end_date and self.end_date < self.start_date:
            self.end_date = self.start_date

    @api.onchange('end_date')
    def _onchange_end_date(self):
        if self.end_date and self.end_date < self.start_date:
            self.start_date = self.end_date


===== .\advanced_pos_reports\wizard\pos_sale_details.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <record id="view_pos_sale_details_wizard" model="ir.ui.view">
        <field name="name">pos.sale.details.wizard.form</field>
        <field name="model">pos.sale.details.wizard</field>
        <field name="arch" type="xml">
            <form string="Sales Summary">
                <group>
                    <field name="start_date"/>
                    <field name="end_date"/>
                </group>
                <group>
                    <field name="user_ids" mode="tree" colspan="4" nolabel="1" />
                </group>
                <footer>
                    <button name="generate_report" string="Print" type="object" class="btn-primary" data-hotkey="q"/>
                    <button string="Cancel" class="btn-secondary" special="cancel" data-hotkey="z" />
                </footer>
            </form>
        </field>
    </record>

</odoo>


===== .\advanced_pos_reports\wizard\top_selling.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from odoo import api, fields, models, _


class PosTopSelling(models.TransientModel):
    _name = 'pos.sale.top.selling'
    _description = 'Point of Sale Top Selling Product/Category/Customer Report'

    start_date = fields.Datetime()
    end_date = fields.Datetime()
    top_selling = fields.Selection([('products', 'Products'), ('category', 'Categories'), ('customers', 'Customers')],
                                   string='Top Selling', default='products')
    no_of_products = fields.Integer()
    no_of_categories = fields.Integer()
    no_of_customers = fields.Integer()

    def generate_report(self):
        data = {'start_date': self.start_date, 'end_date': self.end_date, 'top_selling': self.top_selling}
        if self.top_selling == 'products':
            data['no_of_products'] = self.no_of_products
            return self.env.ref('advanced_pos_reports.pos_top_selling_products_report').report_action([], data=data)
        elif self.top_selling == 'category':
            data['no_of_categories'] = self.no_of_categories
            return self.env.ref('advanced_pos_reports.pos_top_selling_category_report').report_action([], data=data)
        elif self.top_selling == 'customers':
            data['no_of_customers'] = self.no_of_customers
            return self.env.ref('advanced_pos_reports.pos_top_selling_customer_report').report_action([], data=data)

===== .\advanced_pos_reports\wizard\top_selling.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <record id="view_pos_sale_top_selling_wizard" model="ir.ui.view">
        <field name="name">pos.sale.top.selling.wizard.form</field>
        <field name="model">pos.sale.top.selling</field>
        <field name="arch" type="xml">
            <form string="Top Selling Products/Categories/Customers">
                <group>
                    <group>
                        <field name="start_date" required="1"/>
                        <field name="end_date" required="1"/>
                    </group>
                    <group>
                        <field name="top_selling" widget="radio"/>
                        <field name="no_of_products" attrs="{'invisible': [('top_selling','!=','products')]}"/>
                        <field name="no_of_categories" attrs="{'invisible': [('top_selling','!=','category')]}"/>
                        <field name="no_of_customers" attrs="{'invisible': [('top_selling','!=','customers')]}"/>
                    </group>
                </group>
                <footer>
                    <button name="generate_report" string="Print" type="object" class="btn-primary" data-hotkey="q"/>
                    <button string="Cancel" class="btn-secondary" special="cancel" data-hotkey="z" />
                </footer>
            </form>
        </field>
    </record>

</odoo>


===== .\advanced_pos_reports\wizard\__init__.py =====
from . import pos_sale_details
from . import top_selling
from . import ongoing_session
from . import posted_session

===== .\azbah_fleet\__init__.py =====
from . import models


===== .\azbah_fleet\__manifest__.py =====
{
    "name": "Azbah - Fleet",
    "version": "15.0",
    "license": "LGPL-3",
    "category": "fleet",
    "depends": ["base", "fleet"],
    "data": [
        "views/fleet_vehicle.xml",
    ],
}


===== .\azbah_fleet\models\fleet_vehicle.py =====
from odoo import fields, models, api
from odoo.addons.azbah_trivial._packages.hijri_converter import Hijri, Gregorian
import re


class FleetVehicle(models.Model):
    _inherit = 'fleet.vehicle'
    vehicle_image = fields.Binary()
    license_number = fields.Char()
    insurance_status = fields.Selection([('valid', 'ساري'),
                                         ('expired', 'منتهي')])
    registration_type = fields.Selection([('private', 'خاص'),
                                         ('trans', 'نقل خاص')])
    license_start_date = fields.Date()
    license_end_date = fields.Date()
    inspection_date = fields.Date()
    ownership_date = fields.Date()
    license_start_date_hijri = fields.Char()
    license_end_date_hijri = fields.Char()
    inspection_date_hijri = fields.Char()
    ownership_date_hijri = fields.Char()

    def reverse_date(self, _date):
        _date = str(_date).replace('/', '-')
        _date_split = _date.split('-')
        return f"{_date_split[2]}-{_date_split[1]}-{_date_split[0]}"

    def validate(self, field_val):
        if isinstance(field_val, str):
            pattern = r"^(0?[1-9]|[12]\d|30)[/-](0?[1-9]|1[0-2])[/-]\d{4}$"
            if not re.match(pattern, field_val):
                return False
            else:
                return fields.Date.to_date(self.reverse_date(field_val))
        else:
            return field_val

    def convert(self, field_name, field_val):
        field_val = self.validate(field_val)
        if field_val:
            if 'hijri' in field_name:
                self[field_name.replace('_hijri', '')] = str(
                    Hijri(field_val.year, field_val.month, field_val.day).to_gregorian())
                self[field_name] = self[field_name].replace('-', '/')
                self._origin[field_name.replace('_hijri', '')] = self[field_name.replace('_hijri', '')]
            else:
                self[field_name + '_hijri'] = self.reverse_date(
                    Gregorian(field_val.year, field_val.month, field_val.day).to_hijri()).replace('-','/')
                self._origin[field_name + '_hijri'] = self[field_name + '_hijri']
            return True
        else:
            return False

    def handle_empty(self,field_name):
        if 'hijri' in field_name:
            self[field_name.replace('_hijri', '')] = ''
            self[field_name] = ''
            self._origin[field_name] = ''
            self._origin[field_name.replace('_hijri', '')] = ''
        else:
            self[field_name] = ''
            self._origin[field_name] = ''
            self[field_name + '_hijri'] = ''
            self._origin[field_name + '_hijri'] = ''

    @api.onchange('license_start_date', 'license_end_date', 'inspection_date', 'ownership_date',
                  'license_start_date_hijri', 'license_end_date_hijri', 'inspection_date_hijri', 'ownership_date_hijri')
    def onchange_license_start_date(self):
        for _field in (
                'license_start_date', 'license_end_date', 'inspection_date', 'ownership_date',
                'license_start_date_hijri',
                'license_end_date_hijri', 'inspection_date_hijri', 'ownership_date_hijri'):
            if self[_field] != self._origin[_field]:
                field_name = _field
                field_val = self[_field]
                if not field_val:
                    self.handle_empty(field_name)
                    return

                if self.convert(field_name, field_val):
                    self._origin[_field] = self[_field]
                    break
                else:
                    self[_field] = self._origin[_field]
                    message = f"{field_val} خطأ بالتاريخ "
                    return {'warning': {'title': "Warning", 'message': message, 'type': 'dialog'}}





===== .\azbah_fleet\models\__init__.py =====
from . import fleet_vehicle


===== .\azbah_fleet\views\fleet_vehicle.xml =====
===== .\azbah_hr\__init__.py =====
from . import models


===== .\azbah_hr\__manifest__.py =====
{
    "name": "HR changes for Azba",
    "version": "15.1.1",
    "license": "LGPL-3",
    "category": "HR Changes",
    "depends": ["base", "account", "product", "contacts", "hr", "point_of_sale"],
    "data": [
        "views/hr_employee.xml",
    ],
}


===== .\azbah_hr\models\hr_employee.py =====
from odoo import fields, models


class HREmployee(models.AbstractModel):
    _inherit = 'hr.employee.base'
    visa_issue_date = fields.Date()
    work_start_date = fields.Date()
    medical_certificate_number = fields.Char()
    medical_certificate_number_issue_date = fields.Date()
    medical_certificate_number_expiration_date = fields.Date()


===== .\azbah_hr\models\__init__.py =====
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl).

from . import hr_employee


===== .\azbah_hr\views\hr_employee.xml =====
<odoo>
    <data>

        <!--  Form View  -->
        <record id="azbah_view_employee_form2" model="ir.ui.view">
            <field name="name">azbah.view_employee_form2</field>
            <field name="model">hr.employee</field>
            <field name="inherit_id" ref="hr.view_employee_form"/>
            <field name="arch" type="xml">
                 <xpath expr="//field[@name='visa_expire']" position="replace">
                 </xpath>


                <xpath expr="//field[@name='permit_no']" position="replace">
                    <field name="visa_issue_date" string="تاريخ إصدار التأشيرة"/>
                    <field name="visa_expire"/>
                    <field name="permit_no"/>
                    <field name="work_start_date" string="تاريخ إصدار تصريح العمل"/>

                    <field name="medical_certificate_number" string="رقم الشهادة الصحية"/>
                    <field name="medical_certificate_number_issue_date" string="تاريخ إصدار الشهادة الصحية"/>
                    <field name="medical_certificate_number_expiration_date" string="تاريخ انتهاء الشهادة الصحية"/>



                </xpath>
            </field>
        </record>

    </data>
</odoo>

===== .\azbah_monitor\__init__.py =====
from . import models


===== .\azbah_monitor\__manifest__.py =====
{
    "name": "Monitor the server - Azba",
    "version": "15.1.1",
    "license": "LGPL-3",
    "category": "Exporrt log info for use in Prometheus and Grafana",
    "depends": ["base", ],
    "data":["security/tools_monitor_security.xml"]
}


===== .\azbah_monitor\models\monitor.py =====
from odoo import fields, models, api



import time

from odoo.http import Response
import os

from odoo.service.server import PreforkServer, memory_info
from odoo.http import JsonRequest
from odoo import http
from odoo import tools

import socket
import os
import signal
import sys

import odoo
from odoo.tools import config
import logging

_logger = logging.getLogger(__name__)


class Monitor(models.Model):
    _name = "tools.monitor"
    def log_data(self):
        r=Response
        _logger.info(f"::::tools.monitor:::: Ehab -> User{self.env.user.login}")





===== .\azbah_monitor\models\__init__.py =====
# License AGPL-3.0 or later

from . import monitor


===== .\azbah_monitor\security\tools_monitor_security.xml =====
<odoo>
    <data>
        <record id="tools_monitor_access_rule" model="ir.model.access">
            <field name="name">tools.monitor</field>
            <field name="model_id" ref="model_tools_monitor"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_unlink" eval="True"/>
        </record>
    </data>
</odoo>

===== .\azbah_partner_name_translation\models\bind_partner_to_pos.py =====

import xmlrpc.client
import csv
import time

url = "http://azbah.online:8015"
db = "azbah2"
username = "admin"
password = "z"

common = xmlrpc.client.ServerProxy('{}/xmlrpc/2/common'.format(url))
uid = common.authenticate(db, username, password, {})
models = xmlrpc.client.ServerProxy('{}/xmlrpc/2/object'.format(url))
start_time = time.perf_counter()


names = models.execute_kw(db, uid, password, 'res.partner',
                             'search_read', [[['english_name', '=', False]]],{'fields': ['name']})
for name in names:
    english_name=translator.translate(name['name']).text

    models.execute_kw(db, uid, password, 'res.partner', 'write', [name['id'], {'english_name': english_name}])
    print (name['id'],name['name'],english_name )

# translated = translator.translate('مركز عمار  للتسويق')
#
# print(translated.text)
'''

import xmlrpc.client
import csv
import time

url = "https://najran.demo.ejadtech.sa"
db = "test"
username = "admin"
password = "admin"

common = xmlrpc.client.ServerProxy('{}/xmlrpc/2/common'.format(url))
uid = common.authenticate(db, username, password, {})
models = xmlrpc.client.ServerProxy('{}/xmlrpc/2/object'.format(url))
start_time = time.perf_counter()

forum_id = models.execute_kw(db, uid, password, 'forum.forum',
                             'search_read', [[['type', '=', 'projects'],
                                              ['id', '=', 10]]],{'fields': ['name']})
for i in forum_id:
    print (i)


# 'domain': [[['type', '=', 'projects'], ['id', '=', 10]]]
# 'fields': ['name']
#
# 	'model': 'forum.forum'
#       'method': 'search_read',
#       'args': [],
#       'kwargs': {        'context': {'bin_size': true},
#         'domain': []
#         'fields': ['id', 'name', 'mode', 'description']
#         'limit': 300,
'''

===== .\azbah_partner_name_translation\models\opening_balance.py =====


import xmlrpc.client
import csv
import time

url = "http://localhost"
db = "azbah"
username = "admin"
password = "z"

common = xmlrpc.client.ServerProxy('{}/xmlrpc/2/common'.format(url))
uid = common.authenticate(db, username, password, {})
models = xmlrpc.client.ServerProxy('{}/xmlrpc/2/object'.format(url))
start_time = time.perf_counter()

codes=('100001','100005','100006','100007','100008','100009','100011','100013','100020','100025','100044','100046','100052','100055','100059','100069','100082','100098','100110','100118','100128','100133','100146','100152','100172','100178','100180','100186','100188','100198','100202','100209','100210','100211','100212','100213','100225','100230','100245','100250','100255','100257','100261','100267','100274','100278','100282','100285','100286','100288','100294','100296','100309','100313','100316','100317','100324','100326','100328','100348','100361','100363','100367','100374','100406','100411','100415','100417','100421','100424','100426','100428','100459','100469','100482','100484','100486','100488','100490','100492','100495','100499','100502','100510','100516','100523','100525','100529','100554','100556','100586','100610','100614','100616','100623','100641','100672','100708','100728','100731','100736','100765','100775','100781','100788','100797','100835','100839','100892','100904','100936','100938','100950','100974','101019','101047','101058','101059','101064','101086','101089','101100','101118','101140','101161','101187','101196','101269','101272','101298','101313','101363','101404','101427','101438','101440','101458','101511','101513','101521','101523','101539','101588','101595','101605','101690','101691','101707','101712','101720','101726','101758','101774','101793','101795','101802','101815','101819','101832','101838','101850','101851','101866','101874','101881','101900','101901','101912','101913','101914','101915','101921','101940','101969','102006','102011','102073','102097','102147','102158','102171','102196','102208','102255','102258','102260','102263','102272','102279','102287','102288','102290','102291','102297','102312','102319','102326','102329','102379','102383','102387','102400','102403','102406','102409','102410','102413','102415','102435','102449','102454','102458','102459','102460','102467','102470','102492','102493','102502','102507','102508','102511','102533','102568','102577','102593','102602','102605','102615','102635','102648','102654','102659','102668','102691','102703','102705','102722','102753','102754','102756','102777','102786','102802','102819','102820','102854','102869','102891','102892','102915','102919','102951','102984','103006','103025','103034','103076','103111','103127','103129','103167','103196','103205','103207','103208','103212','103213','103222','103289','103303','103304','103315','103318','103324','103327','103377','103416','103426','103428','103478','103480','103487','103489','103493','103497','103498','103501','103550','103562','103585','103593','103596','103606','103619','103637','103640','103646','103653','103665','103683','103720','103735','103736','103744','103755','103770','103778','103784','103803','103814','103821','103832','103854','103865','103889','103895','103899','103901','103907','103923','103925','103926','103939','103943','103947','103956','103959','103962','103963','103981','104000','104010','104016','104019','104043','104044','104055','104056','104058','104065','104067','104071','104084','104086','104094','104111','104130','104135','104138','104139','104145','104164','104182','104190','104191','104193','104209','104251','104261','104262','104295','104299','104301','104314','104326','104331','104352','104353','104368','104369','104371','104390','104396','104400','104401','104402','104404','104414','104418','104419','104426','104427','104442','104454','104458','104480','104484','104490','104502','104565','104578','104583','104585','104586','104603','104614','104633','104637','104645','104646','104647','104649','104738','104766','104775','104782','104799','104804','104865','104876','104878','104882','104928','104935','104952','104956','104965','104975','104987','104989','105003','105009','105010','105025','105041','105045','105060','105066','105068','105092','105099','105102','105107','105114','105129','105130','105147','105149','105151','105156','105157','105183','105187','105216','105218','105219','105220','105225','105226','105228','105230','105234','105235','105253','105258','105264','105265','105266','105272','105280','105284','105289','105291','105312','105318','105319','105320','105325','105331','105333','105340','105358','105359','105372','105375','105379','105391','105392','105397','105409','105411','105420','105421','105422','105428','105432','105438','105450','105468','105471','105483','105485','105486','105495','105497','105503','105512','105513','105516','105518','105530','105538','105543','105544','105545','105550','105555','105556','105558','105561','105567','105569','105573','105575','105576','105581','105587','105596','105597','105600','105608','105611','105615','105618','105621','105624','105636','105647','105648','105649','105652','105653','105655','105662','105665','105667','105674','105675','105681','105686','105691','105697','105698','105700','105709','105712','105714','105716','105723','105724','105726','105727','105730','105731','105735','105738','105740','105742','105746','105749','105750','105753','105755','105760','105761','105764','105765','105768','105772','105774','105779','105780','105782','105785','105789','105791','105793','105794','105797','105798','105799','105801','105802','105803','105804','105808','105809','105815','105816','105818','105820','105823','105824','105826','105827','105828','105830','105831','105834','105837','105843','105849','105851','105852','105855','105858','105862','105865','105867','105872','105873','105874','105879','105881','105900','105901','105902','105903','105905','105907','105911','105912','105913','105914','105915','105917','105919','105922','105924','105925','105926','105929','105932','105938','105940','105944','105945','105950','105955','105956','105963','105972','105973','105974','105975','105976','105979','105981','105982','105985','105986','105988','105992','105993','105995','105996','105998','106001','106002','106005','106007','106009','106011','106012','106014','106015','106018','106019','106020','106022','106023','106024','106025','106027','106031','106035','106037','106038','106042','106043','106045','106047','106048','106049','106050','106051','200012','200013','200027','200033','200043','200045','200050','200059','200061','200065','200070','200071','200075','200086','200093','200094','200106','200107','200127','200133','200134','200136','200140','200141','200144','200157','200167','200178','200187','200190','200191','200193','200194','200197','200198','200200','200202','200204','200221','200222','200228','200238','200240','200246','200256','200264','200269','200272','200318','200321','200322','200329','200331','200332','200337','200338','200340','200350','200353','200354','200355','200356','200357','200359','200365','200370','200372','200378','200380','200383','200412','200416','200425','200426','200429','200435','200436','200440','200441','200443','200450','200458','200459','200464','200466','200471','200472','200473','200475','200476','200477','200480','200481','200484','200486','200488','200493','200506','200513','200523','200530','200533','200539','200545','200548','200558','200560','200565','200597','200600','200617','200663','200701','200729','200736','200750','200755','200757','200766','200781','200785','200786','200792','200796','200803','200825','200826','200839','200844','200850','200858','200864','200868','200881','200894','200899','200903','200914','200925','200928','200929','200939','200943','200944','200946','200949','200950','200956','200966','200971','201001','201010','201019','201023','201041','201048','201051','201066','201072','201075','201077','201086','201115','201119','201136','201155','201173','201182','201193','201194','201195','201197','201212','201226','201231','201237','201274','201275','201286','201296','201303','201306','201319','201338','201344','201351','201371','201381','201393','201397','201405','201406','201407','201413','201432','201435','201453','201456','201477','201491','201509','201520','201530','201533','201538','201554','201555','201574','201575','201580','201583','201618','201622','201637','201651','201656','201663','201666','201667','201672','201679','201685','201686','201688','201701','201714','201720','201721','201732','201744','201750','201752','201759','201760','201764','201766','201773','201787','201792','201793','201794','201796','201806','201813','201823','201824','201828','201832','201859','201862','201865','201870','201875','201879','201887','201894','201899','201904','201905','201907','201909','201913','201915','201921','201925','201927','201931','201939','201940','201949','201955','201956','201961','201970','201971','201973','201979','201990','201994','201996','201997','202000','202006','202008','202009','202011','202012','202019','202022','202024','202027','202028','202030','202034','202037','202039','202041','202053','202054','202056','202057','202060','202069','202070','202074','202077','202078','202080','202082','202086','202089','202090','202098','202100','202102','202103','202110','202119','202121','202124','202126','202129','202133','202141','202148','202152','202153','202156','202157','202164','202174','202176','202180','202182','202187','202188','202193','202198','202199','202200','202204','202205','202207','202218','202224','202230','202231','202232','202233','202236','202240','202241','202247','202248','202250','202254','202258','202264','202266','202267','202269','202273','202274','202277','202281','202284','202291','202294','202295','202301','202303','202310','202312','202318','202325','202329','202332','202333','202334','202337','202339','202343','202346','202348','202350','202352','202355','202356','202358','202365','202366','202368','202369','202373','202374','202378','202383','202393','202394','202398','202399','202400','202403','202404','202405','202408','202409','202419','202420','202425','202427','202428','202429','202434','202435','202438','202439','202440','202442','202443','202445','202446','202447','202452','202454','202455','202458','202461','202462','202467','202468','202469','202471','202475','202478','202481','202483','202484','202487','202491','202498','202505','202508','202518','202519','202524','202528','202529','202531','202532','202535','202536','202539','202542','202548','202558','202566','202567','202570','202581','202582','202583','202586','202587','202588','202589','202594','202596','202597','202602','202611','202612','202613','202614','202616','202619','202621','202622','202627','202630','202636','202637','202642','202643','202646','202651','202653','202655','202656','202660','202663','202664','202668','202669','202675','202676','202677','202683','202685','202686','202687','202690','202691','202697','202698','202704','202708','202711','202712','202713','202721','202727','202731','202734','202740','202746','202750','202757','202760','202762','202770','202771','202773','202775','202779','202786','202792','202794','202801','202809','202817','202822','202823','202824','202825','202828','202830','202834','202836','202843','202847','202848','202866','202869','202876','202879','202887','202888','202889','202892','202894','202898','202909','202910','202914','202915','202922','202929','202940','202941','202942','202948','202950','202954','202967','202968','202971','202980','202984','202985','202990','202992','202998','203001','203003','203006','203012','203014','203015','203018','203019','203021','203022','203023','203024','203027','203029','203030','203032','203034','203037','203038','203046','203047','203049','203052','203058','203061','203062','203064','203069','203071','203072','203075','203080','203084','203085','203086','203092','203098','203099','203100','203101','203102','203105','203107','203108','203114','203120','203129','203142','203143','203148','203151','203153','203158','203160','203165','203168','203170','203175','203176','203178','203183','203189','203192','203193','203204','203207','203214','203215','203216','203217','203226','203230','203234','203238','203241','203242','203243','203245','203257','203258','203260','203271','203289','203300','203339','203370','203382','203391','203395','203396','203399','300015','300043','300045','300054','300070','300078','300080','300085','400000','400001','400004','400006','400012','400013','400015','400018','400020','400038','400041','400042','400052','400058','400063','400064','400065','400070','400073','400077','400079','400089','400093','400095','400106','400111','400119','400124','400126','400135','400140','400142','400146','400149','400151','400153','400154','400158','400180','400185','400190','400198','400212','400216','400228','400240','400244','400246','400247','400253','400267','400273','400280','400287','400288','400290','400303','400304','400309','400314','400322','400327','400329','400360','400362','400366','400369','400384','400385','400401','400406','400445','400448','400450','400473','400488','400491','400501','400502','400503','400504','400505','400507','400508','400517','400519','400520','400542','400549','400558','400562','400563','400571','400576','400579','400580','400585','400589','400590','400591','400596','400601','400606','400619','400637','400640','400646','400666','400671','400673','400677','400678','400680','400696','400698','400723','400731','400738','400742','400752','400755','400794','400798','400814','400815','400823','400826','400828','400836','400837','400845','400858','400861','400870','400871','400877','400879','400880','400887','400890','400894','400908','400918','400919','400921','400935','400937','400943','400954','400978','400980','400997','401004','401005','401013','401022','401025','401027','401028','401038','401060','401063','401080','401083','401088','401093','401101','401142','401152','401159','401164','401167','401177','401203','401213','401216','401236','401237','401257','401267','401273','401325','401338','401339','401345','401347','401353','401401','401409','401418','401427','401428','401457','401458','401460','401487','401548','401570','401593','401603','401623','401625','401631','401648','401649','401651','401655','401661','401667','401671','401673','401680','401681','401692','401693','401710','401713','401719','401730','401734','401746','401750','401751','401759','401765','401772','401774','401775','401780','401782','401785','401786','401787','401788','401801','401804','401826','401839','401840','401855','401856','401867','401874','401886','401891','401897','401899','401904','401909','401925','401962','401968','401969','401972','401985','402008','402026','402030','402032','402045','402112','402122','402152','402154','402165','402175','402183','402218','402219','402242','402251','402263','402265','402267','402279','402302','402312','402313','402325','402359','402361','402379','402381','402399','402417','402420','402434','402441','402447','402448','402449','402451','402488','402499','402506','402509','402525','402527','402531','402534','402552','402555','402557','402578','402588','402591','402595','402597','402605','402609','402618','402619','402621','402645','402655','402656','402657','402661','402664','402680','402681','402692','402693','402704','402710','402712','402718','402719','402724','402730','402735','402748','402751','402756','402764','402768','402785','402789','402794','402806','402842','402855','402857','402858','402872','402874','402876','402885','402903','402908','402915','402930','402931','402947','402950','402970','402980','402988','402989','402994','403005','403009','403013','403020','403023','403024','403037','403042','403047','403051','403058','403060','403063','403084','403091','403094','403095','403112','403118','403120','403122','403142','403159','403167','403170','403172','403178','403179','403206','403214','403216','403218','403219','403220','403222','403225','403231','403232','403233','403234','403235','403240','403242','403250','403251','403253','403254','403262','403274','403275','403282','403292','403318','403322','403324','403325','403327','403330','403335','403339','403340','403348','403355','403358','403364','403367','403376','403378','403382','403389','403390','403394','403397','403399','403400','403401','403402','403405','403408','403409','403415','403426','403427','403429','403432','403433','403441','403444','403448','403450','403453','403456','403458','403461','403467','403468','403472','403473','403474','403483','403487','403488','403489','403491','403492','403493','403496','403497','403498','403499','403500','403501','403502','403503','403504','403507','403513','403521','403524','403527','403528','403531','403535','403536','403539','403540','403542','403543','403546','403549','403551','403552','403555','403556','403559','403560','403561','403562','403563','403569','403570','403581','403585','403587','403589','403590','403591','403594','403595','403597','403603','403604','403605','403606','403611','403614','403617','403618','403621','403622','403623','403625','403626','403628','403629','403630','403632','403634','403635','403637','403640','403641','403642','403644','403646','403647','403649','403650','403651','403652','403653','403655','403656','403658','403659','403661','403663','403664','403666','403667','403668','403670','403673','403674','403675','403676','403677','403679','403680','403681','403683','403684','403685','403686','403687','403688','403689','403691','403692','403694','403696','403697','403698','403699','403701','403702','403703','403704','403705','500001','500003','500004','500005','500006','500007','500008','500009','500010','500011','500013','500014','500015','500016','500017','500019','500020','500021','500022','500023','500024','500025','500026','500027','500028','500029','500030','500031','500032','500033','500034','500035','500036','500039','500040','500041','500042','500043','500045','500046','500047','500048','500049','500050','500051','500052','500053','500054','500055','500056','500057','500058','500059','500060','500061','500062','500063','500064','500065','500066','500067','500068','500069','500070','500071','500072','500073','500074','500075','500076','500077','500079','500080','500081','500082','500083','500084','500085','500087','500089','500090','500091','500092','500093','500094','500095','500096','500097','500098','500099','500100','500101','500102','500103','500105','500106','500107','500109','500111','500112','500113','500114','500115','500116','500117','500118','500119','500120','500121','500122','500123','500124','500126','500127','500128','500129','500130','500131','500132','500133','500134','500135','500136','500137','500138','500139','500140','500141','500142','500143','500144','500145','500146','500147','500149','500150','500152','500153','500155','500156','500157','500158','500159','500160','500161','500162','500163','500164','500165','500166','500167','500168','500169','500170','500171','500172','500174','500175','500176','500177','500179','500180','500181','500182','500183','500187','500188','500189','500192','500193','500194','500195','500198','500199','500200','500201','500203','500204','500205','600008','600012','600015','600016','1000000')
for c in codes:
    id = models.execute_kw(db, uid, password, 'res.partner',
                                 'search_read', [[
                                                  ['code', '=',c]]],{'fields': ['code','name','id']})
    # print ("id[0]['code'],id[0]['id'],id[0]['name'])


===== .\azbah_partner_name_translation\models\translation.py =====
# from googletrans import Translator
# translator = Translator()
# t=translator.translate('مركز عمار  للتسويق')
# print (t)
from googletrans import Translator

translator = Translator()

import xmlrpc.client
import csv
import time

url = "http://azbah.online:8015"
db = "AZBAH"
username = "admin"
password = "z"

common = xmlrpc.client.ServerProxy('{}/xmlrpc/2/common'.format(url))
uid = common.authenticate(db, username, password, {})
models = xmlrpc.client.ServerProxy('{}/xmlrpc/2/object'.format(url))
start_time = time.perf_counter()

names = models.execute_kw(db, uid, password, 'res.partner',
                             'search_read', [[['english_name', '=', False]]],{'fields': ['name']})
for name in names:
    english_name=translator.translate(name['name']).text

    models.execute_kw(db, uid, password, 'res.partner', 'write', [name['id'], {'english_name': english_name}])
    print (name['id'],name['name'],english_name )

# translated = translator.translate('مركز عمار  للتسويق')
#
# print(translated.text)
'''

import xmlrpc.client
import csv
import time

url = "https://najran.demo.ejadtech.sa"
db = "test"
username = "admin"
password = "admin"

common = xmlrpc.client.ServerProxy('{}/xmlrpc/2/common'.format(url))
uid = common.authenticate(db, username, password, {})
models = xmlrpc.client.ServerProxy('{}/xmlrpc/2/object'.format(url))
start_time = time.perf_counter()

forum_id = models.execute_kw(db, uid, password, 'forum.forum',
                             'search_read', [[['type', '=', 'projects'],
                                              ['id', '=', 10]]],{'fields': ['name']})
for i in forum_id:
    print (i)


# 'domain': [[['type', '=', 'projects'], ['id', '=', 10]]]
# 'fields': ['name']
#
# 	'model': 'forum.forum'
#       'method': 'search_read',
#       'args': [],
#       'kwargs': {        'context': {'bin_size': true},
#         'domain': []
#         'fields': ['id', 'name', 'mode', 'description']
#         'limit': 300,
'''

===== .\azbah_pos\__init__.py =====
from . import models
from . import reports

===== .\azbah_pos\__manifest__.py =====
{
    "name": "Azbah - POS Changes",
    "version": "15.1",
    "license": "LGPL-3",
    "category": "POS Changes for Azba",
    "depends": ["base", "point_of_sale"],
    "data": [
        "views/pos_config.xml",
        "security/pos_config_rules.xml",
        "reports/report_saledetails.xml"
    ],

    'assets': {
        'point_of_sale.assets': [
            'azbah_pos/static/src/js/**/*.js',
            'azbah_pos/static/src/css/**/*.css',
        ],
        'web.assets_qweb': [
            'azbah_pos/static/src/xml/**/*.xml',
        ],
    }

}


===== .\azbah_pos\models\pos_config.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from datetime import datetime
from uuid import uuid4
import pytz

from odoo import api, fields, models, tools, _
from odoo.exceptions import ValidationError, UserError


class PosConfig(models.Model):
    _inherit = 'pos.config'
    _description = 'Point of Sale Configuration'

    allowed_users = fields.Many2many("res.users")

    # Show only some partners
    def get_limited_partners_loading(self):
        partners = self.env['res.partner'].search([('pos_config_ids', 'in', self.id)]).mapped("id")
        result = [(_,) for _ in partners]
        return result


===== .\azbah_pos\models\pos_order.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from datetime import datetime
from uuid import uuid4
import pytz

from odoo import api, fields, models, tools, _
from odoo.exceptions import ValidationError, UserError


class PosOrder(models.Model):
    _inherit = 'pos.order'
    invoice_name = fields.Char(related='account_move.name')



===== .\azbah_pos\models\__init__.py =====
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl).

from . import pos_config
from . import pos_order

===== .\azbah_pos\reports\pos_details.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from odoo import fields, models


class PosDetails(models.TransientModel):
    _inherit = 'pos.details.wizard'

    pos_config_ids = fields.Many2many('pos.config', 'pos_detail_configs', default=None)

    def _default_start_date(self):
        """ Find the earliest start_date of the latests sessions """
        # restrict to configs available to the user
        config_ids = self.env['pos.config'].search([]).ids
        # exclude configs has not been opened for 2 days
        self.env.cr.execute("""
               SELECT
               max(start_at) as start,
               config_id
               FROM pos_session
               WHERE config_id = ANY(%s)
               AND start_at > (NOW() - INTERVAL '2 DAYS')
               GROUP BY config_id
           """, (config_ids,))
        latest_start_dates = [res['start'] for res in self.env.cr.dictfetchall()]
        # earliest of the latest sessions
        d = (latest_start_dates and min(latest_start_dates) or fields.Datetime.now()).replace(hour=0, minute=1)
        return d

    start_date = fields.Datetime(required=True, default=_default_start_date)

    def generate_report(self):
        c = self.pos_config_ids
        configs = [(p.id, p.name, p.employee_ids.mapped("name")) for p in c]
        data = {'date_start': self.start_date, 'date_stop': self.end_date, 'config_ids': self.pos_config_ids.ids,
                'configs': configs}
        return self.env.ref('point_of_sale.sale_details_report').report_action([], data=data)


===== .\azbah_pos\reports\report_saledetails.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.
import logging
from datetime import timedelta

import pytz

from odoo import api, fields, models, tools, _
from odoo.osv.expression import AND

_logger = logging.getLogger(__name__)


class ReportSaleDetails(models.AbstractModel):
    _inherit = 'report.point_of_sale.report_saledetails'
    _description = 'Point of Sale Details'

    @api.model
    def get_sale_details(self, date_start=False, date_stop=False, config_ids=False, session_ids=False):
        """ Serialise the orders of the requested time period, configs and sessions.

        :param date_start: The dateTime to start, default today 00:00:00.
        :type date_start: str.
        :param date_stop: The dateTime to stop, default date_start + 23:59:59.
        :type date_stop: str.
        :param config_ids: Pos Config id's to include.
        :type config_ids: list of numbers.
        :param session_ids: Pos Config id's to include.
        :type session_ids: list of numbers.

        :returns: dict -- Serialised sales.
        """
        domain = [('state', 'in', ['paid', 'invoiced', 'done'])]

        if (session_ids):
            domain = AND([domain, [('session_id', 'in', session_ids)]])
        else:
            if date_start:
                date_start = fields.Datetime.from_string(date_start)
            else:
                # start by default today 00:00:00
                user_tz = pytz.timezone(self.env.context.get('tz') or self.env.user.tz or 'UTC')
                today = user_tz.localize(fields.Datetime.from_string(fields.Date.context_today(self)))
                date_start = today.astimezone(pytz.timezone('UTC'))

            if date_stop:
                date_stop = fields.Datetime.from_string(date_stop)
                # avoid a date_stop smaller than date_start
                if (date_stop < date_start):
                    date_stop = date_start + timedelta(days=1, seconds=-1)
            else:
                # stop by default today 23:59:59
                date_stop = date_start + timedelta(days=1, seconds=-1)

            domain = AND([domain,
                          [('date_order', '>=', fields.Datetime.to_string(date_start)),
                           ('date_order', '<=', fields.Datetime.to_string(date_stop))]
                          ])

            if config_ids:
                domain = AND([domain, [('config_id', 'in', config_ids)]])

        orders = self.env['pos.order'].search(domain)

        user_currency = self.env.company.currency_id

        total = 0.0
        products_sold = {}
        taxes = {}
        for order in orders:
            if user_currency != order.pricelist_id.currency_id:
                total += order.pricelist_id.currency_id._convert(
                    order.amount_total, user_currency, order.company_id, order.date_order or fields.Date.today())
            else:
                total += order.amount_total
            currency = order.session_id.currency_id

            for line in order.lines:
                key = (line.product_id, line.price_unit, line.discount)
                products_sold.setdefault(key, 0.0)
                products_sold[key] += line.qty

                if line.tax_ids_after_fiscal_position:
                    line_taxes = line.tax_ids_after_fiscal_position.sudo().compute_all(
                        line.price_unit * (1 - (line.discount or 0.0) / 100.0), currency, line.qty,
                        product=line.product_id, partner=line.order_id.partner_id or False)
                    for tax in line_taxes['taxes']:
                        taxes.setdefault(tax['id'], {'name': tax['name'], 'tax_amount': 0.0, 'base_amount': 0.0})
                        taxes[tax['id']]['tax_amount'] += tax['amount']
                        taxes[tax['id']]['base_amount'] += tax['base']
                else:
                    taxes.setdefault(0, {'name': _('No Taxes'), 'tax_amount': 0.0, 'base_amount': 0.0})
                    taxes[0]['base_amount'] += line.price_subtotal_incl

        payment_ids = self.env["pos.payment"].search([('pos_order_id', 'in', orders.ids)]).ids
        if payment_ids:
            self.env.cr.execute("""
                SELECT method.name, sum(amount) total
                FROM pos_payment AS payment,
                     pos_payment_method AS method
                WHERE payment.payment_method_id = method.id
                    AND payment.id IN %s
                GROUP BY method.name
            """, (tuple(payment_ids),))
            payments = self.env.cr.dictfetchall()
        else:
            payments = []

        payments_cash_sql = f"""
                select p.payment_date,o.pos_reference, p.amount,m.id  as payment_method_id,m.name,concat('[' , partner.code , ']',' ',partner.name)  as partner_name, p.session_id , o.name from
                pos_payment p
                inner join pos_payment_method m on p.payment_method_id = m.id
                inner join pos_order o on o.id=p.pos_order_id
                inner join pos_session s on p.session_id= s.id
                inner join pos_config c on c.id=s.config_id
                inner join res_partner partner on o.partner_id = partner.id
                where p.payment_date between '{date_start}' and '{date_stop}' and c.id in {tuple(config_ids)}
                order by p.payment_date, m.name;
                """.replace(',)', ')')  # <== to remove the last comma in tuple if it has only one

        self.env.cr.execute(payments_cash_sql)

        cashes = []
        credits = []
        debits = []
        total_cash = total_credit = total_debit = 0

        payments_cash = self.env.cr.dictfetchall()
        for i in range(len(payments_cash)):
            # for j in range(i,len(payments_cash)):
            #
            #     if payments_cash[j]['pos_reference']== payments_cash[i]['pos_reference']:
            #         pass
            #         # credits.append(payments_cash[i])

            if payments_cash[i]['payment_method_id'] in [3, 8] and payments_cash[i]['amount'] > 0:
                credits.append(payments_cash[i])
                total_credit += float(payments_cash[i]['amount'])

            if payments_cash[i]['payment_method_id'] in [3, 8] and payments_cash[i]['amount'] < 0:
                debits.append(payments_cash[i])
                total_debit += float(payments_cash[i]['amount'])

            if payments_cash[i]['payment_method_id'] in [1, 7]:
                cashes.append(payments_cash[i])
                total_cash += float(payments_cash[i]['amount'])

        indices = []
        for d in debits:
            for indi, c in enumerate(cashes):
                if d['pos_reference'] == c['pos_reference'] and d['amount'] == c['amount'] * -1:
                    cashes.remove(c)
                    total_cash -= float(c['amount'])

        return {
            'cashes': cashes,
            'credits': credits,
            'debits': debits,
            'total_cash': total_cash,
            'total_credit': total_credit,
            'total_debit': total_debit,
            'total_debit_and_cash':total_cash+total_debit,
            # 'payments_cash_sum':payments_cash_sum,
            'currency_precision': user_currency.decimal_places,
            'total_paid': user_currency.round(total),
            'payments': payments,
            'company_name': self.env.company.name,
            'taxes': list(taxes.values()),
            'products': sorted([{
                'product_id': product.id,
                'product_name': product.name,
                'code': product.default_code,
                'quantity': qty,
                'price_unit': price_unit,
                'discount': discount,
                'uom': product.uom_id.name
            } for (product, price_unit, discount), qty in products_sold.items()], key=lambda l: l['product_name'])
        }

    @api.model
    def _get_report_values(self, docids, data=None):
        data = dict(data or {})
        configs = self.env['pos.config'].browse(data['config_ids'])
        data.update(self.get_sale_details(data['date_start'], data['date_stop'], configs.ids))
        return data;


===== .\azbah_pos\reports\report_saledetails.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<odoo>
    <data>
        <template id="azbah_report_saledetails" inherit_id="point_of_sale.report_saledetails">
            <xpath expr="//div[hasclass('page')]" position="replace">
                <ul>
                    <t t-foreach='configs' t-as='conf'>
                        <li>
                            <t t-esc="conf[1]"/>
                            -
                            <t t-esc="conf[2]"/>
                            <br/>
                        </li>
                    </t>
                </ul>


                <div class="text-center">
                    <h2>Sales Details</h2>

                    <strong>
                        <t t-esc="date_start" t-options="{'widget': 'datetime'}"/>
                        -
                        <t t-esc="date_stop" t-options="{'widget': 'datetime'}"/>
                    </strong>


                    <!-- Orderlines -->
                    <h3>Products</h3>
                    <table class="table table-sm">
                        <thead>
                            <tr>
                                <th>Product</th>
                                <th>Quantity</th>
                                <th>Price Unit</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr t-foreach='products' t-as='line'>
                                <t t-set="internal_reference" t-value="line['code'] and '[%s] ' % line['code'] or ''"/>
                                <td>
                                    <t t-esc="internal_reference"/>
                                    <t t-esc="line['product_name']"/>
                                </td>
                                <td>
                                    <t t-esc="line['quantity']"/>
                                    <t t-if='line["uom"] != "Units"'>
                                        <t t-esc='line["uom"]'/>
                                    </t>
                                </td>
                                <td>
                                    <t t-esc='line["price_unit"]'/>
                                    <t t-if='line["discount"] != 0'>
                                        Disc:
                                        <t t-esc='line["discount"]'/>
                                        %
                                    </t>
                                </td>
                            </tr>
                        </tbody>
                    </table>

                    <br/>

                    <h3>Payments</h3>
                    <table class="table table-sm">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr t-foreach='payments' t-as='payment'>
                                <td>
                                    <t t-esc="payment['name']"/>
                                </td>
                                <td>
                                    <t t-esc="payment['total']"
                                       t-options="{'widget': 'float', 'precision': currency_precision}"/>
                                </td>
                            </tr>
                        </tbody>
                    </table>

                    <br/>


                    <h3>Payments in Detail</h3>
                    <h5>1- Cash</h5>
                    <t t-if="len(cashes) > 0 ">
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>الإيصال</th>
                                    <th>العميل</th>
                                    <th>المبلغ</th>
                                    <th>التاريخ</th>

                                </tr>
                            </thead>
                            <tbody>
                                <tr t-foreach='cashes' t-as='cash'>
                                    <td>
                                        <t t-esc="cash['pos_reference']"/>
                                    </td>
                                    <td style="text-align:right">
                                        <t t-esc="cash['partner_name']"/>
                                    </td>
                                    <td>
                                        <t t-esc="cash['amount']"/>
                                    </td>
                                    <td>
                                        <t t-esc="cash['payment_date']"/>
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="2">الإجمالى</td>
                                    <td>
                                        <h5>
                                        <t t-esc="total_cash"/>

                                        </h5>
                                    </td>
                                </tr>
                            </tbody>
                        </table>

                    </t>
<hr/>

                    <h5>2- Credits</h5>
                    <t t-if="len(credits) > 0 ">
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>الإيصال</th>
                                    <th>العميل</th>
                                    <th>المبلغ</th>
                                    <th>التاريخ</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr t-foreach='credits' t-as='credit'>
                                    <td>
                                        <t t-esc="credit['pos_reference']"/>
                                    </td>
                                    <td style="text-align:right">
                                        <t t-esc="credit['partner_name']"/>
                                    </td>
                                    <td>
                                        <t t-esc="credit['amount']"/>
                                    </td>
                                    <td>
                                        <t t-esc="credit['payment_date']"/>
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="2">الإجمالى</td>
                                    <td>
                                        <h5>
                                        <t t-esc="total_credit"/>

                                        </h5>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </t>

<hr/>

                    <h5>3- Debits</h5>
                    <t t-if="len(debits) > 0 ">

                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>الإيصال</th>
                                    <th>العميل</th>
                                    <th>المبلغ</th>
                                    <th>التاريخ</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr t-foreach='debits' t-as='debit'>
                                    <td>
                                        <t t-esc="debit['pos_reference']"/>
                                    </td>
                                    <td style="text-align:right">
                                        <t t-esc="debit['partner_name']"/>
                                    </td>
                                    <td>
                                        <t t-esc="debit['amount']"/>
                                    </td>
                                    <td>
                                        <t t-esc="debit['payment_date']"/>
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="2">الإجمالى</td>
                                    <td>
                                        <h5>
                                        <t t-esc="total_debit"/>

                                        </h5>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </t>
                    <hr/>

                    <hr/>

                    <t t-if="len(debits) > 0 ">
                        <t t-if="len(cashes) > 0 ">

                            <table class="table table-sm">
                                <tr>
                                        <td>
                                           إجمالى التوريد
                                        </td>
                                        <td style="text-align:right">
                                            <t t-esc="total_debit_and_cash"/>
                                        </td>
                                    </tr>
                            </table>
                                                    <hr/>

                        </t>

                    </t>


                    <h3>Taxes</h3>
                    <table class="table table-sm">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Tax Amount</th>
                                <th>Base Amount</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr t-foreach='taxes' t-as='tax'>
                                <td>
                                    <t t-esc="tax['name']"/>
                                </td>
                                <td>
                                    <t t-esc="tax['tax_amount']"
                                       t-options="{'widget': 'float', 'precision': currency_precision}"/>
                                </td>
                                <td>
                                    <t t-esc="tax['base_amount']"
                                       t-options="{'widget': 'float', 'precision': currency_precision}"/>
                                </td>
                            </tr>
                        </tbody>
                    </table>

                    <br/>
                    <br/>

                    <strong>
                        Total:
                        <t t-esc='total_paid' t-options="{'widget': 'float', 'precision': currency_precision}"/>
                    </strong>

                </div>
            </xpath>


        </template>
    </data>
</odoo>

===== .\azbah_pos\reports\__init__.py =====
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl).

from . import pos_details
from . import report_saledetails

===== .\azbah_pos\security\pos_config_rules.xml =====
<?xml version="1.0"?>
<odoo>

    <data noupdate="1">
        <record id="pos_config_user" model="ir.rule">
            <field name="name">Users can See Only Allowed POS Configs</field>
            <field name="model_id" ref="model_pos_config"/>
            <field name="domain_force">[('allowed_users', 'in', user.id)]</field>
            <field name="groups" eval="[
                Command.link(ref('base.group_user')),            ]"/>
        </record>
        <record id="pos_config_administrator" model="ir.rule">
            <field name="name">Administrators can see all POS Configs</field>
            <field name="model_id" ref="model_pos_config"/>
            <field name="domain_force">[(1, '=', 1)]</field>
            <field name="groups" eval="[Command.link(ref('base.group_system'))]"/>
        </record>
    </data>
</odoo>


===== .\azbah_pos\static\src\css\OrderReceipt.css =====
.client_cell {
    border: 1px solid black;padding:8px;
    font-weight: bolder;
    overflow-wrap: break-word;
      line-height: 120%;
}



===== .\azbah_pos\static\src\js\customer_fields.js =====
odoo.define('azbah_pos.customer_fields', function (require) {
    "User strict";
    let models = require('point_of_sale.models');
    var _super_product = models.PosModel.prototype;
    models.load_fields("res.partner", ["code", "english_name"]);
    models.load_fields("pos.order", ["id", "invoice_id","invoice_name"]);
});


===== .\azbah_pos\static\src\js\db.js =====
odoo.define('azbah_pos.DB', function (require) {
"use strict";
    var PosDB = require('point_of_sale.DB');
    PosDB.DB = PosDB.include({
         _partner_search_string: function(partner){
        var str =  partner.name || '';

        if(partner.code){
            str += '|' + partner.code;
        }

        if(partner.barcode){
            str += '|' + partner.barcode;
        }
        if(partner.address){
            str += '|' + partner.address;
        }
        if(partner.phone){
            str += '|' + partner.phone.split(' ').join('');
        }
        if(partner.mobile){
            str += '|' + partner.mobile.split(' ').join('');
        }
        if(partner.email){
            str += '|' + partner.email;
        }
        if(partner.vat){
            str += '|' + partner.vat;
        }
        str = '' + partner.id + ':' + str.replace(':', '').replace(/\n/g, ' ') + '\n';
        return str;
    }})

return PosDB;

});

===== .\azbah_pos\static\src\js\invoice_number.js =====
odoo.define('azbah_pos.invoice_number',function(require){
    "use strict"

    let model = require("point_of_sale.models");
    let SuperPosModel = model.PosModel.prototype;
    let SuperOrder = model.Order.prototype;
    let rpc = require('web.rpc');

    model.PosModel = model.PosModel.extend({
        _flush_orders: function(orders, options) {
            let self = this;
            let result, data
            result = data = SuperPosModel._flush_orders.call(this,orders, options)
            _.each(orders,function(order){
                if (order.to_invoice)
                    data.then(function(order_server_id){
                        rpc.query({
                        model: 'pos.order',
                        method: 'read',
                        args:[order_server_id, ['account_move']]
                            }).then(function(result_dict){
                                if(result_dict.length){

                                    let invoice = result_dict[0].account_move;
                                    let order_id = result_dict[0].id;

                                    self.get_order().invoice_number = invoice[1]
                                    self.get_order().id = order_id
                                }
                        })
                        .catch(function(error){
                            return result
                        })
                    })
            })
            return result
        },
    })
    model.Order = model.Order.extend({
        export_for_printing: function(){
            let self = this
            let receipt = SuperOrder.export_for_printing.call(this)
            if(self.invoice_number){
                receipt.invoice_number = self.invoice_number.split(" ")[0];
                receipt.id = self.id;
            }
            return receipt
        }
    })
    model.Order = model.Order.extend({

        // Ehab
        get_invoice_name: function () {
            alert(this.invoice_name);
            return this.invoice_name;
        },
    });
})


===== .\azbah_pos\static\src\js\serials.js =====
odoo.define('azbah_pos.serials', function (require) {
    "use strict";

    let models = require('point_of_sale.models');
    let _super_orderline = models.Orderline.prototype;

    models.Orderline = models.Orderline.extend({
        set_quantity: function (quantity, keep_price) {

            // Call the original method
            let result = _super_orderline.set_quantity.apply(this, [quantity, keep_price]);

            this.update_serials(this.pack_lot_lines, this.quantity);
            return result;

        },
        update_serials: function (packlot, qty) {
            if (qty !== '' && packlot.length > 0) {

                let orderline = this;//.env.pos.get_order().get_selected_orderline()
                let first_serial = orderline.pack_lot_lines.models[0].attributes["lot_name"]
                first_serial = parseInt(first_serial)
                let newPackLotLines = [];
                for (let i = 0; i < parseInt(qty); i++) {
                    newPackLotLines.push(
                        {
                            "lot_name": (first_serial + i).toString(),
                        }
                    )
                }

                let draftPackLotLines = {
                    modifiedPackLotLines: {},
                    newPackLotLines: newPackLotLines
                }

                if (parseInt(qty) != parseInt(packlot.length))
                    orderline.setPackLotLines(draftPackLotLines);

            }
        }

    });
});




===== .\azbah_pos\static\src\js\validate_order.js =====
odoo.define('azbah_pos.validate', function (require) {
    "use strict";
    const PaymentScreen = require('point_of_sale.PaymentScreen');
    const Registries = require('point_of_sale.Registries');
    const { isConnectionError } = require('point_of_sale.utils');

    const POSValidateOverride = PaymentScreen =>
        class extends PaymentScreen {
            /**
             * @override
             */
            async validateOrder(isForceValidate) {
                // Set the current order to (to_invoice) if it has lines
                // Ehab
                // Check Connection

                // if (!window.navigator.onLine || isConnectionError()) {
                //     throw new Error("Mafish Internet Connection!' +\n" +
                //         "\\n لا يوجد اتصال بالإنترنت';");
                //
                // }
                // else {
                    if (this.currentOrder.get_orderlines().length > 0) {
                        this.currentOrder.set_to_invoice(true);
                        this.render();
                    }
                    await super.validateOrder(isForceValidate);



                // }


            }
        };

    Registries.Component.extend(PaymentScreen, POSValidateOverride);

    return PaymentScreen;
});


===== .\azbah_pos\static\src\xml\ClientLine.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">
  <t t-inherit="point_of_sale.ClientLine" t-inherit-mode="extension" owl="1">
        <xpath expr="//t[@t-name='ClientLine']" position="replace">

    <t t-name="ClientLine" owl="1">
        <tr t-attf-class="client-line {{highlight}}" t-att-data-id="props.partner.id"
            t-on-click="trigger('click-client', {client: props.partner})">
            <td style="width: 40px; inline-size: 40px; overflow-wrap: break-word;">
                <t t-esc="props.partner.name or ''"/>
                <span t-if="highlight">
                    <br/>

<!--                    ///////////////-->
<!--                    Remove Edit Button -->
<!--                    <button class="edit-client-button" t-on-click.stop="trigger('click-edit')">EDIT</button>-->
                </span>
            </td>
            <td class="client-line-last-column-placeholder oe_invisible"></td>
        </tr>
    </t>
        </xpath>
  </t>

</templates>


===== .\azbah_pos\static\src\xml\ClientListScreen.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">
    <t t-inherit="point_of_sale.ClientListScreen" t-inherit-mode="extension" owl="1">
        <xpath expr="//div[hasclass('clientlist-screen')]" position="replace">

        <div class="clientlist-screen screen" t-on-activate-edit-mode="activateEditMode">
            <div class="screen-content">
                <div class="top-content">
                    <div class="button back" t-on-click="back">
                        <i class="fa fa-angle-double-left"/>
                        <t t-if="!env.isMobile"> Discard</t>
                    </div>
                    <div t-if="!state.detailIsShown &amp;&amp; !state.selectedClient" class="button new-customer"
                         role="img" aria-label="Add a customer"
                         t-on-click="trigger('activate-edit-mode', { isNewClient: true })"
                         title="Add a customer" style="display:none">
                        <i class="fa fa-plus"/>
                        <t t-if="!env.isMobile"> Create</t>
                    </div>
                    <div t-if="isNextButtonVisible" t-on-click="clickNext"
                         class="button next highlight">
                        <t t-if="!env.isMobile">
                            <t t-esc="nextButton.text"/>
                        </t>
                        <t t-else="">
                            <i t-if="nextButton.command === 'deselect'" class="fa fa-trash"/>
                            <i t-elif="nextButton.command === 'set'" class="fa fa-check"/>
                        </t>
                    </div>
                    <div class="button" t-if="state.detailIsShown" t-on-click="trigger('click-save')">
                        <i class="fa fa-floppy-o"/>
                        <t t-if="!env.isMobile">
                            <span> Save</span>
                        </t>
                    </div>
                    <div t-if="!state.detailIsShown" class="searchbox-client top-content-center">
                        <input placeholder="Search Customers" size="1" t-on-keyup="updateClientList"/>
                        <span class="search-clear-client"></span>
                    </div>
                    <div class="button back" t-on-click="searchClient()" t-if="!state.detailIsShown"
                         style="display:none">
                        <span class="database-icon">
                            <i class="fa fa-database"/>
                        </span>
                        <t t-if="!env.isMobile">
                            <span class="load-customer-search">
                                Load Customers
                            </span>
                        </t>
                    </div>
                </div>
                <section class="full-content">
                    <div class="client-window">
                        <section class="subwindow collapsed">
                            <div class="subwindow-container collapsed">
                                <div t-if="state.detailIsShown" class="client-details-contents subwindow-container-fix">
                                    <ClientDetailsEdit t-props="state.editModeProps"
                                                       t-on-cancel-edit="cancelEdit"/>
                                </div>
                            </div>
                        </section>
                        <section class="subwindow list">
                            <div class="subwindow-container">
                                <div t-if="!state.detailIsShown" class="subwindow-container-fix scrollable-y">
                                    <table class="client-list">
                                        <thead>
                                            <tr>

                                                <th style="width: 40px; inline-size: 40px;
    overflow-wrap: break-word;">Name</th>

                                                <th class="client-line-last-column-placeholder oe_invisible"></th>
                                            </tr>
                                        </thead>
                                        <tbody class="client-list-contents">
                                            <t t-foreach="clients" t-as="partner"
                                               t-key="partner.id">
                                                <ClientLine partner="partner"
                                                            selectedClient="state.selectedClient"
                                                            detailIsShown="state.detailIsShown"
                                                            t-on-click-client="clickClient"/>
                                            </t>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </section>
                    </div>
                </section>
            </div>
        </div>
        </xpath>
    </t>

</templates>


===== .\azbah_pos\static\src\xml\disable_opening_balance.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">
    <t t-inherit="point_of_sale.CashOpeningPopup" t-inherit-mode="extension" owl="1">
      <xpath expr="//div[contains(@class, 'cash-input-sub-section')]" position="replace">

           <input class="pos-input" type="number" t-model.number="state.openingCash" disabled="disabled"/>
          <div class="button icon" t-on-click="">
                                <i class="fa fa-calculator" role="img" title="Open the money details popup"/>
                            </div>


      </xpath>
    </t>
  </templates>


===== .\azbah_pos\static\src\xml\OrderReceipt.xml =====
===== .\azbah_pos\static\src\xml\remove_refund_button.xmx =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

<!--    Remove Refund Button -->
    <t t-inherit="point_of_sale.TicketScreen" t-inherit-mode="extension" owl="1">
            <xpath expr="//div[hasclass('subpads')]" position="replace">
                <div class="subpads">
                                       <t t-set="_actionName">Refund</t>
                    <ActionpadWidget client="getSelectedClient()" actionName="_actionName"
                                     actionToTrigger="'do-refund'"
                                     isActionButtonHighlighted="getHasItemsToRefund()"/>
                    <NumpadWidget disabledModes="['price', 'discount']" activeMode="_selectedOrderlineId and 'quantity'"
                                  disableSign="true"/>

                                </div>
            </xpath>
    </t>

</templates>




===== .\azbah_pos\static\src\xml\templates.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="ClientListScreen" t-inherit="point_of_sale.ClientListScreen" t-inherit-mode="extension" owl="1">
        <xpath expr="//th" position="before">
            <th class="customer-due pos-right-align">Amount Due
                <i class="fa fa-refresh cursor-pointer" t-on-click="refreshTotalDue"></i>
            </th>
            <th class="client-line-open-link"></th>
        </xpath>
    </t>

    <t t-name="ClientLine" t-inherit="point_of_sale.ClientLine" t-inherit-mode="extension" owl="1">
        <xpath expr="//td" position="before">
            <td class="customer-due pos-right-align cursor-pointer" t-on-click="settleCustomerDue">
                <t t-esc="env.pos.format_currency(props.partner.total_due) or ''"/>
                <i class="fa fa-shopping-cart" aria-hidden="true"></i>
            </td>
            <td class="client-line-open-link" t-att-class="highlight">
            </td>
        </xpath>
    </t>

    <t t-name="ClientListScreen" t-inherit="point_of_sale.ClientListScreen" t-inherit-mode="extension" owl="1">
        <xpath expr="//th" position="after">
            <th class="pos-right-align" style="width: 40px; inline-size: 40px;
    overflow-wrap: break-word;">Code</th>
        </xpath>

        <xpath expr="//th[hasclass('client-line-last-column-placeholder')]" position="before">
            <th class="pos-right-align">English Name</th>
        </xpath>
    </t>


    <t t-name="ClientLine" t-inherit="point_of_sale.ClientLine" t-inherit-mode="extension" owl="1">
        <xpath expr="//td" position="after">
            <td style="width: 40px; inline-size: 40px;
    overflow-wrap: break-word;" class="pos-right-align cursor-pointer">
                <t t-esc="props.partner.code or ''"/>
            </td>
        </xpath>

        <xpath expr="//td[hasclass('client-line-last-column-placeholder')]" position="before">
            <td class="pos-right-align cursor-pointer">
                <t t-esc="props.partner.english_name or ''"/>
            </td>
        </xpath>
    </t>

    <!--        Hide the Invoice Button-->
    <t t-name="PaymentScreen" t-inherit="point_of_sale.PaymentScreen" t-inherit-mode="extension" owl="1">
         <xpath expr="//div[hasclass('js_invoice')]" position="replace">

              <div t-if="env.pos.config.module_account" class="button js_invoice highlight" style="display: none;"
                   t-att-class="{ highlight: currentOrder.is_to_invoice() }"
                   t-on-click="toggleIsToInvoice">
            <i class="fa fa-file-text-o"/>
                  Invoice</div>
         </xpath>
    </t>

 </templates>


===== .\azbah_pos\views\pos_config.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>

    <record id="azbah_pos_config_view_form" model="ir.ui.view">
        <field name="name">azbah.pos.config.form</field>
        <field name="model">pos.config</field>
        <field name="inherit_id" ref="point_of_sale.pos_config_view_form"/>
        <field name="arch" type="xml">
            <xpath expr="//div[hasclass('o_setting_box')]" position="after">
                <div class="col-12 col-lg-6 o_setting_box">
                    <div class="o_setting_right_pane" id="login_with_employees">
                        <span class="o_form_label">Allowed Users</span>
                        <field name="allowed_users" widget="many2many_tags"/>
                    </div>
                </div>
            </xpath>
        </field>
    </record>
</odoo>


===== .\azbah_trivial\__init__.py =====
from . import models


===== .\azbah_trivial\__manifest__.py =====
{
    "name": "Trivial Changes for Azba",
    "version": "15.1.1",
    "license": "LGPL-3",
    "category": "Trivail Changes",
    "depends": ["base", "account", "product", "contacts", "hr", "point_of_sale"],
    "data": [
        "views/res_partner.xml",
        "views/account_move.xml",
        "views/product_template.xml",
        "views/hr_employee.xml",
        "views/account_payment.xml",
    ],
}


===== .\azbah_trivial\models\account_move.py =====
from odoo import fields, models, api


class AccountMove(models.Model):
    _inherit = "account.move"
    manual_ref = fields.Char(string="إذن التسليم")

    delegate_id = fields.Many2one('hr.employee', string="المندوب")


===== .\azbah_trivial\models\account_payment.py =====
from odoo import fields, models


class AccountMove(models.Model):
    _inherit = "account.payment"

    delegate_id = fields.Many2one('hr.employee', string="المندوب")


===== .\azbah_trivial\models\config.py =====
from odoo import fields, models, api


class ResConfigSettings(models.TransientModel):
    _inherit = 'res.config.settings'
    portal_allow_api_keys= fields.Boolean()

===== .\azbah_trivial\models\hr_employee.py =====
from odoo import models, fields, api, _
from datetime import date, timedelta, datetime
from odoo.exceptions import AccessError, UserError, RedirectWarning, ValidationError, Warning


class HREmployee(models.AbstractModel):
    _inherit = "hr.employee.base"
    _order = "display_name"

    is_delegate = fields.Boolean('Is delegate مندوب؟', default=False)

    @api.depends('name', 'code')
    def _compute_display_name(self):
        for emp in self:
            emp.display_name = f'[{emp.code}] {emp.name}' if emp.code else emp.name or ''

    code = fields.Char()

    _sql_constraints = [
        ('code_uniq', 'unique (code)', """Code must be unique هذا الكود موجود من قبل!"""),
    ]
    english_name = fields.Char("English Name")
    partner_id = fields.Many2one('res.partner', string="Contact")

    display_name = fields.Char(compute='_compute_display_name', store=True, readonly=False)

    @api.model
    def create(self, vals):
        _partner_record = {"name": vals['name']
            , "code": vals.get('code') if vals.get('code') else None
                           }
        partner_id = self.env['res.partner'].sudo().create(_partner_record).id

        vals['partner_id'] = partner_id
        vals['address_home_id'] = partner_id

        res = super(HREmployee, self).create(vals)
        return res


===== .\azbah_trivial\models\product_product.py =====
from odoo import fields, models, api


class ProductTemplate(models.Model):
    _inherit = "product.product"

    def name_get(self):
        result = []
        for rec in self:
            if rec.product_tmpl_id.code or rec.code:
                result.append((rec.id, '[%s] - %s' % (rec.product_tmpl_id.code.strip() or rec.code.strip(), rec.name)))
            else:
                result.append((rec.id, '%s' % (rec.name)))
        return result

    @api.model
    def name_search(self, name='', args=None, operator='ilike', limit=100):
        args = args or []
        domain = []
        if name:
            domain = ['|', ('name', operator, name), ('code', operator, name)]
        ids = self.env['product.template'].search(domain + args, limit=limit).ids
        records = self.search([('product_tmpl_id', 'in', ids)])
        return records.name_get()



===== .\azbah_trivial\models\product_template.py =====
from odoo import fields, models, api


class ProductTemplate(models.Model):
    _inherit = "product.template"

    @api.depends('name', 'code')
    def _compute_display_name(self):
        for product in self:
            product.display_name = f'[{product.code}] {product.name}' if product.code else product.name or ''

    english_name = fields.Char(string="English Name")
    code = fields.Char(string="الكود Code")
    display_name = fields.Char(compute='_compute_display_name', store=True, readonly=False)

    _sql_constraints = [('code_uniq', 'unique (code)', """Code must be unique هذا الكود موجود من قبل!""")]


    def name_get(self):
        result = []
        for rec in self:
            result.append((rec.id, '%s - %s' % (rec.code, rec.name)))
        return result

===== .\azbah_trivial\models\res_partner.py =====
from odoo import fields, models, api


class ResPartner(models.Model):
    _inherit = "res.partner"
    date_relation_start = fields.Date(string="تاريخ بداية التعامل")

    @api.depends('is_company', 'name', 'parent_id.display_name', 'type', 'company_name', 'code')
    def _compute_display_name(self):
        for partner in self:
            partner.display_name = f'[{partner.code}] {partner.name}' if partner.code else partner.name or ''

    english_name = fields.Char()
    code = fields.Char(string="الكود Code")
    district = fields.Char(string="الحي District")
    display_name = fields.Char(compute='_compute_display_name', store=True, readonly=False)

    pos_config_ids = fields.Many2many("pos.config", string="Routes المسارات")
    main_config_id=fields.Many2one("pos.config",string="Main Config المسار الرئيسى")

    _sql_constraints = [('code_uniq', 'unique (code)', """Code must be unique هذا الكود موجود من قبل!""")]

    def name_get(self):
        result = []
        for rec in self:
            if rec.code:
                result.append((rec.id, '[%s] - %s' % (rec.code, rec.name)))
            else:
                result.append((rec.id, '%s' % (rec.name)))
        return result

    def map_config_to_tags(self,configs):
        # Add all configs to categories table
        for conf in configs:
            cat_id = self.env['res.partner.category'].search([('name', '=', conf.name)])
            if not cat_id:
                cat_id = self.env['res.partner.category'].create({'name': conf.name})

    @api.onchange('main_config_id')
    def onchange_main_config_id(self):
        configs = self.env['pos.config'].search([])
        all_config_names = configs.mapped("name")

        # make sure all configs exist in categories
        self.map_config_to_tags(configs)

        for rec in self:
            # get non pos.config tags, which are not pos.configs ليست مسارات
            cat_ids = [cat_id.id for cat_id in rec.category_id if cat_id.name not in all_config_names]

            # Add the main config
            for conf in rec.main_config_id:
                cat_id = self.env['res.partner.category'].search([('name', '=', conf.name)])
                if not cat_id:
                    cat_id = self.env['res.partner.category'].create({'name': conf.name})
                cat_ids.append(cat_id.id)
            cat_ids = list(set(cat_ids))
            rec.category_id = [(6, 0, cat_ids)]






===== .\azbah_trivial\models\__init__.py =====
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl).

from . import account_move
from . import account_payment
from . import hr_employee
from . import product_product
from . import product_template
from . import res_partner


===== .\azbah_trivial\views\account_move.xml =====
<odoo>
    <data noupdate="1">
        <!--  Form View  -->
        <record id="azbah_view_move_form" model="ir.ui.view">
            <field name="name">azbah.view_move_form</field>
            <field name="model">account.move</field>
            <field name="inherit_id" ref="account.view_move_form"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='partner_bank_id']" position="after">
                    <field name="manual_ref"/>
                </xpath>
            </field>
        </record>
    </data>
</odoo>

===== .\azbah_trivial\views\account_payment.xml =====
<odoo>
    <data noupdate="1">
        <!--  Form View  -->
        <record id="azbah_trivial_view_form_account_payment" model="ir.ui.view">
            <field name="name">azbah.trivial.account.payment.form</field>
            <field name="model">account.payment</field>
            <field name="inherit_id" ref="account.view_account_payment_form"/>
            <field name="mode">extension</field>
            <field name="arch" type="xml">
                <field name="ref" position="after">
                    <field name="delegate_id"/>
                </field>
            </field>
        </record>
    </data>
</odoo>

===== .\azbah_trivial\views\hr_employee.xml =====
<odoo>
    <data>

        <!--  Form View  -->
        <record id="azbah_view_employee_form" model="ir.ui.view">
            <field name="name">azbah.view_employee_form</field>
            <field name="model">hr.employee</field>
            <field name="inherit_id" ref="hr.view_employee_form"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='mobile_phone']" position="before">
                    <field name="code"/>
                    <field name="english_name"/>
                    <field name="partner_id"/>
                </xpath>
            </field>
        </record>

        <record id="azbah_view_employee_tree" model="ir.ui.view">
            <field name="name">azbah.view_employee_tree</field>
            <field name="model">hr.employee</field>
            <field name="inherit_id" ref="hr.view_employee_tree"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='work_phone']" position="after">
                    <field name="code"/>
                    <field name="english_name"/>
                </xpath>
            </field>
        </record>

        <record id="azbah_hr_employee_view_search" model="ir.ui.view">
            <field name="name">azbah.hr.employee.view.search</field>
            <field name="model">hr.employee</field>
            <field name="inherit_id" ref="hr.view_employee_filter"/>
            <field name="arch" type="xml">
                <field name="name" position="before">
                    <field name="code" filter_domain="[('code','ilike',self)]"/>
                </field>
            </field>
        </record>

        <!-- EMPLOYEES INHERITED KANBAN VIEW -->
        <record id="azbah_hr_kanban_view_emp_no" model="ir.ui.view">
            <field name="name">azbah.hr.employee.kanban.grade.employee_no</field>
            <field name="model">hr.employee</field>
            <field name="inherit_id" ref="hr.hr_kanban_view_employees"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='name']" position="replace">
                    <li class="o_text_overflow">
                        <field name="display_name"/>
                    </li>
                    <li t-if="record.english_name.raw_value" class="o_text_overflow">
                        <field name="english_name"/>
                    </li>
                </xpath>
            </field>
        </record>

    </data>
</odoo>

===== .\azbah_trivial\views\product_template.xml =====
<?xml version="1.0"?>
<odoo>

    <!-- Form View  -->
    <record id="product_template_form_view" model="ir.ui.view">
        <field name="name">azbah.trivial.product.template.form.inherit</field>
        <field name="model">product.template</field>
        <field name="inherit_id" ref="product.product_template_only_form_view"/>
        <field name="arch" type="xml">
            <xpath expr="//field[@name='detailed_type']" position="before">
                    <field name="english_name"/>
                    <field name="code" placeholder="Code الكود"/>
            </xpath>
        </field>
    </record>

    <!-- Tree View  -->
    <record id="azbah_product_template_tree_view" model="ir.ui.view">
        <field name="name">azbah.product.template.tree</field>
        <field name="model">product.template</field>
        <field name="mode">primary</field>
        <field name="inherit_id" ref="product.product_template_tree_view"/>
        <field name="arch" type="xml">
            <xpath expr="//field[@name='name']" position="after">
                <field name="code"/>
                <field name="english_name"/>
            </xpath>
        </field>
    </record>

    <!-- Kanban View  -->
    <record id="azbah_product_template_kanban_view" model="ir.ui.view">
        <field name="name">azbah.product.template.product.kanban</field>
        <field name="model">product.template</field>
        <field name="inherit_id" ref="product.product_template_kanban_view"/>
        <field name="mode">primary</field>
        <field name="priority">1</field>
        <field name="arch" type="xml">

            <xpath expr="//field[@name='name']" position="replace">
                <field name="display_name"/>

                <div>
                    <br/>
                    <li t-if="record.english_name.raw_value">
                        <field name="english_name"/>
                    </li>
                </div>
            </xpath>
        </field>
    </record>


    <record id="sale.product_template_action" model="ir.actions.act_window">
        <!--        <field name="act_window_id" ref="sale.product_template_action"/>-->
        <field name="name">Products</field>
        <field name="view_id" ref="azbah_trivial.azbah_product_template_kanban_view"/>
        <field name="type">ir.actions.act_window</field>
        <field name="res_model">product.template</field>
        <field name="view_mode">kanban,tree,form,activity</field>
        <field name="context">{"search_default_filter_to_sell":1, "sale_multi_pricelist_product_template": 1}</field>
        <field name="help" type="html">
            <p class="o_view_nocontent_smiling_face">
                Create a new product
            </p>
            <p>
                You must define a product for everything you sell or purchase,
                whether it's a storable product, a consumable or a service.
            </p>
        </field>
    </record>


    <!-- Search View  -->
    <!--This Piece of code is not working for some unknown reason-->
    <!--TODO-->

    <record id="azbah_product_search_view" model="ir.ui.view">
        <field name="name">azbah.product.product.search</field>
        <field name="model">product.template</field>
        <field name="mode">primary</field>
        <field name="priority">1</field>
        <field name="inherit_id" ref="product.product_template_search_view"/>
        <field name="arch" type="xml">
            <field name="name" position="before">
                <field name="code" filter_domain="[('code','ilike',self)]"/>
            </field>
        </field>
    </record>

</odoo>


===== .\azbah_trivial\views\res_partner.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>

    <!-- Form View  -->
    <record id="azbah_res_partner_form" model="ir.ui.view">
        <field name="name">azbah.res.partner.form</field>
        <field name="model">res.partner</field>
        <field name="inherit_id" ref="base.view_partner_form"/>
        <field name="arch" type="xml">
            <field name="company_type" position="before">
                <group>
                    <field name="english_name"/>
                    <field name="code" placeholder="Code الكود"/>
<!--                    <field name="is_delegate"/>-->
                </group>
            </field>

            <field name="street" position="before">
                <field name="district" placeholder="District  الحي"/>
            </field>
            <field name="street2" position="attributes">
                <attribute name="invisible">1</attribute>
            </field>


            <field name="category_id" position="after">
                <field name="date_relation_start"/>
            </field>


            <xpath expr="//notebook" position="inside">
                <page string="Routes المسارات" name="allowed_pos">
                    <group>
                        <field name="pos_config_ids" widget="many2many_tags"/>
                        <field name="main_config_id"/>

                    </group>
                </page>
            </xpath>

        </field>
    </record>

    <!-- Tree View  -->
    <record id="azbah_res_partner_tree" model="ir.ui.view">
        <field name="name">azbah.res.partner.tree</field>
        <field name="model">res.partner</field>
        <field name="type">tree</field>
        <field name="inherit_id" ref="base.view_partner_tree"/>
        <field name="arch" type="xml">
            <xpath expr="/tree/field[@name='display_name']" position="after">
                <field name="english_name"/>
                <field name="code"/>
                <field name="district"/>
            </xpath>

            <xpath expr="/tree/field[@name='country_id']" position="replace">
                <field name="date_relation_start"/>
            </xpath>

            <xpath expr="/tree/field[@name='activity_ids']" position="replace">
            </xpath>
            <xpath expr="/tree/field[@name='email']" position="replace">
            </xpath>
        </field>
    </record>

    <!-- Kanban View  -->
    <record id="azbah_view_partner_kanban" model="ir.ui.view">
        <field name="name">azbah.view_partner_kanban</field>
        <field name="model">res.partner</field>
        <field name="inherit_id" ref="base.res_partner_kanban_view"/>
        <field name="arch" type="xml">
            <xpath expr="//div[@class='o_kanban_tags_section oe_kanban_partner_categories']" position="inside">
                <li t-if="record.english_name.raw_value" class="o_text_overflow">
                    <field name="english_name"/>
                </li>
            </xpath>
        </field>
    </record>

    <!-- Search View  -->
    <record id="azbah_view_res_partner_search" model="ir.ui.view">
        <field name="name">azbah.view.res.partner.filter</field>
        <field name="model">res.partner</field>
        <field name="inherit_id" ref="base.view_res_partner_filter"/>
        <field name="arch" type="xml">
            <field name="name" position="before">
                <field name="code" filter_domain="[('code','ilike',self)]"/>
            </field>
        </field>
    </record>


</odoo>

===== .\azbah_trivial\_packages\hijri_converter\convert.py =====
"""Main module of the hijri-converter package."""

import datetime
from bisect import bisect
from typing import Tuple

from . import helpers, locales, ummalqura


class Hijri:
    """A Hijri object represents a date (year, month and day) in lunar Hijri
    calendar.
    """

    __slots__ = "_year", "_month", "_day"

    def __init__(self, year: int, month: int, day: int, validate: bool = True):
        """
        Args:
            year: Hijri year.
            month: Hijri month.
            day: Hijri day.
            validate: Whether to validate Hijri input or not. It's recommended
                to keep the default for accurate conversion.

        Raises:
            OverflowError: When ``year`` is out of supported Hijri range.
            ValueError: When ``month`` is not within the range of `1..12`.
            ValueError: When ``day`` is not within the range of
                `1..month_length` for month.
        """

        self._year = year
        self._month = month
        self._day = day

        if validate:
            self._check_date()

    def __repr__(self) -> str:
        class_name = self.__class__.__name__
        return f"{class_name}({self._year}, {self._month}, {self._day})"

    def __str__(self) -> str:
        return self.isoformat()

    def __hash__(self) -> int:
        return hash(("Hijri", self._year, self._month, self._day))

    def __eq__(self, other: object) -> bool:
        if not isinstance(other, Hijri):
            return NotImplemented
        return self._compare(other) == 0

    def __gt__(self, other: object) -> bool:
        if not isinstance(other, Hijri):
            return NotImplemented
        return self._compare(other) > 0

    def __ge__(self, other: object) -> bool:
        if not isinstance(other, Hijri):
            return NotImplemented
        return self._compare(other) >= 0

    def __lt__(self, other: object) -> bool:
        if not isinstance(other, Hijri):
            return NotImplemented
        return self._compare(other) < 0

    def __le__(self, other: object) -> bool:
        if not isinstance(other, Hijri):
            return NotImplemented
        return self._compare(other) <= 0

    def _compare(self, other: "Hijri") -> int:
        self_date = self.datetuple()
        other_date = other.datetuple()
        return (
            0
            if self_date == other_date
            else 1
            if self_date > other_date
            else -1
        )

    @classmethod
    def fromisoformat(cls, date_string: str) -> "Hijri":
        """Construct Hijri object from an ISO formatted Hijri date
        ``YYYY-MM-DD``.

        Args:
            date_string: Hijri date in ISO format ``YYYY-MM-DD``.
        """

        year = int(date_string[0:4])
        month = int(date_string[5:7])
        day = int(date_string[8:10])
        return cls(year, month, day)

    @classmethod
    def today(cls) -> "Hijri":
        """Construct Hijri object from today's date."""
        return Gregorian.today().to_hijri()

    @property
    def year(self) -> int:
        """Return year as an integer."""
        return self._year

    @property
    def month(self) -> int:
        """Return month as an integer."""
        return self._month

    @property
    def day(self) -> int:
        """Return day as an integer."""
        return self._day

    def datetuple(self) -> Tuple[int, int, int]:
        """Return date as a tuple of (year, month, day)."""
        return self._year, self._month, self._day

    def isoformat(self) -> str:
        """Return date in ISO format i.e. ``YYYY-MM-DD``."""
        return f"{self._year:04}-{self._month:02}-{self._day:02}"

    def dmyformat(self, separator: str = "/", padding: bool = True) -> str:
        """Return date in day-month-year format (``DD/MM/YYYY`` by default).

        Args:
            separator: String that separates the day, month, and year values.
            padding: Whether to add a leading zero as a padding character to
                fill day and month values when less than 10.
        """

        day = f"{self._day:02}" if padding else self._day
        month = f"{self._month:02}" if padding else self._month
        return f"{day}{separator}{month}{separator}{self._year}"

    def month_length(self) -> int:
        """Return number of days in month."""
        month_starts = ummalqura.MONTH_STARTS
        index = self._month_index()
        length = month_starts[index + 1] - month_starts[index]
        return length

    def month_name(self, language: str = "en") -> str:
        """Return month name.

        Args:
            language: Language tag for localized month name. Full locale name
                can be used, e.g. ``en-US`` or ``en_US.UTF-8``. Supported
                languages are ``en``, ``ar`` and ``bn``.
        """

        return locales.get_locale(language).month_name(self._month)

    def weekday(self) -> int:
        """Return day of week, where Monday is 0 and Sunday is 6."""
        jdn = self.to_julian()
        return int(jdn % 7)

    def isoweekday(self) -> int:
        """Return day of week, where Monday is 1 and Sunday is 7."""
        jdn = self.to_julian()
        return int(jdn % 7) + 1

    def day_name(self, language: str = "en") -> str:
        """Return day name.

        Args:
            language: Language tag for localized month name. Full locale name
                can be used, e.g. ``en-US`` or ``en_US.UTF-8``. Supported
                languages are ``en``, ``ar`` and ``bn``.
        """

        return locales.get_locale(language).day_name(self.isoweekday())

    @staticmethod
    def notation(language: str = "en") -> str:
        """Return calendar era notation.

        Args:
            language: Language tag for localized month name. Full locale name
                can be used, e.g. ``en-US`` or ``en_US.UTF-8``. Supported
                languages are ``en``, ``ar`` and ``bn``.
        """

        return locales.get_locale(language).notation

    def to_julian(self) -> int:
        """Return corresponding Julian day number (JDN)."""
        month_starts = ummalqura.MONTH_STARTS
        index = self._month_index()
        rjd = month_starts[index] + self._day - 1
        jdn = helpers.rjd_to_jdn(rjd)
        return jdn

    def to_gregorian(self) -> "Gregorian":
        """Return Gregorian object for the corresponding Hijri date."""

        jdn = self.to_julian()
        don = helpers.jdn_to_ordinal(jdn)
        return Gregorian.fromordinal(don)

    def _check_date(self) -> None:
        """Check date values if within valid range."""

        # check year
        min_year, max_year = [d[0] for d in ummalqura.HIJRI_RANGE]
        if not min_year <= self.year <= max_year:
            raise OverflowError("date out of range")
        # check month
        max_months = 12
        if not 1 <= self.month <= max_months:
            raise ValueError(f"month must be in 1..{max_months}")
        # check day
        month_length = self.month_length()
        if not 1 <= self.day <= month_length:
            raise ValueError(f"day must be in 1..{month_length} for month")

    def _month_index(self) -> int:
        """Return month’s index in ummalqura month starts"""
        prior_months = ((self.year - 1) * 12) + self.month - 1
        index = prior_months - ummalqura.HIJRI_OFFSET
        return index


class Gregorian(datetime.date):
    """A Gregorian object represents a date (year, month and day) in Gregorian
    calendar.
    """

    __slots__ = ()

    @classmethod
    def fromdate(cls, date_object: datetime.date) -> "Gregorian":
        """Construct Gregorian object from a Python date object.

        Args:
            date_object: Python date object.
        """

        year, month, day = date_object.timetuple()[:3]
        return super().__new__(cls, year, month, day)

    def datetuple(self) -> Tuple[int, int, int]:
        """Return date as a tuple of (year, month, day)."""
        return self.year, self.month, self.day

    def dmyformat(self, separator: str = "/", padding: bool = True) -> str:
        """Return date in day-month-year format (``DD/MM/YYYY`` by default).

        Args:
            separator: String that separates the day, month, and year values.
            padding: Whether to add a leading zero as a padding character to
                fill day and month values when less than 10.
        """

        day = f"{self.day:02}" if padding else self.day
        month = f"{self.month:02}" if padding else self.month
        return f"{day}{separator}{month}{separator}{self.year}"

    def month_name(self, language: str = "en") -> str:
        """Return month name.

        Args:
            language: Language tag for localized month name. Full locale name
                can be used, e.g. ``en-US`` or ``en_US.UTF-8``. Supported
                languages are ``en``, ``ar`` and ``bn``.
        """

        return locales.get_locale(language).gregorian_month_name(self.month)

    def day_name(self, language: str = "en") -> str:
        """Return day name.

        Args:
            language: Language tag for localized month name. Full locale name
                can be used, e.g. ``en-US`` or ``en_US.UTF-8``. Supported
                languages are ``en``, ``ar`` and ``bn``.
        """

        return locales.get_locale(language).day_name(self.isoweekday())

    @staticmethod
    def notation(language: str = "en") -> str:
        """Return calendar era notation.

        Args:
            language: Language tag for localized month name. Full locale name
                can be used, e.g. ``en-US`` or ``en_US.UTF-8``. Supported
                languages are ``en``, ``ar`` and ``bn``.
        """

        return locales.get_locale(language).gregorian_notation

    def to_julian(self) -> int:
        """Return corresponding Julian day number (JDN)."""
        don = self.toordinal()
        jdn = helpers.ordinal_to_jdn(don)
        return jdn

    def to_hijri(self) -> Hijri:
        """Return Hijri object for the corresponding Gregorian date.

        Raises:
            OverflowError: When date is out of supported Gregorian range.
        """

        self._check_range()
        jdn = self.to_julian()
        rjd = helpers.jdn_to_rjd(jdn)
        month_starts = ummalqura.MONTH_STARTS
        index = bisect(month_starts, rjd) - 1
        months = index + ummalqura.HIJRI_OFFSET
        years = int(months / 12)
        year = years + 1
        month = months - (years * 12) + 1
        day = rjd - month_starts[index] + 1
        return Hijri(year, month, day, validate=False)

    def _check_range(self) -> None:
        """Check if Gregorian date is within valid range."""
        min_date, max_date = ummalqura.GREGORIAN_RANGE
        if not min_date <= (self.year, self.month, self.day) <= max_date:
            raise OverflowError("date out of range")


===== .\azbah_trivial\_packages\hijri_converter\helpers.py =====
"""Helper methods for Hijri conversion."""


def jdn_to_ordinal(jdn: int) -> int:
    """Convert Julian day number (JDN) to date ordinal number.

    Args:
        jdn: Julian day number (JDN).
    """

    return jdn - 1721425


def ordinal_to_jdn(don: int) -> int:
    """Convert date ordinal number to Julian day number (JDN).

    Args:
        don: Date ordinal number.
    """

    return don + 1721425


def jdn_to_rjd(jdn: int) -> int:
    """Return Reduced Julian Day (RJD) number from Julian day number (JDN).

    Args:
        jdn: Julian day number (JDN).
    """

    return jdn - 2400000


def rjd_to_jdn(rjd: int) -> int:
    """Return Julian day number (JDN) from Reduced Julian Day (RJD) number.

    Args:
        rjd: Reduced Julian Day (RJD) number.
    """

    return rjd + 2400000


===== .\azbah_trivial\_packages\hijri_converter\locales.py =====
===== .\azbah_trivial\_packages\hijri_converter\py.typed =====
# Marker file for PEP 561


===== .\azbah_trivial\_packages\hijri_converter\ummalqura.py =====
"""Umm al-Qura calendar constants."""

from typing import Tuple

DateTuple = Tuple[int, int, int]

GREGORIAN_RANGE: Tuple[DateTuple, DateTuple] = ((1924, 8, 1), (2077, 11, 16))
"""Inclusive range of supported Gregorian dates (year, month and day)."""

HIJRI_RANGE: Tuple[DateTuple, DateTuple] = ((1343, 1, 1), (1500, 12, 30))
"""Inclusive range of supported Hijri dates (year, month and day)."""

HIJRI_OFFSET: int = 1342 * 12
"""Total Hijri months elapsed before the beginning of Hijri range."""

# fmt: off
MONTH_STARTS: Tuple[int, ...] = (
    23999, 24029, 24058, 24088, 24118, 24147, 24177, 24207, 24237, 24265, 24295,
    24325, 24355, 24384, 24413, 24443, 24472, 24502, 24531, 24561, 24590, 24620,
    24649, 24679, 24708, 24738, 24767, 24797, 24826, 24857, 24886, 24916, 24944,
    24974, 25004, 25033, 25063, 25092, 25121, 25151, 25181, 25210, 25240, 25270,
    25299, 25328, 25358, 25388, 25417, 25446, 25475, 25505, 25535, 25564, 25594,
    25624, 25653, 25683, 25713, 25742, 25771, 25801, 25830, 25860, 25889, 25919,
    25948, 25978, 26008, 26037, 26066, 26097, 26125, 26155, 26184, 26214, 26243,
    26273, 26302, 26332, 26362, 26392, 26420, 26451, 26481, 26510, 26540, 26569,
    26599, 26628, 26657, 26687, 26716, 26746, 26776, 26805, 26835, 26865, 26894,
    26924, 26953, 26983, 27012, 27041, 27070, 27100, 27130, 27159, 27189, 27219,
    27248, 27278, 27307, 27337, 27366, 27396, 27425, 27455, 27484, 27514, 27543,
    27573, 27602, 27632, 27662, 27691, 27721, 27750, 27780, 27810, 27839, 27868,
    27898, 27927, 27957, 27986, 28016, 28045, 28075, 28105, 28134, 28164, 28193,
    28223, 28252, 28282, 28311, 28341, 28370, 28400, 28429, 28459, 28488, 28518,
    28548, 28577, 28607, 28636, 28665, 28695, 28724, 28754, 28783, 28813, 28843,
    28872, 28901, 28931, 28960, 28990, 29019, 29049, 29078, 29108, 29137, 29167,
    29196, 29226, 29255, 29285, 29315, 29345, 29375, 29404, 29434, 29463, 29492,
    29522, 29551, 29580, 29610, 29640, 29669, 29699, 29729, 29759, 29788, 29818,
    29847, 29876, 29906, 29935, 29964, 29994, 30023, 30053, 30082, 30112, 30141,
    30171, 30200, 30230, 30259, 30289, 30318, 30348, 30378, 30408, 30437, 30467,
    30496, 30526, 30555, 30585, 30614, 30644, 30673, 30703, 30732, 30762, 30791,
    30821, 30850, 30880, 30909, 30939, 30968, 30998, 31027, 31057, 31086, 31116,
    31145, 31175, 31204, 31234, 31263, 31293, 31322, 31352, 31381, 31411, 31441,
    31471, 31500, 31530, 31559, 31589, 31618, 31648, 31676, 31706, 31736, 31766,
    31795, 31825, 31854, 31884, 31913, 31943, 31972, 32002, 32031, 32061, 32090,
    32120, 32150, 32180, 32209, 32239, 32268, 32298, 32327, 32357, 32386, 32416,
    32445, 32475, 32504, 32534, 32563, 32593, 32622, 32652, 32681, 32711, 32740,
    32770, 32799, 32829, 32858, 32888, 32917, 32947, 32976, 33006, 33035, 33065,
    33094, 33124, 33153, 33183, 33213, 33243, 33272, 33302, 33331, 33361, 33390,
    33420, 33450, 33479, 33509, 33539, 33568, 33598, 33627, 33657, 33686, 33716,
    33745, 33775, 33804, 33834, 33863, 33893, 33922, 33952, 33981, 34011, 34040,
    34069, 34099, 34128, 34158, 34187, 34217, 34247, 34277, 34306, 34336, 34365,
    34395, 34424, 34454, 34483, 34512, 34542, 34571, 34601, 34631, 34660, 34690,
    34719, 34749, 34778, 34808, 34837, 34867, 34896, 34926, 34955, 34985, 35015,
    35044, 35074, 35103, 35133, 35162, 35192, 35222, 35251, 35280, 35310, 35340,
    35370, 35399, 35429, 35458, 35488, 35517, 35547, 35576, 35605, 35635, 35665,
    35694, 35723, 35753, 35782, 35811, 35841, 35871, 35901, 35930, 35960, 35989,
    36019, 36048, 36078, 36107, 36136, 36166, 36195, 36225, 36254, 36284, 36314,
    36343, 36373, 36403, 36433, 36462, 36492, 36521, 36551, 36580, 36610, 36639,
    36669, 36698, 36728, 36757, 36786, 36816, 36845, 36875, 36904, 36934, 36963,
    36993, 37022, 37052, 37081, 37111, 37141, 37170, 37200, 37229, 37259, 37288,
    37318, 37347, 37377, 37406, 37436, 37465, 37495, 37524, 37554, 37584, 37613,
    37643, 37672, 37701, 37731, 37760, 37790, 37819, 37849, 37878, 37908, 37938,
    37967, 37997, 38027, 38056, 38085, 38115, 38144, 38174, 38203, 38233, 38262,
    38292, 38322, 38351, 38381, 38410, 38440, 38469, 38499, 38528, 38558, 38587,
    38617, 38646, 38676, 38705, 38735, 38764, 38794, 38823, 38853, 38882, 38912,
    38941, 38971, 39001, 39030, 39059, 39089, 39118, 39148, 39178, 39208, 39237,
    39267, 39297, 39326, 39355, 39385, 39414, 39444, 39473, 39503, 39532, 39562,
    39592, 39621, 39650, 39680, 39709, 39739, 39768, 39798, 39827, 39857, 39886,
    39916, 39946, 39975, 40005, 40035, 40064, 40094, 40123, 40153, 40182, 40212,
    40241, 40271, 40300, 40330, 40359, 40389, 40418, 40448, 40477, 40507, 40536,
    40566, 40595, 40625, 40655, 40685, 40714, 40744, 40773, 40803, 40832, 40862,
    40892, 40921, 40951, 40980, 41009, 41039, 41068, 41098, 41127, 41157, 41186,
    41216, 41245, 41275, 41304, 41334, 41364, 41393, 41422, 41452, 41481, 41511,
    41540, 41570, 41599, 41629, 41658, 41688, 41718, 41748, 41777, 41807, 41836,
    41865, 41894, 41924, 41953, 41983, 42012, 42042, 42072, 42102, 42131, 42161,
    42190, 42220, 42249, 42279, 42308, 42337, 42367, 42397, 42426, 42456, 42485,
    42515, 42545, 42574, 42604, 42633, 42662, 42692, 42721, 42751, 42780, 42810,
    42839, 42869, 42899, 42929, 42958, 42988, 43017, 43046, 43076, 43105, 43135,
    43164, 43194, 43223, 43253, 43283, 43312, 43342, 43371, 43401, 43430, 43460,
    43489, 43519, 43548, 43578, 43607, 43637, 43666, 43696, 43726, 43755, 43785,
    43814, 43844, 43873, 43903, 43932, 43962, 43991, 44021, 44050, 44080, 44109,
    44139, 44169, 44198, 44228, 44258, 44287, 44317, 44346, 44375, 44405, 44434,
    44464, 44493, 44523, 44553, 44582, 44612, 44641, 44671, 44700, 44730, 44759,
    44788, 44818, 44847, 44877, 44906, 44936, 44966, 44996, 45025, 45055, 45084,
    45114, 45143, 45172, 45202, 45231, 45261, 45290, 45320, 45350, 45380, 45409,
    45439, 45468, 45498, 45527, 45556, 45586, 45615, 45644, 45674, 45704, 45733,
    45763, 45793, 45823, 45852, 45882, 45911, 45940, 45970, 45999, 46028, 46058,
    46088, 46117, 46147, 46177, 46206, 46236, 46265, 46295, 46324, 46354, 46383,
    46413, 46442, 46472, 46501, 46531, 46560, 46590, 46620, 46649, 46679, 46708,
    46738, 46767, 46797, 46826, 46856, 46885, 46915, 46944, 46974, 47003, 47033,
    47063, 47092, 47122, 47151, 47181, 47210, 47240, 47269, 47298, 47328, 47357,
    47387, 47417, 47446, 47476, 47506, 47535, 47565, 47594, 47624, 47653, 47682,
    47712, 47741, 47771, 47800, 47830, 47860, 47890, 47919, 47949, 47978, 48008,
    48037, 48066, 48096, 48125, 48155, 48184, 48214, 48244, 48273, 48303, 48333,
    48362, 48392, 48421, 48450, 48480, 48509, 48538, 48568, 48598, 48627, 48657,
    48687, 48717, 48746, 48776, 48805, 48834, 48864, 48893, 48922, 48952, 48982,
    49011, 49041, 49071, 49100, 49130, 49160, 49189, 49218, 49248, 49277, 49306,
    49336, 49365, 49395, 49425, 49455, 49484, 49514, 49543, 49573, 49602, 49632,
    49661, 49690, 49720, 49749, 49779, 49809, 49838, 49868, 49898, 49927, 49957,
    49986, 50016, 50045, 50075, 50104, 50133, 50163, 50192, 50222, 50252, 50281,
    50311, 50340, 50370, 50400, 50429, 50459, 50488, 50518, 50547, 50576, 50606,
    50635, 50665, 50694, 50724, 50754, 50784, 50813, 50843, 50872, 50902, 50931,
    50960, 50990, 51019, 51049, 51078, 51108, 51138, 51167, 51197, 51227, 51256,
    51286, 51315, 51345, 51374, 51403, 51433, 51462, 51492, 51522, 51552, 51582,
    51611, 51641, 51670, 51699, 51729, 51758, 51787, 51816, 51846, 51876, 51906,
    51936, 51965, 51995, 52025, 52054, 52083, 52113, 52142, 52171, 52200, 52230,
    52260, 52290, 52319, 52349, 52379, 52408, 52438, 52467, 52497, 52526, 52555,
    52585, 52614, 52644, 52673, 52703, 52733, 52762, 52792, 52822, 52851, 52881,
    52910, 52939, 52969, 52998, 53028, 53057, 53087, 53116, 53146, 53176, 53205,
    53235, 53264, 53294, 53324, 53353, 53383, 53412, 53441, 53471, 53500, 53530,
    53559, 53589, 53619, 53648, 53678, 53708, 53737, 53767, 53796, 53825, 53855,
    53884, 53914, 53943, 53973, 54003, 54032, 54062, 54092, 54121, 54151, 54180,
    54209, 54239, 54268, 54297, 54327, 54357, 54387, 54416, 54446, 54476, 54505,
    54535, 54564, 54593, 54623, 54652, 54681, 54711, 54741, 54770, 54800, 54830,
    54859, 54889, 54919, 54948, 54977, 55007, 55036, 55066, 55095, 55125, 55154,
    55184, 55213, 55243, 55273, 55302, 55332, 55361, 55391, 55420, 55450, 55479,
    55508, 55538, 55567, 55597, 55627, 55657, 55686, 55716, 55745, 55775, 55804,
    55834, 55863, 55892, 55922, 55951, 55981, 56011, 56040, 56070, 56100, 56129,
    56159, 56188, 56218, 56247, 56276, 56306, 56335, 56365, 56394, 56424, 56454,
    56483, 56513, 56543, 56572, 56601, 56631, 56660, 56690, 56719, 56749, 56778,
    56808, 56837, 56867, 56897, 56926, 56956, 56985, 57015, 57044, 57074, 57103,
    57133, 57162, 57192, 57221, 57251, 57280, 57310, 57340, 57369, 57399, 57429,
    57458, 57487, 57517, 57546, 57576, 57605, 57634, 57664, 57694, 57723, 57753,
    57783, 57813, 57842, 57871, 57901, 57930, 57959, 57989, 58018, 58048, 58077,
    58107, 58137, 58167, 58196, 58226, 58255, 58285, 58314, 58343, 58373, 58402,
    58432, 58461, 58491, 58521, 58551, 58580, 58610, 58639, 58669, 58698, 58727,
    58757, 58786, 58816, 58845, 58875, 58905, 58934, 58964, 58994, 59023, 59053,
    59082, 59111, 59141, 59170, 59200, 59229, 59259, 59288, 59318, 59348, 59377,
    59407, 59436, 59466, 59495, 59525, 59554, 59584, 59613, 59643, 59672, 59702,
    59731, 59761, 59791, 59820, 59850, 59879, 59909, 59939, 59968, 59997, 60027,
    60056, 60086, 60115, 60145, 60174, 60204, 60234, 60264, 60293, 60323, 60352,
    60381, 60411, 60440, 60469, 60499, 60528, 60558, 60588, 60618, 60647, 60677,
    60707, 60736, 60765, 60795, 60824, 60853, 60883, 60912, 60942, 60972, 61002,
    61031, 61061, 61090, 61120, 61149, 61179, 61208, 61237, 61267, 61296, 61326,
    61356, 61385, 61415, 61445, 61474, 61504, 61533, 61563, 61592, 61621, 61651,
    61680, 61710, 61739, 61769, 61799, 61828, 61858, 61888, 61917, 61947, 61976,
    62006, 62035, 62064, 62094, 62123, 62153, 62182, 62212, 62242, 62271, 62301,
    62331, 62360, 62390, 62419, 62448, 62478, 62507, 62537, 62566, 62596, 62625,
    62655, 62685, 62715, 62744, 62774, 62803, 62832, 62862, 62891, 62921, 62950,
    62980, 63009, 63039, 63069, 63099, 63128, 63157, 63187, 63216, 63246, 63275,
    63305, 63334, 63363, 63393, 63423, 63453, 63482, 63512, 63541, 63571, 63600,
    63630, 63659, 63689, 63718, 63747, 63777, 63807, 63836, 63866, 63895, 63925,
    63955, 63984, 64014, 64043, 64073, 64102, 64131, 64161, 64190, 64220, 64249,
    64279, 64309, 64339, 64368, 64398, 64427, 64457, 64486, 64515, 64545, 64574,
    64603, 64633, 64663, 64692, 64722, 64752, 64782, 64811, 64841, 64870, 64899,
    64929, 64958, 64987, 65017, 65047, 65076, 65106, 65136, 65166, 65195, 65225,
    65254, 65283, 65313, 65342, 65371, 65401, 65431, 65460, 65490, 65520, 65549,
    65579, 65608, 65638, 65667, 65697, 65726, 65755, 65785, 65815, 65844, 65874,
    65903, 65933, 65963, 65992, 66022, 66051, 66081, 66110, 66140, 66169, 66199,
    66228, 66258, 66287, 66317, 66346, 66376, 66405, 66435, 66465, 66494, 66524,
    66553, 66583, 66612, 66641, 66671, 66700, 66730, 66760, 66789, 66819, 66849,
    66878, 66908, 66937, 66967, 66996, 67025, 67055, 67084, 67114, 67143, 67173,
    67203, 67233, 67262, 67292, 67321, 67351, 67380, 67409, 67439, 67468, 67497,
    67527, 67557, 67587, 67617, 67646, 67676, 67705, 67735, 67764, 67793, 67823,
    67852, 67882, 67911, 67941, 67971, 68000, 68030, 68060, 68089, 68119, 68148,
    68177, 68207, 68236, 68266, 68295, 68325, 68354, 68384, 68414, 68443, 68473,
    68502, 68532, 68561, 68591, 68620, 68650, 68679, 68708, 68738, 68768, 68797,
    68827, 68857, 68886, 68916, 68946, 68975, 69004, 69034, 69063, 69092, 69122,
    69152, 69181, 69211, 69240, 69270, 69300, 69330, 69359, 69388, 69418, 69447,
    69476, 69506, 69535, 69565, 69595, 69624, 69654, 69684, 69713, 69743, 69772,
    69802, 69831, 69861, 69890, 69919, 69949, 69978, 70008, 70038, 70067, 70097,
    70126, 70156, 70186, 70215, 70245, 70274, 70303, 70333, 70362, 70392, 70421,
    70451, 70481, 70510, 70540, 70570, 70599, 70629, 70658, 70687, 70717, 70746,
    70776, 70805, 70835, 70864, 70894, 70924, 70954, 70983, 71013, 71042, 71071,
    71101, 71130, 71159, 71189, 71218, 71248, 71278, 71308, 71337, 71367, 71397,
    71426, 71455, 71485, 71514, 71543, 71573, 71602, 71632, 71662, 71691, 71721,
    71751, 71781, 71810, 71839, 71869, 71898, 71927, 71957, 71986, 72016, 72046,
    72075, 72105, 72135, 72164, 72194, 72223, 72253, 72282, 72311, 72341, 72370,
    72400, 72429, 72459, 72489, 72518, 72548, 72577, 72607, 72637, 72666, 72695,
    72725, 72754, 72784, 72813, 72843, 72872, 72902, 72931, 72961, 72991, 73020,
    73050, 73080, 73109, 73139, 73168, 73197, 73227, 73256, 73286, 73315, 73345,
    73375, 73404, 73434, 73464, 73493, 73523, 73552, 73581, 73611, 73640, 73669,
    73699, 73729, 73758, 73788, 73818, 73848, 73877, 73907, 73936, 73965, 73995,
    74024, 74053, 74083, 74113, 74142, 74172, 74202, 74231, 74261, 74291, 74320,
    74349, 74379, 74408, 74437, 74467, 74497, 74526, 74556, 74585, 74615, 74645,
    74675, 74704, 74733, 74763, 74792, 74822, 74851, 74881, 74910, 74940, 74969,
    74999, 75029, 75058, 75088, 75117, 75147, 75176, 75206, 75235, 75264, 75294,
    75323, 75353, 75383, 75412, 75442, 75472, 75501, 75531, 75560, 75590, 75619,
    75648, 75678, 75707, 75737, 75766, 75796, 75826, 75856, 75885, 75915, 75944,
    75974, 76003, 76032, 76062, 76091, 76121, 76150, 76180, 76210, 76239, 76269,
    76299, 76328, 76358, 76387, 76416, 76446, 76475, 76505, 76534, 76564, 76593,
    76623, 76653, 76682, 76712, 76741, 76771, 76801, 76830, 76859, 76889, 76918,
    76948, 76977, 77007, 77036, 77066, 77096, 77125, 77155, 77185, 77214, 77243,
    77273, 77302, 77332, 77361, 77390, 77420, 77450, 77479, 77509, 77539, 77569,
    77598, 77627, 77657, 77686, 77715, 77745, 77774, 77804, 77833, 77863, 77893,
    77923, 77952, 77982, 78011, 78041, 78070, 78099, 78129, 78158, 78188, 78217,
    78247, 78277, 78307, 78336, 78366, 78395, 78425, 78454, 78483, 78513, 78542,
    78572, 78601, 78631, 78661, 78690, 78720, 78750, 78779, 78808, 78838, 78867,
    78897, 78926, 78956, 78985, 79015, 79044, 79074, 79104, 79133, 79163, 79192,
    79222, 79251, 79281, 79310, 79340, 79369, 79399, 79428, 79458, 79487, 79517,
    79546, 79576, 79606, 79635, 79665, 79695, 79724, 79753, 79783, 79812, 79841,
    79871, 79900, 79930, 79960, 79990)
"""Ordered list of Reduced Julian Day (RJD) numbers for the beginning of
supported Hijri months.
"""


===== .\azbah_trivial\_packages\hijri_converter\__init__.py =====
"""Accurate Hijri-Gregorian dates converter based on the Umm al-Qura calendar.

https://github.com/mhalshehri/hijri-converter
"""

__version__ = "2.2.4"

from .convert import Gregorian, Hijri


===== .\az_account_auto_reconcile\__init__.py =====
# -*- coding: utf-8 -*-
from . import models
from . import wizard

===== .\az_account_auto_reconcile\__manifest__.py =====
{
    "name": "AZ-Accounting - Auto Reconcile",
    "version": "15",
    "license": "LGPL-3",
    "category": "accounting",
    "depends": ["account"]
    , "data": [
    'views/res_partner.xml',
    'wizard/wizard_view.xml',
    'security/ir.model.access.csv']
}


===== .\az_account_auto_reconcile\models\account_payment.py =====
from odoo import api, fields, models

class AccountPayment(models.Model):
    _inherit = 'account.payment'

    def write(self, values):
        payments = super(AccountPayment, self).write(values)
        if self.state == 'posted':
            self.partner_id.auto_reconcile()
        return payments


===== .\az_account_auto_reconcile\models\res_partner.py =====
# -*- coding: utf-8 -*-
import logging
from odoo import models, fields

_logger = logging.getLogger(__name__)

class AccountMoveLine(models.Model):
    _inherit = "res.partner"
    last_reconcile_date = fields.Datetime(string="Last Reconcile")

    def auto_reconcile(self):
        try:
            partner = self
            # Get the Due balance of the partner and exclude the most recent invoice from reconciliation
            due = int(partner.total_due)  # ignore the change
            un_reconciled_lines = partner.unreconciled_aml_ids.filtered(lambda l: l.company_id == self.env.company).sorted(
                key='id', reverse=True)
            indi = 0

            # Loop until the recent invoices' sum is bigger than the amount due, the due gets smaller in every iteration
            # The amount could be negative
            excluded = []
            while due > 0 and indi < len(un_reconciled_lines):
                line = un_reconciled_lines[indi]
                amount = line.amount_residual_currency if line.currency_id else line.amount_residual
                if amount > 0:
                    due -= amount
                    if due >= amount:
                        excluded.append(line.id)
                indi += 1
            # the pointer indi is now at the last recent invoice, we will reconcile the older invoices
            lines_to_reconcile = un_reconciled_lines.filtered(lambda l: l.id not in excluded)
            if len(lines_to_reconcile.ids) >= 2:
                data = [{'id': None, 'type': None, 'mv_line_ids': lines_to_reconcile.ids, 'new_mv_line_dicts': []}]
                self.env['account.reconciliation.widget'].sudo().process_move_lines(data)
        except Exception as e:
            _logger.critical(f"::::>>>>> Customer {self.name} , Error: {e}")
            return (self.name, e)

    def auto_reconcile_all(self):
        customers = self.env['res.partner'].search([('customer_rank', '>', 0),
                                                    ('id', 'in',
                                                     self.env['account.move'].search([]).mapped('partner_id').ids)])
        i=0
        failed_customers=[]
        for customer in customers:
            # print (f"Now working on {customer.name}")
            i+=1
            _error=customer.auto_reconcile()
            if _error:
                failed_customers.append(_error)


        print(f"::::>>>>> Customer {customer.name} , Error: {e}")
        _logger.critical(f"::::>>>>> Failed Customers {failed_customers} , Error: {e}")
        # write email to admin explaining failed customers
        if failed_customers:
            notification_ids=[(0, 0, {'res_partner_id': 3, 'notification_type': 'inbox'})]
            self.message_post(
                body='Failed Customers' + str(failed_customers),
                subject='Failed Customers',
                message_type='notification',
                subtype_xmlid='mail.mt_note',
                notification_ids=notification_ids,
            )




===== .\az_account_auto_reconcile\models\__init__.py =====
from . import res_partner
from . import account_payment

===== .\az_account_auto_reconcile\security\ir.model.access.csv =====
id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
access_partner_auto_reconcile_wizard,partner.auto.reconcile.wizard,model_partner_auto_reconcile_wizard,account.group_account_manager,1,1,1,1


===== .\az_account_auto_reconcile\static\src\scss\account_financial_report.scss =====
.o_foldable_menu {
    &.o_closed_menu {
        display: none;
    }
    .o_open_menu {
        display: block;
    }
}
@mixin o-account-reports-i-fa-toggle {
    i.fa {
        visibility: hidden;
    }
    &:hover i.fa {
        visibility: visible;
    }
}

.o_form_view {
    .o_account_reports_page {
        .o_input {
            width: 100%;
        }
    }
}

.o_account_reports_page {
    background-color: $o-view-background-color;
    color: $o-main-text-color;

    .dropdown-toggle::after {
        display: none; // disable bootstrap's carret and do it manaully for positionning
    }

    padding-bottom: 125px;
    @include o-webclient-padding($top: $o-sheet-vpadding, $bottom: $o-sheet-vpadding);
    .o_account_reports_level0 {
        border-width: 3px;
        font-weight: bold;
        // border-top-style: $border-top-style;
        border-bottom-style: double;
    }
    .o_account_reports_table {
        margin-bottom: 128px;
        th.o_account_report_column_header {
            &.sortable::before {
                content: '\f07d';
                font-family: 'FontAwesome';
                color: lightgray;
            }
            &.up::before {
                content: '\f176';
                color: black;
            }
            &.down::before {
                content: '\f175';
                color: black;
            }
            &:first-child {
                border: none;
            }
        }
    }
    .account_report_line_name a {
        color:#008784;
    }
    a {
        cursor: pointer;
    }
    .o_reports_date_to {
        margin-left: 20px;
    }
    .o_account_report_line {
        span {
            white-space: nowrap;
        }
        position: relative;
    }
    // truncate span content and ad '...' if content width > span width
    .o_account_report_line_ellipsis, .o_account_report_name_ellipsis{
        position: relative;
        span {
            position: absolute;
        }
        > span, span[class^="o_account_reports_domain_line_"] {
            left: 0;
            right: 0;
            top: 0;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    }
    .o_account_report_name_ellipsis {
        min-width: 200px;
        max-width: 50%;
    }
    .ellipsis_width {
        direction: rtl !important;
        height: 0 !important;
        position: relative !important;
        white-space: initial !important;
        display: inline-block !important;
        visibility: hidden;

    }

    tr:focus {
        outline: none;

        .o_account_report_line_ellipsis, .o_account_report_name_ellipsis {
            span {
                white-space: initial;
                overflow: initial;
                z-index: 1;
            }
        }
    }
    // ----------------------------------------------------------------
    .o_account_report_summary {
        padding-left: 5px;
    }
    .o_account_reports_summary_edit {
        padding-bottom: 40px;
        padding-top: 15px;
    }
    .js_account_report_foldable {
        cursor: pointer;
    }
    .color-red {
        color: red !important;
    }
    .color-green {
        color: green !important;
    }
    .color-transparent {
        opacity: 0 !important;
    }
    .trust-partner {
        font-size: 0.8em;
        margin-left: 5px;
    }
    .print_only {
        display: none;
    }
    .o_account_reports_table {
        &#table_header_clone {
            position: fixed;
            tbody {
                visibility: collapse;
                tr {
                    border: none;
                }
            }
        }

        width: 100%;

        .number {
            text-align: right;
        }
        .text {
            text-align: left;
        }
        .date {
            text-align: center;
        }
        th{
            background-color: white;
            background-clip: padding-box;
            border: 1px solid #e6e6e6;
            .subtitle{
                font-weight:normal;
            }
        }
        .o_account_reports_header_hierarchy {
            th {
                border-bottom: none;
            }
            th:not(:first-child) {
                border: 1px solid #e6e6e6;
                border-collapse: separate;
                padding-right: 8px;
                padding-left: 8px;
            }
        }
    }
    .oe_link_reports {
        @extend .btn;
        @extend .btn-outline-secondary;
        @extend .btn-sm;
        line-height: 0.8;
        vertical-align: initial;
    }
    .folded {
        .oe_link_reports {
            display: none;
        }
    }
    p.o_account_reports_contact_info {
        min-height: 30px;
    }
    .o_input {
        width: 70%;
    }
    .o_account_reports_edit_summary_pencil {
        margin-left: -15px;
        position: absolute;
    }
    table > tbody > tr >  td ~ td{
        padding-left: 8px;
        padding-right: 8px;
    }
    table > tbody > tr >  td{
        vertical-align: top;
    }
    .o_account_reports_summary {
        margin-bottom: 20px;
        @include o-account-reports-i-fa-toggle;
    }
    .o_account_reports_unfolded td + td span {
        visibility: hidden;
    }
    div.o_account_reports_saved_summary {
        padding-left: 5px;
    }
    .o_account_reports_web_action, .o_change_trust,
    span.o_account_reports_web_action, div.o_account_reports_saved_summary span,
    td.o_account_reports_unfoldable, td.o_account_reports_foldable, span.partner_id, span.move_line_id, input[type=checkbox] {
        cursor: pointer;
    }
    p.footnote > .text {
        white-space: pre-wrap;
    }
    p.footnote > .o_account_reports_footnote_icons, p.o_account_reports_footnote_edit > .o_account_reports_footnote_icons {
        visibility: hidden;
    }
    p.footnote:hover > .o_account_reports_footnote_icons {
        visibility: visible;
    }
    .o_account_reports_footnote_icons {
        position: absolute;
        margin-left: 3px;
    }
    .o_account_reports_caret_icon {
        position: absolute;
        display: contents;
        .fa {
            position: absolute;
            bottom: 4px;
        }
    }
    .o_account_reports_domain_line_0 {
        margin-left: 0px;
    }
    .o_account_reports_domain_line_1 {
        margin-left: 15px;
    }
    .o_account_reports_domain_line_2 {
        margin-left: 30px;
    }
    .o_account_reports_domain_line_3 {
        margin-left: 40px;
    }
    .o_account_reports_domain_line_4 {
        margin-left: 50px;
    }
    .o_account_reports_domain_line_5 {
        margin-left: 60px;
    }
    .o_account_reports_domain_line_6 {
        margin-left: 70px;
    }
    .o_account_reports_domain_line_7 {
        margin-left: 80px;
    }
    .o_account_reports_domain_line_8 {
        margin-left: 90px;
    }
    .o_account_reports_domain_line_9 {
        margin-left: 100px;
    }
    .o_account_reports_domain_line_10 {
        margin-left: 110px;
    }
    .o_account_reports_domain_line_11 {
        margin-left: 120px;
    }
    .o_account_reports_domain_line_12 {
        margin-left: 130px;
    }
    .o_account_reports_domain_line_13 {
        margin-left: 140px;
    }
    tr.o_account_reports_domain_total {
        font-weight: bold;
    }
    tr.o_account_reports_initial_balance {
        > td > span:last-child {
            margin-left: 30px;
        }
    }
    tr.hierarchy_total {
        font-weight: bold;
    }
    b.o_account_reports_footnote_sup {
        margin-top: 10px;
        color: $o-main-text-color;
    }
    ul.o_account_reports_domain_dropdown {
        margin-left: 70px
    }
    .total {
        font-weight: bold;
    }
    .o_account_reports_level0, .o_account_reports_level1, .o_account_reports_level2, .o_account_reports_domain_total, .total {
        .text-muted {
            color: #666666 !important;
        }
    }
    .o_foldable_total {
        color: #666666 !important;
        &.color-red{
            color: red !important;
        }
        &.color-green{
            color: green !important;
        }
    }
    .o_account_reports_totals_below_sections.o_js_account_report_parent_row_unfolded {
        .o_account_report_column_value {
            visibility: hidden;
        }
        td.number.o_foldable_total {
            border-bottom: none;
        }
    }
    td.o_foldable_total {
        font-weight: bold;
    }
    @mixin report_level($indent) {
        border-bottom: 1px solid #eee;
        > td.o_account_report_line_indent > span:last-child {
            margin-left: ($indent + 1) * 10px;
        }
        &.total {
            > td > span:last-child {
                margin-left: $indent * 10px;
            }
        }
    }
    .o_account_reports_level0 {
        & td {
            padding-top: 32px;
            span {
                top: unset;
            }
        }
        > td.o_account_report_line_indent.o_foldable_total > span:last-child {
            margin-left: 10px;
        }
    }
    .o_account_reports_level1 {
        @include report_level(1);
        font-weight: bold;
        border-bottom: 2px solid #bbb;
    }
    .o_account_reports_level2 {
        @include report_level(2);
        font-weight: bold;
        border-bottom: 1px solid #bbb;
    }
    .o_account_reports_level3 {
        @include report_level(3);
    }
    .o_account_reports_level4 {
        @include report_level(4);
    }
    .o_account_reports_level5 {
        @include report_level(5);
    }
    .o_account_reports_level6 {
        @include report_level(6);
    }
    .o_account_reports_level7 {
        @include report_level(7);
    }
    .o_account_reports_level8 {
        @include report_level(8);
    }
    .o_account_reports_level9 {
        @include report_level(9);
    }
    .o_account_reports_level10 {
        @include report_level(10);
    }
    .o_account_reports_level11 {
        @include report_level(11);
    }
    .o_account_reports_level12 {
        @include report_level(12);
    }
    .o_account_reports_level13 {
        @include report_level(13);
    }
    .o_account_reports_default_style {
        border-bottom: 1px solid #eee;
        > td.o_account_report_line_indent > tr:first-child > span:last-child {
            margin-left: 30px;
        }
        &.o_account_reports_domain_total {
            > td.o_account_report_line_indent > span:last-child {
                margin-left: 30px;
            }
        }
    }
    .o_account_followup_not_clicked {
        .o_account_followup_skip {
            display: inline-block;
        }
        .o_account_followup_done {
            display: none;
        }
    }
    .o_account_followup_clicked {
        .o_account_followup_skip {
            display: none;
        }
        .o_account_followup_done {
            display: inline-block;
        }
    }
    .o_account_reports_history {
        min-width: 300px;
    }
    .o_account_coa_column_contrast td:nth-child(4n-1),
    .o_account_coa_column_contrast td:nth-child(4n-2),
    td.o_account_coa_column_contrast:nth-child(4n-1),
    td.o_account_coa_column_contrast:nth-child(4n-2) {
        background-color: #FAFAFA;
        background-clip: padding-box;
    }
    .table-hover tbody tr:hover td {
        background-color: #F0F0F0;
        background-clip: padding-box;
    }
}

.o_form_view {
    .o_account_reports_no_print {
        div.o_account_reports_summary {
            cursor: pointer;
        }
        .o_account_reports_table {
            margin-bottom: 0px;
            tbody tr:not(.o_account_reports_level0):hover {
                background-color: #f0f0f0;
            }
        }
    }
}

.o_account-progress-bar-content {
    color: black;
    position: absolute;
    width: 100%;
}
.o_account-progress {
    position: relative;
}
.o_account_reports_history [summary="o_followup_letter_display_none"] {
    display: none;
}

.o_account_report_search {
    margin-left: 10px;
    margin-right: 10px;
    .o_account_report_select {
        min-width: 100px;
    }
}

// Filters lines
// -----------------------------------------
.o_reports_filter_input_wrapper {
    position: relative;
    float: right;
    width: 150px;
    margin-bottom: 20px;
    float: right;
        .searchIcon {
        position: absolute;
        right: 10px;
    }
}
    .o_account_reports_filter_input {
    border: none;
    border-bottom: 1px black solid;
}
    .o_account_reports_filtered_lines {
    display: none;
}

.o_account_reports_filter_journals {
    .dropdown-menu {
        overflow: auto;
        // 86.5px is the height of .o_control_panel
        max-height: calc(100vh - (86.5px + #{$o-navbar-height}));
    }
}

// Summary to be edited
// -----------------------------------------
.o_account_reports_body .o_account_reports_summary {
    display: inline-block;
    position: relative;


    .o_account_report_summary_placeholder{
        opacity: .5;
    }

    .o_account_report_summary {
        padding: 10px 0;

        &, > span, .o_input, .o_account_reports_edit_summary_pencil {
            transition: all .2s ease 0s;
        }
        > span {
            padding: 10px 0;
            display: block;
            line-height: 1;
        }
    }

    .o_input {
        border: none;
        padding: 10px;
    }

    .o_account_reports_edit_summary_pencil {
        @include o-position-absolute(20px, $left: 0);
        visibility: hidden;
        opacity: 0;
    }

    &:hover {
        .o_account_reports_edit_summary_pencil {
            visibility: visible;
            opacity: 1;
        }

        .o_account_report_summary .o_input, .o_account_report_summary span {
            padding-right: 0;
        }
    }
}

.o_account_reports_body {
    .alert a {
        cursor: pointer;
    }
}

.o_account_reports_summary_edit {
    padding-bottom: 25px;
    padding-top: 10px;

    textarea {
        border: 1px solid gray('600');
        resize: vertical;
        width: 100%;
    }
}

.o_financial_report_hover_popup {
    color: orange;
}

// Print mode report summary
// -----------------------------------------
p.o_account_reports_contact_info {
    min-height: 30px;
}

.o_account_reports_load_more {
    span.account_report_line_name {
        cursor: pointer;
        direction: rtl  !important;
    }
}

.o_country_specific_report_label {
    margin-left: 16px;
    background-color: white;
}

.o_account_reports_filter_currency {
    > .dropdown-menu {
        overflow-y: auto;
        max-height: calc(100vh - #{$o-navbar-height} - 100px);  // 100px for the control panel
    }
}


===== .\az_account_auto_reconcile\static\src\scss\account_report_print.scss =====
.o_account_reports_summary_edit {
    display: none !important;
}
.caret {
    display: none !important;
}
.o_account_reports_body_print {
    background-color: white !important;
    color: black !important;
    font-size: 12px !important;
    .o_account_reports_header {
        padding: 10px;
        background-color: #eee;
    }
    .o_account_reports_page {
        color: black !important;
    }
    .o_account_reports_table {
        margin-bottom: 0px;
        font-size: 12px !important;
        > tbody > tr {
            /* fix thead overlapping http://github.com/wkhtmltopdf/wkhtmltopdf/issues/1524 */
            page-break-inside: avoid;
        }
    }
    .o_account_reports_level0, .o_account_reports_level1, .o_account_reports_level2, .o_account_reports_domain_total, .total {
        .text-muted {
            color: black !important;
        }
    }
    .o_foldable_total {
        color: black !important;
    }
}
a {
    color: inherit !important;
}
.print_only {
    display: block !important;
    &.row {
        display: flex !important;
    }
}
[name="summary"] {
    display: none;
}
.no_print {
    display: none !important;
}

.o_account_reports_page {
    .o_account_report_line_ellipsis, .o_account_report_name_ellipsis{
        position: relative;
        span {
            position: absolute;
        }
        > span, span[class^="o_account_reports_domain_line_"] {
            white-space: normal;
            overflow: visible;
            text-overflow: initial;
            position: relative;
        }
    }
}


===== .\az_account_auto_reconcile\views\res_partner.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <record id="az_partner_form_inherit" model="ir.ui.view">
        <field name="name">Partner Form View Inherit</field>
        <field name="model">res.partner</field>
        <field name="inherit_id" ref="base.view_partner_form"/>
        <field name="arch" type="xml">
            <div name="button_box" position="inside">
                <button groups="base.group_no_one"
                        type="object" name="auto_reconcile" string="Auto Reconcile" class="oe_stat_button"
                        attrs="{'invisible': [('active', '=', False)]}" icon="fa-star-half-o"/>

                <button groups="base.group_no_one"
                        type="object" name="auto_reconcile_all" string="Auto Reconcile ALL" class="oe_stat_button"
                        attrs="{'invisible': [('active', '=', False)]}" icon="fa-th"/>

            </div>
            <field name="vat" position="after">
                <field name="last_reconcile_date"/>
            </field>
        </field>
    </record>


      <!-- Tree View  -->
    <record id="az_res_partner_tree_inherit" model="ir.ui.view">
        <field name="name">AZ Partner Tree Inherit</field>
        <field name="model">res.partner</field>
        <field name="type">tree</field>
        <field name="inherit_id" ref="base.view_partner_tree"/>
        <field name="arch" type="xml">
            <xpath expr="//tree" position="inside">
                    <field name="last_reconcile_date"/>
                </xpath>
        </field>
    </record>

</odoo>


===== .\az_account_auto_reconcile\wizard\partner_auto_reconcile_wizard.py =====
from odoo import models, fields, api

class PartnerAutoReconcileWizard(models.TransientModel):
    _name = 'partner.auto.reconcile.wizard'
    _description = 'Partner Auto Reconcile Wizard'

    partner_ids = fields.Many2many('res.partner', string="Partners")

    def execute_auto_reconcile(self):
        failed_customers = []
        for partner in self.partner_ids:
            try:
                _error=partner.auto_reconcile()
                if _error:
                    failed_customers.append(_error)
                else:
                    partner.last_reconcile_date = fields.Datetime.now()
            except Exception as e:
                mail_values = {
                    'author_id': self.env.user.partner_id.id,
                    'email_from': (
                            self.company_id.partner_id.email_formatted
                            or self.env.user.email_formatted
                            or self.env.ref('base.user_root').email_formatted
                    ),
                    'email_to': [ 3],
                    'body_html': "Failed Customers in Auto Reconcile" + str(failed_customers),
                    'subject': "Auto Reconcile",
                }
                self.env['mail.mail'].sudo().create(mail_values)



===== .\az_account_auto_reconcile\wizard\wizard_view.xml =====
===== .\az_account_auto_reconcile\wizard\__init__.py =====
from . import partner_auto_reconcile_wizard

===== .\az_account_batch_purchase\__init__.py =====
# -*- coding: utf-8 -*-
from . import models

===== .\az_account_batch_purchase\__manifest__.py =====
{
    "name": "AZ-Accounting - Batch Purchase ",
    "version": "15",
    "license": "LGPL-3",
    "category": "accounting",
    "depends": ["account","purchase"]
    , "data": [
    'views/account_move.xml',
    'views/batch_purchase.xml',
    'views/batch_purchase_sarf.xml',
    'views/purchase_order.xml',
    'views/stock.xml',
    'report/batch_purchase.xml',
    'report/batch_purchase_template.xml',
    'security/batch_purchase.xml',
]
}


===== .\az_account_batch_purchase\design\classes.puml =====
@startuml classes
set namespaceSeparator none
class "AccountMove" as az_account_batch_purchase.models.account_move.AccountMove {
  batch_purchase_id
  purchase_delegate_id
  purchase_order_id
}
class "AccountMoveLine" as az_account_batch_purchase.models.account_move.AccountMoveLine {
  note
}
class "BatchPurchase" as az_account_batch_purchase.models.batch_purchase.BatchPurchase {
  date
  delegate_id
  line_count
  line_ids
  name
  purchase_order_count
  purchase_order_ids
  total
  total : int
  type
  vendor_bill_count
  check_data(vals_list)
  create(vals_list)
  get_name(_type)
  launch_purchase_orders()
  launch_vendor_bills()
  onchange_price_or_qty()
}
class "BatchVendorBillLine" as az_account_batch_purchase.models.batch_purchase.BatchVendorBillLine {
  analytic_account_id
  batch_id
  display_type
  line_count
  note
  price
  price_subtotal
  price_subtotal
  price_subtotal_with_tax
  price_subtotal_with_tax : float
  product_id
  product_uom
  product_uom_category_id
  quantity
  tax_ids
  vendor_id
  onchange_price_or_qty()
  onchange_vendor_id()
}
class "PurchaseOrder" as az_account_batch_purchase.models.purchase_order.PurchaseOrder {
  batch_purchase_id
  delegate_id
}
class "PurchaseOrderLine" as az_account_batch_purchase.models.purchase_order.PurchaseOrderLine {
  note
}
class "ResPartner" as az_account_batch_purchase.models.res_partner.ResPartner {
  create(vals_list)
}
class "StockMove" as az_account_batch_purchase.models.stock_picking.StockMove {
  batch_purchase_id
  delegate_id
}
class "StockPicking" as az_account_batch_purchase.models.stock_picking.StockPicking {
  batch_purchase_id
  delegate_id
}
@enduml


===== .\az_account_batch_purchase\design\packages.puml =====
@startuml packages
set namespaceSeparator none
package "az_account_batch_purchase.models" as az_account_batch_purchase.models {
}
package "az_account_batch_purchase.models.account_move" as az_account_batch_purchase.models.account_move {
}
package "az_account_batch_purchase.models.batch_purchase" as az_account_batch_purchase.models.batch_purchase {
}
package "az_account_batch_purchase.models.purchase_order" as az_account_batch_purchase.models.purchase_order {
}
package "az_account_batch_purchase.models.res_partner" as az_account_batch_purchase.models.res_partner {
}
package "az_account_batch_purchase.models.stock_picking" as az_account_batch_purchase.models.stock_picking {
}
@enduml


===== .\az_account_batch_purchase\models\account_move.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from odoo import fields, models


class AccountMove(models.Model):
    _inherit = "account.move"
    purchase_order_id = fields.Many2one('purchase.order', string="Purchase Order")
    batch_purchase_id = fields.Many2one(related='purchase_order_id.batch_purchase_id', string="Batch Purchase",
                                        store=True)
    purchase_delegate_id = fields.Many2one('hr.employee', string="Delegate")


class AccountMoveLine(models.Model):
    _inherit = "account.move.line"
    note = fields.Text()


===== .\az_account_batch_purchase\models\batch_purchase.py =====
===== .\az_account_batch_purchase\models\purchase_order.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from odoo import fields, models


class PurchaseOrder(models.Model):
    _inherit = "purchase.order"
    batch_purchase_id = fields.Many2one('batch.purchase', string="Batch Purchase")
    delegate_id = fields.Many2one(related='batch_purchase_id.delegate_id')


class PurchaseOrderLine(models.Model):
    _inherit = "purchase.order.line"
    note = fields.Text()
    account_id = fields.Many2one('account.account', 'Account')
    analytic_account_id = fields.Many2one('account.analytic.account', 'Analytic Account')


===== .\az_account_batch_purchase\models\res_partner.py =====
# -*- coding: utf-8 -*-
from odoo import models, api


class ResPartner(models.Model):
    _inherit = "res.partner"

    # When Creating a new vendor, assign its code
    @api.model_create_multi
    def create(self, vals_list):
        source = self.env.context.get('source')
        if source == 'vendor':
            last_vendor = self.env['res.partner'].search([('code', 'ilike', 'v%')], order='id desc', limit=1)
            if last_vendor:
                new_code = 'V'+str(int(last_vendor.code[1:]) + 1).zfill(4)
                vals_list[0]['code'] = new_code
                vals_list[0]['company_type'] = 'company'
                vals_list[0]['is_company'] = True
        return super().create(vals_list)


===== .\az_account_batch_purchase\models\stock_picking.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from odoo import fields, models


class StockPicking(models.Model):
    _inherit = "stock.picking"
    batch_purchase_id = fields.Many2one('batch.purchase', string="Batch Purchase")
    delegate_id = fields.Many2one(related='batch_purchase_id.delegate_id')



class StockMove(models.Model):
    _inherit = "stock.move"
    batch_purchase_id = fields.Many2one('batch.purchase', string="Batch Purchase")
    delegate_id = fields.Many2one(related='batch_purchase_id.delegate_id')


===== .\az_account_batch_purchase\models\__init__.py =====
# -*- coding: utf-8 -*-
from . import account_move
from . import batch_purchase
from . import purchase_order
from . import res_partner
from . import stock_picking

===== .\az_account_batch_purchase\report\batch_purchase.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
        <record id="report_batch_purchase_order" model="ir.actions.report">
            <field name="name">Batch Purchase Order Report</field>
            <field name="model">batch.purchase</field>
            <field name="report_type">qweb-pdf</field>
            <field name="report_name">az_account_batch_purchase.report_azbah_batch_purchase_order</field>
            <field name="print_report_name">'Batch Purchase Order'</field>
            <field name="binding_model_id" ref="az_account_batch_purchase.model_batch_purchase"/>
        </record>
</odoo>

===== .\az_account_batch_purchase\report\batch_purchase_template.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>
        <template id="report_azbah_batch_purchase_order">
            <t t-call="web.html_container">
                <t t-foreach="docs" t-as="o">
                    <t t-call="web.external_layout">
                        <div class="page">
                            <div class="row mt32">
                                <div class="col-xs-12"
                                     style="text-align:center;font-size: larger;font-weight: bolder;background-color:#C8C8C8">
                                    تقرير مشتريات مندوب
                                </div>
                            </div>
                            <div class="row mt16">
                                <div class="col-xs-6">
                                    <p>Date:
                                        <span t-field="o.date"/>
                                    </p>

                                    <p>Serial:
                                        <span t-field="o.name"/>
                                    </p>

                                    <p>Delegate:
                                        <span t-field="o.delegate_id.name"/>
                                    </p>
                                </div>
                                <div class="col-xs-6">
                                    <br/>
                                    <p>
                                        <strong>Total:
                                            <span t-field="o.total"/>
                                        </strong>
                                    </p>
                                </div>
                            </div>
                            <table class="table table-bordered" style="margin-top: 20px">
                                <thead>
                                    <tr>
                                        <th>Product</th>
                                        <th>Price</th>
                                        <th>With Tax</th>
                                        <th>Account</th>
                                        <th>Analytic Account</th>
                                        <th>Note</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <t t-foreach="o.line_ids" t-as="line">
                                        <t t-if="line.vendor_id.name">
                                            <t t-if="not line.product_id.name">
                                                <tr style="text-align:center;font-size: larger;font-weight: bolder;background-color:#C8C8C8">
                                                    <td colspan="5">
                                                        <span t-field="line.vendor_id.name"/>
                                                    </td>
                                                    <td>
                                                        <span t-field="line.price_subtotal_with_tax"/>
                                                    </td>
                                                </tr>
                                            </t>
                                            <t t-else="">
                                                <t t-if="line.vendor_id.name">
                                                    <tr>
                                                        <td>
                                                            <span t-field="line.product_id.name"/>
                                                        </td>
                                                        <td>
                                                            <span t-field="line.price"/>
                                                        </td>
                                                        <td>
                                                            <span t-field="line.price_subtotal_with_tax"/>
                                                        </td>
                                                        <td>
                                                            <span t-field="line.account_id.name"/>
                                                        </td>
                                                        <td>
                                                            <span t-field="line.analytic_account_id.name"/>
                                                        </td>
                                                        <td>
                                                            <span t-field="line.note"/>
                                                        </td>
                                                    </tr>
                                                </t>
                                            </t>
                                        </t>
                                    </t>
                                </tbody>
                            </table>


                            <table class="table table-bordered"
                                   style="font-weigh:bold;margin-top: 20px;direction:rtl;text-align:right">
                                <tr>
                                    <td style="tex-aling:center">توقيع المستلم</td>
                                    <td style="tex-aling:center">أمين الخزنة</td>
                                    <td style="tex-aling:center">الحسابات</td>
                                </tr>
                                <tr style="height:3em;">
                                    <td style="height:3em;"></td>
                                    <td style="height:3em;"></td>
                                    <td style="height:3em;"></td>
                                </tr>
                            </table>

                        </div>
                    </t>
                </t>
            </t>
        </template>
    </data>
</odoo>

===== .\az_account_batch_purchase\security\batch_purchase.xml =====
<odoo>
    <data>
        <!-- Define the access rights for the model -->
        <record model="ir.model.access" id="model_batch_purchase_access">
            <field name="name">batch.purchase</field>
            <field name="model_id" ref="model_batch_purchase"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_unlink" eval="True"/>
            <field name="group_id" ref="account.group_account_invoice" />

        </record>


         <!-- Define the access rights for the model -->
        <record model="ir.model.access" id="model_batch_purchase_line_access">
            <field name="name">batch.purchase.line</field>
            <field name="model_id" ref="model_batch_purchase_line"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_unlink" eval="True"/>
            <field name="group_id" ref="account.group_account_invoice" />

        </record>

    </data>
</odoo>


===== .\az_account_batch_purchase\static\src\scss\account_financial_report.scss =====
.o_foldable_menu {
    &.o_closed_menu {
        display: none;
    }
    .o_open_menu {
        display: block;
    }
}
@mixin o-account-reports-i-fa-toggle {
    i.fa {
        visibility: hidden;
    }
    &:hover i.fa {
        visibility: visible;
    }
}

.o_form_view {
    .o_account_reports_page {
        .o_input {
            width: 100%;
        }
    }
}

.o_account_reports_page {
    background-color: $o-view-background-color;
    color: $o-main-text-color;

    .dropdown-toggle::after {
        display: none; // disable bootstrap's carret and do it manaully for positionning
    }

    padding-bottom: 125px;
    @include o-webclient-padding($top: $o-sheet-vpadding, $bottom: $o-sheet-vpadding);
    .o_account_reports_level0 {
        border-width: 3px;
        font-weight: bold;
        // border-top-style: $border-top-style;
        border-bottom-style: double;
    }
    .o_account_reports_table {
        margin-bottom: 128px;
        th.o_account_report_column_header {
            &.sortable::before {
                content: '\f07d';
                font-family: 'FontAwesome';
                color: lightgray;
            }
            &.up::before {
                content: '\f176';
                color: black;
            }
            &.down::before {
                content: '\f175';
                color: black;
            }
            &:first-child {
                border: none;
            }
        }
    }
    .account_report_line_name a {
        color:#008784;
    }
    a {
        cursor: pointer;
    }
    .o_reports_date_to {
        margin-left: 20px;
    }
    .o_account_report_line {
        span {
            white-space: nowrap;
        }
        position: relative;
    }
    // truncate span content and ad '...' if content width > span width
    .o_account_report_line_ellipsis, .o_account_report_name_ellipsis{
        position: relative;
        span {
            position: absolute;
        }
        > span, span[class^="o_account_reports_domain_line_"] {
            left: 0;
            right: 0;
            top: 0;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    }
    .o_account_report_name_ellipsis {
        min-width: 200px;
        max-width: 50%;
    }
    .ellipsis_width {
        direction: rtl !important;
        height: 0 !important;
        position: relative !important;
        white-space: initial !important;
        display: inline-block !important;
        visibility: hidden;

    }

    tr:focus {
        outline: none;

        .o_account_report_line_ellipsis, .o_account_report_name_ellipsis {
            span {
                white-space: initial;
                overflow: initial;
                z-index: 1;
            }
        }
    }
    // ----------------------------------------------------------------
    .o_account_report_summary {
        padding-left: 5px;
    }
    .o_account_reports_summary_edit {
        padding-bottom: 40px;
        padding-top: 15px;
    }
    .js_account_report_foldable {
        cursor: pointer;
    }
    .color-red {
        color: red !important;
    }
    .color-green {
        color: green !important;
    }
    .color-transparent {
        opacity: 0 !important;
    }
    .trust-partner {
        font-size: 0.8em;
        margin-left: 5px;
    }
    .print_only {
        display: none;
    }
    .o_account_reports_table {
        &#table_header_clone {
            position: fixed;
            tbody {
                visibility: collapse;
                tr {
                    border: none;
                }
            }
        }

        width: 100%;

        .number {
            text-align: right;
        }
        .text {
            text-align: left;
        }
        .date {
            text-align: center;
        }
        th{
            background-color: white;
            background-clip: padding-box;
            border: 1px solid #e6e6e6;
            .subtitle{
                font-weight:normal;
            }
        }
        .o_account_reports_header_hierarchy {
            th {
                border-bottom: none;
            }
            th:not(:first-child) {
                border: 1px solid #e6e6e6;
                border-collapse: separate;
                padding-right: 8px;
                padding-left: 8px;
            }
        }
    }
    .oe_link_reports {
        @extend .btn;
        @extend .btn-outline-secondary;
        @extend .btn-sm;
        line-height: 0.8;
        vertical-align: initial;
    }
    .folded {
        .oe_link_reports {
            display: none;
        }
    }
    p.o_account_reports_contact_info {
        min-height: 30px;
    }
    .o_input {
        width: 70%;
    }
    .o_account_reports_edit_summary_pencil {
        margin-left: -15px;
        position: absolute;
    }
    table > tbody > tr >  td ~ td{
        padding-left: 8px;
        padding-right: 8px;
    }
    table > tbody > tr >  td{
        vertical-align: top;
    }
    .o_account_reports_summary {
        margin-bottom: 20px;
        @include o-account-reports-i-fa-toggle;
    }
    .o_account_reports_unfolded td + td span {
        visibility: hidden;
    }
    div.o_account_reports_saved_summary {
        padding-left: 5px;
    }
    .o_account_reports_web_action, .o_change_trust,
    span.o_account_reports_web_action, div.o_account_reports_saved_summary span,
    td.o_account_reports_unfoldable, td.o_account_reports_foldable, span.partner_id, span.move_line_id, input[type=checkbox] {
        cursor: pointer;
    }
    p.footnote > .text {
        white-space: pre-wrap;
    }
    p.footnote > .o_account_reports_footnote_icons, p.o_account_reports_footnote_edit > .o_account_reports_footnote_icons {
        visibility: hidden;
    }
    p.footnote:hover > .o_account_reports_footnote_icons {
        visibility: visible;
    }
    .o_account_reports_footnote_icons {
        position: absolute;
        margin-left: 3px;
    }
    .o_account_reports_caret_icon {
        position: absolute;
        display: contents;
        .fa {
            position: absolute;
            bottom: 4px;
        }
    }
    .o_account_reports_domain_line_0 {
        margin-left: 0px;
    }
    .o_account_reports_domain_line_1 {
        margin-left: 15px;
    }
    .o_account_reports_domain_line_2 {
        margin-left: 30px;
    }
    .o_account_reports_domain_line_3 {
        margin-left: 40px;
    }
    .o_account_reports_domain_line_4 {
        margin-left: 50px;
    }
    .o_account_reports_domain_line_5 {
        margin-left: 60px;
    }
    .o_account_reports_domain_line_6 {
        margin-left: 70px;
    }
    .o_account_reports_domain_line_7 {
        margin-left: 80px;
    }
    .o_account_reports_domain_line_8 {
        margin-left: 90px;
    }
    .o_account_reports_domain_line_9 {
        margin-left: 100px;
    }
    .o_account_reports_domain_line_10 {
        margin-left: 110px;
    }
    .o_account_reports_domain_line_11 {
        margin-left: 120px;
    }
    .o_account_reports_domain_line_12 {
        margin-left: 130px;
    }
    .o_account_reports_domain_line_13 {
        margin-left: 140px;
    }
    tr.o_account_reports_domain_total {
        font-weight: bold;
    }
    tr.o_account_reports_initial_balance {
        > td > span:last-child {
            margin-left: 30px;
        }
    }
    tr.hierarchy_total {
        font-weight: bold;
    }
    b.o_account_reports_footnote_sup {
        margin-top: 10px;
        color: $o-main-text-color;
    }
    ul.o_account_reports_domain_dropdown {
        margin-left: 70px
    }
    .total {
        font-weight: bold;
    }
    .o_account_reports_level0, .o_account_reports_level1, .o_account_reports_level2, .o_account_reports_domain_total, .total {
        .text-muted {
            color: #666666 !important;
        }
    }
    .o_foldable_total {
        color: #666666 !important;
        &.color-red{
            color: red !important;
        }
        &.color-green{
            color: green !important;
        }
    }
    .o_account_reports_totals_below_sections.o_js_account_report_parent_row_unfolded {
        .o_account_report_column_value {
            visibility: hidden;
        }
        td.number.o_foldable_total {
            border-bottom: none;
        }
    }
    td.o_foldable_total {
        font-weight: bold;
    }
    @mixin report_level($indent) {
        border-bottom: 1px solid #eee;
        > td.o_account_report_line_indent > span:last-child {
            margin-left: ($indent + 1) * 10px;
        }
        &.total {
            > td > span:last-child {
                margin-left: $indent * 10px;
            }
        }
    }
    .o_account_reports_level0 {
        & td {
            padding-top: 32px;
            span {
                top: unset;
            }
        }
        > td.o_account_report_line_indent.o_foldable_total > span:last-child {
            margin-left: 10px;
        }
    }
    .o_account_reports_level1 {
        @include report_level(1);
        font-weight: bold;
        border-bottom: 2px solid #bbb;
    }
    .o_account_reports_level2 {
        @include report_level(2);
        font-weight: bold;
        border-bottom: 1px solid #bbb;
    }
    .o_account_reports_level3 {
        @include report_level(3);
    }
    .o_account_reports_level4 {
        @include report_level(4);
    }
    .o_account_reports_level5 {
        @include report_level(5);
    }
    .o_account_reports_level6 {
        @include report_level(6);
    }
    .o_account_reports_level7 {
        @include report_level(7);
    }
    .o_account_reports_level8 {
        @include report_level(8);
    }
    .o_account_reports_level9 {
        @include report_level(9);
    }
    .o_account_reports_level10 {
        @include report_level(10);
    }
    .o_account_reports_level11 {
        @include report_level(11);
    }
    .o_account_reports_level12 {
        @include report_level(12);
    }
    .o_account_reports_level13 {
        @include report_level(13);
    }
    .o_account_reports_default_style {
        border-bottom: 1px solid #eee;
        > td.o_account_report_line_indent > tr:first-child > span:last-child {
            margin-left: 30px;
        }
        &.o_account_reports_domain_total {
            > td.o_account_report_line_indent > span:last-child {
                margin-left: 30px;
            }
        }
    }
    .o_account_followup_not_clicked {
        .o_account_followup_skip {
            display: inline-block;
        }
        .o_account_followup_done {
            display: none;
        }
    }
    .o_account_followup_clicked {
        .o_account_followup_skip {
            display: none;
        }
        .o_account_followup_done {
            display: inline-block;
        }
    }
    .o_account_reports_history {
        min-width: 300px;
    }
    .o_account_coa_column_contrast td:nth-child(4n-1),
    .o_account_coa_column_contrast td:nth-child(4n-2),
    td.o_account_coa_column_contrast:nth-child(4n-1),
    td.o_account_coa_column_contrast:nth-child(4n-2) {
        background-color: #FAFAFA;
        background-clip: padding-box;
    }
    .table-hover tbody tr:hover td {
        background-color: #F0F0F0;
        background-clip: padding-box;
    }
}

.o_form_view {
    .o_account_reports_no_print {
        div.o_account_reports_summary {
            cursor: pointer;
        }
        .o_account_reports_table {
            margin-bottom: 0px;
            tbody tr:not(.o_account_reports_level0):hover {
                background-color: #f0f0f0;
            }
        }
    }
}

.o_account-progress-bar-content {
    color: black;
    position: absolute;
    width: 100%;
}
.o_account-progress {
    position: relative;
}
.o_account_reports_history [summary="o_followup_letter_display_none"] {
    display: none;
}

.o_account_report_search {
    margin-left: 10px;
    margin-right: 10px;
    .o_account_report_select {
        min-width: 100px;
    }
}

// Filters lines
// -----------------------------------------
.o_reports_filter_input_wrapper {
    position: relative;
    float: right;
    width: 150px;
    margin-bottom: 20px;
    float: right;
        .searchIcon {
        position: absolute;
        right: 10px;
    }
}
    .o_account_reports_filter_input {
    border: none;
    border-bottom: 1px black solid;
}
    .o_account_reports_filtered_lines {
    display: none;
}

.o_account_reports_filter_journals {
    .dropdown-menu {
        overflow: auto;
        // 86.5px is the height of .o_control_panel
        max-height: calc(100vh - (86.5px + #{$o-navbar-height}));
    }
}

// Summary to be edited
// -----------------------------------------
.o_account_reports_body .o_account_reports_summary {
    display: inline-block;
    position: relative;


    .o_account_report_summary_placeholder{
        opacity: .5;
    }

    .o_account_report_summary {
        padding: 10px 0;

        &, > span, .o_input, .o_account_reports_edit_summary_pencil {
            transition: all .2s ease 0s;
        }
        > span {
            padding: 10px 0;
            display: block;
            line-height: 1;
        }
    }

    .o_input {
        border: none;
        padding: 10px;
    }

    .o_account_reports_edit_summary_pencil {
        @include o-position-absolute(20px, $left: 0);
        visibility: hidden;
        opacity: 0;
    }

    &:hover {
        .o_account_reports_edit_summary_pencil {
            visibility: visible;
            opacity: 1;
        }

        .o_account_report_summary .o_input, .o_account_report_summary span {
            padding-right: 0;
        }
    }
}

.o_account_reports_body {
    .alert a {
        cursor: pointer;
    }
}

.o_account_reports_summary_edit {
    padding-bottom: 25px;
    padding-top: 10px;

    textarea {
        border: 1px solid gray('600');
        resize: vertical;
        width: 100%;
    }
}

.o_financial_report_hover_popup {
    color: orange;
}

// Print mode report summary
// -----------------------------------------
p.o_account_reports_contact_info {
    min-height: 30px;
}

.o_account_reports_load_more {
    span.account_report_line_name {
        cursor: pointer;
        direction: rtl  !important;
    }
}

.o_country_specific_report_label {
    margin-left: 16px;
    background-color: white;
}

.o_account_reports_filter_currency {
    > .dropdown-menu {
        overflow-y: auto;
        max-height: calc(100vh - #{$o-navbar-height} - 100px);  // 100px for the control panel
    }
}


===== .\az_account_batch_purchase\static\src\scss\account_report_print.scss =====
.o_account_reports_summary_edit {
    display: none !important;
}
.caret {
    display: none !important;
}
.o_account_reports_body_print {
    background-color: white !important;
    color: black !important;
    font-size: 12px !important;
    .o_account_reports_header {
        padding: 10px;
        background-color: #eee;
    }
    .o_account_reports_page {
        color: black !important;
    }
    .o_account_reports_table {
        margin-bottom: 0px;
        font-size: 12px !important;
        > tbody > tr {
            /* fix thead overlapping http://github.com/wkhtmltopdf/wkhtmltopdf/issues/1524 */
            page-break-inside: avoid;
        }
    }
    .o_account_reports_level0, .o_account_reports_level1, .o_account_reports_level2, .o_account_reports_domain_total, .total {
        .text-muted {
            color: black !important;
        }
    }
    .o_foldable_total {
        color: black !important;
    }
}
a {
    color: inherit !important;
}
.print_only {
    display: block !important;
    &.row {
        display: flex !important;
    }
}
[name="summary"] {
    display: none;
}
.no_print {
    display: none !important;
}

.o_account_reports_page {
    .o_account_report_line_ellipsis, .o_account_report_name_ellipsis{
        position: relative;
        span {
            position: absolute;
        }
        > span, span[class^="o_account_reports_domain_line_"] {
            white-space: normal;
            overflow: visible;
            text-overflow: initial;
            position: relative;
        }
    }
}


===== .\az_account_batch_purchase\views\account_move.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>

        <!-- VIEWS -->
        <record id="azbah_account_move_tree" model="ir.ui.view">
            <field name="name">azbah.account.move.tree</field>
            <field name="model">account.move</field>
            <field name="mode">extension</field>
            <field name="inherit_id" ref="account.view_in_invoice_bill_tree"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='ref']" position="before">
                    <field name="purchase_order_id"/>
                    <field name="batch_purchase_id"/>
                    <field name="purchase_delegate_id"/>
                </xpath>
            </field>
        </record>

        <record id="azbah_account_move_form" model="ir.ui.view">
            <field name="name">azbah.account.move.form</field>
            <field name="model">account.move</field>
            <field name="mode">extension</field>
            <field name="inherit_id" ref="account.view_move_form"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='payment_reference']" position="after">
                    <field name="purchase_order_id"/>
                    <field name="batch_purchase_id"/>
                    <field name="purchase_delegate_id"/>
                </xpath>

                <xpath expr="//field[@name='price_subtotal']" position="before">
                    <field name="note"/>
                </xpath>
            </field>
        </record>
    </data>
</odoo>


===== .\az_account_batch_purchase\views\batch_purchase.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>

        <!-- VIEWS -->
        <record id="azbah_view_batch_purchase_order_tree" model="ir.ui.view">
            <field name="name">azbah.batch.purchase.tree</field>
            <field name="model">batch.purchase</field>
            <field name="arch" type="xml">
                <tree>
                    <field name="name" string="Serial"/>
                    <field name="delegate_id"/>
                    <field name="date"/>
                    <field name="total"/>
                </tree>
            </field>
        </record>

        <record id="azbah_view_batch_purchase_order_form" model="ir.ui.view">
            <field name="name">azbah.bach.vendor.bill.form</field>
            <field name="model">batch.purchase</field>
            <field name="arch" type="xml">
                <form>
                    <sheet>
                        <div class="oe_button_box" name="button_box">
                            <button class="oe_stat_button" type="object" name="launch_stock_move_line" icon="fa-paper-plane"
                                    attrs=" {'invisible':[('name', '=', 'New')]}">
                                Stock   المخزن
                            </button>

                            <button class="oe_stat_button" type="object" name="launch_vendor_bills"
                                    icon="fa-pencil-square-o" attrs="{'invisible':[('name', '=', 'New')]}">
                                <field name="vendor_bill_count" widget="statinfo" string="Vendor Bills"/>
                            </button>
                        </div>
                        <group>
                            <field name="name" string="Serial"/>
                            <field name="delegate_id"/>
                            <field name="destination_location_id"/>
                            <field name="date"/>
                            <field name="total"/>
                            <field name="line_count" invisible="1"/>
                        </group>
                        <notebook>
                            <page string="Purchase Orders">
                                    <field name="line_ids" nolabel="1">
                                        <tree editable="bottom">
                                            <control>
                                                <create name="add_section_control" string="Add a Vendor"
                                                        context="{'default_display_type': 'line_section'}"/>
                                                <create name="add_product_control" string="Add a product"/>
                                            </control>
                                            <field name="batch_id" invisible="1"/>
                                            <field name="line_count" invisible="1"/>
                                            <field name="display_type" invisible="1"/>
                                            <field name="vendor_id"
                                                   options="{'no_create': True, 'no_create_edit': False}"
                                                   attrs="{'invisible': [('display_type', '!=', 'line_section')]}"/>
                                            <field name="product_id"
                                                   options="{'no_create': True, 'no_create_edit':True}"
                                                   attrs="{'invisible': [('display_type', '=', 'line_section')]}"/>
                                            <field name="product_uom_category_id" invisible="1"/>
                                            <field name="product_uom" widget='selection'
                                                   attrs="{'invisible': [('display_type', '=', 'line_section')]}"/>

                                            <field name="quantity"
                                                   attrs="{'invisible': [('display_type', '=', 'line_section')]}"/>
                                            <field name="account_id"
                                                   attrs="{'invisible': [('display_type', '=', 'line_section')]}"/>
                                            <field name="price"
                                                   attrs="{'invisible': [('display_type', '=', 'line_section')]}"/>
                                            <field name="price_subtotal"  readonly="1"
                                                   attrs="{'invisible': [('display_type', '=', 'line_section')]}"/>
                                            <field name="tax_ids" widget="many2many_tags" options="{'no_create':True}"
                                                   attrs="{'invisible': [('display_type', '=', 'line_section')]}"/>
                                            <field name="price_subtotal_with_tax"/>
                                            <field name="note"
                                                   attrs="{'invisible': [('display_type', '=', 'line_section')]}"/>
                                        </tree>
                                    </field>
                            </page>
                        </notebook>
                    </sheet>
                </form>
            </field>
        </record>

        <!-- ACTIONS -->

        <record id="action_azbah_view_batch_purchase_order" model="ir.actions.act_window">
            <field name="name">Batch Purchase Orders</field>
            <field name="res_model">batch.purchase</field>
            <field name="view_mode">tree,form</field>
            <field name="context">{'type': 'purchase'}</field>
            <field name="domain">[('type', '=', 'purchase')]</field>
        </record>

        <menuitem parent="purchase.menu_procurement_management"
                  id="menu_azbah_action_azbah_view_batch_purchase_order"
                  action="action_azbah_view_batch_purchase_order"
                  groups="account.group_account_user"
                  name="مشتريات مندوب"
                  sequence="100"/>

    </data>
</odoo>


===== .\az_account_batch_purchase\views\batch_purchase_sarf.xml =====
===== .\az_account_batch_purchase\views\purchase_order.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>

        <!-- VIEWS -->
        <record id="azbah_purchase_order_tree" model="ir.ui.view">
            <field name="name">azbah.purchase.order.tree</field>
            <field name="model">purchase.order</field>
            <field name="mode">extension</field>
            <field name="inherit_id" ref="purchase.purchase_order_view_tree"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='user_id']" position="before">
                    <field name="batch_purchase_id"/>
                    <field name="delegate_id"/>
                </xpath>
            </field>
        </record>

        <record id="azbah_purchase_order_form" model="ir.ui.view">
            <field name="name">azbah.purchase.order.form</field>
            <field name="model">purchase.order</field>
            <field name="mode">extension</field>
            <field name="inherit_id" ref="purchase.purchase_order_form"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='partner_ref']" position="after">
                    <field name="batch_purchase_id"/>
                    <field name="delegate_id"/>
                </xpath>

                <xpath expr="//field[@name='price_subtotal']" position="before">
                    <field name="note" invisible="1"/>
                </xpath>

            </field>
        </record>


        <!-- Filters -->

        <record id="purchase_order_view_search_inherited" model="ir.ui.view">
            <field name="name">purchase.order.select.inherited</field>
            <field name="model">purchase.order</field>
            <field name="inherit_id" ref="purchase.purchase_order_view_search"/>
            <field name="arch" type="xml">
                <search>

                    <!-- Add your custom filter here -->
                    <filter name="filter_origin"
                            string="مشتريات مندوب" domain="[('origin', '=', 'مشتريات مندوب')]"/>
                </search>
            </field>
        </record>


    </data>
</odoo>


===== .\az_account_batch_purchase\views\stock.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>

        <!-- VIEWS -->
        <record id="azbah_stock_picking_tree" model="ir.ui.view">
            <field name="name">azbah.stock.picking.tree</field>
            <field name="model">stock.picking</field>
            <field name="mode">extension</field>
            <field name="inherit_id" ref="stock.vpicktree"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='partner_id']" position="after">
                    <field name="batch_purchase_id"/>
                    <field name="delegate_id"/>
                </xpath>
            </field>
        </record>
        <record id="azbah_stock_picking_form" model="ir.ui.view">
            <field name="name">azbah.stock.picking.form</field>
            <field name="model">stock.picking</field>
            <field name="mode">extension</field>
            <field name="inherit_id" ref="stock.view_picking_form"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='location_dest_id']" position="after">
                    <field name="batch_purchase_id"/>
                    <field name="delegate_id"/>
                </xpath>
            </field>
        </record>
    </data>
</odoo>


===== .\az_account_partner_ledger_filter\__init__.py =====
# -*- coding: utf-8 -*-

from . import models
from . import wizard


===== .\az_account_partner_ledger_filter\__manifest__.py =====
# -*- coding: utf-8 -*-

{
    'name': 'AZ Partner Ledger with Partner Filter',
    'version': '15.0.1.0.1',
    'summary': """Azbah Partner Ledger Report with Partner Filter""",
    'description': """Partner Ledger Report with Partner Filter""",
    'category': 'Accounting',
    'depends': ['account'],
    'data': [
        'views/partner_ledger.xml',
        'report/report_partner_ledger.xml',
        'views/report.xml',
        'wizard/account_report_general_ledger_view.xml',
        'security/ir.model.access.csv',
    ],
    'images': ['static/description/banner.png'],
    'license': 'LGPL-3',
    'installable': True,
    'application': False
}


===== .\az_account_partner_ledger_filter\i18n\ar_001.po =====
===== .\az_account_partner_ledger_filter\models\account_partner_ledger.py =====
# -*- coding: utf-8 -*-

import time
import logging
from odoo import api, models, _,fields
from odoo.exceptions import UserError

_logger = logging.getLogger(__name__)


class ReportPartnerLedger(models.AbstractModel):
    _name = 'report.az_account_partner_ledger_filter.report_partnerledger'

    ###############

    def _lines(self, data, partner):
        full_account = []
        currency = self.env['res.currency']
        query_get_data = self.env['account.move.line'].with_context(
            data['form'].get('used_context', {}))._query_get()
        reconcile_clause = "" if data['form'][
            'reconciled'] else ' AND "account_move_line".full_reconcile_id IS NULL '
        params = [partner.id, tuple(data['computed']['move_state']),
                  tuple(data['computed']['account_ids'])] + \
                 query_get_data[2]
        query = """
              SELECT "account_move_line".id, "account_move_line".date, j.code, acc.code as a_code, acc.name as a_name, "account_move_line".ref, m.name as move_name, "account_move_line".name, "account_move_line".debit, "account_move_line".credit, "account_move_line".amount_currency,"account_move_line".currency_id, c.symbol AS currency_code
              FROM """ + query_get_data[0] + """
              LEFT JOIN account_journal j ON ("account_move_line".journal_id = j.id)
              LEFT JOIN account_account acc ON ("account_move_line".account_id = acc.id)
              LEFT JOIN res_currency c ON ("account_move_line".currency_id=c.id)
              LEFT JOIN account_move m ON (m.id="account_move_line".move_id)
              WHERE "account_move_line".partner_id = %s
                  AND m.state IN %s
                  AND "account_move_line".account_id IN %s AND """ + \
                query_get_data[1] + reconcile_clause + """
                  ORDER BY "account_move_line".date"""
        self.env.cr.execute(query, tuple(params))
        res = self.env.cr.dictfetchall()
        sum = 0.0
        lang_code = self.env.context.get('lang') or 'en_US'
        lang = self.env['res.lang']
        lang_id = lang._lang_get(lang_code)
        date_format = lang_id.date_format
        for r in res:
            r['date'] = r['date']
            r['displayed_name'] = '-'.join(
                r[field_name] for field_name in ('move_name', 'ref', 'name')
                if r[field_name] not in (None, '', '/')
            )
            sum += r['debit'] - r['credit']
            r['progress'] = sum
            r['currency_id'] = currency.browse(r.get('currency_id'))
            full_account.append(r)
        return full_account

    def _sum_partner(self, data, partner, field):
        if field not in ['debit', 'credit', 'debit - credit']:
            return
        result = 0.0
        query_get_data = self.env['account.move.line'].with_context(
            data['form'].get('used_context', {}))._query_get()
        reconcile_clause = "" if data['form'][
            'reconciled'] else ' AND "account_move_line".full_reconcile_id IS NULL '

        params = [partner.id, tuple(data['computed']['move_state']),
                  tuple(data['computed']['account_ids'])] + \
                 query_get_data[2]
        query = """SELECT sum(""" + field + """)
                  FROM """ + query_get_data[0] + """, account_move AS m
                  WHERE "account_move_line".partner_id = %s
                      AND m.id = "account_move_line".move_id
                      AND m.state IN %s
                      AND account_id IN %s
                      AND """ + query_get_data[1] + reconcile_clause
        self.env.cr.execute(query, tuple(params))

        contemp = self.env.cr.fetchone()
        if contemp is not None:
            result = contemp[0] or 0.0
        return result

    @api.model
    def _get_report_values(self, docids, data=None):
        if not data.get('form'):
            raise UserError(
                _("Form content is missing, this report cannot be printed."))

        data['computed'] = {}

        obj_partner = self.env['res.partner']
        query_get_data = self.env['account.move.line'].with_context(
            data['form'].get('used_context', {}))._query_get()
        data['computed']['move_state'] = ['draft', 'posted']
        if data['form'].get('target_move', 'all') == 'posted':
            data['computed']['move_state'] = ['posted']
        result_selection = data['form'].get('result_selection', 'customer')
        if result_selection == 'supplier':
            data['computed']['ACCOUNT_TYPE'] = ['payable']
        elif result_selection == 'customer':
            data['computed']['ACCOUNT_TYPE'] = ['receivable']
        else:
            data['computed']['ACCOUNT_TYPE'] = ['payable', 'receivable']

        self.env.cr.execute("""
              SELECT a.id
              FROM account_account a
              WHERE a.internal_type IN %s
              AND NOT a.deprecated""",
                            (tuple(data['computed']['ACCOUNT_TYPE']),))
        data['computed']['account_ids'] = [a for (a,) in
                                           self.env.cr.fetchall()]
        params = [tuple(data['computed']['move_state']),
                  tuple(data['computed']['account_ids'])] + query_get_data[2]
        reconcile_clause = "" if data['form'][
            'reconciled'] else ' AND "account_move_line".full_reconcile_id IS NULL '
        query = """
              SELECT DISTINCT "account_move_line".partner_id
              FROM """ + query_get_data[0] + """, account_account AS account, account_move AS am
              WHERE "account_move_line".partner_id IS NOT NULL
                  AND "account_move_line".account_id = account.id
                  AND am.id = "account_move_line".move_id
                  AND am.state IN %s
                  AND "account_move_line".account_id IN %s
                  AND NOT account.deprecated
                  AND """ + query_get_data[1] + reconcile_clause
        self.env.cr.execute(query, tuple(params))
        partner_ids = [res['partner_id'] for res in self.env.cr.dictfetchall()]
        partners = obj_partner.browse(partner_ids)
        partners = sorted(partners, key=lambda x: (x.ref or '', x.name or ''))
        return {
            'doc_ids': partner_ids,
            'doc_model': self.env['res.partner'],
            'data': data,
            'docs': partners,
            'time': time,
            'lines': self._lines,
            'sum_partner': self._sum_partner,
        }

    ############

    @api.model
    def _get_report_values(self, docids, data=None):
        if not data.get('form'):
            raise UserError(_("Form content is missing, this report cannot be printed."))

        data['computed'] = {}

        obj_partner = self.env['res.partner']
        query_get_data = self.env['account.move.line'].with_context(data['form'].get('used_context', {}))._query_get()
        data['computed']['move_state'] = ['draft', 'posted']
        if data['form'].get('target_move', 'all') == 'posted':
            data['computed']['move_state'] = ['posted']
        result_selection = data['form'].get('result_selection', 'customer')
        if result_selection == 'supplier':
            data['computed']['ACCOUNT_TYPE'] = ['payable']
        elif result_selection == 'customer':
            data['computed']['ACCOUNT_TYPE'] = ['receivable']
        else:
            data['computed']['ACCOUNT_TYPE'] = ['payable', 'receivable']

        self.env.cr.execute("""
            SELECT a.id
            FROM account_account a
            WHERE a.internal_type IN %s
            AND NOT a.deprecated""", (tuple(data['computed']['ACCOUNT_TYPE']),))
        data['computed']['account_ids'] = [a for (a,) in self.env.cr.fetchall()]
        params = [tuple(data['computed']['move_state']), tuple(data['computed']['account_ids'])] + query_get_data[2]
        reconcile_clause = "" if data['form']['reconciled'] else ' AND "account_move_line".full_reconcile_id IS NULL '
        query = """
            SELECT DISTINCT "account_move_line".partner_id
            FROM """ + query_get_data[0] + """, account_account AS account, account_move AS am
            WHERE "account_move_line".partner_id IS NOT NULL
                AND "account_move_line".account_id = account.id
                AND am.id = "account_move_line".move_id
                AND am.state IN %s
                AND "account_move_line".account_id IN %s
                AND NOT account.deprecated
                AND """ + query_get_data[1] + reconcile_clause
        self.env.cr.execute(query, tuple(params))
        # ---------------------Taking only selected partners---------------------------
        if data['form']['partner_ids']:
            partner_ids = data['form']['partner_ids']
        else:
            partner_ids = [res['partner_id'] for res in self.env.cr.dictfetchall()]
        # -----------------------------------------------------------------------------
        # partner_ids = [res['partner_id'] for res in self.env.cr.dictfetchall()]
        partners = obj_partner.browse(partner_ids)
        partners = sorted(partners, key = lambda x: (x.ref or '', x.name or ''))

        return {
            'doc_ids': partner_ids,
            'doc_model': self.env['res.partner'],
            'data': data,
            'docs': partners,
            'time': time,
            'lines': self._lines,
            'sum_partner': self._sum_partner,
        }


===== .\az_account_partner_ledger_filter\models\partner_ledger.py =====
# -*- coding: utf-8 -*-
from odoo import fields, models,api


class AccountPartnerLedger(models.TransientModel):
    _name = "account.report.partner.ledger"
    _inherit = "account.common.report"

    result_selection = fields.Selection(
        [('customer', 'Receivable Accounts'), ('supplier', 'Payable Accounts'),
         ('customer_supplier', 'Receivable and Payable Accounts')],
        string="Partner's", required=True, default='customer')

    def pre_print_report(self, data):
        data['form'].update(self.read(['result_selection'])[0])
        return data


    amount_currency = fields.Boolean(
        string="With Currency",
        help="It adds the currency column on report if the currency differs "
             "from the company currency.")
    reconciled = fields.Boolean(string='Reconciled Entries')

    def _print_report(self, data):
        data = self.pre_print_report(data)
        data['form'].update({'reconciled': self.reconciled,
                             'amount_currency': self.amount_currency})
        return self.env.ref(
            'az_account_partner_ledger_filter.action_report_partnerledger').report_action(
            self, data=data)


===== .\az_account_partner_ledger_filter\models\__init__.py =====
# -*- coding: utf-8 -*-

from . import account_partner_ledger
from . import partner_ledger


===== .\az_account_partner_ledger_filter\report\report_partner_ledger.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <template id="report_partnerledger">
        <t t-call="web.html_container">
            <t t-call="web.internal_layout">
                <t t-set="data_report_margin_top" t-value="12"/>
                <t t-set="data_report_header_spacing" t-value="9"/>
                <t t-set="data_report_dpi" t-value="110"/>
                <div class="page">
                    <h2>Partner Ledger</h2>
                    <div class="row">
                        <div class="col-3">
                            <strong>Company:</strong>
                            <p t-esc="env.company.name"/>
                        </div>
                        <div class="col-3">
                            <t t-if="data['form']['date_from']">
                                <strong>Date from :</strong>
                                <span t-esc="data['form']['date_from']"/>
                                <br/>
                            </t>
                            <t t-if="data['form']['date_to']">
                                <strong>Date to :</strong>
                                <span t-esc="data['form']['date_to']"/>
                            </t>
                        </div>
                        <div class="col-3">
                            <strong>Target Moves:</strong>
                            <p t-if="data['form']['target_move'] == 'all'">All Entries</p>
                            <p t-if="data['form']['target_move'] == 'posted'">All Posted Entries</p>
                        </div>
                    </div>

                    <table class="table table-sm table-reports">
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th>JRNL</th>
                                <th>Account</th>
                                <th>Ref</th>
                                <th>Debit</th>
                                <th>Credit</th>
                                <th>Balance</th>
                                <th t-if="data['form']['amount_currency']">Currency</th>
                            </tr>
                        </thead>
                        <t t-foreach="docs" t-as="o">
                            <tbody>
                                <tr>
                                    <td colspan="4">
                                        <strong t-esc="o.ref"/>
                                        -
                                        <strong t-esc="o.name"/>
                                    </td>
                                    <td class="text-right">
                                        <strong t-esc="sum_partner(data, o, 'debit')"
                                                t-options="{'widget': 'monetary', 'display_currency': env.company.currency_id}"/>
                                    </td>
                                    <td class="text-right">
                                        <strong t-esc="sum_partner(data, o, 'credit')"
                                                t-options="{'widget': 'monetary', 'display_currency': env.company.currency_id}"/>
                                    </td>
                                    <td class="text-right">
                                        <strong t-esc="sum_partner(data, o, 'debit - credit')"
                                                t-options="{'widget': 'monetary', 'display_currency': env.company.currency_id}"/>
                                    </td>
                                </tr>
                                <tr t-foreach="lines(data, o)" t-as="line">
                                    <td>
                                        <span t-esc="line['date']"/>
                                    </td>
                                    <td>
                                        <span t-esc="line['code']"/>
                                    </td>
                                    <td>
                                        <span t-esc="line['a_code']"/>
                                    </td>
                                    <td>
                                        <span t-esc="line['displayed_name']"/>
                                    </td>
                                    <td class="text-right">
                                        <span t-esc="line['debit']"
                                              t-options="{'widget': 'monetary', 'display_currency': env.company.currency_id}"/>
                                    </td>
                                    <td class="text-right">
                                        <span t-esc="line['credit']"
                                              t-options="{'widget': 'monetary', 'display_currency': env.company.currency_id}"/>
                                    </td>
                                    <td class="text-right">
                                        <span t-esc="line['progress']"
                                              t-options="{'widget': 'monetary', 'display_currency': env.company.currency_id}"/>
                                    </td>
                                    <td class="text-right" t-if="data['form']['amount_currency']">
                                        <t t-if="line['currency_id']">
                                            <span t-esc="line['amount_currency']"
                                                  t-options="{'widget': 'monetary', 'display_currency': line['currency_id']}"/>
                                        </t>
                                    </td>
                                </tr>
                            </tbody>
                        </t>
                    </table>
                </div>
            </t>
        </t>
    </template>
</odoo>


===== .\az_account_partner_ledger_filter\security\ir.model.access.csv =====
id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
access_account_report_partner_ledger,access.account.report.partner.ledger,model_account_report_partner_ledger,account.group_account_user,1,1,1,1


===== .\az_account_partner_ledger_filter\views\partner_ledger.xml =====
===== .\az_account_partner_ledger_filter\views\report.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>

        <!--    # Partner ledger report    -->
     <record id="action_report_partnerledger" model="ir.actions.report">
            <field name="name">Partner Ledger</field>
            <field name="model">account.report.partner.ledger</field>
            <field name="report_type">qweb-pdf</field>
            <field name="report_name">az_account_partner_ledger_filter.report_partnerledger</field>
            <field name="report_file">az_account_partner_ledger_filter.report_partnerledger</field>
        </record>
    <data>
        <act_window name="Partner Ledger"
            res_model="account.report.partner.ledger"
            binding_model="res.partner"
            view_mode="form"
            view_id ="account_report_partner_ledger_view"
            target="new"
            id="action_account_partner_ledger_report_filter"
            context="{'default_partner_ids':active_ids}"
        />
    </data>
</odoo>

===== .\az_account_partner_ledger_filter\wizard\account_report_general_ledger_view.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <record id="account_report_partner_ledger_filter_view" model="ir.ui.view">
        <field name="name">Partner Ledger</field>
        <field name="model">account.report.partner.ledger</field>
        <field name="inherit_id" ref="az_account_partner_ledger_filter.account_report_partner_ledger_view"/>
        <field name="arch" type="xml">
        <data>
            <xpath expr="//field[@name='journal_ids']" position="replace">
                <field name="journal_ids" widget="many2many_tags" invisible="1"/>
                <field name="my_journal_ids" widget="many2many_tags"/>
                <field name="partner_ids" widget="many2many_tags"/>
            </xpath>
        </data>
        </field>
    </record>
</odoo>


===== .\az_account_partner_ledger_filter\wizard\account_report_partner_ledger.py =====
# -*- coding: utf-8 -*-

from odoo import fields, models,api


class AccountPartnerLedger(models.TransientModel):
    _inherit = "account.report.partner.ledger"

    partner_ids = fields.Many2many('res.partner', 'partner_ledger_res_partner_rel', 'id', 'partner_id', string='Partners')

    def _default_journal_ids(self):
        defo = self.env['account.journal'].search([('id', 'in', [5])])
        return defo

    my_journal_ids = fields.Many2many(
        comodel_name='account.journal',relation="journal_filter_rel",
        string='Journals',
        required=True,
    )
    @api.onchange('my_journal_ids')
    def on_change(self):
        if self.my_journal_ids:
            self.journal_ids = self.my_journal_ids

    @api.model
    def default_get(self, fields_list):
        defaults = super(AccountPartnerLedger, self).default_get(fields_list)
        if 'journal_ids' in fields_list:
            defaults['journal_ids'] = self.env['account.journal'].search([('id', 'in', [5])])
        return defaults


    def _print_report(self, data):
        data = self.pre_print_report(data)
        data['form'].update({'reconciled': self.reconciled, 'amount_currency': self.amount_currency,
                             'partner_ids': self.partner_ids.ids})
        return self.env.ref('az_account_partner_ledger_filter.action_report_partnerledger').report_action(self, data=data)


===== .\az_account_partner_ledger_filter\wizard\__init__.py =====
# -*- coding: utf-8 -*-

from . import account_report_partner_ledger


===== .\az_account_payments\__init__.py =====
from . import models


===== .\az_account_payments\__manifest__.py =====
{
    "name": "AZ-Accounting - Payments",
    "version": "15",
    "license": "LGPL-3",
    "category": "accounting",
    "depends": ['account', 'azbah_trivial']
    , "data": [
    'views/account_payment_view.xml'
    , 'views/account_payment_view_extensions.xml'
    , 'views/account_journal_view.xml'
    , 'report/sanad_template.xml',

]
}


===== .\az_account_payments\models\account_journal.py =====
# -*- coding: utf-8 -*-
from lxml import etree

from odoo import models, fields, api, _
from odoo.exceptions import UserError, ValidationError


class AccountJournal(models.Model):
    _inherit = "account.journal"
    sanad_account_id = fields.Many2one("account.account", string="الحساب المرتبط")


===== .\az_account_payments\models\account_payment.py =====
===== .\az_account_payments\models\__init__.py =====
# -*- coding: utf-8 -*-
from . import account_payment
from . import account_journal

===== .\az_account_payments\report\sanad_template.xml =====
===== .\az_account_payments\static\src\css\sanad_styles.css =====
/* Custom Fonts */
@font-face {
    font-family: 'almarai_bold';
    src: url('../fonts/almarai_bold.ttf') format('truetype');
    font-weight: bold;
    font-style: normal;
}

@font-face {
    font-family: 'cairo_bold';
    src: url('../fonts/cairo_bold.ttf') format('truetype');
    font-weight: bold;
    font-style: normal;
}

@font-face {
    font-family: 'hacen_promoter_lt';
    src: url('../fonts/hacen_promoter_lt.ttf') format('truetype');
    font-weight: bold;
    font-style: normal;
}

@font-face {
    font-family: 'khalid_art_bold';
    src: url('../fonts/khalid_art_bold.ttf') format('truetype');
    font-weight: bold;
    font-style: normal;
}


.mybox {
    padding: 10px;
    direction: rtl;
    text-align: right;
    width: 100%;
    height: 10cm;
    background-color: #fff;
    box-shadow: 7px 10px 5px 2px rgba(0, 0, 0, 0.2);
    border: 1px solid #ccc;
    background-image: linear-gradient(139deg, #fafafa 23.86%, #ffffff 23.86%, #ffffff 50%,
    #fafafa 50%, #fafafa 73.86%, #ffffff 73.86%, #ffffff 100%);
    background-size: 67.07px 58.30px;

}


.normal_text_ar {
    font-family: cairo_bold;
    font-size: 11pt;
}

.title_text_ar {
    font-family: khalid_art_bold;
    font-size: 14pt;
}

.normal_text_en {
    font-family: "Arial Black";
    font-size: 9pt;
}

table {
    border-spacing: 0 25px;
}

.bottom_border {
    border-bottom: 1px;
    border-bottom-style: solid;
}

td {
    padding-top: 6px;
    padding-bottom: 6px;
}

span {
    padding-right: 10px;
    padding-left: 10px;
    text-align: right;
    direction: rtl;
}

===== .\az_account_payments\static\src\scss\account_financial_report.scss =====
.o_foldable_menu {
    &.o_closed_menu {
        display: none;
    }
    .o_open_menu {
        display: block;
    }
}
@mixin o-account-reports-i-fa-toggle {
    i.fa {
        visibility: hidden;
    }
    &:hover i.fa {
        visibility: visible;
    }
}

.o_form_view {
    .o_account_reports_page {
        .o_input {
            width: 100%;
        }
    }
}

.o_account_reports_page {
    background-color: $o-view-background-color;
    color: $o-main-text-color;

    .dropdown-toggle::after {
        display: none; // disable bootstrap's carret and do it manaully for positionning
    }

    padding-bottom: 125px;
    @include o-webclient-padding($top: $o-sheet-vpadding, $bottom: $o-sheet-vpadding);
    .o_account_reports_level0 {
        border-width: 3px;
        font-weight: bold;
        // border-top-style: $border-top-style;
        border-bottom-style: double;
    }
    .o_account_reports_table {
        margin-bottom: 128px;
        th.o_account_report_column_header {
            &.sortable::before {
                content: '\f07d';
                font-family: 'FontAwesome';
                color: lightgray;
            }
            &.up::before {
                content: '\f176';
                color: black;
            }
            &.down::before {
                content: '\f175';
                color: black;
            }
            &:first-child {
                border: none;
            }
        }
    }
    .account_report_line_name a {
        color:#008784;
    }
    a {
        cursor: pointer;
    }
    .o_reports_date_to {
        margin-left: 20px;
    }
    .o_account_report_line {
        span {
            white-space: nowrap;
        }
        position: relative;
    }
    // truncate span content and ad '...' if content width > span width
    .o_account_report_line_ellipsis, .o_account_report_name_ellipsis{
        position: relative;
        span {
            position: absolute;
        }
        > span, span[class^="o_account_reports_domain_line_"] {
            left: 0;
            right: 0;
            top: 0;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    }
    .o_account_report_name_ellipsis {
        min-width: 200px;
        max-width: 50%;
    }
    .ellipsis_width {
        direction: rtl !important;
        height: 0 !important;
        position: relative !important;
        white-space: initial !important;
        display: inline-block !important;
        visibility: hidden;

    }

    tr:focus {
        outline: none;

        .o_account_report_line_ellipsis, .o_account_report_name_ellipsis {
            span {
                white-space: initial;
                overflow: initial;
                z-index: 1;
            }
        }
    }
    // ----------------------------------------------------------------
    .o_account_report_summary {
        padding-left: 5px;
    }
    .o_account_reports_summary_edit {
        padding-bottom: 40px;
        padding-top: 15px;
    }
    .js_account_report_foldable {
        cursor: pointer;
    }
    .color-red {
        color: red !important;
    }
    .color-green {
        color: green !important;
    }
    .color-transparent {
        opacity: 0 !important;
    }
    .trust-partner {
        font-size: 0.8em;
        margin-left: 5px;
    }
    .print_only {
        display: none;
    }
    .o_account_reports_table {
        &#table_header_clone {
            position: fixed;
            tbody {
                visibility: collapse;
                tr {
                    border: none;
                }
            }
        }

        width: 100%;

        .number {
            text-align: right;
        }
        .text {
            text-align: left;
        }
        .date {
            text-align: center;
        }
        th{
            background-color: white;
            background-clip: padding-box;
            border: 1px solid #e6e6e6;
            .subtitle{
                font-weight:normal;
            }
        }
        .o_account_reports_header_hierarchy {
            th {
                border-bottom: none;
            }
            th:not(:first-child) {
                border: 1px solid #e6e6e6;
                border-collapse: separate;
                padding-right: 8px;
                padding-left: 8px;
            }
        }
    }
    .oe_link_reports {
        @extend .btn;
        @extend .btn-outline-secondary;
        @extend .btn-sm;
        line-height: 0.8;
        vertical-align: initial;
    }
    .folded {
        .oe_link_reports {
            display: none;
        }
    }
    p.o_account_reports_contact_info {
        min-height: 30px;
    }
    .o_input {
        width: 70%;
    }
    .o_account_reports_edit_summary_pencil {
        margin-left: -15px;
        position: absolute;
    }
    table > tbody > tr >  td ~ td{
        padding-left: 8px;
        padding-right: 8px;
    }
    table > tbody > tr >  td{
        vertical-align: top;
    }
    .o_account_reports_summary {
        margin-bottom: 20px;
        @include o-account-reports-i-fa-toggle;
    }
    .o_account_reports_unfolded td + td span {
        visibility: hidden;
    }
    div.o_account_reports_saved_summary {
        padding-left: 5px;
    }
    .o_account_reports_web_action, .o_change_trust,
    span.o_account_reports_web_action, div.o_account_reports_saved_summary span,
    td.o_account_reports_unfoldable, td.o_account_reports_foldable, span.partner_id, span.move_line_id, input[type=checkbox] {
        cursor: pointer;
    }
    p.footnote > .text {
        white-space: pre-wrap;
    }
    p.footnote > .o_account_reports_footnote_icons, p.o_account_reports_footnote_edit > .o_account_reports_footnote_icons {
        visibility: hidden;
    }
    p.footnote:hover > .o_account_reports_footnote_icons {
        visibility: visible;
    }
    .o_account_reports_footnote_icons {
        position: absolute;
        margin-left: 3px;
    }
    .o_account_reports_caret_icon {
        position: absolute;
        display: contents;
        .fa {
            position: absolute;
            bottom: 4px;
        }
    }
    .o_account_reports_domain_line_0 {
        margin-left: 0px;
    }
    .o_account_reports_domain_line_1 {
        margin-left: 15px;
    }
    .o_account_reports_domain_line_2 {
        margin-left: 30px;
    }
    .o_account_reports_domain_line_3 {
        margin-left: 40px;
    }
    .o_account_reports_domain_line_4 {
        margin-left: 50px;
    }
    .o_account_reports_domain_line_5 {
        margin-left: 60px;
    }
    .o_account_reports_domain_line_6 {
        margin-left: 70px;
    }
    .o_account_reports_domain_line_7 {
        margin-left: 80px;
    }
    .o_account_reports_domain_line_8 {
        margin-left: 90px;
    }
    .o_account_reports_domain_line_9 {
        margin-left: 100px;
    }
    .o_account_reports_domain_line_10 {
        margin-left: 110px;
    }
    .o_account_reports_domain_line_11 {
        margin-left: 120px;
    }
    .o_account_reports_domain_line_12 {
        margin-left: 130px;
    }
    .o_account_reports_domain_line_13 {
        margin-left: 140px;
    }
    tr.o_account_reports_domain_total {
        font-weight: bold;
    }
    tr.o_account_reports_initial_balance {
        > td > span:last-child {
            margin-left: 30px;
        }
    }
    tr.hierarchy_total {
        font-weight: bold;
    }
    b.o_account_reports_footnote_sup {
        margin-top: 10px;
        color: $o-main-text-color;
    }
    ul.o_account_reports_domain_dropdown {
        margin-left: 70px
    }
    .total {
        font-weight: bold;
    }
    .o_account_reports_level0, .o_account_reports_level1, .o_account_reports_level2, .o_account_reports_domain_total, .total {
        .text-muted {
            color: #666666 !important;
        }
    }
    .o_foldable_total {
        color: #666666 !important;
        &.color-red{
            color: red !important;
        }
        &.color-green{
            color: green !important;
        }
    }
    .o_account_reports_totals_below_sections.o_js_account_report_parent_row_unfolded {
        .o_account_report_column_value {
            visibility: hidden;
        }
        td.number.o_foldable_total {
            border-bottom: none;
        }
    }
    td.o_foldable_total {
        font-weight: bold;
    }
    @mixin report_level($indent) {
        border-bottom: 1px solid #eee;
        > td.o_account_report_line_indent > span:last-child {
            margin-left: ($indent + 1) * 10px;
        }
        &.total {
            > td > span:last-child {
                margin-left: $indent * 10px;
            }
        }
    }
    .o_account_reports_level0 {
        & td {
            padding-top: 32px;
            span {
                top: unset;
            }
        }
        > td.o_account_report_line_indent.o_foldable_total > span:last-child {
            margin-left: 10px;
        }
    }
    .o_account_reports_level1 {
        @include report_level(1);
        font-weight: bold;
        border-bottom: 2px solid #bbb;
    }
    .o_account_reports_level2 {
        @include report_level(2);
        font-weight: bold;
        border-bottom: 1px solid #bbb;
    }
    .o_account_reports_level3 {
        @include report_level(3);
    }
    .o_account_reports_level4 {
        @include report_level(4);
    }
    .o_account_reports_level5 {
        @include report_level(5);
    }
    .o_account_reports_level6 {
        @include report_level(6);
    }
    .o_account_reports_level7 {
        @include report_level(7);
    }
    .o_account_reports_level8 {
        @include report_level(8);
    }
    .o_account_reports_level9 {
        @include report_level(9);
    }
    .o_account_reports_level10 {
        @include report_level(10);
    }
    .o_account_reports_level11 {
        @include report_level(11);
    }
    .o_account_reports_level12 {
        @include report_level(12);
    }
    .o_account_reports_level13 {
        @include report_level(13);
    }
    .o_account_reports_default_style {
        border-bottom: 1px solid #eee;
        > td.o_account_report_line_indent > tr:first-child > span:last-child {
            margin-left: 30px;
        }
        &.o_account_reports_domain_total {
            > td.o_account_report_line_indent > span:last-child {
                margin-left: 30px;
            }
        }
    }
    .o_account_followup_not_clicked {
        .o_account_followup_skip {
            display: inline-block;
        }
        .o_account_followup_done {
            display: none;
        }
    }
    .o_account_followup_clicked {
        .o_account_followup_skip {
            display: none;
        }
        .o_account_followup_done {
            display: inline-block;
        }
    }
    .o_account_reports_history {
        min-width: 300px;
    }
    .o_account_coa_column_contrast td:nth-child(4n-1),
    .o_account_coa_column_contrast td:nth-child(4n-2),
    td.o_account_coa_column_contrast:nth-child(4n-1),
    td.o_account_coa_column_contrast:nth-child(4n-2) {
        background-color: #FAFAFA;
        background-clip: padding-box;
    }
    .table-hover tbody tr:hover td {
        background-color: #F0F0F0;
        background-clip: padding-box;
    }
}

.o_form_view {
    .o_account_reports_no_print {
        div.o_account_reports_summary {
            cursor: pointer;
        }
        .o_account_reports_table {
            margin-bottom: 0px;
            tbody tr:not(.o_account_reports_level0):hover {
                background-color: #f0f0f0;
            }
        }
    }
}

.o_account-progress-bar-content {
    color: black;
    position: absolute;
    width: 100%;
}
.o_account-progress {
    position: relative;
}
.o_account_reports_history [summary="o_followup_letter_display_none"] {
    display: none;
}

.o_account_report_search {
    margin-left: 10px;
    margin-right: 10px;
    .o_account_report_select {
        min-width: 100px;
    }
}

// Filters lines
// -----------------------------------------
.o_reports_filter_input_wrapper {
    position: relative;
    float: right;
    width: 150px;
    margin-bottom: 20px;
    float: right;
        .searchIcon {
        position: absolute;
        right: 10px;
    }
}
    .o_account_reports_filter_input {
    border: none;
    border-bottom: 1px black solid;
}
    .o_account_reports_filtered_lines {
    display: none;
}

.o_account_reports_filter_journals {
    .dropdown-menu {
        overflow: auto;
        // 86.5px is the height of .o_control_panel
        max-height: calc(100vh - (86.5px + #{$o-navbar-height}));
    }
}

// Summary to be edited
// -----------------------------------------
.o_account_reports_body .o_account_reports_summary {
    display: inline-block;
    position: relative;


    .o_account_report_summary_placeholder{
        opacity: .5;
    }

    .o_account_report_summary {
        padding: 10px 0;

        &, > span, .o_input, .o_account_reports_edit_summary_pencil {
            transition: all .2s ease 0s;
        }
        > span {
            padding: 10px 0;
            display: block;
            line-height: 1;
        }
    }

    .o_input {
        border: none;
        padding: 10px;
    }

    .o_account_reports_edit_summary_pencil {
        @include o-position-absolute(20px, $left: 0);
        visibility: hidden;
        opacity: 0;
    }

    &:hover {
        .o_account_reports_edit_summary_pencil {
            visibility: visible;
            opacity: 1;
        }

        .o_account_report_summary .o_input, .o_account_report_summary span {
            padding-right: 0;
        }
    }
}

.o_account_reports_body {
    .alert a {
        cursor: pointer;
    }
}

.o_account_reports_summary_edit {
    padding-bottom: 25px;
    padding-top: 10px;

    textarea {
        border: 1px solid gray('600');
        resize: vertical;
        width: 100%;
    }
}

.o_financial_report_hover_popup {
    color: orange;
}

// Print mode report summary
// -----------------------------------------
p.o_account_reports_contact_info {
    min-height: 30px;
}

.o_account_reports_load_more {
    span.account_report_line_name {
        cursor: pointer;
        direction: rtl  !important;
    }
}

.o_country_specific_report_label {
    margin-left: 16px;
    background-color: white;
}

.o_account_reports_filter_currency {
    > .dropdown-menu {
        overflow-y: auto;
        max-height: calc(100vh - #{$o-navbar-height} - 100px);  // 100px for the control panel
    }
}


===== .\az_account_payments\static\src\scss\account_report_print.scss =====
.o_account_reports_summary_edit {
    display: none !important;
}
.caret {
    display: none !important;
}
.o_account_reports_body_print {
    background-color: white !important;
    color: black !important;
    font-size: 12px !important;
    .o_account_reports_header {
        padding: 10px;
        background-color: #eee;
    }
    .o_account_reports_page {
        color: black !important;
    }
    .o_account_reports_table {
        margin-bottom: 0px;
        font-size: 12px !important;
        > tbody > tr {
            /* fix thead overlapping http://github.com/wkhtmltopdf/wkhtmltopdf/issues/1524 */
            page-break-inside: avoid;
        }
    }
    .o_account_reports_level0, .o_account_reports_level1, .o_account_reports_level2, .o_account_reports_domain_total, .total {
        .text-muted {
            color: black !important;
        }
    }
    .o_foldable_total {
        color: black !important;
    }
}
a {
    color: inherit !important;
}
.print_only {
    display: block !important;
    &.row {
        display: flex !important;
    }
}
[name="summary"] {
    display: none;
}
.no_print {
    display: none !important;
}

.o_account_reports_page {
    .o_account_report_line_ellipsis, .o_account_report_name_ellipsis{
        position: relative;
        span {
            position: absolute;
        }
        > span, span[class^="o_account_reports_domain_line_"] {
            white-space: normal;
            overflow: visible;
            text-overflow: initial;
            position: relative;
        }
    }
}


===== .\az_account_payments\views\account_journal_view.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>
        <record id="view_azbah_account_journal_form_inherited" model="ir.ui.view">
            <field name="name">azbah.account.journal.form</field>
            <field name="model">account.journal</field>
            <field name="inherit_id" ref="account.view_account_journal_form"/>
            <field name="arch" type="xml">

                <xpath expr="//page[@name='advanced_settings']" position="inside">
                    <group groups="base.group_no_one">
                        <group>
                            <field name="sanad_account_id" string="الحساب المرتبط"/>
                        </group>
                    </group>
                </xpath>

            </field>
        </record>


    </data>
</odoo>


===== .\az_account_payments\views\account_payment_view.xml =====
===== .\az_account_payments\views\account_payment_view_extensions.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>


        <!--Views-->

        <!--Payments Sanad Form-->
        <record id="azbah_view_form_account_payment_extension" model="ir.ui.view">
            <field name="name">azbah.account.payment.form.extension</field>
            <field name="model">account.payment</field>
            <field name="inherit_id" ref="account.view_account_payment_form"/>
            <field name="mode">extension</field>
            <field name="arch" type="xml">

                <field name='is_internal_transfer' position="before">
                    <field name="is_sanad" invisible="1"/>
                    <field name="sanad_type" invisible="1"/>
                </field>

                <field name='is_internal_transfer' position="attributes">
                    <attribute name="attrs">{'invisible': [('sanad_type', '=', 'bank')]}</attribute>
                </field>
                <field name='payment_type' position="attributes">
                    <attribute name="attrs">{'invisible': [('sanad_type', '=', 'bank')]}</attribute>
                </field>

                <field name='journal_id' position="after">
                    <field name="destination_journal_id"
                           attrs="{'invisible': [('sanad_type','!=','bank')]}"/>
                </field>

            </field>
        </record>


        <!--Payments Sanad Tree-->
        <record id="azbah_view_tree_account_payment_extension" model="ir.ui.view">
            <field name="name">azbah.account.payment.tree.extension</field>
            <field name="model">account.payment</field>
            <field name="inherit_id" ref="account.view_account_payment_tree"/>
            <field name="mode">extension</field>
            <field name="arch" type="xml">
                <field name='state' position="after">
                    <field name="is_sanad"/>
                    <field name="sanad_type"/>
                </field>
            </field>
        </record>


    </data>
</odoo>


===== .\az_account_qr\__init__.py =====
from . import models

===== .\az_account_qr\__manifest__.py =====
{
    "name": "Azbah - QR",
    "version": "15",
    "license": "LGPL-3",
    "category": "accounting",
    "depends": ["az_account"]
}


===== .\az_account_qr\models\account_move.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.
import base64

from odoo import api, fields, models, _
from odoo.exceptions import UserError
from odoo.tools import float_repr


class AccountMove(models.Model):
    _inherit = 'account.move'

    l10n_sa_qr_code_str = fields.Char(string='Zatka QR Code', compute='_compute_qr_code_str')
    l10n_sa_confirmation_datetime = fields.Datetime(string='Confirmation Date', readonly=True, copy=False)

    @api.depends('amount_total_signed', 'amount_tax_signed', 'l10n_sa_confirmation_datetime', 'company_id',
                 'company_id.vat')
    def _compute_qr_code_str(self):
        """ Generate the qr code for Saudi e-invoicing. Specs are available at the following link at page 23
        https://zatca.gov.sa/ar/E-Invoicing/SystemsDevelopers/Documents/20210528_ZATCA_Electronic_Invoice_Security_Features_Implementation_Standards_vShared.pdf
        """

        def get_qr_encoding(tag, field):
            company_name_byte_array = field.encode()
            company_name_tag_encoding = tag.to_bytes(length=1, byteorder='big')
            company_name_length_encoding = len(company_name_byte_array).to_bytes(length=1, byteorder='big')
            return company_name_tag_encoding + company_name_length_encoding + company_name_byte_array

        for record in self:
            qr_code_str = ''
            if record.l10n_sa_confirmation_datetime and record.company_id.vat:
                seller_name_enc = get_qr_encoding(1, record.company_id.display_name)
                company_vat_enc = get_qr_encoding(2, record.company_id.vat)
                time_sa = fields.Datetime.context_timestamp(self.with_context(tz='Asia/Riyadh'),
                                                            record.invoice_date)
                timestamp_enc = get_qr_encoding(3, time_sa.isoformat())
                invoice_total_enc = get_qr_encoding(4, float_repr(abs(record.amount_total_signed), 2))
                total_vat_enc = get_qr_encoding(5, float_repr(abs(record.amount_tax_signed), 2))

                str_to_encode = seller_name_enc + company_vat_enc + timestamp_enc + invoice_total_enc + total_vat_enc
                qr_code_str = base64.b64encode(str_to_encode).decode()
            record.l10n_sa_qr_code_str = qr_code_str

    def write(self, vals):
        if 'date' in vals:
            vals['l10n_sa_confirmation_datetime'] = vals['date']
            self._compute_qr_code_str()
        if 'l10n_sa_confirmation_datetime' in vals:
            vals['l10n_sa_confirmation_datetime'] = self.invoice_date
            self._compute_qr_code_str()
        res = super(AccountMove, self).write(vals)
        return res

    def _post(self, soft=True):
        res = super()._post(soft)
        for record in self:
            if record.country_code == 'SA' and record.move_type in ('out_invoice', 'out_refund'):
                if not record.l10n_sa_show_delivery_date:
                    raise UserError(_('Delivery Date cannot be empty'))
                self.write({
                    'l10n_sa_confirmation_datetime': self.invoice_date
                })
        return res


===== .\az_account_qr\models\__init__.py =====
from . import account_move

===== .\az_account_qr\static\src\scss\account_financial_report.scss =====
.o_foldable_menu {
    &.o_closed_menu {
        display: none;
    }
    .o_open_menu {
        display: block;
    }
}
@mixin o-account-reports-i-fa-toggle {
    i.fa {
        visibility: hidden;
    }
    &:hover i.fa {
        visibility: visible;
    }
}

.o_form_view {
    .o_account_reports_page {
        .o_input {
            width: 100%;
        }
    }
}

.o_account_reports_page {
    background-color: $o-view-background-color;
    color: $o-main-text-color;

    .dropdown-toggle::after {
        display: none; // disable bootstrap's carret and do it manaully for positionning
    }

    padding-bottom: 125px;
    @include o-webclient-padding($top: $o-sheet-vpadding, $bottom: $o-sheet-vpadding);
    .o_account_reports_level0 {
        border-width: 3px;
        font-weight: bold;
        // border-top-style: $border-top-style;
        border-bottom-style: double;
    }
    .o_account_reports_table {
        margin-bottom: 128px;
        th.o_account_report_column_header {
            &.sortable::before {
                content: '\f07d';
                font-family: 'FontAwesome';
                color: lightgray;
            }
            &.up::before {
                content: '\f176';
                color: black;
            }
            &.down::before {
                content: '\f175';
                color: black;
            }
            &:first-child {
                border: none;
            }
        }
    }
    .account_report_line_name a {
        color:#008784;
    }
    a {
        cursor: pointer;
    }
    .o_reports_date_to {
        margin-left: 20px;
    }
    .o_account_report_line {
        span {
            white-space: nowrap;
        }
        position: relative;
    }
    // truncate span content and ad '...' if content width > span width
    .o_account_report_line_ellipsis, .o_account_report_name_ellipsis{
        position: relative;
        span {
            position: absolute;
        }
        > span, span[class^="o_account_reports_domain_line_"] {
            left: 0;
            right: 0;
            top: 0;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    }
    .o_account_report_name_ellipsis {
        min-width: 200px;
        max-width: 50%;
    }
    .ellipsis_width {
        direction: rtl !important;
        height: 0 !important;
        position: relative !important;
        white-space: initial !important;
        display: inline-block !important;
        visibility: hidden;

    }

    tr:focus {
        outline: none;

        .o_account_report_line_ellipsis, .o_account_report_name_ellipsis {
            span {
                white-space: initial;
                overflow: initial;
                z-index: 1;
            }
        }
    }
    // ----------------------------------------------------------------
    .o_account_report_summary {
        padding-left: 5px;
    }
    .o_account_reports_summary_edit {
        padding-bottom: 40px;
        padding-top: 15px;
    }
    .js_account_report_foldable {
        cursor: pointer;
    }
    .color-red {
        color: red !important;
    }
    .color-green {
        color: green !important;
    }
    .color-transparent {
        opacity: 0 !important;
    }
    .trust-partner {
        font-size: 0.8em;
        margin-left: 5px;
    }
    .print_only {
        display: none;
    }
    .o_account_reports_table {
        &#table_header_clone {
            position: fixed;
            tbody {
                visibility: collapse;
                tr {
                    border: none;
                }
            }
        }

        width: 100%;

        .number {
            text-align: right;
        }
        .text {
            text-align: left;
        }
        .date {
            text-align: center;
        }
        th{
            background-color: white;
            background-clip: padding-box;
            border: 1px solid #e6e6e6;
            .subtitle{
                font-weight:normal;
            }
        }
        .o_account_reports_header_hierarchy {
            th {
                border-bottom: none;
            }
            th:not(:first-child) {
                border: 1px solid #e6e6e6;
                border-collapse: separate;
                padding-right: 8px;
                padding-left: 8px;
            }
        }
    }
    .oe_link_reports {
        @extend .btn;
        @extend .btn-outline-secondary;
        @extend .btn-sm;
        line-height: 0.8;
        vertical-align: initial;
    }
    .folded {
        .oe_link_reports {
            display: none;
        }
    }
    p.o_account_reports_contact_info {
        min-height: 30px;
    }
    .o_input {
        width: 70%;
    }
    .o_account_reports_edit_summary_pencil {
        margin-left: -15px;
        position: absolute;
    }
    table > tbody > tr >  td ~ td{
        padding-left: 8px;
        padding-right: 8px;
    }
    table > tbody > tr >  td{
        vertical-align: top;
    }
    .o_account_reports_summary {
        margin-bottom: 20px;
        @include o-account-reports-i-fa-toggle;
    }
    .o_account_reports_unfolded td + td span {
        visibility: hidden;
    }
    div.o_account_reports_saved_summary {
        padding-left: 5px;
    }
    .o_account_reports_web_action, .o_change_trust,
    span.o_account_reports_web_action, div.o_account_reports_saved_summary span,
    td.o_account_reports_unfoldable, td.o_account_reports_foldable, span.partner_id, span.move_line_id, input[type=checkbox] {
        cursor: pointer;
    }
    p.footnote > .text {
        white-space: pre-wrap;
    }
    p.footnote > .o_account_reports_footnote_icons, p.o_account_reports_footnote_edit > .o_account_reports_footnote_icons {
        visibility: hidden;
    }
    p.footnote:hover > .o_account_reports_footnote_icons {
        visibility: visible;
    }
    .o_account_reports_footnote_icons {
        position: absolute;
        margin-left: 3px;
    }
    .o_account_reports_caret_icon {
        position: absolute;
        display: contents;
        .fa {
            position: absolute;
            bottom: 4px;
        }
    }
    .o_account_reports_domain_line_0 {
        margin-left: 0px;
    }
    .o_account_reports_domain_line_1 {
        margin-left: 15px;
    }
    .o_account_reports_domain_line_2 {
        margin-left: 30px;
    }
    .o_account_reports_domain_line_3 {
        margin-left: 40px;
    }
    .o_account_reports_domain_line_4 {
        margin-left: 50px;
    }
    .o_account_reports_domain_line_5 {
        margin-left: 60px;
    }
    .o_account_reports_domain_line_6 {
        margin-left: 70px;
    }
    .o_account_reports_domain_line_7 {
        margin-left: 80px;
    }
    .o_account_reports_domain_line_8 {
        margin-left: 90px;
    }
    .o_account_reports_domain_line_9 {
        margin-left: 100px;
    }
    .o_account_reports_domain_line_10 {
        margin-left: 110px;
    }
    .o_account_reports_domain_line_11 {
        margin-left: 120px;
    }
    .o_account_reports_domain_line_12 {
        margin-left: 130px;
    }
    .o_account_reports_domain_line_13 {
        margin-left: 140px;
    }
    tr.o_account_reports_domain_total {
        font-weight: bold;
    }
    tr.o_account_reports_initial_balance {
        > td > span:last-child {
            margin-left: 30px;
        }
    }
    tr.hierarchy_total {
        font-weight: bold;
    }
    b.o_account_reports_footnote_sup {
        margin-top: 10px;
        color: $o-main-text-color;
    }
    ul.o_account_reports_domain_dropdown {
        margin-left: 70px
    }
    .total {
        font-weight: bold;
    }
    .o_account_reports_level0, .o_account_reports_level1, .o_account_reports_level2, .o_account_reports_domain_total, .total {
        .text-muted {
            color: #666666 !important;
        }
    }
    .o_foldable_total {
        color: #666666 !important;
        &.color-red{
            color: red !important;
        }
        &.color-green{
            color: green !important;
        }
    }
    .o_account_reports_totals_below_sections.o_js_account_report_parent_row_unfolded {
        .o_account_report_column_value {
            visibility: hidden;
        }
        td.number.o_foldable_total {
            border-bottom: none;
        }
    }
    td.o_foldable_total {
        font-weight: bold;
    }
    @mixin report_level($indent) {
        border-bottom: 1px solid #eee;
        > td.o_account_report_line_indent > span:last-child {
            margin-left: ($indent + 1) * 10px;
        }
        &.total {
            > td > span:last-child {
                margin-left: $indent * 10px;
            }
        }
    }
    .o_account_reports_level0 {
        & td {
            padding-top: 32px;
            span {
                top: unset;
            }
        }
        > td.o_account_report_line_indent.o_foldable_total > span:last-child {
            margin-left: 10px;
        }
    }
    .o_account_reports_level1 {
        @include report_level(1);
        font-weight: bold;
        border-bottom: 2px solid #bbb;
    }
    .o_account_reports_level2 {
        @include report_level(2);
        font-weight: bold;
        border-bottom: 1px solid #bbb;
    }
    .o_account_reports_level3 {
        @include report_level(3);
    }
    .o_account_reports_level4 {
        @include report_level(4);
    }
    .o_account_reports_level5 {
        @include report_level(5);
    }
    .o_account_reports_level6 {
        @include report_level(6);
    }
    .o_account_reports_level7 {
        @include report_level(7);
    }
    .o_account_reports_level8 {
        @include report_level(8);
    }
    .o_account_reports_level9 {
        @include report_level(9);
    }
    .o_account_reports_level10 {
        @include report_level(10);
    }
    .o_account_reports_level11 {
        @include report_level(11);
    }
    .o_account_reports_level12 {
        @include report_level(12);
    }
    .o_account_reports_level13 {
        @include report_level(13);
    }
    .o_account_reports_default_style {
        border-bottom: 1px solid #eee;
        > td.o_account_report_line_indent > tr:first-child > span:last-child {
            margin-left: 30px;
        }
        &.o_account_reports_domain_total {
            > td.o_account_report_line_indent > span:last-child {
                margin-left: 30px;
            }
        }
    }
    .o_account_followup_not_clicked {
        .o_account_followup_skip {
            display: inline-block;
        }
        .o_account_followup_done {
            display: none;
        }
    }
    .o_account_followup_clicked {
        .o_account_followup_skip {
            display: none;
        }
        .o_account_followup_done {
            display: inline-block;
        }
    }
    .o_account_reports_history {
        min-width: 300px;
    }
    .o_account_coa_column_contrast td:nth-child(4n-1),
    .o_account_coa_column_contrast td:nth-child(4n-2),
    td.o_account_coa_column_contrast:nth-child(4n-1),
    td.o_account_coa_column_contrast:nth-child(4n-2) {
        background-color: #FAFAFA;
        background-clip: padding-box;
    }
    .table-hover tbody tr:hover td {
        background-color: #F0F0F0;
        background-clip: padding-box;
    }
}

.o_form_view {
    .o_account_reports_no_print {
        div.o_account_reports_summary {
            cursor: pointer;
        }
        .o_account_reports_table {
            margin-bottom: 0px;
            tbody tr:not(.o_account_reports_level0):hover {
                background-color: #f0f0f0;
            }
        }
    }
}

.o_account-progress-bar-content {
    color: black;
    position: absolute;
    width: 100%;
}
.o_account-progress {
    position: relative;
}
.o_account_reports_history [summary="o_followup_letter_display_none"] {
    display: none;
}

.o_account_report_search {
    margin-left: 10px;
    margin-right: 10px;
    .o_account_report_select {
        min-width: 100px;
    }
}

// Filters lines
// -----------------------------------------
.o_reports_filter_input_wrapper {
    position: relative;
    float: right;
    width: 150px;
    margin-bottom: 20px;
    float: right;
        .searchIcon {
        position: absolute;
        right: 10px;
    }
}
    .o_account_reports_filter_input {
    border: none;
    border-bottom: 1px black solid;
}
    .o_account_reports_filtered_lines {
    display: none;
}

.o_account_reports_filter_journals {
    .dropdown-menu {
        overflow: auto;
        // 86.5px is the height of .o_control_panel
        max-height: calc(100vh - (86.5px + #{$o-navbar-height}));
    }
}

// Summary to be edited
// -----------------------------------------
.o_account_reports_body .o_account_reports_summary {
    display: inline-block;
    position: relative;


    .o_account_report_summary_placeholder{
        opacity: .5;
    }

    .o_account_report_summary {
        padding: 10px 0;

        &, > span, .o_input, .o_account_reports_edit_summary_pencil {
            transition: all .2s ease 0s;
        }
        > span {
            padding: 10px 0;
            display: block;
            line-height: 1;
        }
    }

    .o_input {
        border: none;
        padding: 10px;
    }

    .o_account_reports_edit_summary_pencil {
        @include o-position-absolute(20px, $left: 0);
        visibility: hidden;
        opacity: 0;
    }

    &:hover {
        .o_account_reports_edit_summary_pencil {
            visibility: visible;
            opacity: 1;
        }

        .o_account_report_summary .o_input, .o_account_report_summary span {
            padding-right: 0;
        }
    }
}

.o_account_reports_body {
    .alert a {
        cursor: pointer;
    }
}

.o_account_reports_summary_edit {
    padding-bottom: 25px;
    padding-top: 10px;

    textarea {
        border: 1px solid gray('600');
        resize: vertical;
        width: 100%;
    }
}

.o_financial_report_hover_popup {
    color: orange;
}

// Print mode report summary
// -----------------------------------------
p.o_account_reports_contact_info {
    min-height: 30px;
}

.o_account_reports_load_more {
    span.account_report_line_name {
        cursor: pointer;
        direction: rtl  !important;
    }
}

.o_country_specific_report_label {
    margin-left: 16px;
    background-color: white;
}

.o_account_reports_filter_currency {
    > .dropdown-menu {
        overflow-y: auto;
        max-height: calc(100vh - #{$o-navbar-height} - 100px);  // 100px for the control panel
    }
}


===== .\az_account_qr\static\src\scss\account_report_print.scss =====
.o_account_reports_summary_edit {
    display: none !important;
}
.caret {
    display: none !important;
}
.o_account_reports_body_print {
    background-color: white !important;
    color: black !important;
    font-size: 12px !important;
    .o_account_reports_header {
        padding: 10px;
        background-color: #eee;
    }
    .o_account_reports_page {
        color: black !important;
    }
    .o_account_reports_table {
        margin-bottom: 0px;
        font-size: 12px !important;
        > tbody > tr {
            /* fix thead overlapping http://github.com/wkhtmltopdf/wkhtmltopdf/issues/1524 */
            page-break-inside: avoid;
        }
    }
    .o_account_reports_level0, .o_account_reports_level1, .o_account_reports_level2, .o_account_reports_domain_total, .total {
        .text-muted {
            color: black !important;
        }
    }
    .o_foldable_total {
        color: black !important;
    }
}
a {
    color: inherit !important;
}
.print_only {
    display: block !important;
    &.row {
        display: flex !important;
    }
}
[name="summary"] {
    display: none;
}
.no_print {
    display: none !important;
}

.o_account_reports_page {
    .o_account_report_line_ellipsis, .o_account_report_name_ellipsis{
        position: relative;
        span {
            position: absolute;
        }
        > span, span[class^="o_account_reports_domain_line_"] {
            white-space: normal;
            overflow: visible;
            text-overflow: initial;
            position: relative;
        }
    }
}


===== .\az_account_reports\__init__.py =====
from . import models
from . import wizard
from . import report


===== .\az_account_reports\__manifest__.py =====
{
    "name": "Azbah - Accounting - Reports",
    "version": "15",
    "license": "LGPL-3",
    "category": "accounting",
    "depends": ["base", "account_accountant", "account_reports"],
    'assets': {
        'account_reports.assets_financial_report': [
            'az_account_reports/static/src/scss/account_financial_report.scss',
            'az_account_reports/static/src/scss/account_report_print.scss',
        ]},
    "data": [
        # 'security/ir.model.access.csv',
        'wizard/ledger_report_view.xml',
        'report/ledger_report.xml',
        'report/ledger_report_template.xml',
    ],
}


===== .\az_account_reports\models\account_aged_partner.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from odoo import models, api, fields, _
from odoo.tools.misc import format_date

from dateutil.relativedelta import relativedelta
from itertools import chain


class ReportAccountAgedPartner(models.AbstractModel):
    _inherit = "account.aged.partner"


    ####################################################
    # QUERIES
    ####################################################

    @api.model
    def _get_sql(self):
        options = self.env.context['report_options']
        query = ("""
            SELECT
                {move_line_fields},
                account_move_line.amount_currency as amount_currency,
                account_move_line.partner_id AS partner_id,
                concat( '[', partner.code,']', partner.name)  AS partner_name,
                COALESCE(trust_property.value_text, 'normal') AS partner_trust,
                COALESCE(account_move_line.currency_id, journal.currency_id) AS report_currency_id,
                account_move_line.payment_id AS payment_id,
                COALESCE(account_move_line.date_maturity, account_move_line.date) AS report_date,
                account_move_line.expected_pay_date AS expected_pay_date,
                move.move_type AS move_type,
                move.name AS move_name,
                move.ref AS move_ref,
                account.code || ' ' || account.name AS account_name,
                account.code AS account_code,""" + ','.join([("""
                CASE WHEN period_table.period_index = {i}
                THEN %(sign)s * ROUND((
                    account_move_line.balance - COALESCE(SUM(part_debit.amount), 0) + COALESCE(SUM(part_credit.amount), 0)
                ) * currency_table.rate, currency_table.precision)
                ELSE 0 END AS period{i}""").format(i=i) for i in range(6)]) + """
            FROM account_move_line
            JOIN account_move move ON account_move_line.move_id = move.id
            JOIN account_journal journal ON journal.id = account_move_line.journal_id
            JOIN account_account account ON account.id = account_move_line.account_id
            LEFT JOIN res_partner partner ON partner.id = account_move_line.partner_id
            LEFT JOIN ir_property trust_property ON (
                trust_property.res_id = 'res.partner,'|| account_move_line.partner_id
                AND trust_property.name = 'trust'
                AND trust_property.company_id = account_move_line.company_id
            )
            JOIN {currency_table} ON currency_table.company_id = account_move_line.company_id
            LEFT JOIN LATERAL (
                SELECT part.amount, part.debit_move_id
                FROM account_partial_reconcile part
                WHERE part.max_date <= %(date)s
            ) part_debit ON part_debit.debit_move_id = account_move_line.id
            LEFT JOIN LATERAL (
                SELECT part.amount, part.credit_move_id
                FROM account_partial_reconcile part
                WHERE part.max_date <= %(date)s
            ) part_credit ON part_credit.credit_move_id = account_move_line.id
            JOIN {period_table} ON (
                period_table.date_start IS NULL
                OR COALESCE(account_move_line.date_maturity, account_move_line.date) <= DATE(period_table.date_start)
            )
            AND (
                period_table.date_stop IS NULL
                OR COALESCE(account_move_line.date_maturity, account_move_line.date) >= DATE(period_table.date_stop)
            )
            WHERE account.internal_type = %(account_type)s
            AND account.exclude_from_aged_reports IS NOT TRUE
            GROUP BY account_move_line.id, partner.id, trust_property.id, journal.id, move.id, account.id,
                     period_table.period_index, currency_table.rate, currency_table.precision
            HAVING ROUND(account_move_line.balance - COALESCE(SUM(part_debit.amount), 0) + COALESCE(SUM(part_credit.amount), 0), currency_table.precision) != 0
        """).format(
            move_line_fields=self._get_move_line_fields('account_move_line'),
            currency_table=self.env['res.currency']._get_query_currency_table(options),
            period_table=self._get_query_period_table(options),
        )
        params = {
            'account_type': options['filter_account_type'],
            'sign': 1 if options['filter_account_type'] == 'receivable' else -1,
            'date': options['date']['date_to'],
        }
        result = self.env.cr.mogrify(query, params).decode(self.env.cr.connection.encoding)
        return result

    ####################################################
    # COLUMNS/LINES
    ####################################################
    @api.model
    def _get_column_details(self, options):
        columns = [
            self._header_column(),
            self._field_column('report_date'),
            self._custom_column(  # Avoid doing twice the sub-select in the view
                name=_('Total'),
                classes=['number'],
                formatter=self.format_value,
                getter=(
                    lambda v: v['period0'] + v['period1'] + v['period2'] + v['period3'] + v['period4'] + v['period5']),
                sortable=True,
            ),
            # self._field_column('account_name', name=_("Account"), ellipsis=True),
            # self._field_column('expected_pay_date'),

            # self._field_column('period0', name=_("As of: %s", format_date(self.env, options['date']['date_to']))),
            self._field_column('period1', sortable=True),
            self._field_column('period2', sortable=True),
            self._field_column('period3', sortable=True),
            self._field_column('period4', sortable=True),
            self._field_column('period5', sortable=True),

        ]

        if self.user_has_groups('base.group_multi_currency'):
            columns[2:2] = [
                self._field_column('amount_currency'),
                self._field_column('currency_id'),
            ]
        return columns


===== .\az_account_reports\models\account_general_ledger.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from odoo import models, fields, api, _
from odoo.tools.misc import format_date, DEFAULT_SERVER_DATE_FORMAT
from datetime import timedelta


class AccountGeneralLedgerReport(models.AbstractModel):
    _inherit = "account.general.ledger"

    @api.model
    def _get_query_amls(self, options, expanded_account, offset=None, limit=None):
        ''' Construct a query retrieving the account.move.lines when expanding a report line with or without the load
        more.
        :param options:             The report options.
        :param expanded_account:    The account.account record corresponding to the expanded line.
        :param offset:              The offset of the query (used by the load more).
        :param limit:               The limit of the query (used by the load more).
        :return:                    (query, params)
        '''

        unfold_all = options.get('unfold_all') or (self._context.get('print_mode') and not options['unfolded_lines'])

        # Get sums for the account move lines.
        # period: [('date' <= options['date_to']), ('date', '>=', options['date_from'])]
        if expanded_account:
            domain = [('account_id', '=', expanded_account.id)]
        elif unfold_all:
            domain = []
        elif options['unfolded_lines']:
            domain = [('account_id', 'in', [int(line[8:]) for line in options['unfolded_lines']])]

        new_options = self._force_strict_range(options)
        tables, where_clause, where_params = self._query_get(new_options, domain=domain)
        ct_query = self.env['res.currency']._get_query_currency_table(options)
        query = f'''
                   SELECT
                       account_move_line.id,
                       account_move_line.date,
                       account_move_line.date_maturity,
                       account_move_line.name,
                       account_move_line.ref,
                       account_move_line.company_id,
                       account_move_line.account_id,
                       account_move_line.payment_id,
                       account_move_line.partner_id,
                       account_move_line.currency_id,
                       account_move_line.amount_currency,
                       ROUND(account_move_line.debit * currency_table.rate, currency_table.precision)   AS debit,
                       ROUND(account_move_line.credit * currency_table.rate, currency_table.precision)  AS credit,
                       ROUND(account_move_line.balance * currency_table.rate, currency_table.precision) AS balance,
                       account_move_line__move_id.name         AS move_name,
                       company.currency_id                     AS company_currency_id,
                       partner.name                            AS partner_name,
                       account_move_line__move_id.move_type    AS move_type,
                       account.code                            AS account_code,
                       account.name                            AS account_name,
                       journal.code                            AS journal_code,
                       journal.name                            AS journal_name,
                       full_rec.name                           AS full_rec_name
                   FROM {tables}
                   LEFT JOIN {ct_query} ON currency_table.company_id = account_move_line.company_id
                   LEFT JOIN res_company company               ON company.id = account_move_line.company_id
                   LEFT JOIN res_partner partner               ON partner.id = account_move_line.partner_id
                   LEFT JOIN account_account account           ON account.id = account_move_line.account_id
                   LEFT JOIN account_journal journal           ON journal.id = account_move_line.journal_id
                   LEFT JOIN account_full_reconcile full_rec   ON full_rec.id = account_move_line.full_reconcile_id
                   WHERE {where_clause}
                   ORDER BY account_move_line.date, account_move_line.id
               '''

        if offset:
            query += ' OFFSET %s '
            where_params.append(offset)
        if limit:
            query += ' LIMIT %s '
            where_params.append(limit)

        if 165 in [int(line[8:]) for line in options['unfolded_lines']]:
            config_name = f"case when config.name is not null then concat('[',config.name,'] ',account_move_line.name) else account_move_line.name end as name"
            config_table = """left JOIN pos_session session  on session.name = account_move_line.name
            left join pos_config config on config.id=session.config_id WHERE"""
            query = query.replace('account_move_line.name', config_name)
            query = query.replace('WHERE', config_table)

        return query, where_params


===== .\az_account_reports\models\account_partner_ledger.py =====
===== .\az_account_reports\models\account_report.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from odoo import models, api, _, _lt, fields
from odoo.tools.misc import format_date
from datetime import timedelta

from collections import defaultdict


class ReportPartnerLedger(models.AbstractModel):
    _inherit = "account.report"

    def _format_lines_for_display(self, lines, options):
        """
        This method should be overridden in a report in order to apply specific formatting when printing
        the report lines.

        Used for example by the carryover functionnality in the generic tax report.
        :param lines: A list with the lines for this report.
        :param options: The options for this report.
        :return: The formatted list of lines
        """
        return lines

    def get_report_informations(self, options):
        '''
        return a dictionary of informations that will be needed by the js widget, manager_id, footnotes, html of report and searchview, ...
        '''
        options = self._get_options(options)
        self = self.with_context(self._set_context(
            options))  # For multicompany, when allowed companies are changed by options (such as aggregare_tax_unit)

        searchview_dict = {'options': options, 'context': self.env.context}
        # Check if report needs analytic
        if options.get('analytic_accounts') is not None:
            options['selected_analytic_account_names'] = [self.env['account.analytic.account'].browse(int(account)).name
                                                          for account in options['analytic_accounts']]
        if options.get('analytic_tags') is not None:
            options['selected_analytic_tag_names'] = [self.env['account.analytic.tag'].browse(int(tag)).name for tag in
                                                      options['analytic_tags']]
        if options.get('partner'):
            options['selected_partner_ids'] = [self.env['res.partner'].browse(int(partner)).name for partner in
                                               options['partner_ids']]
            options['selected_partner_categories'] = [self.env['res.partner.category'].browse(int(category)).name for
                                                      category in (options.get('partner_categories') or [])]

        # Check whether there are unposted entries for the selected period or not (if the report allows it)
        if options.get('date') and options.get('all_entries') is not None:
            date_to = options['date'].get('date_to') or options['date'].get('date') or fields.Date.today()
            period_domain = [('state', '=', 'draft'), ('date', '<=', date_to)]
            options['unposted_in_period'] = bool(self.env['account.move'].search_count(period_domain))

        if options.get('journals'):
            journals_selected = set(journal['id'] for journal in options['journals'] if journal.get('selected'))
            for journal_group in self.env['account.journal.group'].search([('company_id', '=', self.env.company.id)]):
                if journals_selected and journals_selected == set(self._get_filter_journals().ids) - set(
                        journal_group.excluded_journal_ids.ids):
                    options['name_journal_group'] = journal_group.name
                    break

        report_manager = self._get_report_manager(options)
        info = {'options': options,
                'context': self.env.context,
                'report_manager_id': report_manager.id,
                'footnotes': [{'id': f.id, 'line': f.line, 'text': f.text} for f in report_manager.footnotes_ids],
                'buttons': self._get_reports_buttons_in_sequence(options),
                'main_html': self.get_html(options),
                'searchview_html': self.env['ir.ui.view']._render_template(
                    self._get_templates().get('search_template', 'account_report.search_template'),
                    values=searchview_dict),
                }
        return info


===== .\az_account_reports\models\pos_order.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from odoo import models, api, fields, _
from odoo.tools.misc import format_date

from dateutil.relativedelta import relativedelta
from itertools import chain


class PosOrder(models.Model):
    _inherit = "pos.order"
    invoice_id = fields.Integer(related="account_move.id")


===== .\az_account_reports\models\__init__.py =====
from . import account_report
from . import account_aged_partner
from . import account_general_ledger
from . import account_partner_ledger

===== .\az_account_reports\report\ledger_report.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <record id="paperformat_stock_card_report" model="report.paperformat">
        <field name="name">ledger Report Template</field>
        <field name="default" eval="True"/>
        <field name="format">A4</field>
        <field name="orientation">Landscape</field>
        <field name="margin_top">40</field>
        <field name="margin_bottom">15</field>
        <field name="margin_left">5</field>
        <field name="margin_right">5</field>
        <field name="header_line" eval="False"/>
        <field name="header_spacing">40</field>
        <field name="dpi">90</field>
    </record>

    <record id="ledger_report_action_view" model="ir.actions.report">
        <field name="name">ledger Report</field>
        <field name="model">az.ledger.report</field>
        <field name="binding_model_id" ref="model_az_ledger_report"/>
        <field name="report_type">qweb-pdf</field>
        <field name="report_name">az_account_reports.ledger_report_template</field>
        <field name="report_file">az_account_reports.ledger_report_template</field>
        <field name="paperformat_id" ref="paperformat_stock_card_report"/>
        <field name="binding_type">report</field>
    </record>
</odoo>

===== .\az_account_reports\report\ledger_report_template.xml =====
===== .\az_account_reports\report\ledger_report_view.py =====
# -*- coding: utf-8 -*-

from odoo import models, api


class ledgerReportTemplate(models.AbstractModel):
    _name = 'report.az_account_reports.ledger_report_template'
    _description = 'Ledger Report Template'

    def get_ledger_detail(self, data):
        # Retrieve date range for filtering account moves
        company_id = data.get('company_id')
        start_date = data.get('date_from')
        end_date = data.get('date_to')

        # Depending on the report type, construct the account IDs SQL
        account_ids = data.get('account_ids')[0] if data.get('account_ids') else None
        account_ids_clause = ""
        params = [company_id]

        if account_ids:
            account_move_sql = f"""
                SELECT
                    account.name AS account_name,
                    partner.code,
                    partner.name AS name,
                    COALESCE(SUM(CASE WHEN aml.date BETWEEN '{start_date}' AND '{end_date}' THEN aml.debit ELSE 0 END), 0) AS period_debit,
                    COALESCE(SUM(CASE WHEN aml.date BETWEEN '{start_date}' AND '{end_date}' THEN aml.credit ELSE 0 END), 0) AS period_credit,
                    COALESCE(pd.total_debit_before, 0) AS before_period_debit,
                    COALESCE(pd.total_credit_before, 0) AS before_period_credit,
                    aml.account_id,
                    0 as final_debit,
                    0 as final_credit
                FROM
                    account_move_line aml
                    LEFT JOIN account_account account ON aml.account_id = account.id
                    LEFT JOIN res_partner partner ON aml.partner_id = partner.id
                    LEFT JOIN (
                        SELECT
                            partner_id,
                            account_id,
                            SUM(debit) AS total_debit_before,
                            SUM(credit) AS total_credit_before
                        FROM
                            account_move_line
                        WHERE
                            date < '{start_date}' 
                            AND (display_type NOT IN ('line_section', 'line_note') OR display_type IS NULL)
                            AND parent_state = 'posted'
                            AND (company_id IS NULL OR company_id = {company_id})
                        GROUP BY
                            partner_id, account_id
                    ) pd ON aml.partner_id = pd.partner_id AND aml.account_id = pd.account_id
                WHERE
                    (aml.display_type NOT IN ('line_section', 'line_note') OR aml.display_type IS NULL)
                    AND aml.parent_state = 'posted'
                    AND (aml.company_id IS NULL OR aml.company_id = {company_id})
                    AND (aml.date BETWEEN '{start_date}' AND '{end_date}' OR aml.date < '{start_date}')
                    AND aml.account_id = {account_ids}
                GROUP BY
                    aml.account_id, account.name, partner.id, partner.name, pd.total_debit_before, pd.total_credit_before
                ORDER BY
                    partner.code;
            """



        # Construct the SQL to fetch all relevant account moves
        else:
            account_move_sql = f"""
                SELECT
                    aa.name,
                    aa.code,
                    MIN(aml.id) AS id,
                    COUNT(aml.id) AS account_id_count,
                    MIN(aml.date) AS date,
                    SUM(CASE WHEN aml.date BETWEEN '{start_date}' AND '{end_date}' THEN aml.debit ELSE 0 END) AS period_debit,
                    SUM(CASE WHEN aml.date BETWEEN '{start_date}' AND '{end_date}' THEN aml.credit ELSE 0 END) AS period_credit,
                    SUM(CASE WHEN aml.date < '{start_date}' THEN aml.debit ELSE 0 END) AS before_period_debit,
                    SUM(CASE WHEN aml.date < '{start_date}' THEN aml.credit ELSE 0 END) AS before_period_credit,
                    SUM(aml.debit) AS final_debit,
                    SUM(aml.credit) AS final_credit,
                    aml.account_id
                FROM
                    account_move_line aml
                LEFT JOIN
                    account_account aa ON aml.account_id = aa.id
                LEFT JOIN
                    res_company rc ON aa.company_id = rc.id
                WHERE
                    (aml.display_type NOT IN ('line_section', 'line_note') OR aml.display_type IS NULL)
                    AND aml.parent_state = 'posted'
                    AND (aml.company_id IS NULL OR aml.company_id IN (%s))
                    {account_ids_clause}
                    AND (aml.date BETWEEN '{start_date}' AND '{end_date}' OR aml.date < '{start_date}')
                GROUP BY
                    aml.account_id,
                    aa.name,
                    aa.code
                ORDER BY
                    aa.code
            """
        # Execute the SQL query
        self.env.cr.execute(account_move_sql, tuple(params))
        account_moves = self.env.cr.dictfetchall()

        sums = {
            'period_debit': 0,
            'period_credit': 0,
            'before_period_debit': 0,
            'before_period_credit': 0,
        }
        for move in account_moves:
            sums['period_debit'] += move.get('period_debit', 0)
            sums['period_credit'] += move.get('period_credit', 0)
            sums['before_period_debit'] += move.get('before_debit', 0)
            sums['before_period_debit'] += move.get('before_credit', 0)

        account_moves.append(sums)

        return account_moves

    @api.model
    def _get_report_values(self, docids, data=None):
        date_from = data['form']['date_from']
        date_to = data['form']['date_to']
        company_id = data['form']['company_id'][0]
        account_ids = data['form']['account_ids']

        data = {
            'date_from': date_from,
            'date_to': date_to,
            'account_ids': account_ids,
            'company_id': company_id,
        }
        docargs = {
            'doc_model': 'az.ledger.report',
            'data': data,
            'get_ledger_detail': self.get_ledger_detail,
        }
        return docargs


===== .\az_account_reports\report\__init__.py =====
# -*- coding: utf-8 -*-

from . import ledger_report_view



===== .\az_account_reports\security\ir.model.access.csv =====
"id","name","model_id:id","group_id:id","perm_read","perm_write","perm_create","perm_unlink"
az_inout_report.access_inout_report,access_inout_report,az_account_reports.model_az_inout_report,base.group_user,1,1,1,1

===== .\az_account_reports\static\src\scss\account_financial_report.scss =====
.o_foldable_menu {
    &.o_closed_menu {
        display: none;
    }
    .o_open_menu {
        display: block;
    }
}
@mixin o-account-reports-i-fa-toggle {
    i.fa {
        visibility: hidden;
    }
    &:hover i.fa {
        visibility: visible;
    }
}

.o_form_view {
    .o_account_reports_page {
        .o_input {
            width: 100%;
        }
    }
}

.o_account_reports_page {
    background-color: $o-view-background-color;
    color: $o-main-text-color;

    .dropdown-toggle::after {
        display: none; // disable bootstrap's carret and do it manaully for positionning
    }

    padding-bottom: 125px;
    @include o-webclient-padding($top: $o-sheet-vpadding, $bottom: $o-sheet-vpadding);
    .o_account_reports_level0 {
        border-width: 3px;
        font-weight: bold;
        // border-top-style: $border-top-style;
        border-bottom-style: double;
    }
    .o_account_reports_table {
        margin-bottom: 128px;
        th.o_account_report_column_header {
            &.sortable::before {
                content: '\f07d';
                font-family: 'FontAwesome';
                color: lightgray;
            }
            &.up::before {
                content: '\f176';
                color: black;
            }
            &.down::before {
                content: '\f175';
                color: black;
            }
            &:first-child {
                border: none;
            }
        }
    }
    .account_report_line_name a {
        color:#008784;
    }
    a {
        cursor: pointer;
    }
    .o_reports_date_to {
        margin-left: 20px;
    }
    .o_account_report_line {
        span {
            white-space: nowrap;
        }
        position: relative;
    }
    // truncate span content and ad '...' if content width > span width
    .o_account_report_line_ellipsis, .o_account_report_name_ellipsis{
        position: relative;
        span {
            position: absolute;
        }
        > span, span[class^="o_account_reports_domain_line_"] {
            left: 0;
            right: 0;
            top: 0;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    }
    .o_account_report_name_ellipsis {
        min-width: 200px;
        max-width: 50%;
    }
    .ellipsis_width {
        direction: rtl !important;
        height: 0 !important;
        position: relative !important;
        white-space: initial !important;
        display: inline-block !important;
        visibility: hidden;

    }

    tr:focus {
        outline: none;

        .o_account_report_line_ellipsis, .o_account_report_name_ellipsis {
            span {
                white-space: initial;
                overflow: initial;
                z-index: 1;
            }
        }
    }
    // ----------------------------------------------------------------
    .o_account_report_summary {
        padding-left: 5px;
    }
    .o_account_reports_summary_edit {
        padding-bottom: 40px;
        padding-top: 15px;
    }
    .js_account_report_foldable {
        cursor: pointer;
    }
    .color-red {
        color: red !important;
    }
    .color-green {
        color: green !important;
    }
    .color-transparent {
        opacity: 0 !important;
    }
    .trust-partner {
        font-size: 0.8em;
        margin-left: 5px;
    }
    .print_only {
        display: none;
    }
    .o_account_reports_table {
        &#table_header_clone {
            position: fixed;
            tbody {
                visibility: collapse;
                tr {
                    border: none;
                }
            }
        }

        width: 100%;

        .number {
            text-align: right;
        }
        .text {
            text-align: left;
        }
        .date {
            text-align: center;
        }
        th{
            background-color: white;
            background-clip: padding-box;
            border: 1px solid #e6e6e6;
            .subtitle{
                font-weight:normal;
            }
        }
        .o_account_reports_header_hierarchy {
            th {
                border-bottom: none;
            }
            th:not(:first-child) {
                border: 1px solid #e6e6e6;
                border-collapse: separate;
                padding-right: 8px;
                padding-left: 8px;
            }
        }
    }
    .oe_link_reports {
        @extend .btn;
        @extend .btn-outline-secondary;
        @extend .btn-sm;
        line-height: 0.8;
        vertical-align: initial;
    }
    .folded {
        .oe_link_reports {
            display: none;
        }
    }
    p.o_account_reports_contact_info {
        min-height: 30px;
    }
    .o_input {
        width: 70%;
    }
    .o_account_reports_edit_summary_pencil {
        margin-left: -15px;
        position: absolute;
    }
    table > tbody > tr >  td ~ td{
        padding-left: 8px;
        padding-right: 8px;
    }
    table > tbody > tr >  td{
        vertical-align: top;
    }
    .o_account_reports_summary {
        margin-bottom: 20px;
        @include o-account-reports-i-fa-toggle;
    }
    .o_account_reports_unfolded td + td span {
        visibility: hidden;
    }
    div.o_account_reports_saved_summary {
        padding-left: 5px;
    }
    .o_account_reports_web_action, .o_change_trust,
    span.o_account_reports_web_action, div.o_account_reports_saved_summary span,
    td.o_account_reports_unfoldable, td.o_account_reports_foldable, span.partner_id, span.move_line_id, input[type=checkbox] {
        cursor: pointer;
    }
    p.footnote > .text {
        white-space: pre-wrap;
    }
    p.footnote > .o_account_reports_footnote_icons, p.o_account_reports_footnote_edit > .o_account_reports_footnote_icons {
        visibility: hidden;
    }
    p.footnote:hover > .o_account_reports_footnote_icons {
        visibility: visible;
    }
    .o_account_reports_footnote_icons {
        position: absolute;
        margin-left: 3px;
    }
    .o_account_reports_caret_icon {
        position: absolute;
        display: contents;
        .fa {
            position: absolute;
            bottom: 4px;
        }
    }
    .o_account_reports_domain_line_0 {
        margin-left: 0px;
    }
    .o_account_reports_domain_line_1 {
        margin-left: 15px;
    }
    .o_account_reports_domain_line_2 {
        margin-left: 30px;
    }
    .o_account_reports_domain_line_3 {
        margin-left: 40px;
    }
    .o_account_reports_domain_line_4 {
        margin-left: 50px;
    }
    .o_account_reports_domain_line_5 {
        margin-left: 60px;
    }
    .o_account_reports_domain_line_6 {
        margin-left: 70px;
    }
    .o_account_reports_domain_line_7 {
        margin-left: 80px;
    }
    .o_account_reports_domain_line_8 {
        margin-left: 90px;
    }
    .o_account_reports_domain_line_9 {
        margin-left: 100px;
    }
    .o_account_reports_domain_line_10 {
        margin-left: 110px;
    }
    .o_account_reports_domain_line_11 {
        margin-left: 120px;
    }
    .o_account_reports_domain_line_12 {
        margin-left: 130px;
    }
    .o_account_reports_domain_line_13 {
        margin-left: 140px;
    }
    tr.o_account_reports_domain_total {
        font-weight: bold;
    }
    tr.o_account_reports_initial_balance {
        > td > span:last-child {
            margin-left: 30px;
        }
    }
    tr.hierarchy_total {
        font-weight: bold;
    }
    b.o_account_reports_footnote_sup {
        margin-top: 10px;
        color: $o-main-text-color;
    }
    ul.o_account_reports_domain_dropdown {
        margin-left: 70px
    }
    .total {
        font-weight: bold;
    }
    .o_account_reports_level0, .o_account_reports_level1, .o_account_reports_level2, .o_account_reports_domain_total, .total {
        .text-muted {
            color: #666666 !important;
        }
    }
    .o_foldable_total {
        color: #666666 !important;
        &.color-red{
            color: red !important;
        }
        &.color-green{
            color: green !important;
        }
    }
    .o_account_reports_totals_below_sections.o_js_account_report_parent_row_unfolded {
        .o_account_report_column_value {
            visibility: hidden;
        }
        td.number.o_foldable_total {
            border-bottom: none;
        }
    }
    td.o_foldable_total {
        font-weight: bold;
    }
    @mixin report_level($indent) {
        border-bottom: 1px solid #eee;
        > td.o_account_report_line_indent > span:last-child {
            margin-left: ($indent + 1) * 10px;
        }
        &.total {
            > td > span:last-child {
                margin-left: $indent * 10px;
            }
        }
    }
    .o_account_reports_level0 {
        & td {
            padding-top: 32px;
            span {
                top: unset;
            }
        }
        > td.o_account_report_line_indent.o_foldable_total > span:last-child {
            margin-left: 10px;
        }
    }
    .o_account_reports_level1 {
        @include report_level(1);
        font-weight: bold;
        border-bottom: 2px solid #bbb;
    }
    .o_account_reports_level2 {
        @include report_level(2);
        font-weight: bold;
        border-bottom: 1px solid #bbb;
    }
    .o_account_reports_level3 {
        @include report_level(3);
    }
    .o_account_reports_level4 {
        @include report_level(4);
    }
    .o_account_reports_level5 {
        @include report_level(5);
    }
    .o_account_reports_level6 {
        @include report_level(6);
    }
    .o_account_reports_level7 {
        @include report_level(7);
    }
    .o_account_reports_level8 {
        @include report_level(8);
    }
    .o_account_reports_level9 {
        @include report_level(9);
    }
    .o_account_reports_level10 {
        @include report_level(10);
    }
    .o_account_reports_level11 {
        @include report_level(11);
    }
    .o_account_reports_level12 {
        @include report_level(12);
    }
    .o_account_reports_level13 {
        @include report_level(13);
    }
    .o_account_reports_default_style {
        border-bottom: 1px solid #eee;
        > td.o_account_report_line_indent > tr:first-child > span:last-child {
            margin-left: 30px;
        }
        &.o_account_reports_domain_total {
            > td.o_account_report_line_indent > span:last-child {
                margin-left: 30px;
            }
        }
    }
    .o_account_followup_not_clicked {
        .o_account_followup_skip {
            display: inline-block;
        }
        .o_account_followup_done {
            display: none;
        }
    }
    .o_account_followup_clicked {
        .o_account_followup_skip {
            display: none;
        }
        .o_account_followup_done {
            display: inline-block;
        }
    }
    .o_account_reports_history {
        min-width: 300px;
    }
    .o_account_coa_column_contrast td:nth-child(4n-1),
    .o_account_coa_column_contrast td:nth-child(4n-2),
    td.o_account_coa_column_contrast:nth-child(4n-1),
    td.o_account_coa_column_contrast:nth-child(4n-2) {
        background-color: #FAFAFA;
        background-clip: padding-box;
    }
    .table-hover tbody tr:hover td {
        background-color: #F0F0F0;
        background-clip: padding-box;
    }
}

.o_form_view {
    .o_account_reports_no_print {
        div.o_account_reports_summary {
            cursor: pointer;
        }
        .o_account_reports_table {
            margin-bottom: 0px;
            tbody tr:not(.o_account_reports_level0):hover {
                background-color: #f0f0f0;
            }
        }
    }
}

.o_account-progress-bar-content {
    color: black;
    position: absolute;
    width: 100%;
}
.o_account-progress {
    position: relative;
}
.o_account_reports_history [summary="o_followup_letter_display_none"] {
    display: none;
}

.o_account_report_search {
    margin-left: 10px;
    margin-right: 10px;
    .o_account_report_select {
        min-width: 100px;
    }
}

// Filters lines
// -----------------------------------------
.o_reports_filter_input_wrapper {
    position: relative;
    float: right;
    width: 150px;
    margin-bottom: 20px;
    float: right;
        .searchIcon {
        position: absolute;
        right: 10px;
    }
}
    .o_account_reports_filter_input {
    border: none;
    border-bottom: 1px black solid;
}
    .o_account_reports_filtered_lines {
    display: none;
}

.o_account_reports_filter_journals {
    .dropdown-menu {
        overflow: auto;
        // 86.5px is the height of .o_control_panel
        max-height: calc(100vh - (86.5px + #{$o-navbar-height}));
    }
}

// Summary to be edited
// -----------------------------------------
.o_account_reports_body .o_account_reports_summary {
    display: inline-block;
    position: relative;


    .o_account_report_summary_placeholder{
        opacity: .5;
    }

    .o_account_report_summary {
        padding: 10px 0;

        &, > span, .o_input, .o_account_reports_edit_summary_pencil {
            transition: all .2s ease 0s;
        }
        > span {
            padding: 10px 0;
            display: block;
            line-height: 1;
        }
    }

    .o_input {
        border: none;
        padding: 10px;
    }

    .o_account_reports_edit_summary_pencil {
        @include o-position-absolute(20px, $left: 0);
        visibility: hidden;
        opacity: 0;
    }

    &:hover {
        .o_account_reports_edit_summary_pencil {
            visibility: visible;
            opacity: 1;
        }

        .o_account_report_summary .o_input, .o_account_report_summary span {
            padding-right: 0;
        }
    }
}

.o_account_reports_body {
    .alert a {
        cursor: pointer;
    }
}

.o_account_reports_summary_edit {
    padding-bottom: 25px;
    padding-top: 10px;

    textarea {
        border: 1px solid gray('600');
        resize: vertical;
        width: 100%;
    }
}

.o_financial_report_hover_popup {
    color: orange;
}

// Print mode report summary
// -----------------------------------------
p.o_account_reports_contact_info {
    min-height: 30px;
}

.o_account_reports_load_more {
    span.account_report_line_name {
        cursor: pointer;
        direction: rtl  !important;
    }
}

.o_country_specific_report_label {
    margin-left: 16px;
    background-color: white;
}

.o_account_reports_filter_currency {
    > .dropdown-menu {
        overflow-y: auto;
        max-height: calc(100vh - #{$o-navbar-height} - 100px);  // 100px for the control panel
    }
}


===== .\az_account_reports\static\src\scss\account_report_print.scss =====
.o_account_reports_summary_edit {
    display: none !important;
}
.caret {
    display: none !important;
}
.o_account_reports_body_print {
    background-color: white !important;
    color: black !important;
    font-size: 16px !important;
    .o_account_reports_header {
        padding: 10px;
        background-color: #eee;
    }
    .o_account_reports_page {
        color: black !important;
    }
    .o_account_reports_table {
        margin-bottom: 0px;
        font-size: 16px !important;
        > tbody > tr {
            /* fix thead overlapping http://github.com/wkhtmltopdf/wkhtmltopdf/issues/1524 */
            page-break-inside: avoid;
        }
    }
    .o_account_reports_level0, .o_account_reports_level1, .o_account_reports_level2, .o_account_reports_domain_total, .total {
        .text-muted {
            color: black !important;
        }
    }
    .o_foldable_total {
        color: black !important;
    }
}
a {
    color: inherit !important;
}
.print_only {
    display: block !important;
    &.row {
        display: flex !important;
    }
}
[name="summary"] {
    display: none;
}
.no_print {
    display: none !important;
}

.o_account_reports_page {
    .o_account_report_line_ellipsis, .o_account_report_name_ellipsis{
        position: relative;
        span {
            position: absolute;
        }
        > span, span[class^="o_account_reports_domain_line_"] {
            white-space: normal;
            overflow: visible;
            text-overflow: initial;
            position: relative;
        }
    }
}


===== .\az_account_reports\views\report_financial.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>

        <template id="azbah_partner_ledger" inherit_id="account_reports.line_template" primary="True">
            <xpath expr="." position="before">
            </xpath>
        </template>
    </data>
</odoo>

===== .\az_account_reports\wizard\ledger_report.py =====
===== .\az_account_reports\wizard\ledger_report_view.xml =====
<?xml version="1.0" encoding="utf-8"?>

<odoo>
    <data>
        <record id="ledger_report_form" model="ir.ui.view">
            <field name="name">ledger.report.form.view</field>
            <field name="model">az.ledger.report</field>
            <field name="arch" type="xml">
                <form string="Ledger Report">
                    <sheet>
                        <group>
                            <group>
                                <field name="company_id"/>
                            </group>
                            <group>
                                <field name="date_from"/>
                                <field name="date_to"/>
                            </group>
                        </group>
                        <div>
                            <group>
                                <field name="account_ids">
                                    <tree>
                                        <field name="code" string="Code"/>
                                        <field name="name"/>
                                    </tree>
                                </field>
                            </group>
                        </div>
                    </sheet>
                    <footer>
                        <button name="get_ledger_report" type="object" string="Print" class="btn btn-primary"/>
                        <button name="get_ledger_report_xls" type="object" string="Print Excel" class="btn btn-primary"/>
                        <button string="Cancel" class="btn-secondary" special="cancel"/>
                    </footer>
                </form>
            </field>
        </record>

        <record id="ledger_report_action_form" model="ir.actions.act_window">
            <field name="name">Ledger Report</field>
            <field name="res_model">az.ledger.report</field>
            <field name="view_mode">form</field>
            <field name="target">new</field>
        </record>

        <menuitem id="ledger_report_menu"
                  name="Ledger Report Filtered💵"
                  parent="account_reports.account_reports_audit_reports_menu"
                  action="ledger_report_action_form"
                  sequence="10"/>
    </data>
</odoo>

===== .\az_account_reports\wizard\__init__.py =====
# -*- coding: utf-8 -*-

from . import ledger_report

===== .\az_coupons\__init__.py =====
# -*- coding: utf-8 -*-
from . import models

===== .\az_coupons\__manifest__.py =====
{
    "name": "AZ - Coupons",
    "version": "15",
    "license": "LGPL-3",
    "category": "sales",
    "depends": ["sale","purchase"]
    , "data": [
    'views/coupon_purchase.xml',
    'views/detailed_operations.xml',
    'views/res_config_settings_views.xml',
    'views/ir_sequence_view.xml',
    'security/coupon_purchase.xml',
]
}


===== .\az_coupons\models\coupon_config.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from odoo import fields, models


class ResConfigSettings(models.TransientModel):
    _inherit = 'res.config.settings'
    coupon_product_id = fields.Many2one('product.product', string='Voucher Product', help='Product used for paper (voucher)')
    coupon_book_ids = fields.Many2many("coupon.book", help='Number of vouchers in each book')

    def get_values(self):
        res = super(ResConfigSettings, self).get_values()
        ICPSudo = self.env['ir.config_parameter'].sudo()
        coupon_product_id = ICPSudo.get_param('az_coupons.coupon_product_id')
        coupon_book_ids = ICPSudo.get_param('az_coupons.coupon_book_ids')
        res.update(
            coupon_product_id=int(coupon_product_id) if coupon_product_id else False,
            coupon_book_ids=[(6, 0, [int(_) for _ in coupon_book_ids.split(',')] )] if coupon_book_ids else False
        )
        return res

    def set_values(self):
        super(ResConfigSettings, self).set_values()
        ICPSudo = self.env['ir.config_parameter'].sudo()
        ICPSudo.set_param("az_coupons.coupon_product_id", self.coupon_product_id.id)
        ICPSudo.set_param("az_coupons.coupon_book_ids", ','.join(map(str, self.coupon_book_ids.ids)))


class CouponBook(models.Model):
    _name = "coupon.book"
    product_id = fields.Many2one('product.product', string='Voucher Product', help='Product used for paper (voucher)')
    paper_count = fields.Integer(string='Paper Count', help='Number of vouchers in each book')




===== .\az_coupons\models\coupon_purchase.py =====
===== .\az_coupons\models\purchase_order.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from odoo import fields, models


class PurchaseOrder(models.Model):
    _inherit = "purchase.order"
    coupon_purchase_id = fields.Many2one('coupon.purchase', string="Coupon Purchase")



===== .\az_coupons\models\stock_picking.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from odoo import fields, models, _, api
from odoo.tools.float_utils import float_compare, float_is_zero, float_round
from odoo.exceptions import UserError


class StockMove(models.Model):
    _inherit = "stock.move"
    coupon_purchase_id = fields.Many2one('coupon.purchase', string="coupon Purchase")

    def update_move_lines_commands(self, move_lines_commands):
        indi = 0
        for line in self.picking_id.move_ids_without_package:
            if line.product_id == self.product_id:
                break
            indi += 1
        paper_count = self.picking_id.move_ids_without_package[indi].product_packaging_id.qty
        indi = 0
        coupon_serial = int(self.next_serial) * int(paper_count) - (paper_count - 1)
        for line in move_lines_commands:
            line[2]['lot_name'] = coupon_serial + indi
            indi += 1
        return move_lines_commands


class StockPicking(models.Model):
    _inherit = "stock.picking"
    coupon_purchase_id = fields.Many2one('coupon.purchase', string="coupon Purchase")

    def action_put_in_pack(self):
        self.ensure_one()
        if self.state not in ('done', 'cancel'):
            picking_move_lines = self.move_line_ids
            if (
                    not self.picking_type_id.show_reserved
                    and not self.immediate_transfer
                    and not self.env.context.get('barcode_view')
            ):
                picking_move_lines = self.move_line_nosuggest_ids

            move_line_ids = picking_move_lines.filtered(lambda ml:
                                                        float_compare(ml.qty_done, 0.0,
                                                                      precision_rounding=ml.product_uom_id.rounding) > 0
                                                        and not ml.result_package_id
                                                        )
            if not move_line_ids:
                move_line_ids = picking_move_lines.filtered(lambda ml: float_compare(ml.product_uom_qty, 0.0,
                                                                                     precision_rounding=ml.product_uom_id.rounding) > 0 and float_compare(
                    ml.qty_done, 0.0,
                    precision_rounding=ml.product_uom_id.rounding) == 0)
            if move_line_ids:
                res = self._pre_put_in_pack_hook(move_line_ids)
                if not res:
                    # 👇 ______ (｡◔‿◔｡) ________
                    res = self._put_in_pack_multi(move_line_ids)
                return res
            else:
                raise UserError(_("Please add 'Done' quantities to the picking to create a new pack."))

    def _put_in_pack_multi(self, move_line_ids, create_package_level=True):
        #  /\_/\
        # ( ◕‿◕ )
        #  >   <

        # Calculate the number of packages needed
        demand = int(self.move_ids_without_package[0].quantity_done)
        paper_count = int(self.move_ids_without_package[0].product_packaging_id.qty)
        num_packages_needed = int(demand / paper_count)
        move_line_ids = [move_line_ids[i:i + paper_count] for i in range(0, len(move_line_ids), paper_count)]
        for i in range(num_packages_needed):
            pack = self._put_in_pack(move_line_ids[i], create_package_level=create_package_level)
        return pack

    def button_validate(self):
        p = self.package_level_ids
        if not p:
            self.add_packs()
        res = super(StockPicking, self).button_validate()
        # self.remove_extra_packs()
        return True
    # def remove_extra_packs(self):
    #     lot_ids = self.move_line_ids_without_package.mapped('lot_id')
    #     x=lot_ids
    def add_packs(self):
        lines = []
        for line in self.move_line_ids_without_package:
            line_dict = (0, 0, {
                'package_id': self.env['stock.quant.package'].search([('name', '=', line.lot_id.name)]).id,
                'location_id': self.location_id.id,
                'location_dest_id': self.location_dest_id.id,
                'is_done': True,
            })
            lines.append(line_dict)
        self.write({'package_level_ids': lines})


class StockMoveLine(models.Model):
    _inherit = 'stock.picking'

    @api.onchange('move_line_ids_without_package')
    def _onchange_lot_id(self):
        if self.move_line_ids:
            first_line = self.move_line_ids[0]
            available_lots = self.env['stock.quant'].search([('product_id', '=', first_line.product_id.id),
                                                             ('location_id', '=', first_line.location_id.id),
                                                             ('quantity', '>', 0),
                                                             ('lot_id', '>', first_line.lot_id.id)
                                                             ],order='lot_id').mapped("lot_id")
            try:
                for i in range(1, len(self.move_line_ids)):
                    self.move_line_ids[i].lot_id = self.env['stock.production.lot'].search(
                        [('name', '=', str(available_lots[i - 1].name))])
            except:
                pass

===== .\az_coupons\models\xxaccount_move.py =====
# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from odoo import fields, models


class AccountMove(models.Model):
    _inherit = "account.move"
    purchase_order_id = fields.Many2one('purchase.order', string="Purchase Order")
    coupon_purchase_id = fields.Many2one(related='purchase_order_id.coupon_purchase_id', string="coupon Purchase",
                                        store=True)
    purchase_delegate_id = fields.Many2one('hr.employee', string="Delegate")


class AccountMoveLine(models.Model):
    _inherit = "account.move.line"
    note = fields.Text()


===== .\az_coupons\models\xxres_partner.py =====
# -*- coding: utf-8 -*-
from odoo import models, api


class ResPartner(models.Model):
    _inherit = "res.partner"

    # When Creating a new vendor, assign its code
    @api.model_create_multi
    def create(self, vals_list):
        source = self.env.context.get('source')
        if source == 'vendor':
            last_vendor = self.env['res.partner'].search([('code', 'ilike', 'v%')], order='id desc', limit=1)
            if last_vendor:
                new_code = 'V'+str(int(last_vendor.code[1:]) + 1).zfill(4)
                vals_list[0]['code'] = new_code
                vals_list[0]['company_type'] = 'company'
                vals_list[0]['is_company'] = True
        return super().create(vals_list)


===== .\az_coupons\models\__init__.py =====
# -*- coding: utf-8 -*-
from . import coupon_purchase
from . import purchase_order
from . import stock_picking
from . import coupon_config

===== .\az_coupons\report\batch_purchase.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
        <record id="report_coupon_purchase" model="ir.actions.report">
            <field name="name">coupon Purchase Order Report</field>
            <field name="model">coupon.purchase</field>
            <field name="report_type">qweb-pdf</field>
            <field name="report_name">azbah_accounting.report_azbah_coupon_purchase</field>
            <field name="print_report_name">'coupon Purchase Order'</field>
            <field name="binding_model_id" ref="az_account_coupon_purchase.model_coupon_purchase"/>
        </record>
</odoo>

===== .\az_coupons\report\batch_purchase_template.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>
        <template id="report_azbah_coupon_purchase">
            <t t-call="web.html_container">
                <t t-foreach="docs" t-as="o">
                    <t t-call="web.external_layout">
                        <div class="page">
                            <div class="row mt32">
                                <div class="col-xs-12"
                                     style="text-align:center;font-size: larger;font-weight: bolder;background-color:#C8C8C8">
                                    تقرير مشتريات مندوب
                                </div>
                            </div>
                            <div class="row mt16">
                                <div class="col-xs-6">
                                    <p>Date:
                                        <span t-field="o.date"/>
                                    </p>

                                    <p>Serial:
                                        <span t-field="o.name"/>
                                    </p>

                                    <p>Delegate:
                                        <span t-field="o.delegate_id.name"/>
                                    </p>
                                </div>
                                <div class="col-xs-6">
                                    <br/>
                                    <p>
                                        <strong>Total:
                                            <span t-field="o.total"/>
                                        </strong>
                                    </p>
                                </div>
                            </div>
                            <table class="table table-bordered" style="margin-top: 20px">
                                <tbody>
                                    <t t-foreach="o.line_ids" t-as="line">
                                        <t t-if="line.product_id.name">
                                            <tr>
                                                <td>
                                                    <span t-field="line.product_id.name"/>
                                                </td>
                                                <td>
                                                    <span t-field="line.quantity"/>
                                                </td>
                                                <td>
                                                    <span t-field="line.price"/>
                                                </td>
                                                <td>
                                                    <span t-field="line.price_subtotal"/>
                                                </td>
                                                <td>
                                                    <span t-field="line.price_subtotal_with_tax"/>
                                                </td>
                                                <td>
                                                    <span t-field="line.note"/>
                                                </td>
                                            </tr>
                                        </t>
                                        <t t-else="">

                                            <tr style="text-align:center;font-size: larger;font-weight: bolder;background-color:#C8C8C8">
                                                <td colspan="5">
                                                    <span t-field="line.vendor_id.name"/>
                                                </td>
                                                <td>
                                                    <span t-field="line.price_subtotal_with_tax"/>
                                                </td>
                                            </tr>

                                            <tr>
                                                <th>Product</th>
                                                <th>Quantity</th>
                                                <th>Price</th>
                                                <th>Sub Total</th>
                                                <th>With Tax</th>
                                                <th>Note</th>
                                            </tr>
                                        </t>
                                    </t>
                                </tbody>
                            </table>
                        </div>
                    </t>
                </t>
            </t>
        </template>
    </data>
</odoo>


===== .\az_coupons\security\coupon_purchase.xml =====
<odoo>
    <data>
        <!-- Define the access rights for the model -->
        <record model="ir.model.access" id="model_coupon_purchase_access">
            <field name="name">coupon.purchase</field>
            <field name="model_id" ref="model_coupon_purchase"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_unlink" eval="True"/>
            <field name="group_id" ref="account.group_account_invoice"/>

        </record>

        <record model="ir.model.access" id="model_coupon_book_access">
            <field name="name">coupon.book</field>
            <field name="model_id" ref="model_coupon_book"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_unlink" eval="True"/>
            <field name="group_id" ref="account.group_account_invoice"/>
        </record>

    </data>
</odoo>


===== .\az_coupons\static\src\scss\account_financial_report.scss =====
.o_foldable_menu {
    &.o_closed_menu {
        display: none;
    }
    .o_open_menu {
        display: block;
    }
}
@mixin o-account-reports-i-fa-toggle {
    i.fa {
        visibility: hidden;
    }
    &:hover i.fa {
        visibility: visible;
    }
}

.o_form_view {
    .o_account_reports_page {
        .o_input {
            width: 100%;
        }
    }
}

.o_account_reports_page {
    background-color: $o-view-background-color;
    color: $o-main-text-color;

    .dropdown-toggle::after {
        display: none; // disable bootstrap's carret and do it manaully for positionning
    }

    padding-bottom: 125px;
    @include o-webclient-padding($top: $o-sheet-vpadding, $bottom: $o-sheet-vpadding);
    .o_account_reports_level0 {
        border-width: 3px;
        font-weight: bold;
        // border-top-style: $border-top-style;
        border-bottom-style: double;
    }
    .o_account_reports_table {
        margin-bottom: 128px;
        th.o_account_report_column_header {
            &.sortable::before {
                content: '\f07d';
                font-family: 'FontAwesome';
                color: lightgray;
            }
            &.up::before {
                content: '\f176';
                color: black;
            }
            &.down::before {
                content: '\f175';
                color: black;
            }
            &:first-child {
                border: none;
            }
        }
    }
    .account_report_line_name a {
        color:#008784;
    }
    a {
        cursor: pointer;
    }
    .o_reports_date_to {
        margin-left: 20px;
    }
    .o_account_report_line {
        span {
            white-space: nowrap;
        }
        position: relative;
    }
    // truncate span content and ad '...' if content width > span width
    .o_account_report_line_ellipsis, .o_account_report_name_ellipsis{
        position: relative;
        span {
            position: absolute;
        }
        > span, span[class^="o_account_reports_domain_line_"] {
            left: 0;
            right: 0;
            top: 0;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    }
    .o_account_report_name_ellipsis {
        min-width: 200px;
        max-width: 50%;
    }
    .ellipsis_width {
        direction: rtl !important;
        height: 0 !important;
        position: relative !important;
        white-space: initial !important;
        display: inline-block !important;
        visibility: hidden;

    }

    tr:focus {
        outline: none;

        .o_account_report_line_ellipsis, .o_account_report_name_ellipsis {
            span {
                white-space: initial;
                overflow: initial;
                z-index: 1;
            }
        }
    }
    // ----------------------------------------------------------------
    .o_account_report_summary {
        padding-left: 5px;
    }
    .o_account_reports_summary_edit {
        padding-bottom: 40px;
        padding-top: 15px;
    }
    .js_account_report_foldable {
        cursor: pointer;
    }
    .color-red {
        color: red !important;
    }
    .color-green {
        color: green !important;
    }
    .color-transparent {
        opacity: 0 !important;
    }
    .trust-partner {
        font-size: 0.8em;
        margin-left: 5px;
    }
    .print_only {
        display: none;
    }
    .o_account_reports_table {
        &#table_header_clone {
            position: fixed;
            tbody {
                visibility: collapse;
                tr {
                    border: none;
                }
            }
        }

        width: 100%;

        .number {
            text-align: right;
        }
        .text {
            text-align: left;
        }
        .date {
            text-align: center;
        }
        th{
            background-color: white;
            background-clip: padding-box;
            border: 1px solid #e6e6e6;
            .subtitle{
                font-weight:normal;
            }
        }
        .o_account_reports_header_hierarchy {
            th {
                border-bottom: none;
            }
            th:not(:first-child) {
                border: 1px solid #e6e6e6;
                border-collapse: separate;
                padding-right: 8px;
                padding-left: 8px;
            }
        }
    }
    .oe_link_reports {
        @extend .btn;
        @extend .btn-outline-secondary;
        @extend .btn-sm;
        line-height: 0.8;
        vertical-align: initial;
    }
    .folded {
        .oe_link_reports {
            display: none;
        }
    }
    p.o_account_reports_contact_info {
        min-height: 30px;
    }
    .o_input {
        width: 70%;
    }
    .o_account_reports_edit_summary_pencil {
        margin-left: -15px;
        position: absolute;
    }
    table > tbody > tr >  td ~ td{
        padding-left: 8px;
        padding-right: 8px;
    }
    table > tbody > tr >  td{
        vertical-align: top;
    }
    .o_account_reports_summary {
        margin-bottom: 20px;
        @include o-account-reports-i-fa-toggle;
    }
    .o_account_reports_unfolded td + td span {
        visibility: hidden;
    }
    div.o_account_reports_saved_summary {
        padding-left: 5px;
    }
    .o_account_reports_web_action, .o_change_trust,
    span.o_account_reports_web_action, div.o_account_reports_saved_summary span,
    td.o_account_reports_unfoldable, td.o_account_reports_foldable, span.partner_id, span.move_line_id, input[type=checkbox] {
        cursor: pointer;
    }
    p.footnote > .text {
        white-space: pre-wrap;
    }
    p.footnote > .o_account_reports_footnote_icons, p.o_account_reports_footnote_edit > .o_account_reports_footnote_icons {
        visibility: hidden;
    }
    p.footnote:hover > .o_account_reports_footnote_icons {
        visibility: visible;
    }
    .o_account_reports_footnote_icons {
        position: absolute;
        margin-left: 3px;
    }
    .o_account_reports_caret_icon {
        position: absolute;
        display: contents;
        .fa {
            position: absolute;
            bottom: 4px;
        }
    }
    .o_account_reports_domain_line_0 {
        margin-left: 0px;
    }
    .o_account_reports_domain_line_1 {
        margin-left: 15px;
    }
    .o_account_reports_domain_line_2 {
        margin-left: 30px;
    }
    .o_account_reports_domain_line_3 {
        margin-left: 40px;
    }
    .o_account_reports_domain_line_4 {
        margin-left: 50px;
    }
    .o_account_reports_domain_line_5 {
        margin-left: 60px;
    }
    .o_account_reports_domain_line_6 {
        margin-left: 70px;
    }
    .o_account_reports_domain_line_7 {
        margin-left: 80px;
    }
    .o_account_reports_domain_line_8 {
        margin-left: 90px;
    }
    .o_account_reports_domain_line_9 {
        margin-left: 100px;
    }
    .o_account_reports_domain_line_10 {
        margin-left: 110px;
    }
    .o_account_reports_domain_line_11 {
        margin-left: 120px;
    }
    .o_account_reports_domain_line_12 {
        margin-left: 130px;
    }
    .o_account_reports_domain_line_13 {
        margin-left: 140px;
    }
    tr.o_account_reports_domain_total {
        font-weight: bold;
    }
    tr.o_account_reports_initial_balance {
        > td > span:last-child {
            margin-left: 30px;
        }
    }
    tr.hierarchy_total {
        font-weight: bold;
    }
    b.o_account_reports_footnote_sup {
        margin-top: 10px;
        color: $o-main-text-color;
    }
    ul.o_account_reports_domain_dropdown {
        margin-left: 70px
    }
    .total {
        font-weight: bold;
    }
    .o_account_reports_level0, .o_account_reports_level1, .o_account_reports_level2, .o_account_reports_domain_total, .total {
        .text-muted {
            color: #666666 !important;
        }
    }
    .o_foldable_total {
        color: #666666 !important;
        &.color-red{
            color: red !important;
        }
        &.color-green{
            color: green !important;
        }
    }
    .o_account_reports_totals_below_sections.o_js_account_report_parent_row_unfolded {
        .o_account_report_column_value {
            visibility: hidden;
        }
        td.number.o_foldable_total {
            border-bottom: none;
        }
    }
    td.o_foldable_total {
        font-weight: bold;
    }
    @mixin report_level($indent) {
        border-bottom: 1px solid #eee;
        > td.o_account_report_line_indent > span:last-child {
            margin-left: ($indent + 1) * 10px;
        }
        &.total {
            > td > span:last-child {
                margin-left: $indent * 10px;
            }
        }
    }
    .o_account_reports_level0 {
        & td {
            padding-top: 32px;
            span {
                top: unset;
            }
        }
        > td.o_account_report_line_indent.o_foldable_total > span:last-child {
            margin-left: 10px;
        }
    }
    .o_account_reports_level1 {
        @include report_level(1);
        font-weight: bold;
        border-bottom: 2px solid #bbb;
    }
    .o_account_reports_level2 {
        @include report_level(2);
        font-weight: bold;
        border-bottom: 1px solid #bbb;
    }
    .o_account_reports_level3 {
        @include report_level(3);
    }
    .o_account_reports_level4 {
        @include report_level(4);
    }
    .o_account_reports_level5 {
        @include report_level(5);
    }
    .o_account_reports_level6 {
        @include report_level(6);
    }
    .o_account_reports_level7 {
        @include report_level(7);
    }
    .o_account_reports_level8 {
        @include report_level(8);
    }
    .o_account_reports_level9 {
        @include report_level(9);
    }
    .o_account_reports_level10 {
        @include report_level(10);
    }
    .o_account_reports_level11 {
        @include report_level(11);
    }
    .o_account_reports_level12 {
        @include report_level(12);
    }
    .o_account_reports_level13 {
        @include report_level(13);
    }
    .o_account_reports_default_style {
        border-bottom: 1px solid #eee;
        > td.o_account_report_line_indent > tr:first-child > span:last-child {
            margin-left: 30px;
        }
        &.o_account_reports_domain_total {
            > td.o_account_report_line_indent > span:last-child {
                margin-left: 30px;
            }
        }
    }
    .o_account_followup_not_clicked {
        .o_account_followup_skip {
            display: inline-block;
        }
        .o_account_followup_done {
            display: none;
        }
    }
    .o_account_followup_clicked {
        .o_account_followup_skip {
            display: none;
        }
        .o_account_followup_done {
            display: inline-block;
        }
    }
    .o_account_reports_history {
        min-width: 300px;
    }
    .o_account_coa_column_contrast td:nth-child(4n-1),
    .o_account_coa_column_contrast td:nth-child(4n-2),
    td.o_account_coa_column_contrast:nth-child(4n-1),
    td.o_account_coa_column_contrast:nth-child(4n-2) {
        background-color: #FAFAFA;
        background-clip: padding-box;
    }
    .table-hover tbody tr:hover td {
        background-color: #F0F0F0;
        background-clip: padding-box;
    }
}

.o_form_view {
    .o_account_reports_no_print {
        div.o_account_reports_summary {
            cursor: pointer;
        }
        .o_account_reports_table {
            margin-bottom: 0px;
            tbody tr:not(.o_account_reports_level0):hover {
                background-color: #f0f0f0;
            }
        }
    }
}

.o_account-progress-bar-content {
    color: black;
    position: absolute;
    width: 100%;
}
.o_account-progress {
    position: relative;
}
.o_account_reports_history [summary="o_followup_letter_display_none"] {
    display: none;
}

.o_account_report_search {
    margin-left: 10px;
    margin-right: 10px;
    .o_account_report_select {
        min-width: 100px;
    }
}

// Filters lines
// -----------------------------------------
.o_reports_filter_input_wrapper {
    position: relative;
    float: right;
    width: 150px;
    margin-bottom: 20px;
    float: right;
        .searchIcon {
        position: absolute;
        right: 10px;
    }
}
    .o_account_reports_filter_input {
    border: none;
    border-bottom: 1px black solid;
}
    .o_account_reports_filtered_lines {
    display: none;
}

.o_account_reports_filter_journals {
    .dropdown-menu {
        overflow: auto;
        // 86.5px is the height of .o_control_panel
        max-height: calc(100vh - (86.5px + #{$o-navbar-height}));
    }
}

// Summary to be edited
// -----------------------------------------
.o_account_reports_body .o_account_reports_summary {
    display: inline-block;
    position: relative;


    .o_account_report_summary_placeholder{
        opacity: .5;
    }

    .o_account_report_summary {
        padding: 10px 0;

        &, > span, .o_input, .o_account_reports_edit_summary_pencil {
            transition: all .2s ease 0s;
        }
        > span {
            padding: 10px 0;
            display: block;
            line-height: 1;
        }
    }

    .o_input {
        border: none;
        padding: 10px;
    }

    .o_account_reports_edit_summary_pencil {
        @include o-position-absolute(20px, $left: 0);
        visibility: hidden;
        opacity: 0;
    }

    &:hover {
        .o_account_reports_edit_summary_pencil {
            visibility: visible;
            opacity: 1;
        }

        .o_account_report_summary .o_input, .o_account_report_summary span {
            padding-right: 0;
        }
    }
}

.o_account_reports_body {
    .alert a {
        cursor: pointer;
    }
}

.o_account_reports_summary_edit {
    padding-bottom: 25px;
    padding-top: 10px;

    textarea {
        border: 1px solid gray('600');
        resize: vertical;
        width: 100%;
    }
}

.o_financial_report_hover_popup {
    color: orange;
}

// Print mode report summary
// -----------------------------------------
p.o_account_reports_contact_info {
    min-height: 30px;
}

.o_account_reports_load_more {
    span.account_report_line_name {
        cursor: pointer;
        direction: rtl  !important;
    }
}

.o_country_specific_report_label {
    margin-left: 16px;
    background-color: white;
}

.o_account_reports_filter_currency {
    > .dropdown-menu {
        overflow-y: auto;
        max-height: calc(100vh - #{$o-navbar-height} - 100px);  // 100px for the control panel
    }
}


===== .\az_coupons\static\src\scss\account_report_print.scss =====
.o_account_reports_summary_edit {
    display: none !important;
}
.caret {
    display: none !important;
}
.o_account_reports_body_print {
    background-color: white !important;
    color: black !important;
    font-size: 12px !important;
    .o_account_reports_header {
        padding: 10px;
        background-color: #eee;
    }
    .o_account_reports_page {
        color: black !important;
    }
    .o_account_reports_table {
        margin-bottom: 0px;
        font-size: 12px !important;
        > tbody > tr {
            /* fix thead overlapping http://github.com/wkhtmltopdf/wkhtmltopdf/issues/1524 */
            page-break-inside: avoid;
        }
    }
    .o_account_reports_level0, .o_account_reports_level1, .o_account_reports_level2, .o_account_reports_domain_total, .total {
        .text-muted {
            color: black !important;
        }
    }
    .o_foldable_total {
        color: black !important;
    }
}
a {
    color: inherit !important;
}
.print_only {
    display: block !important;
    &.row {
        display: flex !important;
    }
}
[name="summary"] {
    display: none;
}
.no_print {
    display: none !important;
}

.o_account_reports_page {
    .o_account_report_line_ellipsis, .o_account_report_name_ellipsis{
        position: relative;
        span {
            position: absolute;
        }
        > span, span[class^="o_account_reports_domain_line_"] {
            white-space: normal;
            overflow: visible;
            text-overflow: initial;
            position: relative;
        }
    }
}


===== .\az_coupons\views\account_move.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>

        <!-- VIEWS -->
        <record id="azbah_account_move_tree" model="ir.ui.view">
            <field name="name">azbah.account.move.tree</field>
            <field name="model">account.move</field>
            <field name="mode">extension</field>
            <field name="inherit_id" ref="account.view_in_invoice_bill_tree"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='ref']" position="before">
                    <field name="purchase_order_id"/>
                    <field name="coupon_purchase_id"/>
                    <field name="purchase_delegate_id"/>
                </xpath>
            </field>
        </record>

        <record id="azbah_account_move_form" model="ir.ui.view">
            <field name="name">azbah.account.move.form</field>
            <field name="model">account.move</field>
            <field name="mode">extension</field>
            <field name="inherit_id" ref="account.view_move_form"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='payment_reference']" position="after">
                    <field name="purchase_order_id"/>
                    <field name="coupon_purchase_id"/>
                    <field name="purchase_delegate_id"/>
                </xpath>

                <xpath expr="//field[@name='price_subtotal']" position="before">
                    <field name="note"/>
                </xpath>
            </field>
        </record>
    </data>
</odoo>


===== .\az_coupons\views\coupon_config.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>

    <record id="res_config_settings_view_form" model="ir.ui.view">
        <field name="name">res.config.settings.view.form.inherit.coupon.purchase</field>
        <field name="model">res.config.settings</field>
        <field name="priority" eval="15"/>
        <field name="inherit_id" ref="base.res_config_settings_view_form"/>
        <field name="arch" type="xml">
            <xpath expr="//div[hasclass('settings')]" position="inside">
                <div class="app_settings_block" data-string="Coupon Purchase" string="Coupon Purchase"
                     data-key="coupon_purchase">
                    <h2>Coupon Purchase</h2>
                    <div class="row mt16 o_settings_container">
                        <div class="col-12 col-lg-6 o_setting_box">
                            <div class="o_setting_left_pane"/>
                            <div class="o_setting_right_pane">
                                <span class="o_form_label">Coupons</span>
                                <div class="text-muted content-group mt16">
                                    <field name="coupon_product_id" class="text-center oe_inline"/>
                                    <field name="coupon_book_ids" class="text-center oe_inline"/>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </xpath>
        </field>
    </record>
    <record id="view_res_config_settings_form" model="ir.ui.view">
        <field name="name">res.config.settings.form</field>
        <field name="model">res.config.settings</field>
        <field name="arch" type="xml">
            <form string="Configuration" class="oe_form_configuration">
                <header>
                    <button string="Save" type="object" name="execute" class="oe_highlight"/>
                    <button string="Cancel" type="object" name="cancel" class="oe_link"/>
                </header>
                <sheet>
                    <group>
                        <field name="coupon_product_id"/>
                        <field name="coupon_book_ids"/>
                    </group>
                </sheet>
            </form>
        </field>
    </record>

    <record id="view_coupon_config_form" model="ir.ui.view">
        <field name="name">Coupon Config Form</field>
        <field name="model">coupon.config</field>
        <field name="type">form</field>
        <field name="arch" type="xml">
            <form string="Coupon Config">
                <sheet>

                    <group>
                        <field name="coupon_product_id" required="1"/>
                    </group>
                    <notebook>
                        <page string="Coupon Books">
                            <field name="coupon_book_ids">
                                <tree editable="bottom">
                                    <field name="product_id"/>
                                    <field name="paper_count"/>
                                </tree>
                            </field>
                        </page>
                    </notebook>
                </sheet>

            </form>
        </field>
    </record>

    <record id="view_coupon_book_form" model="ir.ui.view">
        <field name="name">Coupon Book Form</field>
        <field name="model">coupon.book</field>
        <field name="type">form</field>
        <field name="arch" type="xml">
            <form string="Coupon Book">
                <group>
                    <field name="product_id"/>
                    <field name="paper_count"/>
                </group>
            </form>
        </field>
    </record>
    <record id="view_coupon_book_tree" model="ir.ui.view">
        <field name="name">Coupon Book Tree</field>
        <field name="model">coupon.book</field>
        <field name="arch" type="xml">
            <tree>
                <field name="product_id"/>
                <field name="paper_count"/>
            </tree>
        </field>
    </record>


    <!-- Menu Action -->
    <record id="action_coupon_config" model="ir.actions.act_window">
        <field name="name">Coupon Config</field>
        <field name="res_model">coupon.config</field>
        <field name="view_mode">form</field>
    </record>

    <!-- Menu Item -->
    <menuitem id="menu_coupon_config" name="Coupons Config" parent="purchase.menu_purchase_config"
              action="action_coupon_config" sequence="100"/>

</odoo>


===== .\az_coupons\views\coupon_purchase.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>

        <!-- VIEWS -->
        <record id="azbah_view_coupon_purchase_tree" model="ir.ui.view">
            <field name="name">azbah.coupon.purchase.tree</field>
            <field name="model">coupon.purchase</field>
            <field name="arch" type="xml">
                <tree>
                    <field name="name" string="Serial"/>
                    <field name="date"/>
                    <field name="total"/>
                    <field name="paper_count"/>
                    <field name="first_serial"/>
                    <field name="quantity"/>
                    <field name="last_serial"/>
                    <field name="picking_type_id"/>
                    <field name="price"/>
                    <field name="price_subtotal"/>
                    <field name="tax_ids" widget="many2many_tags" options="{'no_create':True}"/>
                    <field name="price_subtotal_with_tax"/>
                    <field name="note"/>
                </tree>
            </field>
        </record>

        <record id="azbah_view_coupon_purchase_form" model="ir.ui.view">
            <field name="name">azbah.coupon.purchase.form</field>
            <field name="model">coupon.purchase</field>
            <field name="arch" type="xml">
                <form>
                    <sheet>
                        <div class="oe_button_box" name="button_box">
                            <button class="oe_stat_button" type="object"
                                    name="launch_purchase_orders" icon="fa-list-ol"
                                    string="Purchase Order"
                                    attrs=" {'invisible':[('name', '=', 'New')]}">
                            </button>
                            <button class="oe_stat_button" type="object"
                                    string="Inventory"
                                    name="launch_picking" icon="fa-truck"
                                    attrs=" {'invisible':[('name', '=', 'New')]}"/>

                            <button name="launch_packages" string="Packages" type="object"
                                    class="oe_stat_button" icon="fa-cubes"
                                    attrs=" {'invisible':[('name', '=', 'New')]}">
                                <field name="quantity" widget="statinfo"
                                       string="Packages"/>
                            </button>

                        </div>
                        <group>
                            <group>
                                <field name="name"/>
                                <field name="date"/>
                                <field name="paper_count"/>
                                <field name="first_serial"/>
                                <field name="quantity"/>
                            </group>
                            <group>
                                <field name="picking_type_id"/>
                                <field name="price"/>
                                <field name="price_subtotal"/>
                                <field name="tax_ids" widget="many2many_tags" options="{'no_create':True}"/>
                                <field name="price_subtotal_with_tax"/>
                                <field name="note"/>
                            </group>
                        </group>
                    </sheet>
                </form>
            </field>
        </record>

        <!-- ACTIONS -->

        <record id="action_azbah_view_coupon_purchase" model="ir.actions.act_window">
            <field name="name">Coupon Purchase Orders</field>
            <field name="res_model">coupon.purchase</field>
            <field name="view_mode">tree,form</field>
        </record>

        <menuitem parent="purchase.menu_procurement_management"
                  id="menu_azbah_action_azbah_view_coupon_purchase"
                  action="action_azbah_view_coupon_purchase"
                  groups="account.group_account_user"
                  name="كوبونات"
                  sequence="110"/>

    </data>
</odoo>


===== .\az_coupons\views\detailed_operations.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>

    <record id="view_stock_move_operations_inherit" model="ir.ui.view">
        <field name="name">az.coupons.generate.serials</field>
        <field name="model">stock.move</field>
        <field name="inherit_id" ref="stock.view_stock_move_operations"/>
        <field name="arch" type="xml">

            <xpath expr="//button[@name='action_assign_serial_show_details']" position="replace">
                <button name="action_assign_serial_show_details" type="object" class="btn-link" data-hotkey="k"
                        title="Assign Serial Numbers">
                    <span>Generate Serials</span>
                </button>
            </xpath>
        </field>
    </record>


</odoo>









===== .\az_coupons\views\ir_sequence_view.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data noupdate="1">
        <record id="seq_coupon_purchase" model="ir.sequence">
            <field name="name">Coupon Purchase Sequence</field>
            <field name="code">coupon.purchase</field>
            <field name="prefix">CPN-</field>
            <field name="padding">5</field>
            <field name="number_increment">1</field>
        </record>
    </data>

</odoo>

===== .\az_coupons\views\purchase_order.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>

        <!-- VIEWS -->
        <record id="azbah_purchase_order_tree" model="ir.ui.view">
            <field name="name">azbah.purchase.order.tree</field>
            <field name="model">purchase.order</field>
            <field name="mode">extension</field>
            <field name="inherit_id" ref="purchase.purchase_order_view_tree"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='user_id']" position="before">
                    <field name="coupon_purchase_id"/>
                    <field name="delegate_id"/>
                </xpath>
            </field>
        </record>

        <record id="azbah_purchase_order_form" model="ir.ui.view">
            <field name="name">azbah.purchase.order.form</field>
            <field name="model">purchase.order</field>
            <field name="mode">extension</field>
            <field name="inherit_id" ref="purchase.purchase_order_form"/>
            <field name="arch" type="xml">

                <xpath expr="//header" position="inside">
                    <button name="serialize" string="Create Contextual Action" type="object"
                            class="btn-primary"
                            attrs="{'invisible':[('binding_model_id','!=',False)]}"
                            help="Display an option in the 'More' top-menu in order to run this action."/>


                </xpath>

                <xpath expr="//field[@name='partner_ref']" position="after">
                    <field name="coupon_purchase_id"/>
                    <field name="delegate_id"/>
                </xpath>

                <xpath expr="//field[@name='price_subtotal']" position="before">
                    <field name="note" invisible="1"/>
                </xpath>

            </field>
        </record>
    </data>
</odoo>


===== .\az_coupons\views\res_config_settings_views.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>

    <record id="res_config_settings_view_form_coupons" model="ir.ui.view">
        <field name="name">res.config.settings.view.form.inherit.coupons</field>
        <field name="model">res.config.settings</field>
        <field name="priority" eval="25"/>
        <field name="inherit_id" ref="purchase.res_config_settings_view_form_purchase"/>
        <field name="arch" type="xml">
            <xpath expr="//div[@data-key='purchase']" position="inside">
                <field name="is_installed_sale" invisible="1"/>
                <h2 attrs="{'invisible': [('is_installed_sale', '=', False)]}">Coupons</h2>
                <div class="row mt16 o_settings_container" name="request_vendor_setting_container">
                    <div class="col-12 col-lg-6 o_setting_box">
                        <div>
                            <group>
                                <field name="coupon_product_id"/>
                                <field name="coupon_book_ids">
                                    <tree editable="bottom">
                                        <field name="product_id"/>
                                        <field name="paper_count"/>
                                    </tree>
                                </field>
                            </group>
                        </div>
                    </div>
                </div>
            </xpath>
        </field>
    </record>


<!--    <record id="res_config_settings_view_form" model="ir.ui.view">-->
<!--        <field name="name">res.config.settings.view.form.inherit.coupons</field>-->
<!--        <field name="model">res.config.settings</field>-->
<!--        <field name="inherit_id" ref="base.res_config_settings_view_form"/>-->
<!--        <field name="arch" type="xml">-->
<!--            <xpath expr="//div[hasclass('settings')]" position="inside">-->
<!--                <div class="app_settings_block" string="Coupons" data-string="Coupons">-->
<!--                    <field name="coupon_product_id"/>-->
<!--                    <field name="coupon_book_ids" widget="many2many_tags"/>-->
<!--                </div>-->
<!--            </xpath>-->
<!--        </field>-->
<!--    </record>-->

</odoo>



===== .\az_coupons\views\stock.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>

        <!-- VIEWS -->
        <record id="azbah_stock_picking_tree" model="ir.ui.view">
            <field name="name">azbah.stock.picking.tree</field>
            <field name="model">stock.picking</field>
            <field name="mode">extension</field>
            <field name="inherit_id" ref="stock.vpicktree"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='partner_id']" position="after">
                    <field name="coupon_purchase_id"/>
                    <field name="delegate_id"/>
                </xpath>
            </field>
        </record>
        <record id="azbah_stock_picking_form" model="ir.ui.view">
            <field name="name">azbah.stock.picking.form</field>
            <field name="model">stock.picking</field>
            <field name="mode">extension</field>
            <field name="inherit_id" ref="stock.view_picking_form"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='location_dest_id']" position="after">
                    <field name="coupon_purchase_id"/>
                    <field name="delegate_id"/>
                </xpath>
            </field>
        </record>


        <record id="azbah_stock_picking_form" model="ir.ui.view">
            <field name="name">azbah.hide.stock.picking.form</field>
            <field name="model">stock.picking</field>
            <field name="inherit_id" ref="stock.view_picking_form"/>
            <field name="arch" type="xml">

                <xpath expr="//field[@name='package_level_ids_details']" position="attributes">
                    <attribute name="groups">base.group_system</attribute>
                </xpath>
                <xpath expr="//button[@name='action_put_in_pack']" position="attributes">
                    <attribute name="groups">stock.group_tracking_lot,base.group_system</attribute>
                </xpath>

            </field>
        </record>

    </data>
</odoo>


===== .\az_inventory\__init__.py =====
from . import models


===== .\az_inventory\__manifest__.py =====
{
    "name": "AZ-Invnetory",
    "version": "15",
    "license": "LGPL-3",
    "category": "stock",
    "depends": ["stock"]
    , "data": [
    'views/stock_picking.xml'
]
}


===== .\az_inventory\models\stock_picking.py =====
# -*- coding: utf-8 -*-

from odoo import models, fields

ACCOUNT_DOMAIN = "['&', '&', '&', ('deprecated', '=', False), ('internal_type','=','other'), ('company_id', '=', current_company_id), ('is_off_balance', '=', False)]"

class StockPiciking(models.Model):
    _inherit = "stock.move"
    property_account_expense_categ_id = fields.Many2one('account.account', company_dependent=True,
                                                        string="Expense Account",
                                                        domain=ACCOUNT_DOMAIN,
                                                        help="The expense is accounted for when a vendor bill is validated, except in anglo-saxon accounting with perpetual inventory valuation in which case the expense (Cost of Goods Sold account) is recognized at the customer invoice validation.")

===== .\az_inventory\models\__init__.py =====
# -*- coding: utf-8 -*-

from . import stock_picking

===== .\az_inventory\report\sanad_template.xml =====
===== .\az_inventory\views\stock_picking.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>

        <record id="view_azbah_account_journal_form_inherited" model="ir.ui.view">
            <field name="name">az.stock.picking.form</field>
            <field name="model">stock.picking</field>
            <field name="inherit_id" ref="stock.view_picking_form"/>
            <field name="arch" type="xml">
                <xpath expr="//field[@name='move_ids_without_package']/tree" position="inside">
                    <field name="property_account_expense_categ_id"/>
                </xpath>
            </field>
        </record>


    </data>
</odoo>


===== .\az_inventory_valuation\__init__.py =====
from . import wizard


===== .\az_inventory_valuation\__manifest__.py =====
{
    'name': 'AZ - Inventory Valuation at Date',
    'version': '15.0.1.0.0',
    'category': 'Inventory',
    'summary': 'Wizard to get stock valuation as of a specific date',
    'depends': ['stock', 'purchase'],
    'data': [
        'wizard/stock_valuation.xml',
    ],
    'installable': True,
    'application': False,
}


===== .\az_inventory_valuation\models\__init__.py =====
# -*- coding: utf-8 -*-

from . import stock_picking

===== .\az_inventory_valuation\report\sanad_template.xml =====
===== .\az_inventory_valuation\wizard\stock_valuation.py =====
from odoo import models, fields, api
import io
import xlsxwriter
import base64

class StockValuationWizard(models.TransientModel):
    _name = 'stock.valuation.wizard'
    _description = 'Stock Valuation Wizard'

    date = fields.Date(string='Date', required=True)
    report_file = fields.Binary(string='Report File')
    report_filename = fields.Char(string='Report Filename', default='stock_valuation.xlsx')

    def get_stock_valuation(self):
        self.ensure_one()
        date = self.date

        products = self.env['product.product'].search([])
        valuation_lines = []

        for product in products:
            quantity = sum(self.env['stock.quant'].search([
                ('product_id', '=', product.id),
                ('location_id.usage', '=', 'internal')
            ]).mapped('quantity'))

            latest_purchase_line = self.env['purchase.order.line'].search([
                ('product_id', '=', product.id)
            ], order='date_order desc', limit=1)

            price = latest_purchase_line.price_unit if latest_purchase_line else 0.0
            value = quantity * price
            name_and_code = f'[{product.product_tmpl_id.code.strip()}] {product.name}' if product.product_tmpl_id.code else product.name
            valuation_lines.append({
                'product': name_and_code,
                'quantity': quantity,
                'uom': product.uom_id.name,
                'value': value,
            })

        self._generate_excel_report(valuation_lines)

        return {
            'type': 'ir.actions.act_window',
            'name': 'Stock Valuation',
            'view_mode': 'form',
            'res_model': 'stock.valuation.wizard',
            'res_id': self.id,
            'target': 'new',
        }

    def _generate_excel_report(self, valuation_lines):
        output = io.BytesIO()
        workbook = xlsxwriter.Workbook(output, {'in_memory': True})
        worksheet = workbook.add_worksheet('Stock Valuation')

        # Define the headers
        headers = ['Product', 'Quantity', 'Unit of Measure', 'Value']
        for col_num, header in enumerate(headers):
            worksheet.write(0, col_num, header)

        # Write data to the sheet
        for row_num, line in enumerate(valuation_lines, start=1):
            worksheet.write(row_num, 0, line['product'])
            worksheet.write(row_num, 1, line['quantity'])
            worksheet.write(row_num, 2, line['uom'])
            worksheet.write(row_num, 3, line['value'])

        workbook.close()
        output.seek(0)

        self.report_file = base64.b64encode(output.read())
        self.report_filename = 'stock_valuation_{}.xlsx'.format(fields.Date.today())

    def download_report(self):
        return {
            'type': 'ir.actions.act_url',
            'url': 'web/content/?model=stock.valuation.wizard&id={}&field=report_file&filename_field=report_filename&download=true'.format(
                self.id),
            'target': 'new',
        }
class StockValuationResult(models.TransientModel):
    _name = 'stock.valuation.result'
    _description = 'Stock Valuation Result'

    product = fields.Char(string='Product')
    quantity = fields.Float(string='Quantity')
    uom = fields.Char(string='Unit of Measure')
    value = fields.Float(string='Value')


===== .\az_inventory_valuation\wizard\stock_valuation.xml =====
<odoo>
    <record id="view_stock_valuation_wizard_form" model="ir.ui.view">
        <field name="name">stock.valuation.wizard.form</field>
        <field name="model">stock.valuation.wizard</field>
        <field name="arch" type="xml">
            <form string="Stock Valuation Wizard">
                <group>
                    <field name="date"/>
                </group>
                <footer>
                    <button string="Get Valuation" type="object" name="get_stock_valuation" class="btn-primary"/>
                    <button string="Cancel" class="btn-secondary" special="cancel"/>
                </footer>
                <group>
                    <field name="report_file" filename="report_filename" readonly="1"/>
                    <button string="Download Report" type="object" name="download_report"
                            attrs="{'invisible': [('report_file', '=', False)]}" class="btn-primary"/>
                </group>
            </form>
        </field>
    </record>

    <record id="action_stock_valuation_wizard" model="ir.actions.act_window">
        <field name="name">Stock Valuation Wizard</field>
        <field name="res_model">stock.valuation.wizard</field>
        <field name="view_mode">form</field>
        <field name="target">new</field>
    </record>

    <menuitem id="menu_stock_valuation_wizard" name="تقييم مخزون بتاريخ"
              sequence="7"
              parent="stock.menu_warehouse_report" action="action_stock_valuation_wizard"/>

</odoo>




===== .\az_inventory_valuation\wizard\__init__.py =====
from . import stock_valuation


===== .\az_ks_pos_low_stock_alert\__init__.py =====
from . import models

===== .\az_ks_pos_low_stock_alert\__manifest__.py =====
# -*- coding: utf-8 -*-
{
    'name': "POS Low Stock Alert",
    'summary': """Manage the Stock of your POS products by highlighting them in different colors depending on
                their stock state.""",
    'description': """
        POS Low Stock Alert v15.0
        Manage the Stock of your POS products by highlighting them in different colors depending on
                their stock state.
        POS,
        POS Low Stock Alert,
        Low Stock Alert,
        Stock Alert,
        POS Low Stock Warning,
        POS Stock Warning,
        Inventory Alert,
        Inventory Minimum Quantity Alert,
        Inventory Minimum Quantity Warning,
        POS Manager,
        POS Inventory,
        POS Stock,
        POS Stock Alert,
        POS Retail,
        POS Shop,
        Point of Sales,
        Point of Sales Stock Alert,
        Point of Sales Low Stock Alert,
        POS Shop Low Stock,
        stock notification, 
        low stock notification, 
        product stock notification, 
        product low stock, 
        stock management, 
        notification odoo apps, 
        odoo notification, 
        odoo website stock, 
        website stock notify, 
        stock notify, 
        product stock, 
        odoo website product stock, 
        odoo website stock management
    """,
    'author': 'Ksolves India Ltd.',
    'website': "https://store.ksolves.com/",
    'license': 'LGPL-3',
    'currency': 'EUR',
    'price': '0.0',
    'category': 'Point Of Sale',
    'support': 'sales@ksolves.com',
    'version': '15.0.1.0.1',
    'images': ['static/description/pos_15.jpg'],
    'depends': ['point_of_sale'],
    'data': [
        # 'views/assets.xml',
        'views/config.xml'
    ],
    # 'qweb': ['static/src/xml/ks_low_stock.xml']
    'assets' : {
        'point_of_sale.assets': [
            'az_ks_pos_low_stock_alert/static/src/css/ks_low_stock.css',
            'az_ks_pos_low_stock_alert/static/src/js/ks_utils.js',
            'az_ks_pos_low_stock_alert/static/src/js/ks_low_stock.js',
            'az_ks_pos_low_stock_alert/static/src/js/ks_product_list.js',
            'az_ks_pos_low_stock_alert/static/src/js/ks_product_screen.js',
            'az_ks_pos_low_stock_alert/static/src/js/ks_product_widget.js',
        ],
        'web.assets_qweb': [
            'az_ks_pos_low_stock_alert/static/src/xml/**/*',
        ]
    }
}


===== .\az_ks_pos_low_stock_alert\i18n\en_US.po =====
# Translation of Odoo Server.
# This file contains the translation of the following modules:
# 	* az_ks_pos_low_stock_alert
#
msgid ""
msgstr ""
"Project-Id-Version: Odoo Server 13.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-12-26 10:21+0000\n"
"PO-Revision-Date: 2019-12-26 10:21+0000\n"
"Last-Translator: \n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: \n"
"Plural-Forms: \n"

#. module: az_ks_pos_low_stock_alert
#. openerp-web
#: code:addons/az_ks_pos_low_stock_alert/static/src/js/ks_utils.js:0
#, python-format
msgid ""
" has only  items available. \n"
" You're trying to order ."
msgstr ""

#. module: az_ks_pos_low_stock_alert
#: model:ir.model.fields,field_description:az_ks_pos_low_stock_alert.field_pos_config__allow_order_when_product_out_of_stock
msgid "Allow Order when Product is Out Of Stock"
msgstr ""

#. module: az_ks_pos_low_stock_alert
#: model_terms:ir.ui.view,arch_db:az_ks_pos_low_stock_alert.pos_config
msgid "Allow Order when Product is Out of Stock"
msgstr ""

#. module: az_ks_pos_low_stock_alert
#: model_terms:ir.ui.view,arch_db:az_ks_pos_low_stock_alert.pos_config
msgid "Allow order when product is out-of-stock"
msgstr ""

#. module: az_ks_pos_low_stock_alert
#. openerp-web
#: code:addons/az_ks_pos_low_stock_alert/static/src/js/ks_utils.js:0
#, python-format
msgid "Cannot order a product more than its availability"
msgstr ""

#. module: az_ks_pos_low_stock_alert
#: model_terms:ir.ui.view,arch_db:az_ks_pos_low_stock_alert.pos_config
msgid "Check this to display product stock"
msgstr ""

#. module: az_ks_pos_low_stock_alert
#: model_terms:ir.ui.view,arch_db:az_ks_pos_low_stock_alert.pos_config
msgid "Display Product Stock"
msgstr ""

#. module: az_ks_pos_low_stock_alert
#: model_terms:ir.ui.view,arch_db:az_ks_pos_low_stock_alert.pos_config
msgid "Display Quantity of Products in POS"
msgstr ""

#. module: az_ks_pos_low_stock_alert
#: model:ir.model.fields,field_description:az_ks_pos_low_stock_alert.field_pos_config__display_stock
msgid "Display Stock of products in POS"
msgstr ""

#. module: az_ks_pos_low_stock_alert
#. openerp-web
#: code:addons/az_ks_pos_low_stock_alert/static/src/js/ks_low_stock.js:0
#, python-format
msgid "Empty Serial/Lot Number"
msgstr ""

#. module: az_ks_pos_low_stock_alert
#: model:ir.model.fields,field_description:az_ks_pos_low_stock_alert.field_pos_config__minimum_stock_alert
msgid "Minimum Limit to change the stock color for the product"
msgstr ""

#. module: az_ks_pos_low_stock_alert
#: model_terms:ir.ui.view,arch_db:az_ks_pos_low_stock_alert.pos_config
msgid "Minimum Stock Alert"
msgstr ""

#. module: az_ks_pos_low_stock_alert
#. openerp-web
#: code:addons/az_ks_pos_low_stock_alert/static/src/js/ks_low_stock.js:0
#, python-format
msgid "One or more product(s) required serial/lot number."
msgstr ""

#. module: az_ks_pos_low_stock_alert
#. openerp-web
#: code:addons/az_ks_pos_low_stock_alert/static/src/xml/ks_low_stock.xml:0
#, python-format
msgid "Out-Of-Stock"
msgstr ""

#. module: az_ks_pos_low_stock_alert
#: model_terms:ir.ui.view,arch_db:az_ks_pos_low_stock_alert.pos_config
msgid "POS Low Stock Alert"
msgstr ""

#. module: az_ks_pos_low_stock_alert
#: model:ir.model,name:az_ks_pos_low_stock_alert.model_pos_config
msgid "Point of Sale Configuration"
msgstr ""

#. module: az_ks_pos_low_stock_alert
#: model_terms:ir.ui.view,arch_db:az_ks_pos_low_stock_alert.pos_config
msgid "Show stock in red color when it is lower than"
msgstr ""


===== .\az_ks_pos_low_stock_alert\models\ks_pos_config.py =====
#
# @Author: KSOLVES India Private Limited
# @Email: sales@ksolves.com
#


from odoo import api, fields, models

class PosConfig(models.Model):
    _inherit = 'pos.config'

    display_stock = fields.Boolean(string = 'Display Stock of products in POS', default = True)
    minimum_stock_alert = fields.Integer(string='Minimum Limit to change the stock color for the product', default = 0)
    allow_order_when_product_out_of_stock = fields.Boolean(string = 'Allow Order when Product is Out Of Stock', default = True)

===== .\az_ks_pos_low_stock_alert\models\product_product.py =====
from odoo import api, fields, models


class ProductProduct(models.Model):
    _inherit = 'product.product'

    def get_qty_in_location(self, pos_config_id):
        picking_type_id = self.env['pos.config'].search([('id', '=', pos_config_id)]).picking_type_id
        location_id = picking_type_id.default_location_src_id
        return self.env['stock.quant']._get_available_quantity(self, location_id)


===== .\az_ks_pos_low_stock_alert\models\__init__.py =====
from . import ks_pos_config
from . import product_product

===== .\az_ks_pos_low_stock_alert\static\description\index.html =====
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Odoo</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <link href="https://fonts.googleapis.com/css?family=Montserrat" rel="stylesheet">
    <link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet"
          integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/css?family=Roboto:400,500,700&display=swap" rel="stylesheet">
    <link href=https://apps.odoocdn.com/web/content/7247337-184ae0e/1/web.assets_frontend.css" rel="stylesheet">

</head>
<!-- odoo description page css -->

<body>
<!-- Header -->
<main class="container">
    <header class="py-2">
            <div class="row align-items-center">
                <div class="col-12 col-md-4">
                    <span class="btn pr-2">
                        <img src="images/ksolves-logo.png" alt="ksolves-logo" style="height:50px">
                    </span>
                </div>
                <div class="col-6 col-md">
                     <div class="text-md-right">
                        <a href="https://apps.odoo.com/apps/modules/browse?search=ksolves" target="_blank" class="btn btn-sm py-2 px-md-3"
                              style="font-size: 14px; background-color: #203038;color:#fff;"><i class="fa fa-list-alt mr-1"></i>
                              <span class="d-none d-sm-inline">Ksolves</span> All Apps
                        </a>
                    </div>
                </div>
                <div class="col-6 col-md-5 text-md-right">
                    <span class="btn btn-sm py-2 px-md-3 mr-1" style="font-size: 13px;font-size: 14px; font-weight: 500;background-color: #203038;color:#fff;"><i class="fa fa-check mr-1"></i> Community</span>
                    <span class="btn btn-sm py-2 px-md-3 mr-1" style="font-size: 13px;font-size: 14px; font-weight: 500;background-color: #203038;color:#fff;"><i class="fa fa-check mr-1"></i> Enterprise</span>
<!--                    <span class="btn btn-sm py-2 px-md-3" style="font-size: 13px;font-size: 14px; font-weight: 500;background-color: #203038;color:#fff;"><i class="fa fa-check mr-1"></i> Enterprise</span>-->
                </div>
            </div>
            <hr/>
        </header>

    <div id="loempia_tabs" class="container py-5 oe_styling_v8"
         style="color: #0b3b52;font-family: 'Open sans','sans-serif';">
        <div class="row mb-5">
            <div class="col-12 col-md-12 text-center text-md-left">
                <center><h1 style="color: #203038;"><u>POS Low Stock Alert</u></h1></center>
            </div>
        </div>
        <div class="row align-items-center mb-4" style="margin-top:-25px">
            <div class="col-12 col-md-12">
                <h2 class="pr-md-5 mb-4" style="font-size: 24px;color: #3c3c3c;">Make your POS session smoother than
                    ever by keeping a close tab on the stock of your products and highlighting the ones going below the
                    minimum quantity defined.</h2>
                <h4 class="font-weight-bold mb-3" style="font-size: 20px"><span style="color:#E13B34;">Hot</span>
                    Features</h4>
                <ul class="list-unstyled">
                    <li class="mb-2">
                        <i class="fa fa-free-code-camp" style="font-size:18px;color:#E13B34;"></i>
                        <span style="font-size:18px" class="ml-2">Display the available quantity of all products in a POS session</span>
                    </li>
                    <li class="mb-2">
                        <i class="fa fa-free-code-camp" style="font-size:18px;color:#E13B34;"></i>
                        <span style="font-size:18px" class="ml-2">Differentiate between in stock products, the products going below the minimum quantity defined, and the out-of-stock products on the basis of colors</span>
                    </li>
                    <li>
                        <i class="fa fa-free-code-camp" style="font-size:18px;color:#E13B34;"></i>
                        <span style="font-size:18px"
                              class="ml-2">In stock products’ stock is highlighted in green color</span>
                    </li>
                    <li>
                        <i class="fa fa-free-code-camp" style="font-size:18px;color:#E13B34;"></i>
                        <span style="font-size:18px" class="ml-2">Products who have their quantity equal to or less than the minimum quantity defined have their stock highlighted in red color</span>
                    </li>
                    <li>
                        <i class="fa fa-free-code-camp" style="font-size:18px;color:#E13B34;"></i>
                        <span style="font-size:18px" class="ml-2">Out-of-stock products listing is faded in translucent white with an overlay Out-of-Stock being displayed on them in the foreground</span>
                    </li>
                    <li>
                        <i class="fa fa-free-code-camp" style="font-size:18px;color:#E13B34;"></i>
                        <span style="font-size:18px" class="ml-2">Flexibility to restrict order even when a product is out-of-stock</span>
                    </li>
                    <li>
                        <i class="fa fa-free-code-camp" style="font-size:18px;color:#E13B34;"></i>
                        <span style="font-size:18px" class="ml-2">The products listing is sorted in such a way to ensure that out of stock products are always listed towards the end</span>
                    </li>
                </ul>
            </div>
        </div>



        <!-- tab view start -->
        <div>
            <div class="justify-content-center d-flex">
                <!-- Nav pills -->
                <ul class="nav o_tab_nav"
                    style="border: 1px solid #203038;  border-radius: 6px 6px;overflow:hidden;background-color:transparent">
                    <li class="nav-item" style="border-radius: 6px 0 0 6px;">
                        <a class="nav-link active px-md-4 list-group-item-beta-dark list-group-item-action"
                           data-toggle="pill" href="#Features"
                           style="border-radius: 6px 0 0 6px; border-right: 1px solid#203038;opacity: 1;padding:16px;">Features</a>
                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link px-md-4 list-group-item-beta-dark list-group-item-action" data-toggle="pill"
                                           href="#Release"
                                           style="border-radius: 0px; border-right: 1px solid #203038;opacity: 1;padding:16px;">Releases</a>
                                    </li>
                    <!--          <li class="nav-item">-->
                    <!--            <a class="nav-link px-md-4" data-toggle="pill" href="#UserGuide"  style="border-radius: 0px; border-right: 1px solid #203038;opacity: 1;padding:16px;">User Guide</a>-->
                    <!--          </li>-->
                    <li class="nav-item">
                        <a class="nav-link px-md-4 list-group-item-beta-dark list-group-item-action" data-toggle="pill"
                           href="#FAQ" style="border-radius: 0px;opacity: 1;padding:16px;">FAQ's</a>
                    </li>
                </ul>
            </div>

            <!-- Tab panes -->
            <div class="tab-content py-5">
                <div class="tab-pane active" id="Features">
                    <div class="row">
                        <div class="col-12 col-md-4">
                            <ul class="nav o_tab_nav"
                                style="text-transform: capitalize; font-size: 18px; border-radius: 6px 6px;background-color: transparent">
                                <li class="nav-item w-100 mb-3">
                                    <a class="nav-link d-flex align-items-center px-3 py-2 list-group-item-beta-dark list-group-item-action active"
                                       data-toggle="pill" href="#Advance1"
                                       style="border-radius:30px; border: 1px solid #203038;opacity:1;letter-spacing: inherit;text-transform: capitalize;transition: 0.3s ease-in-out;"><i
                                            class="fa fa-gear mr-2" style="font-size: 20px;"></i>Pos Setting Menu</a>
                                </li>
                                <li class="nav-item w-100 mb-3">
                                    <a class="nav-link d-flex align-items-center px-3 py-2 list-group-item-beta-dark list-group-item-action"
                                       data-toggle="pill" href="#Advance2"
                                       style="border-radius:30px; border: 1px solid #203038;opacity:1;letter-spacing: inherit;text-transform: capitalize;transition: 0.3s ease-in-out;"><i
                                            class="fa fa-truck mr-2" style="font-size: 20px;"></i>Display Product Stock</a>
                                </li>
                                <li class="nav-item w-100 mb-3">
                                    <a class="nav-link d-flex align-items-center px-3 py-2 list-group-item-beta-dark list-group-item-action"
                                       data-toggle="pill" href="#Advance3"
                                       style="border-radius:30px; border: 1px solid #203038;opacity:1;letter-spacing: inherit;text-transform: capitalize;transition: 0.3s ease-in-out;"><i
                                            class="fa fa-list-ul mr-2" style="font-size: 20px;"></i>Defining
                                        Quantity</a>
                                <li class="nav-item w-100 mb-3">
                                    <a class="nav-link d-flex align-items-center px-3 py-2 list-group-item-beta-dark list-group-item-action"
                                       data-toggle="pill" href="#Advance5"
                                       style="border-radius:30px; border: 1px solid #203038;opacity:1;letter-spacing: inherit;text-transform: capitalize;transition: 0.3s ease-in-out;"><i
                                            class="fa  fa-cart-arrow-down mr-2" style="font-size: 20px;"></i>Low On
                                        Stock Items</a>
                                </li>
                                <li class="nav-item w-100 mb-3">
                                    <a class="nav-link d-flex align-items-center px-3 py-2 list-group-item-beta-dark list-group-item-action"
                                       data-toggle="pill" href="#Advance6"
                                       style="border-radius:30px; border: 1px solid #203038;opacity:1;letter-spacing: inherit;text-transform: capitalize;transition: 0.3s ease-in-out;"><i
                                            class="fa fa-shopping-cart mr-2" style="font-size: 20px;"></i>Order
                                        Unavailable Item</a>
                                </li>
                            </ul>
                        </div>
                        <div class="col-12 col-md-8 pt-4 pt-md-0">
                            <div class="tab-content h-100">
                                <div class="tab-pane active" id="Advance1">
                                    <h4>Pos Setting Menu</h4>
                                    <div class="pb-4" style="font-size: 18px;">Under Settings menu, there’s a subsection
                                        for POS Low Stock Alert app wherein you have the option of checking/unchecking
                                        two fields namely,
                                        Display Product Stock and Allow order when a product is Out-of-stock, and input
                                        the numerical value for Minimum Stock Alert.
                                    </div>
                                    <div class="pb-1">
                                        <img src="images/app_screen/2.png" alt="" class="img-fluid">
                                    </div>
                                </div>
                                <div class="tab-pane" id="Advance2">
                                    <h4>Display Product Stock</h4>
                                    <div class="pb-4" style="font-size: 18px;">On checking the Display Product Stock,
                                        the products available in a POS session will display their respective stock
                                        quantity on their product listing in green color.
                                    </div>
                                    <div class="pb-1">
                                        <img src="images/app_screen/3.png" alt="" class="img-fluid">
                                    </div>
                                </div>
                                <div class="tab-pane" id="Advance3">
                                    <h4>Defining Quantity</h4>
                                    <div class="pb-4" style="font-size: 18px;">The User can define the Minimum Stock
                                        quantity for all products in the Input field provided for Minimum Stock Alert.
                                    </div>
                                    <div class="pb-1">
                                        <img src="images/app_screen/5.png" alt="" class="img-fluid">
                                    </div>
                                </div>
                                <!--                            <div class="tab-pane" id="Advance4">-->
                                <!--                                <h4>Advanced Search Option</h4>-->
                                <!--                                <div class="pb-4" style="font-size: 18px;"> This option provides an advanced search-->
                                <!--                                    option for menu items.-->
                                <!--                                </div>-->
                                <!--                                <div class="pb-1">-->
                                <!--                                    <images src="./images/screensort/advance-search-option.jpg" alt="" class="images-fluid">-->
                                <!--                                </div>-->
                                <!--                            </div>-->
                                <div class="tab-pane" id="Advance5">
                                    <h4>Low On Stock Items</h4>
                                    <div class="pb-4" style="font-size: 18px;">When a product’s quantity becomes equal
                                        to or goes below the minimum quantity defined, the said products stock will be
                                        highlighted in red.
                                    </div>
                                    <div class="pb-1">
                                        <img src="images/app_screen/6.png" alt="" class="img-fluid">
                                    </div>
                                    <h4 style="padding-top:60px; padding-bottom:30px;">Allow order when a product is
                                        out-of-stock Setting</h4>
                                    <div class="pb-4" style="font-size: 18px;">
                                        When a product becomes out-of-stock, its product listing is faded in translucent
                                        white with an overlay Out-of-Stock being displayed on it in the foreground. This
                                        use case only occurs when you have unchecked the Allow order when a product is
                                        out-of-stock option in the POS shop settings.
                                    </div>
                                    <div class="pb-1">
                                        <img src="images/app_screen/7.png" alt="" class="img-fluid">
                                    </div>
                                    <span><b>Note: A POS user will not be able to add out-of-stock products to order if they have unchecked the Allow order when a product is out-of-stock option.</b></span>
                                </div>
                                <div class="tab-pane" id="Advance6">
                                    <h4>Order Unavailable Item</h4>
                                    <div class="pb-4" style="font-size: 18px;">If a POS user tries to order a quantity
                                        of a product more than the available stock quantity of the said product, then a
                                        warning message pop-up will be displayed indicating that the user is trying to
                                        order more than the available quantity.
                                    </div>
                                    <div class="pb-1">
                                        <img src="images/app_screen/8.png" alt="" class="img-fluid">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade" id="Release">
                    <section class="card mb-5" style="border: none;">
                        <div class="card-body pb-5">
                            <div class="text-center pb-5 pt-4">
                                <h2 style="font-weight: 600; font-size: 2.5rem;">Our Releases</h2>
                            </div>
                            <div class="row justify-content-center">
                                <div class="col-sm-8" style="position: relative;">
                                    <div class="d-flex mb-4" style=" position: relative;">
                                        <div class="list-group-item-beta-dark list-group-item-action active w-auto"
                                             style="min-width: 65px;left: 0;box-sizing: border-box;padding: 10px;text-align: center; color: #fff;border-top-left-radius: 5px;border-bottom-left-radius: 5px;border: 1px solid#203038;">
                                            <span style="font-size: 20px; font-weight: 700;display: block;">24th</span>
                                            <span style="display: block;font-size: 0.8em;text-transform: uppercase;">February, 20203 </span>
                                        </div>
                                        <div class="w-100"
                                             style="padding: 1.5rem 2rem;border-top-right-radius: 10px;box-shadow: 0 15px 35px rgba(50, 50, 93, 0.1), 0 5px 15px rgba(0, 0, 0, 0.07);background-color: #fff;border-bottom-right-radius: 10px;border: 1px solid#203038;">
                                            <div class="timeline__content">
                                                <h3 style="font-weight: 400; margin-bottom:20px">Release
                                                    1.0.1</h3>
                                                <p style="color:#666; margin-bottom: 10px;">
                                                <span
                                                        style="font-size:12px;position:relative;">■</span>
                                                    <b>Enhancement</b> - Product is listed on the shop, based on the product quantity.
                                                </p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section>
                </div>
                <div class="tab-pane fade" id="UserGuide">
                    User Guide
                </div>
                <div class="tab-pane fade" id="FAQ">
                    <div class="card-body p-0">
                        <div class="text-center pb-5">
                            <h2 style="color: #0b3b52; font-weight: 600; font-size: 2.5rem;">Frequently Asked
                                Question</h2>
                        </div>
                        <div class="s_faq mx-2 mx-md-5 mb-5">
                            <div id="accordion">
                                <div class="card shadow mb-4" style="border: none; border-left: 10px solid #203038;">
                                    <div class="card-header py-4 pl-4 pr-5 bg-white position-relative d-flex justify-content-between"
                                         style="border: none;">
                                        <div class="pr-5" style="font-size: 1.6rem; font-weight: 600; color: #0b3b52;">
                                            Need
                                            some customization in this app, whom to contact?
                                        </div>
                                        <a class="card-link" data-toggle="collapse" href="#faqOne" style="
                                      width: 48px;
                                      height: 40px;
                                      line-height: 11px;
                                      background-color: rgba(8, 101, 99, 0.1);
                                      border-radius: 2px;
                                      padding: 0;
                                      font-size: 24px;"></a>
                                    </div>
                                    <div id="faqOne" class="collapse" data-parent="#accordion">
                                        <div class="card-body pt-0 pl-4">
                                            <div style="font-size: 1.4rem; color: #0b3b52;">
                                                Please drop email at sales@ksolves.com or raise a ticket through Odoo
                                                store
                                                itself.
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="card shadow mb-4" style="border: none; border-left: 10px solid #203038;">
                                    <div class="card-header py-4 pl-4 pr-5 bg-white position-relative d-flex justify-content-between"
                                         style="border: none;">
                                        <div class="pr-5" style="font-size: 1.6rem; font-weight: 600; color: #0b3b52;">
                                            Is this app compatible with Odoo Enterprise?
                                        </div>
                                        <a class="card-link collapsed" data-toggle="collapse" href="#faqThree" style="
                                      width: 48px;
                                      height: 40px;
                                      line-height: 11px;
                                      background-color: rgba(8, 101, 99, 0.1);
                                      border-radius: 2px;
                                      padding: 0;
                                      font-size: 24px;"></a>
                                    </div>
                                    <div id="faqThree" class="collapse" data-parent="#accordion">
                                        <div class="card-body pt-0 pl-4">
                                            <div style="font-size: 1.4rem; color: #0b3b52;">
                                                Yes, our app works with Odoo Enterprise as well as Community.
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- tab view / end -->
        </div>

        <section class="mb-5">
            <div class="text-center p-2 d-flex justify-content-center align-items-center col-lg-9"
                 style="background-color: #0b3b52;
            box-shadow: 1px 2px 11px rgba(0, 0, 0, 0), 1px 11px 12px rgba(0, 0, 0, 0.22);margin: auto;">
                <h3 class="font-weight-bold mb-0 mr-3 text-light">Note: </h3>
                <h5 class="mb-0 text-light" style="margin-top: 2px;">
                    Extensively Tested on Odoo Vanilla with Ubuntu OS
                </h5>
            </div>
        </section>
        <section class="card shadow-sm mb-5">
            <div class="card-body">
                <h2 class="w-100 text-center mb-3" style="font-weight: 400;">Ksolves Suggested Apps</h2>
                <div class="text-center w-100 mb-1">
                    <img src="images/line.png" alt="ksolves">
                </div>
                <div id="demo" class="carousel slide pb-5 col-12 col-lg-8 mx-auto" data-ride="carousel">
                    <!-- Indicators -->
                    <ul class="carousel-indicators">
                        <li data-target="#demo" style="background-color: #9d7092;" data-slide-to="0"
                            class="active"></li>
                        <li data-target="#demo" style="background-color: #9d7092;" data-slide-to="1"></li>
                    </ul>
                    <!-- The slideshow -->
                    <div class="carousel-inner pt-4 pt-lg-5 ">
                        <div class="carousel-item px-4 active">
                            <div class="row pb-sm-4 no-lg-gutters">
                                <div class="col-6 col-sm-3 text-center">
                                    <a href="https://apps.odoo.com/apps/modules/15.0/ks_dashboard_ninja/"
                                       class="d-block"
                                       target="_blank" style="text-decoration: none;">
                                        <img src="images/app-logo/dashboard-ninja.png" alt="dashboard-ninja">
                                        <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                            <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">
                                                Dashboard
                                                <br> Ninja</h5>
                                        </div>
                                    </a>
                                </div>
                                <div class="col-6 col-sm-3 text-center">
                                    <a href="https://apps.odoo.com/apps/modules/15.0/ks_list_view_manager/"
                                       target="_blank"
                                       style="text-decoration: none;">
                                        <img src="images/app-logo/list-view-manager.png" alt="list-view-manager">
                                        <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                            <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">List
                                                View
                                                <br> Manager</h5>
                                        </div>
                                    </a>
                                </div>
                                <div class="col-6 col-sm-3 text-center">
                                    <a href="https://apps.odoo.com/apps/modules/13.0/ks_sticky_pivot_view/"
                                       class="d-block"
                                       target="_blank" style="text-decoration: none;">
                                        <img src="images/app-logo/sticky-pivot-view.png" alt="sticky-pivot-view">
                                        <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                            <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">Sticky
                                                <br>Pivot
                                                View</h5>
                                        </div>
                                    </a>
                                </div>
                            <div class="col-6 col-sm-3 text-center">
                                <a href="https://apps.odoo.com/apps/modules/14.0/ks_woocommerce/" class="d-block"
                                   target="_blank" style="text-decoration: none;">
                                    <img src="images/app-logo/woocommerce.png" alt="woocoomerce" style="width:90px; border: 3px solid #203038; border-radius: 10px;">
                                    <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                        <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">Woo <br>Commerce
                                        </h5>
                                    </div>
                                </a>
                            </div>
                            </div>
                            <div class="row pt-3 pb-4 no-gutters">
                                <div class="col-6 col-sm-3 text-center">
                                    <a href="https://apps.odoo.com/apps/modules/13.0/ks_theme_base/" target="_blank"
                                       style="text-decoration: none;">
                                        <img src="images/app-logo/ksolves-theme-base.png" alt="ksolves-theme-base">
                                        <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                            <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">Ksolves
                                                <br>Theme
                                                Base</h5>
                                        </div>
                                    </a>
                                </div>
                                <div class="col-6 col-sm-3 text-center">
                                    <a href="https://apps.odoo.com/apps/modules/14.0/ks_pos_order_notes/"
                                       class="d-block"
                                       target="_blank" style="text-decoration: none;">
                                        <img src="images/app-logo/pos-per-item.png" alt="pos-per-item">
                                        <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                            <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">POS Per
                                                Item
                                                <br>& Order Note</h5>
                                        </div>
                                    </a>
                                </div>
                                <div class="col-6 col-sm-3 text-center">
                                    <a href="https://apps.odoo.com/apps/modules/15.0/ks_pos_dashboard_ninja/"
                                       target="_blank" style="text-decoration: none;">
                                        <img src="images/app-logo/pos_dashboard_ninja.png" alt="pos_dashboard_ninja">
                                        <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                            <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">POS <br>Dashboard
                                                Ninja</h5>
                                        </div>
                                    </a>
                                </div>
                                <div class="col-6 col-sm-3 text-center">
                                    <a href="https://apps.odoo.com/apps/modules/14.0/web_listview_sticky_header/"
                                       class="d-block" target="_blank" style="text-decoration: none;">
                                        <img src="images/app-logo/listview_sticky_header.png"
                                             alt="listview_sticky_header">
                                        <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                            <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">List
                                                View
                                                <br>Sticky Header</h5>
                                        </div>
                                    </a>
                                </div>
                            </div>
                        </div>
                        <div class="carousel-item px-4">
                            <div class="row pb-sm-4 no-gutters">
                            <div class="col-6 col-sm-3 text-center">
                                <a href="https://apps.odoo.com/apps/modules/15.0/ks_office365_contacts/" class="d-block"
                                   target="_blank" style="text-decoration: none;">
                                    <img src="images/app-logo/office365_contact.png" alt="Office365 Contacts">
                                    <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                        <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">Office
                                            365<br>Contacts</h5>
                                    </div>
                                </a>
                            </div>
                                <div class="col-6 col-sm-3 text-center">
                                    <a href="https://apps.odoo.com/apps/modules/13.0/universal_discount/"
                                       class="d-block"
                                       target="_blank" style="text-decoration: none;">
                                        <img src="images/app-logo/universal_discount.png" alt="Universal Discount">
                                        <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                            <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">
                                                Universal
                                                <br>Discount</h5>
                                        </div>
                                    </a>
                                </div>
                                <div class="col-6 col-sm-3 text-center">
                                    <a href="https://apps.odoo.com/apps/modules/13.0/ks_chat_edit_and_delete/"
                                       target="_blank" style="text-decoration: none;">
                                        <img src="images/app-logo/chat_edit_and_delete.png" alt="chat_edit_and_delete">
                                        <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                            <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">Odoo
                                                Chat
                                                <br>Edit/Delete</h5>
                                        </div>
                                    </a>
                                </div>
                            <div class="col-6 col-sm-3 text-center">
                                <a href="https://apps.odoo.com/apps/modules/15.0/ks_office365_calendar/" class="d-block"
                                   target="_blank" style="text-decoration: none;">
                                    <img src="images/app-logo/office365_calendar.png" alt="Office365 Calendar">
                                    <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                        <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">Office
                                            365<br>Calendar</h5>
                                    </div>
                                </a>
                            </div>
                            </div>
                            <div class="row pt-3 pb-4 no-gutters">
                                <div class="col-6 col-sm-3 text-center">
                                    <a href="https://apps.odoo.com/apps/modules/13.0/universal_tax/" target="_blank"
                                       style="text-decoration: none;">
                                        <img src="images/app-logo/universal_tax.png" alt="universal_tax">
                                        <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                            <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">
                                                Universal
                                                <br>Tax</h5>
                                        </div>
                                    </a>
                                </div>
                                <div class="col-6 col-sm-3 text-center">
                                    <a href="https://apps.odoo.com/apps/modules/13.0/ks_toggle_switch/" class="d-block"
                                       target="_blank" style="text-decoration: none;">
                                        <img src="images/app-logo/toggle_switch.png" alt="toggle_switch">
                                        <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                            <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">Toggle
                                                <br>Switch
                                            </h5>
                                        </div>
                                    </a>
                                </div>
                                <div class="col-6 col-sm-3 text-center">
                                    <a href="https://apps.odoo.com/apps/modules/13.0/odoo_paytm_gateway/"
                                       target="_blank"
                                       style="text-decoration: none;">
                                        <img src="images/app-logo/odoo_paytm_gateway.png" alt="odoo_paytm_gateway">
                                        <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                            <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">Odoo
                                                Paytm
                                                <br>Gateway</h5>
                                        </div>
                                    </a>
                                </div>
                                <div class="col-6 col-sm-3 text-center">
                                    <a href="https://apps.odoo.com/apps/modules/14.0/ks_low_stock_alert/"
                                       class="d-block"
                                       target="_blank" style="text-decoration: none;">
                                        <img src="images/app-logo/low_stock_alert.png" alt="low_stock_alert">
                                        <div class="card-body text-center p-0 mt-3 mb-3 mb-lg-0">
                                            <h5 class="card-text m-0" style="font-size: 16px; font-weight: 600">Low
                                                Stock
                                                <br>Alert</h5>
                                        </div>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Left and right controls -->
                    <a class="carousel-control-prev" href="#demo" data-slide="prev" style="left: -5%; width: 60px;">
                        <i class="fa fa-angle-left" style="font-size: 5vw;color: #333;"></i>
                    </a>
                    <a class="carousel-control-next" href="#demo" data-slide="next" style="right: -5%; width: 60px;">
                        <i class="fa fa-angle-right" style="font-size: 5vw;color: #333;"></i>
                    </a>
                </div>
            </div>
        </section>

        <div class="row pb-sm-5 px-1 pb-4">
            <h2 class="w-100 text-center my-3" style="font-weight: 400;">Ksolves Odoo Services</h2>
            <div class="text-center w-100 mb-4">
                <img src="images/line.png" alt="ksolves">
            </div>
            <div class="col-12 col-sm-6 col-md-4" style="margin-bottom: 20px;">
                <div class="card text-center bg-info" style="min-height: 90px;">
                    <div class="pt-4">
                        <img src="images/new_support.png" alt="support">
                    </div>
                    <div class="px-3 pt-3 pb-2">
                        <h5 class="card-title text-white" style="font-size: 19px; font-weight: 400;">Odoo
                            Implementation</h5>
                    </div>
                </div>
            </div>
            <div class="col-12 col-sm-6 col-md-4" style="margin-bottom: 20px;">
                <div class="card text-center" style="min-height: 90px; background-color: #2ebeb4">
                    <div class="pt-4">
                        <img src="images/new_apps.png" alt="apps">
                    </div>
                    <div class="px-3 pt-3 pb-2">
                        <h5 class="card-title text-white" style="font-size: 19px; font-weight: 400;">Odoo Community
                            Apps</h5>
                    </div>
                </div>
            </div>
            <div class="col-12 col-sm-6 col-md-4" style="margin-bottom: 20px;">
                <div class="card text-center"
                     style="min-height: 90px;background-color: #00a393; background-color: #98b1c4; ">
                    <div class="pt-4">
                        <img src="images/new_support2.png" alt="support2">
                    </div>
                    <div class="px-3 pt-3 pb-2">
                        <h5 class="card-title text-white" style="font-size: 19px; font-weight: 400;">Odoo Support &amp;
                            Maintenance</h5>
                    </div>
                </div>
            </div>
            <div class="col-12 col-sm-6 col-md-4" style="margin-bottom: 20px;">
                <div class="card text-center" style="min-height: 90px; background-color: #2f4e6f;">
                    <div class="pt-4">
                        <img src="images/new_custom.png" alt="custom">
                    </div>
                    <div class="px-3 pt-3 pb-2">
                        <h5 class="card-title text-white" style="font-size: 19px; font-weight: 400;">Odoo
                            Customization</h5>
                    </div>
                </div>
            </div>
            <div class="col-12 col-sm-6 col-md-4" style="margin-bottom: 20px;">
                <div class="card text-center" style="min-height: 90px; background-color: #f89c24;">
                    <div class="pt-4">
                        <img src="images/new_integrated.png" alt="integrated">
                    </div>
                    <div class="px-3 pt-3 pb-2">
                        <h5 class="card-title text-white" style="font-size: 19px; font-weight: 400;">Odoo Integration
                            Services</h5>
                    </div>
                </div>
            </div>
            <div class="col-12 col-sm-6 col-md-4" style="margin-bottom: 20px;">
                <div class="card text-center bg-primary" style="min-height: 90px;">
                    <div class="pt-4">
                        <img src="images/new_develop.png" alt="develop">
                    </div>
                    <div class="px-3 pt-3 pb-2">
                        <h5 class="card-title text-white" style="font-size: 19px; font-weight: 400;">Odoo Developer
                            Outsourcing</h5>
                    </div>
                </div>
            </div>
        </div>

        <div class="row no-gutters mx-0 justify-content-sm-between justify-content-center"
             style="border-top: 1px solid black;">
            <div class="mb-sm-0 mb-3 d-flex align-items-center">
                <img src="images/letter.svg" style="width: 35px;height: 35px;margin-right: 20px">
                <span style="font-size: 18px;">sales@ksolves.com</span>
            </div>
            <div class="d-flex align-items-center">
                <span style="font-size: 18px;">+91 120-4299799‬</span>
                <img src="images/smartphone.svg" style="width: 35px;height: 35px;margin-left: 20px;">
            </div>
        </div>
    </div>
</main>

<link href="https://apps.odoocdn.com/web/content/7247337-184ae0e/1/web.assets_frontend.css" rel="stylesheet">
<link rel="stylesheet" type="text/css" href="style.css">
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
</body>
</html>



===== .\az_ks_pos_low_stock_alert\static\description\style.css =====
===== .\az_ks_pos_low_stock_alert\static\description\images\description-icon.svg =====
<svg id="Description-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000"><defs><style>.cls-1{fill:#e32235;}</style></defs><title>Description-icon</title><path d="M196.89,977.58H590.38c5.28-3.59,11.29-6.46,15.73-10.9Q715.84,857.11,825.24,747.22a32.84,32.84,0,0,0,10.18-24.87c-.26-39.67-.07-79.35-.08-119q0-231.06-.19-462.12C835,89,798.44,42.56,748.3,29c-5.6-1.52-11.24-2.87-16.86-4.3H196.89c-12.28,3.92-25.37,6.24-36.69,12.05-47.1,24.16-67.82,63.68-67.62,116.48.6,158.15.24,316.3.26,474.45,0,78.45-.59,156.91.32,235.35.6,51.48,36.52,96.12,85.91,110.07C185,974.71,191,976.08,196.89,977.58Zm356.6-59.79c-2.75.21-4,.39-5.2.39q-168.37,0-336.76-.08C177.4,918,152,891.44,152,856.46q-.09-354.91,0-709.81c0-37.12,25.25-62.47,62.29-62.53q133.13-.2,266.25-.09,117.82,0,235.64.06c33.25.08,60,26.11,60,58.31q.09,272.12-.08,544.22c0,2.64-.35,5.28-.55,8.24h-12q-88.59,0-177.19,0c-21.34,0-32.93,12-32.92,33.65q.06,67.46,0,134.89ZM613.4,873V754.65H731.09Z"/><path class="cls-1" d="M464.14,523.59q-87.64,0-175.28,0c-14.58,0-25.2,8-29.29,21.2-3.68,11.86.11,25.33,10.82,31.94a40,40,0,0,0,19.87,5.8c97.69.36,195.38.25,293.07.25q26.43,0,52.86,0c20.57,0,33.93-11.8,33.81-29.81-.12-17.59-13.41-29.36-33.36-29.37q-86.25,0-172.5,0Z"/><path class="cls-1" d="M465.1,461.85H637.61c18.92,0,32.28-12.1,32.39-29.39.1-17.46-13-29.79-32-29.8q-174.36-.07-348.72,0c-17.95,0-31.08,12.77-31,29.89.11,16.72,13,29.26,30.56,29.29Q377,462,465.1,461.85Z"/><path class="cls-1" d="M465.14,324.12q56.57,0,113.12,0c19.06,0,32.37-12.19,32.35-29.4,0-17.45-13.05-29.77-32-29.79q-114.53-.14-229,0c-18.9,0-31.9,12.46-31.82,30,.08,17.29,13.26,29.22,32.44,29.23Q407.64,324.17,465.14,324.12Z"/></svg>

===== .\az_ks_pos_low_stock_alert\static\description\images\FAQ.svg =====
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 963.43 888.71"><defs><style>.cls-1{fill:none;stroke-width:34.06px;}.cls-1,.cls-2{stroke:#231f20;stroke-miterlimit:10;}.cls-2{fill:#e32235;stroke-width:0.97px;}</style></defs><title>Asset 5</title><g id="Layer_2" data-name="Layer 2"><g id="FAQ"><path class="cls-1" d="M229.72,639.2c-30.22,0-59.2.22-88.18-.08-17.59-.18-35.48.74-52.68-2.13C46.93,630,17,592.89,17,550.41q0-222,.06-444.07c0-49.54,39.38-89.26,88.61-89.27q374.49-.08,749,0c53.24,0,91.64,38.31,91.67,91.39q.1,220.49,0,441c0,50.28-39.09,89.64-89.28,89.7q-164.42.23-328.84-.14c-9.32,0-16,2.41-22.72,9q-107.73,105.75-216,210.92c-9.77,9.55-20.61,15.17-34.5,11.71-16.31-4.06-25.38-16.83-25.39-35.72q0-86.11.09-172.23C229.72,655.17,229.72,647.64,229.72,639.2Z"/><path class="cls-2" d="M756.17,407.55c6.44,6.15,12.46,11.34,17.83,17.13,13.64,14.72,9.36,34.26-9,42.37s-37.27,4.93-51-10.2c-9.31-10.28-18.16-14.58-33.4-13.49-73.92,5.3-123.92-43-124.16-117.19-.07-22.14,3.76-43.29,13.82-63.08,23.53-46.25,73.94-69.38,127.77-58.8,48,9.44,82.65,50.51,86.76,101.92C787.71,343,781.14,377,756.17,407.55ZM720.5,326.19c-2.29-12.71-3.18-23.85-6.41-34.27-6.37-20.62-19.75-30.7-40.14-31.5-20-.78-34.94,7.89-43.21,26.15-11.3,25-11.24,50.42.58,75.16,8,16.81,22.23,25.15,41,24.54,18.6-.6,32.93-8.89,39.68-26.5C716.28,348.69,718,336.63,720.5,326.19Z"/><path class="cls-2" d="M429.86,205.87c4.49,0,9,0,13.48,0,12.86.07,21.8,6.1,26.15,18.14q32.7,90.53,65,181.18c5.35,15.1-2.83,29.75-18.16,34.22-17.69,5.14-41.51-.67-47.45-24.25-6.28-24.93-7.6-24.58-33.9-24.42-9.68.05-19.41.6-29-.18-8.25-.67-11.83,2.74-13.58,10.26-1.48,6.36-4.4,12.39-5.84,18.76-5.48,24.24-44.68,27.69-58.3,11.7-6.67-7.81-8.37-16.69-4.93-26.14q33-90.94,66.46-181.76c4.26-11.58,13.06-17.45,25.53-17.47h14.52Zm14.28,130.46-15-45.64-2.24.17c-4.82,14.84-9.64,29.68-14.78,45.47Z"/><path class="cls-2" d="M242.81,262.82v36.49c13.84,0,27.21-.07,40.58,0,18.69.11,30,10.84,29.92,28.17C313.2,344.34,302,354.86,283.9,355c-13.4.08-26.8,0-41.54,0,0,18.12.17,35.27,0,52.42-.26,21.23-13,33.52-33.87,33-18-.46-30.32-11.54-30.46-29.8q-.7-89.16,0-178.33c.11-16.06,11.43-26.23,27.36-26.31q42.49-.22,85,0c17.91.09,29.17,11.05,29.14,27.89s-11.22,27.59-29.21,27.74c-14.85.12-29.71.13-44.57.23C245.08,261.81,244.46,262.23,242.81,262.82Z"/></g></g></svg>

===== .\az_ks_pos_low_stock_alert\static\description\images\Hot-Features-icon.svg =====
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000"><defs><style>.cls-1{fill:#010101;}.cls-2{fill:#e32235;}</style></defs><title>Hot-Features-icon</title><g id="Hot-Features-icon"><g id="surface1"><path class="cls-1" d="M78.35,829.47h32.43V797H78.35A32.44,32.44,0,0,1,45.91,764.6V115.91A32.44,32.44,0,0,1,78.35,83.47H791.91a32.44,32.44,0,0,1,32.44,32.44v32.43h32.43V115.91A64.87,64.87,0,0,0,791.91,51H78.35a64.87,64.87,0,0,0-64.87,64.87V764.6A64.87,64.87,0,0,0,78.35,829.47Z"/><path class="cls-1" d="M78.35,115.91h32.43v32.43H78.35Z"/><path class="cls-1" d="M143.22,115.91h32.43v32.43H143.22Z"/><path class="cls-1" d="M208.09,115.91h32.43v32.43H208.09Z"/><path class="cls-1" d="M143.22,894.34a64.87,64.87,0,0,0,64.87,64.87H921.65a64.87,64.87,0,0,0,64.87-64.87V245.65a64.87,64.87,0,0,0-64.87-64.87H208.09a64.87,64.87,0,0,0-64.87,64.87Zm32.43-648.69a32.44,32.44,0,0,1,32.44-32.44H921.65a32.44,32.44,0,0,1,32.44,32.44V894.34a32.44,32.44,0,0,1-32.44,32.44H208.09a32.44,32.44,0,0,1-32.44-32.44Z"/><path class="cls-1" d="M208.09,245.65h32.43v32.43H208.09Z"/><path class="cls-1" d="M273,245.65h32.43v32.43H273Z"/><path class="cls-1" d="M337.83,245.65h32.43v32.43H337.83Z"/><path class="cls-1" d="M208.09,310.52H921.65V343H208.09Z"/><path class="cls-1" d="M208.09,391.6H337.83V424H208.09Z"/><path class="cls-1" d="M208.09,456.47h97.3v32.44h-97.3Z"/><path class="cls-2" d="M564.87,521.34A113.53,113.53,0,1,0,678.39,634.86,113.51,113.51,0,0,0,564.87,521.34Zm0,194.61A81.09,81.09,0,1,1,646,634.86,81.09,81.09,0,0,1,564.87,716Z"/><path class="cls-2" d="M824.35,586.21A16.21,16.21,0,0,0,808.13,570H765.27a206.88,206.88,0,0,0-12.83-31l30.31-30.29a16.25,16.25,0,0,0,0-22.94L713.94,417A16.25,16.25,0,0,0,691,417l-30.29,30.3a209.05,209.05,0,0,0-31-12.81V391.6a16.21,16.21,0,0,0-16.22-16.21h-97.3A16.21,16.21,0,0,0,500,391.6v42.87a209.17,209.17,0,0,0-31,12.81L438.73,417a16.24,16.24,0,0,0-22.93,0L347,485.79a16.23,16.23,0,0,0,0,22.94L377.28,539c-1.35,2.66-2.66,5.32-3.89,8a209.77,209.77,0,0,0-8.92,23H321.61a16.21,16.21,0,0,0-16.22,16.21v97.31a16.21,16.21,0,0,0,16.22,16.21h42.86a206.88,206.88,0,0,0,12.83,31L347,761a16.22,16.22,0,0,0,0,22.93l68.81,68.82a16.24,16.24,0,0,0,22.93,0L469,822.45a210.25,210.25,0,0,0,31,12.81v42.87a16.21,16.21,0,0,0,16.22,16.21h97.3a16.21,16.21,0,0,0,16.22-16.21V835.26a210.13,210.13,0,0,0,31-12.81L691,852.75a16.25,16.25,0,0,0,22.94,0l68.81-68.82a16.24,16.24,0,0,0,0-22.93l-30.31-30.29a206.88,206.88,0,0,0,12.83-31h42.86a16.21,16.21,0,0,0,16.22-16.21ZM791.91,667.3H753.09a16.22,16.22,0,0,0-15.7,12.16,177.35,177.35,0,0,1-19,45.87,16.22,16.22,0,0,0,2.49,19.7l27.42,27.44-45.86,45.88L675,790.91a16.22,16.22,0,0,0-19.71-2.5,177,177,0,0,1-45.85,19,16.21,16.21,0,0,0-12.17,15.69v38.83H532.43V823.08a16.2,16.2,0,0,0-12.16-15.69,177,177,0,0,1-45.85-19,16.24,16.24,0,0,0-19.72,2.5l-27.43,27.44-45.86-45.88L408.83,745a16.22,16.22,0,0,0,2.49-19.7,177.35,177.35,0,0,1-19-45.87,16.22,16.22,0,0,0-15.7-12.16H337.83V602.43h38.82a16.22,16.22,0,0,0,15.7-12.16,176.88,176.88,0,0,1,10.54-29.73,180.32,180.32,0,0,1,8.43-16.21,16.23,16.23,0,0,0-2.49-19.69L381.41,497.2l45.86-45.88,27.43,27.44a16.22,16.22,0,0,0,19.72,2.49,177,177,0,0,1,45.85-19,16.21,16.21,0,0,0,12.16-15.69V407.82H597.3v38.83a16.21,16.21,0,0,0,12.17,15.69,177,177,0,0,1,45.85,19,16.22,16.22,0,0,0,19.71-2.5l27.44-27.44,45.86,45.88L720.91,524.7a16.22,16.22,0,0,0-2.49,19.7,177.35,177.35,0,0,1,19,45.87,16.22,16.22,0,0,0,15.7,12.16h38.82Z"/><path class="cls-1" d="M824.35,861.91h97.3v32.43h-97.3Z"/></g></g></svg>

===== .\az_ks_pos_low_stock_alert\static\description\images\letter.svg =====
<svg height="512" viewBox="0 0 64 64" width="512" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><linearGradient id="New_Gradient_Swatch_1" gradientUnits="userSpaceOnUse" x1="32" x2="32" y1="8.462" y2="55.216"><stop offset="0" stop-color="#fff33b"/><stop offset=".014" stop-color="#fee72e"/><stop offset=".042" stop-color="#fed51b"/><stop offset=".07" stop-color="#fdca10"/><stop offset=".1" stop-color="#fdc70c"/><stop offset=".4" stop-color="#f3903f"/><stop offset=".8" stop-color="#ed683c"/><stop offset="1" stop-color="#e93e3a"/></linearGradient><linearGradient id="New_Gradient_Swatch_1-2" x1="36" x2="36" xlink:href="#New_Gradient_Swatch_1" y1="8.462" y2="55.216"/><linearGradient id="New_Gradient_Swatch_1-3" x1="18" x2="18" xlink:href="#New_Gradient_Swatch_1" y1="8.462" y2="55.216"/><linearGradient id="New_Gradient_Swatch_1-5" x1="22" x2="22" xlink:href="#New_Gradient_Swatch_1" y1="8.462" y2="55.216"/><g id="Mail-6" data-name="Mail"><path d="m57 10h-50a5.006 5.006 0 0 0 -5 5v34a5.006 5.006 0 0 0 5 5h50a5.006 5.006 0 0 0 5-5v-34a5.006 5.006 0 0 0 -5-5zm-50 2h50a3 3 0 0 1 3 3v.46l-28 18.345-28-18.345v-.46a3 3 0 0 1 3-3zm53 5.851v27.383l-21.817-13.09zm-34.183 14.293-21.817 13.09v-27.383zm31.183 19.856h-50a3 3 0 0 1 -3-3v-1.434l23.675-14.2 3.777 2.474a1 1 0 0 0 1.1 0l3.777-2.474 23.671 14.2v1.434a3 3 0 0 1 -3 3z" fill="url(#New_Gradient_Swatch_1)"/><path d="m22 48h28v2h-28z" fill="url(#New_Gradient_Swatch_1-2)"/><path d="m16 48h4v2h-4z" fill="url(#New_Gradient_Swatch_1-3)"/><path d="m26 44h20v2h-20z" fill="url(#New_Gradient_Swatch_1-2)"/><path d="m20 44h4v2h-4z" fill="url(#New_Gradient_Swatch_1-5)"/></g></svg>

===== .\az_ks_pos_low_stock_alert\static\description\images\Odoo-Community-Apps.svg =====
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000"><defs><style>.cls-1{fill:#010101;}.cls-2{fill:#e32235;}</style></defs><title>Odoo-Community-Apps</title><g id="Layer_3" data-name="Layer 3"><path class="cls-1" d="M60.63,299.32V143.88a24.55,24.55,0,0,1,24.55-24.55H916.12a24.56,24.56,0,0,1,24.55,24.55V737.41A24.55,24.55,0,0,1,916.12,762H619.35a24.55,24.55,0,0,1,0-49.1H891.57V168.43H109.73v130.9a24.55,24.55,0,0,1-49.1,0ZM975.45,831.57H25.84a24.55,24.55,0,0,0,0,49.1H975.45a24.55,24.55,0,0,0,0-49.1ZM85.18,441.42A24.55,24.55,0,0,0,60.63,466V737.41A24.55,24.55,0,0,0,85.18,762H381.94a24.55,24.55,0,0,0,0-49.1H109.73V466A24.55,24.55,0,0,0,85.18,441.42ZM500.65,710.27a27.14,27.14,0,1,1-27.15,27.14,27.14,27.14,0,0,1,27.15-27.14Z"/><rect class="cls-2" x="238.61" y="271.8" width="205.89" height="56.76"/><rect class="cls-2" x="238.61" y="421.81" width="205.89" height="56.76"/><rect class="cls-2" x="238.61" y="571.82" width="205.89" height="56.76"/><rect class="cls-2" x="558.61" y="231.8" width="205.89" height="56.76"/><rect class="cls-2" x="558.61" y="341.81" width="205.89" height="56.76"/><rect class="cls-2" x="558.61" y="461.82" width="205.89" height="56.76"/><rect class="cls-2" x="558.61" y="581.8" width="205.89" height="56.76"/></g></svg>

===== .\az_ks_pos_low_stock_alert\static\description\images\Odoo-Customization.svg =====
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000"><defs><style>.cls-1{fill:#010101;}.cls-2{fill:#e32235;}</style></defs><title>Odoo-Customization</title><g id="Layer_2" data-name="Layer 2"><g id="surface1"><path class="cls-1" d="M79.67,839.4h32.44V807H79.67a32.43,32.43,0,0,1-32.43-32.44V125.84A32.43,32.43,0,0,1,79.67,93.4H793.24a32.43,32.43,0,0,1,32.43,32.44v32.43h32.44V125.84A64.88,64.88,0,0,0,793.24,61H79.67A64.88,64.88,0,0,0,14.8,125.84V774.53A64.87,64.87,0,0,0,79.67,839.4Z"/><path class="cls-1" d="M79.67,125.84h32.44v32.43H79.67Z"/><path class="cls-1" d="M144.54,125.84H177v32.43H144.54Z"/><path class="cls-1" d="M209.41,125.84h32.44v32.43H209.41Z"/><path class="cls-1" d="M144.54,904.27a64.87,64.87,0,0,0,64.87,64.87H923a64.87,64.87,0,0,0,64.87-64.87V255.58A64.87,64.87,0,0,0,923,190.71H209.41a64.87,64.87,0,0,0-64.87,64.87ZM177,255.58a32.43,32.43,0,0,1,32.43-32.44H923a32.43,32.43,0,0,1,32.43,32.44V904.27A32.43,32.43,0,0,1,923,936.71H209.41A32.43,32.43,0,0,1,177,904.27Z"/><path class="cls-1" d="M209.41,255.58h32.44V288H209.41Z"/><path class="cls-1" d="M274.28,255.58h32.44V288H274.28Z"/><path class="cls-1" d="M339.15,255.58h32.43V288H339.15Z"/><path class="cls-1" d="M209.41,320.45H923v32.43H209.41Z"/><path class="cls-1" d="M209.41,401.53H339.15V434H209.41Z"/><path class="cls-1" d="M209.41,466.4h97.31v32.44H209.41Z"/><path class="cls-2" d="M566.19,531.27A113.53,113.53,0,1,0,679.72,644.8,113.52,113.52,0,0,0,566.19,531.27Zm0,194.61a81.09,81.09,0,1,1,81.09-81.08A81.08,81.08,0,0,1,566.19,725.88Z"/><path class="cls-2" d="M825.67,596.14a16.21,16.21,0,0,0-16.22-16.21H766.59a204.8,204.8,0,0,0-12.83-31l30.31-30.29a16.22,16.22,0,0,0,0-22.93l-68.81-68.82a16.24,16.24,0,0,0-22.93,0L662,457.21a210.25,210.25,0,0,0-31-12.81V401.53a16.2,16.2,0,0,0-16.21-16.21H517.54a16.21,16.21,0,0,0-16.22,16.21V444.4a210.58,210.58,0,0,0-31,12.81l-30.29-30.3a16.25,16.25,0,0,0-22.94,0l-68.81,68.82a16.24,16.24,0,0,0,0,22.93L378.61,549c-1.36,2.66-2.66,5.32-3.9,8a209.71,209.71,0,0,0-8.91,23H322.93a16.2,16.2,0,0,0-16.21,16.21v97.31a16.2,16.2,0,0,0,16.21,16.21H365.8a205.79,205.79,0,0,0,12.82,31l-30.31,30.29a16.25,16.25,0,0,0,0,22.94l68.81,68.81a16.25,16.25,0,0,0,22.94,0l30.29-30.3a209.5,209.5,0,0,0,31,12.81v42.87a16.21,16.21,0,0,0,16.22,16.21h97.31a16.2,16.2,0,0,0,16.21-16.21V845.19a209.17,209.17,0,0,0,31-12.81l30.29,30.3a16.24,16.24,0,0,0,22.93,0l68.81-68.81a16.23,16.23,0,0,0,0-22.94l-30.31-30.29a204.8,204.8,0,0,0,12.83-31h42.86a16.21,16.21,0,0,0,16.22-16.21Zm-32.43,81.09H754.41a16.23,16.23,0,0,0-15.7,12.16,177.35,177.35,0,0,1-19,45.87,16.21,16.21,0,0,0,2.5,19.7l27.42,27.44-45.87,45.88-27.43-27.44a16.22,16.22,0,0,0-19.71-2.5,177,177,0,0,1-45.86,19A16.21,16.21,0,0,0,598.63,833v38.83H533.76V833a16.21,16.21,0,0,0-12.16-15.69,177,177,0,0,1-45.86-19,16.22,16.22,0,0,0-19.71,2.5l-27.44,27.44L382.73,782.4,410.15,755a16.22,16.22,0,0,0,2.5-19.7,177.38,177.38,0,0,1-19-45.87A16.22,16.22,0,0,0,378,677.23H339.15V612.36H378a16.22,16.22,0,0,0,15.7-12.16,180.41,180.41,0,0,1,19-45.94,16.23,16.23,0,0,0-2.5-19.69l-27.42-27.44,45.86-45.88L456,488.7a16.2,16.2,0,0,0,19.71,2.48,177.29,177.29,0,0,1,45.86-19,16.23,16.23,0,0,0,12.16-15.69V417.75h64.87v38.83a16.21,16.21,0,0,0,12.16,15.69,177,177,0,0,1,45.86,19,16.22,16.22,0,0,0,19.71-2.5l27.43-27.44,45.87,45.88-27.42,27.44a16.21,16.21,0,0,0-2.5,19.7,177.35,177.35,0,0,1,19,45.87,16.23,16.23,0,0,0,15.7,12.16h38.83Z"/><path class="cls-1" d="M825.67,871.84H923v32.43H825.67Z"/></g></g></svg>

===== .\az_ks_pos_low_stock_alert\static\description\images\Odoo-Developer-Outsourcing.svg =====
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000"><defs><style>.cls-1{fill:#010101;}.cls-2{fill:#e42135;}</style></defs><title>Odoo-Developer-Outsourcing</title><g id="Layer_6" data-name="Layer 6"><path class="cls-1" d="M870.11,554.82H854.48a98.15,98.15,0,0,0,20.36-59.94V467.54a98.69,98.69,0,1,0-197.37,0v21.25L531.73,343.05a29.2,29.2,0,0,0-30.66-6.83,29.2,29.2,0,0,0-30.66,6.83L324.67,488.79V467.54a98.69,98.69,0,0,0-197.38,0v27.34a98.15,98.15,0,0,0,20.37,59.94H132A127,127,0,0,0,5.13,681.71V938.39a19.38,19.38,0,0,0,19.38,19.38h81.84a19.64,19.64,0,0,0,5.57-.82,19.75,19.75,0,0,0,5.57.82h217a19.38,19.38,0,0,0,19.38-19.38V872.53a19.38,19.38,0,0,0-38.75,0V919H136.87V698.28a19.38,19.38,0,0,0-38.75,0V919H43.88V681.71A88.24,88.24,0,0,1,132,593.57H266.66a19.32,19.32,0,0,0,13.66-5.64l0,0L481.58,386.67a213.28,213.28,0,0,1-36.39,112.49L318.4,687.46a19.34,19.34,0,0,0-3.31,10.82v21.21a19.38,19.38,0,0,0,38.75,0v-15.3L477.32,520.8a253.1,253.1,0,0,0,23.75-44.18,253.72,253.72,0,0,0,23.74,44.18L648.3,704.19v234.2a19.38,19.38,0,0,0,19.37,19.38h217a19.69,19.69,0,0,0,5.57-.82,19.64,19.64,0,0,0,5.57.82h81.85A19.38,19.38,0,0,0,997,938.39V681.71A127,127,0,0,0,870.11,554.82ZM285.92,494.88a59.94,59.94,0,0,1-119.88,0V467.54a59.94,59.94,0,1,1,119.88,0Zm430.29-27.34a59.95,59.95,0,1,1,119.89,0v27.34a59.95,59.95,0,0,1-119.89,0ZM958.26,919H904V775.67a19.37,19.37,0,1,0-38.74,0V919H687V698.28a19.39,19.39,0,0,0-3.3-10.82L557,499.17a213.25,213.25,0,0,1-36.39-112.5L721.77,587.89c.26.26.5.47.73.67a19.32,19.32,0,0,0,13,5H870.11a88.25,88.25,0,0,1,88.15,88.14V919Z"/><path class="cls-1" d="M898.33,684.58A19.35,19.35,0,1,0,904,698.27,19.46,19.46,0,0,0,898.33,684.58Z"/><path class="cls-1" d="M348.16,787.15a19.36,19.36,0,1,0,5.68,13.7A19.52,19.52,0,0,0,348.16,787.15Z"/><path class="cls-2" d="M747.66,147.87a19.21,19.21,0,0,0-27.13-1.2L590.38,265.73l-83.11-72a19.19,19.19,0,0,0-25.15,0L338.71,317.91a19.21,19.21,0,1,0,25.14,29L494.69,233.63,578.15,306a19.2,19.2,0,0,0,25.54-.35L746.46,175A19.22,19.22,0,0,0,747.66,147.87Z"/><path class="cls-2" d="M814.35,84.57a19.23,19.23,0,0,0-17.18-5.34L688.33,99.72a19.21,19.21,0,0,0-10,32.46L766,219.89A19.21,19.21,0,0,0,798.44,210l21.13-108.2A19.22,19.22,0,0,0,814.35,84.57ZM767.64,167.2l-36.46-36.46,45.25-8.52Z"/></g></svg>

===== .\az_ks_pos_low_stock_alert\static\description\images\Odoo-Implementation.svg =====
<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000"><defs><style>.cls-1{fill:#010101;}.cls-2{fill:#e32235;}</style></defs><title>Odoo-Implementation</title><path class="cls-1" d="M335.81,5.77C199,5.77,88.06,116.69,88.06,253.52V435.19A115.77,115.77,0,0,0,203.68,550.81h16.51v-33H203.68a82.67,82.67,0,0,1-82.58-82.58V253.52c0-118.59,96.12-214.71,214.71-214.71s214.71,96.12,214.71,214.71V435.19a82.68,82.68,0,0,1-82.58,82.58H451.42v33h16.52A115.75,115.75,0,0,0,583.55,435.19V253.52C583.55,116.69,472.63,5.77,335.81,5.77Z"/><path class="cls-1" d="M141.59,784.16l12.08-19-27.9-17.7-12.07,19a164.63,164.63,0,0,0,6.82,186.36v43.91h33V947.19a16.49,16.49,0,0,0-3.62-10.32A131.6,131.6,0,0,1,141.59,784.16Z"/><path class="cls-2" d="M913.87,5.77H699.16a82.69,82.69,0,0,0-82.58,82.58V253.52a82.69,82.69,0,0,0,82.58,82.58h33v66.06a16.52,16.52,0,0,0,28.2,11.68l77.74-77.74h75.74a82.68,82.68,0,0,0,82.58-82.58V88.35A82.68,82.68,0,0,0,913.87,5.77Zm49.55,247.75a49.54,49.54,0,0,1-49.55,49.54H831.29a16.56,16.56,0,0,0-11.68,4.84l-54.38,54.39V319.58a16.52,16.52,0,0,0-16.52-16.52H699.16a49.55,49.55,0,0,1-49.55-49.54V88.35a49.55,49.55,0,0,1,49.55-49.54H913.87a49.54,49.54,0,0,1,49.55,49.54Z"/><rect class="cls-2" x="699.16" y="88.35" width="115.61" height="33.03"/><rect class="cls-2" x="847.81" y="88.35" width="66.06" height="33.03"/><rect class="cls-2" x="699.16" y="154.42" width="214.71" height="33.03"/><rect class="cls-2" x="699.16" y="220.48" width="115.61" height="33.03"/><path class="cls-1" d="M557.92,766.47l-12.08-19L518,765.15l12.07,19a131.55,131.55,0,0,1-8.34,152.69,16.54,16.54,0,0,0-3.62,10.32v49.55h33V952.83A164.65,164.65,0,0,0,557.92,766.47Z"/><path class="cls-1" d="M979.94,567.32H831.29A115.61,115.61,0,0,0,715.91,678.23l-49.78,89.61V699.45A115.74,115.74,0,0,0,550.52,583.84H490.15l-.45-.35-.29.35h-38a33,33,0,0,1-33-33V511.94A165.16,165.16,0,0,0,501,369.13V237a165.64,165.64,0,0,0-19.82-78.39,16.52,16.52,0,0,0-21.47-7.1L180.13,283.05A16.49,16.49,0,0,0,170.65,298v71.14a165.11,165.11,0,0,0,82.58,142.81v38.87a33,33,0,0,1-33,33H121.1A115.75,115.75,0,0,0,5.48,699.45V996.74h33V699.45a82.67,82.67,0,0,1,82.58-82.58h52.55L322.38,824.68a16.5,16.5,0,0,0,13.21,6.9h.22A16.52,16.52,0,0,0,349,825l156.9-208.1h44.6a82.69,82.69,0,0,1,82.58,82.58V831.58a16.52,16.52,0,0,0,30.95,8l77.86-140.14h94.68l-161,297.29h37.57l161.1-297.29h6.61A115.74,115.74,0,0,0,996.45,583.84,16.52,16.52,0,0,0,979.94,567.32ZM203.68,369.13V308.48l255-120A132.13,132.13,0,0,1,467.94,237V369.13a132.13,132.13,0,0,1-264.26,0ZM336.15,787.19l-51-71.22H389.83Zm78.67-104.25H261.48L214.2,616.87h6a66.07,66.07,0,0,0,66.07-66.06V526.68a165,165,0,0,0,99.09,0v24.13a66.07,66.07,0,0,0,66.07,66.06h13.21Zm466-16.52H750.36a82.73,82.73,0,0,1,80.93-66.07H961.77A82.72,82.72,0,0,1,880.84,666.42Z"/></svg>

===== .\az_ks_pos_low_stock_alert\static\description\images\Odoo-Integration-Services.svg =====
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000"><defs><style>.cls-1{fill:#040305;}.cls-2{fill:#e32235;}</style></defs><title>Odoo-Integration-Services</title><g id="Layer_5" data-name="Layer 5"><path class="cls-1" d="M864.29,359.32V323.43L997,317.26V250.68l-132.71-6.17V216.89H760.52V95.1A50.13,50.13,0,0,0,710.5,45H290.87A50.14,50.14,0,0,0,240.81,95.1V216.89H137.08v27.62L4.41,250.68v66.58l132.67,6.17v35.89H240.82V436.7H137.08v27.56L4.41,470.44V537l132.67,6.2v35.9H240.82v85.67H137.08v27.62L4.41,698.56v66.57l132.67,6.18V807.2H240.82V912.45a50.08,50.08,0,0,0,50.06,50H710.5a50.07,50.07,0,0,0,50-50V807.2H864.29V771.31L997,765.13V698.56l-132.71-6.18V664.76H760.52V579.09H864.29v-35.9L997,537V470.44l-132.71-6.18V436.7H760.52V359.32ZM970.68,723.65V740L838,746.15v34.69h-73.3V691.06H838v26.42ZM838,518.16v34.63h-73.3V463H838v26.44l132.71,6.18V512ZM970.68,275.81v16.35L838,298.34V333h-73.3V243.19H838v26.42ZM710.5,936.13H290.87a23.76,23.76,0,0,1-23.74-23.71V95.1a23.78,23.78,0,0,1,23.74-23.78H710.49A23.77,23.77,0,0,1,734.2,95.1V912.42A23.74,23.74,0,0,1,710.5,936.13ZM30.69,740V723.65l132.71-6.19V691h73.32v89.78H163.4V746.14Zm0-228V495.58L163.4,489.4V463h73.32v89.79H163.4V518.13Zm0-219.8V275.81l132.71-6.18V243.21h73.32V333H163.4V298.36Z"/><circle class="cls-2" cx="332.82" cy="142.97" r="32.5"/></g></svg>

===== .\az_ks_pos_low_stock_alert\static\description\images\Odoo-Support-Maintenance.svg =====
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000"><defs><style>.cls-1{fill:#010101;}.cls-2{fill:#e32235;}</style></defs><title>Odoo-Support-Maintenance</title><g id="Layer_4" data-name="Layer 4"><path class="cls-1" d="M435.7,320.68A49.37,49.37,0,0,0,386.39,370h32.88a16.44,16.44,0,1,1,32.87,0H485A49.37,49.37,0,0,0,435.7,320.68Z"/><path class="cls-1" d="M567.2,320.68A49.37,49.37,0,0,0,517.89,370h32.87a16.44,16.44,0,1,1,32.87,0h32.88A49.37,49.37,0,0,0,567.2,320.68Z"/><path class="cls-2" d="M501.45,764.46a65.75,65.75,0,1,0,65.75,65.75A65.82,65.82,0,0,0,501.45,764.46Zm0,98.62a32.87,32.87,0,1,1,32.87-32.87A32.9,32.9,0,0,1,501.45,863.08Z"/><path class="cls-1" d="M895.93,961.7V748c0-135.95-110.6-246.55-246.55-246.55h-17.9A199.27,199.27,0,0,0,648.05,485h17.77A82.28,82.28,0,0,0,748,402.86v-29a73.84,73.84,0,0,0-.2-123C745.62,116.83,636.05,8.38,501.45,8.38S257.28,116.83,255.1,250.9A73.92,73.92,0,0,0,296,386.42h11.2a196.85,196.85,0,0,0,64.25,115.06H353.52C217.57,501.48,107,612.08,107,748V961.7H8.35v32.88h986.2V961.7ZM715.13,402.86a49.23,49.23,0,0,1-42.72,48.64,195.55,195.55,0,0,0,23.31-65.08h11.19a69.77,69.77,0,0,0,8.22-.84ZM748,312.46a41.14,41.14,0,0,1-41.09,41.09h-8.22V271.37h8.22A41.14,41.14,0,0,1,748,312.46ZM304.21,353.55H296a41.09,41.09,0,0,1,0-82.18h8.22ZM296,238.49a70.55,70.55,0,0,0-7.43.76c8.09-110.5,100.37-198,212.89-198s204.8,87.5,212.89,198a70,70,0,0,0-7.43-.76H695.72C680,145.36,599,74.13,501.45,74.13S322.9,145.36,307.19,238.49ZM665.8,271c-118.62-4.18-197.22-52.68-197.22-98.21a16.44,16.44,0,0,0-32.88,0c0,41.07-42.47,75.11-97.66,81.14C346.8,171.45,416.74,107,501.45,107,591.93,107,665.57,180.52,665.8,271ZM337.08,353.55V286.88C388.42,282.43,432,257.67,453.72,223c34.38,45.56,114.74,77.63,212.1,80.9v49.64a163.34,163.34,0,0,1-33.19,98.62H501.45V485h98.19a163.49,163.49,0,0,1-166,18.08C376.81,477.25,337.08,420,337.08,353.55ZM450.65,543.92a191.29,191.29,0,0,0,101.61,0L501.45,645.53Zm24.21,121.93h-29l-65.74-131.5h29Zm118.93-131.5h29L557,665.85h-29ZM189.15,748V961.7h-49.3V748c0-114.48,90.56-207.94,203.76-213.17l65.5,131H271.34A82.27,82.27,0,0,0,189.15,748ZM780.87,961.7H222V748a49.37,49.37,0,0,1,49.31-49.31H731.56A49.37,49.37,0,0,1,780.87,748Zm82.19,0H813.75V748a82.27,82.27,0,0,0-82.19-82.18H593.79l65.5-131c113.2,5.23,203.77,98.69,203.77,213.17Z"/><rect class="cls-2" x="715.13" y="813.77" width="32.87" height="115.06"/><rect class="cls-2" x="715.13" y="748.03" width="32.87" height="32.87"/><rect class="cls-2" x="863.06" y="156.31" width="32.87" height="32.87"/><rect class="cls-2" x="863.06" y="222.06" width="32.87" height="32.87"/><rect class="cls-2" x="863.06" y="287.8" width="32.87" height="32.87"/><rect class="cls-2" x="106.97" y="353.55" width="32.87" height="32.87"/><rect class="cls-2" x="106.97" y="419.3" width="32.87" height="32.87"/><rect class="cls-2" x="106.97" y="485.04" width="32.87" height="32.87"/></g></svg>

===== .\az_ks_pos_low_stock_alert\static\description\images\Screenshot-icon.svg =====
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000"><defs><style>.cls-1{fill:none;stroke:#e32235;stroke-miterlimit:10;stroke-width:50px;}.cls-2{fill:#231f20;}</style></defs><title>Screenshot-icon</title><g id="ScreenShot-icon"><path d="M990.24,16.26V440.89H922.75V159.69H81.31V928.27h356.8v68H9.18v-980ZM109.58,49.51C91,50.27,79.07,60.81,79.14,82.13c.07,19.68,11.1,31.64,30.52,32.52,20.66.94,32.89-10.69,34.58-31.39C145.76,64.59,131.07,49.89,109.58,49.51ZM250.22,77.79c-2.38-17.12-13.5-28.88-34.5-28.21-19.91.64-30.42,12.2-30.94,32.05-.51,19.13,14,33.59,32.84,33.38S250.76,99.89,250.22,77.79Zm71.25-28.38c-18.9.82-30.83,11.46-30.72,32.79.1,19.69,11.15,31,30.66,32.67,18.63,1.59,34-13,34.72-31.67C356.81,64.35,342.73,49.73,321.47,49.41Z"/><circle class="cls-1" cx="718.46" cy="724.42" r="189.5"/><rect class="cls-2" x="887.81" y="659.88" width="40.3" height="152.59" transform="translate(1644.13 -171.78) rotate(90)"/><rect class="cls-2" x="505.81" y="659.88" width="40.3" height="152.59" transform="translate(1262.13 210.22) rotate(90)"/><rect class="cls-2" x="698.31" y="835.74" width="40.3" height="152.59" transform="translate(1436.92 1824.06) rotate(180)"/><rect class="cls-2" x="698.31" y="458.63" width="40.3" height="152.59" transform="translate(1436.92 1069.85) rotate(180)"/></g></svg>

===== .\az_ks_pos_low_stock_alert\static\description\images\Setup-icon.svg =====
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000"><defs><style>.cls-1,.cls-2{fill:none;stroke-miterlimit:10;stroke-width:35px;}.cls-1{stroke:#231f20;}.cls-2{stroke:#e32235;}</style></defs><title>Setup-icon</title><g id="Setup-icon"><path class="cls-1" d="M549.86,479.74A78.17,78.17,0,0,1,640.36,494l31.7-31.69A223.27,223.27,0,0,0,966.38,215.69a20.34,20.34,0,0,0-34.45-11.14l-47.06,47.07a98.15,98.15,0,0,1-138.8-138.8l47.07-47.06A20.33,20.33,0,0,0,782,31.31,222.88,222.88,0,0,0,588.22,93.77c-63.63,63.63-80.76,156.11-51.49,235.34L468,397.85Z"/><path class="cls-1" d="M424.6,604.3l-81.54-81.53L57.94,807.88A94.93,94.93,0,0,0,192.2,942.13L438,696.35A78.18,78.18,0,0,1,424.6,604.3Z"/><path class="cls-2" d="M606.45,528.18a29.88,29.88,0,0,0-42.23,0l-17,17L244,242l14.17-14.17a29.87,29.87,0,0,0-3.41-45.16l-123.7-91.1a29.86,29.86,0,0,0-38.82,2.93L39.72,147a29.86,29.86,0,0,0-2.93,38.82l91.1,123.7A29.87,29.87,0,0,0,173.05,313l14.18-14.18L490.41,602,472.2,620.2a29.85,29.85,0,0,0,0,42.23l279.69,279.7A94.93,94.93,0,0,0,886.15,807.88Z"/></g></svg>

===== .\az_ks_pos_low_stock_alert\static\description\images\smartphone.svg =====
<?xml version="1.0" encoding="iso-8859-1"?>
<!-- Generator: Adobe Illustrator 21.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px"
     viewBox="0 0 966.653 966.653" style="enable-background:new 0 0 966.653 966.653;" xml:space="preserve">
<g>
	<g id="smartphone_1_">
		
			<linearGradient id="SVGID_1_" gradientUnits="userSpaceOnUse" x1="483.3267" y1="995.5009" x2="483.3267" y2="-20.2906" gradientTransform="matrix(1 0 0 -1 0 949.7782)">
			<stop  offset="0" style="stop-color:#FFF33B"/>
			<stop  offset="0.014" style="stop-color:#FEE72E"/>
			<stop  offset="0.042" style="stop-color:#FED51B"/>
			<stop  offset="0.07" style="stop-color:#FDCA10"/>
			<stop  offset="0.1" style="stop-color:#FDC70C"/>
			<stop  offset="0.4" style="stop-color:#F3903F"/>
			<stop  offset="0.8" style="stop-color:#ED683C"/>
			<stop  offset="1" style="stop-color:#E93E3A"/>
		</linearGradient>
		<path style="fill:url(#SVGID_1_);" d="M694.718,0H271.936c-25.606,0.027-46.357,20.778-46.383,46.383V920.27
			c0.027,25.606,20.778,46.357,46.383,46.383h422.782c25.606-0.027,46.357-20.778,46.383-46.383V46.383
			C741.074,20.778,720.323,0.027,694.718,0z M271.936,32.222h422.782c7.814,0.018,14.144,6.348,14.161,14.161v50.282H257.774V46.383
			C257.792,38.569,264.122,32.24,271.936,32.222z M708.879,128.887v708.879H257.774V128.887H708.879z M694.718,934.432H271.936
			c-7.814-0.018-14.144-6.348-14.161-14.161v-50.282h451.105v50.282C708.861,928.084,702.531,934.414,694.718,934.432z"/>
		
			<linearGradient id="SVGID_2_" gradientUnits="userSpaceOnUse" x1="483.3267" y1="994.5021" x2="483.3267" y2="5.2613" gradientTransform="matrix(1 0 0 -1 0 949.7782)">
			<stop  offset="0" style="stop-color:#FFF33B"/>
			<stop  offset="0.014" style="stop-color:#FEE72E"/>
			<stop  offset="0.042" style="stop-color:#FED51B"/>
			<stop  offset="0.07" style="stop-color:#FDCA10"/>
			<stop  offset="0.1" style="stop-color:#FDC70C"/>
			<stop  offset="0.4" style="stop-color:#F3903F"/>
			<stop  offset="0.8" style="stop-color:#ED683C"/>
			<stop  offset="1" style="stop-color:#E93E3A"/>
		</linearGradient>
		<rect x="434.994" y="48.333" style="fill:url(#SVGID_2_);" width="96.665" height="32.222"/>
		
			<linearGradient id="SVGID_3_" gradientUnits="userSpaceOnUse" x1="676.6573" y1="998.7875" x2="676.6573" y2="-11.0591" gradientTransform="matrix(1 0 0 -1 0 949.7782)">
			<stop  offset="0" style="stop-color:#FFF33B"/>
			<stop  offset="0.014" style="stop-color:#FEE72E"/>
			<stop  offset="0.042" style="stop-color:#FED51B"/>
			<stop  offset="0.07" style="stop-color:#FDCA10"/>
			<stop  offset="0.1" style="stop-color:#FDC70C"/>
			<stop  offset="0.4" style="stop-color:#F3903F"/>
			<stop  offset="0.8" style="stop-color:#ED683C"/>
			<stop  offset="1" style="stop-color:#E93E3A"/>
		</linearGradient>
		<rect x="660.546" y="48.333" style="fill:url(#SVGID_3_);" width="32.222" height="32.222"/>
		
			<linearGradient id="SVGID_4_" gradientUnits="userSpaceOnUse" x1="483.3267" y1="978.3428" x2="483.3267" y2="-21.08" gradientTransform="matrix(1 0 0 -1 0 949.7782)">
			<stop  offset="0" style="stop-color:#FFF33B"/>
			<stop  offset="0.014" style="stop-color:#FEE72E"/>
			<stop  offset="0.042" style="stop-color:#FED51B"/>
			<stop  offset="0.07" style="stop-color:#FDCA10"/>
			<stop  offset="0.1" style="stop-color:#FDC70C"/>
			<stop  offset="0.4" style="stop-color:#F3903F"/>
			<stop  offset="0.8" style="stop-color:#ED683C"/>
			<stop  offset="1" style="stop-color:#E93E3A"/>
		</linearGradient>
		<rect x="451.105" y="886.099" style="fill:url(#SVGID_4_);" width="64.444" height="32.222"/>
	</g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
</svg>


===== .\az_ks_pos_low_stock_alert\static\description\images\WorkFlow-icon.svg =====
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000"><defs><style>.cls-1{fill:#e32235;}</style></defs><title>WorkFlow-icon</title><g id="Workflow-icon"><path class="cls-1" d="M185.58,835.55c-6.66-8-12.25-14.63-17.74-21.34-12.15-14.8-11.4-35.26,1.64-46.39,13.21-11.27,33.07-8.79,46,5.75,20.29,22.82,40.3,45.9,61,68.39,14.13,15.38,12.81,37.2.28,52.3-19.91,24-41.08,47-62.09,70C201,979.17,183.4,979.54,168,966.06c-12.48-10.91-13-29.17-1.23-43.71,5.87-7.23,11.84-14.35,19.2-23.26H47c-21.81,0-35.48-13.3-35.49-35q-.11-176.45,0-352.89c0-21.49,13.33-35,34.42-35q103.82-.07,207.64,0c15.14,0,27.71,9.17,31.82,22.63,3.86,12.64-1.28,27.82-13.4,34.64a43.43,43.43,0,0,1-20.25,5.12c-55.56.42-111.13.27-166.69.3H75.37V835.55Z"/><path class="cls-1" d="M815.41,538.92c7.52,9.13,13.56,16.27,19.38,23.59,11.43,14.39,9.9,33.81-3.45,45.49-13.56,11.87-31.31,10.87-44.27-3.35q-32.49-35.67-64.21-72c-10.9-12.44-10.36-34,.68-46.49q32.33-36.5,64.75-72.89c12-13.47,28.86-14.79,43.47-3.35,13.28,10.4,15.6,28.37,5,42.56-6.15,8.25-13,16-20.5,25.06H926.52V181.34H880.28c-44.2,0-88.41.1-132.61-.07-15.93-.06-29.06-10.59-32.06-24.89a31.25,31.25,0,0,1,18.4-35,37.4,37.4,0,0,1,14.16-2.72q103.85-.23,207.69,0C978.07,118.67,990,131,990,153.26q.06,174.54,0,349.09c0,23.7-12.28,36.34-35.73,36.45-42.57.18-85.15.1-127.73.12Z"/><path d="M502,372.45q68.73,0,137.44,0c22.86,0,34.36,11.11,34.41,33.93q.23,102.35,0,204.71c0,20.3-14.13,34.26-34.43,34.28q-137,.07-273.92,0c-25.6,0-37.91-12.88-37.88-38.66.06-65.64.44-131.28-.22-196.91-.21-20.47,13.09-38.19,37.12-37.64C410.32,373.2,456.16,372.45,502,372.45ZM609.86,581.61V435.8H391.69V581.61Z"/><path d="M499.79,285q-68.7,0-137.4,0c-21.42,0-34.65-13.09-34.69-34.49q-.15-101.36,0-202.7c0-22.39,13.43-35.62,35.91-35.63q137.42-.08,274.82,0c23,0,35.38,12.4,35.41,35.68q.12,100.86,0,201.72c0,22.8-12.81,35.41-35.67,35.43Q569,285,499.79,285ZM610.18,76H391.5V222H610.18Z"/><path d="M500.74,717.83q69.19,0,138.37,0c22.7,0,34.69,12,34.73,35q.13,101.34,0,202.69c0,21.83-13.5,35.15-35.37,35.16q-137.4.08-274.81,0c-22.49,0-36-13.35-36-35.59-.05-66.92.35-133.83-.24-200.74-.17-19.77,13.39-37.4,36.89-36.83C409.77,718.61,455.27,717.83,500.74,717.83ZM609.88,927.18V781H391.49V927.18Z"/></g></svg>

===== .\az_ks_pos_low_stock_alert\static\src\css\ks_low_stock.css =====
/*
    @Author: KSOLVES India Private Limited
    @Email: sales@ksolves.com
*/

.pos .quantity-count{
    color: white;
    line-height: 13px;
    padding: 2px 7px;
    border-radius: 2px;
    font-weight: bold;
    position: absolute;
    top: 2px;
    left: 2px;
}

.pos .product{
    transition: all 1s ease;
}

.pos .quantity-count.warn{
    background: #EF5350;
}

.pos .quantity-count.normal{
    background: #32a868;
}

.pos .product .overlay {
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.4);
  z-index: 2;
  pointer-events: none;
  display: flex;
  align-items: center;
  justify-content: center;
}

.pointer-none {
    pointer-events: none;
}

.pos .popup.popup-error p.body {
     white-space:pre-wrap;
}

.pos .text{
  font-size: 15px;
  color: black;
  line-height: 1;
  text-align: center;
}

===== .\az_ks_pos_low_stock_alert\static\src\js\ks_low_stock.js =====
odoo.define('az_ks_pos_low_stock_alert.ks_low_stock', function (require) {
    "use strict";

    let ks_models = require('point_of_sale.models');
    const KsPaymentScreen = require('point_of_sale.PaymentScreen');
    const ks_utils = require('az_ks_pos_low_stock_alert.utils');
    const Registries = require('point_of_sale.Registries');

    const { float_is_zero } = require('web.utils');

    ks_models.load_fields('product.product', ['type', 'qty_available']);
    let ks_super_pos = ks_models.PosModel.prototype;

    ks_models.PosModel = ks_models.PosModel.extend({
        initialize: function (session, attributes) {
            this.ks_load_product_quantity_after_product();
            ks_super_pos.initialize.call(this, session, attributes);
        },


        ks_get_model_reference: function (ks_model_name) {
            let ks_model_index = this.models.map(function (e) {
                return e.model;
            }).indexOf(ks_model_name);
            if (ks_model_index > -1) {
                return this.models[ks_model_index];
            }
            return false;
        },

        ks_load_product_quantity_after_product: function () {
            let ks_product_model = this.ks_get_model_reference('product.product');
            let ks_product_super_loaded = ks_product_model.loaded;
            ks_product_model.loaded = (self, ks_products) => {

                /*
                #  /\_/\
                # ( ◕‿◕ )
                #  >   <
                # Get the product qty in the location
                 */
                ks_products.forEach(ks_product => {
                    this.rpc({
                        model: 'product.product',
                        method: 'get_qty_in_location',
                        args: [ks_product.id, self.env.pos.config.id],
                    }).then(function (qty) {
                        self.db.qty_by_product_id[ks_product.id] = qty;
                    })
                });
                // ______ (｡◔‿◔｡) ________ End of code


                let done = $.Deferred();
                if (!self.config.allow_order_when_product_out_of_stock) {
                    let ks_blocked_product_ids = [];
                    for (let i = 0; i < ks_products.length; i++) {
                        if (ks_products[i].qty_available <= 0 && ks_products[i].type == 'product') {
                            ks_blocked_product_ids.push(ks_products[i].id);
                        }
                    }
                    let ks_blocked_products = ks_products.filter(function (p, index, arr) {
                        return ks_blocked_product_ids.includes(p.id);
                    });
                    ks_products = ks_products.concat(ks_blocked_products);
                }

                ks_product_super_loaded(self, ks_products);
                self.ks_update_qty_by_product_id(self, ks_products);
                done.resolve();
            }
        },

        ks_update_qty_by_product_id(self, ks_products) {
            if (!self.db.qty_by_product_id) {
                self.db.qty_by_product_id = {};
            }
            ks_products.forEach(ks_product => {
                self.db.qty_by_product_id[ks_product.id] = ks_product.qty_available;
            });
            self.ks_update_qty_on_product();
        },

        ks_update_qty_on_product: function () {
            let self = this;
            let ks_products = self.db.product_by_id;
            let ks_product_quants = self.db.qty_by_product_id;
            for (let pro_id in self.db.qty_by_product_id) {
                ks_products[pro_id].qty_available = ks_product_quants[pro_id];
            }
        },

        push_single_order: function (ks_order, opts) {
            let ks_pushed = ks_super_pos.push_single_order.call(this, ks_order, opts);
            if (ks_order) {
                this.ks_update_product_qty_from_order(ks_order);
            }
            return ks_pushed;
        },

        ks_update_product_qty_from_order: function (ks_order) {
            let self = this;
            ks_order.orderlines.forEach(line => {
                let ks_product = line.get_product();
                if (ks_product.type == 'product') {
                    ks_product.qty_available -= line.get_quantity();
                    self.ks_update_qty_by_product_id(self, [ks_product]);
                }
            });
        }
    });

    // overriding the existing class to validate the payment order
    const ks_payment = (KsPaymentScreen) =>
        class extends KsPaymentScreen {

            async validateOrder(isForceValidate) {
                if (this.env.pos.get_order().orderlines.length > 0) {
                    if (await this._isOrderValid(isForceValidate) && ks_utils.ks_validate_order_items_availability(this.env.pos.get_order(), this.env.pos.config)) {
                        // remove pending payments before finalizing the validation

                        for (let line of this.paymentLines) {
                            if (!line.is_done()) this.currentOrder.remove_paymentline(line);
                        }
                    }
                    await this._finalizeValidation();
                } else {










                const order = this.currentOrder;
                const change = order.get_change();
                const paylaterPaymentMethod = this.env.pos.payment_methods.filter(
                    (method) =>
                        this.env.pos.config.payment_method_ids.includes(method.id) && method.type == 'pay_later'
                )[0];
                const existingPayLaterPayment = order
                    .get_paymentlines()
                    .find((payment) => payment.payment_method.type == 'pay_later');
                if (
                    order.get_orderlines().length === 0 &&
                    !float_is_zero(change, this.env.pos.currency.decimals) &&
                    paylaterPaymentMethod &&
                    !existingPayLaterPayment
                ) {
                    const client = order.get_client();
                    if (client) {
                        const { confirmed } = await this.showPopup('ConfirmPopup', {
                            title: this.env._t('The order is empty'),
                            body: _.str.sprintf(
                                this.env._t('Do you want to deposit %s to %s?'),
                                this.env.pos.format_currency(change),
                                order.get_client().name
                            ),
                            confirmText: this.env._t('Yes'),
                        });
                        if (confirmed) {
                            const paylaterPayment = order.add_paymentline(paylaterPaymentMethod);
                            paylaterPayment.set_amount(-change);
                            return super.validateOrder(...arguments);
                        }
                    } else {
                        const { confirmed } = await this.showPopup('ConfirmPopup', {
                            title: this.env._t('The order is empty'),
                            body: _.str.sprintf(
                                this.env._t(
                                    'Do you want to deposit %s to a specific customer? If so, first select him/her.'
                                ),
                                this.env.pos.format_currency(change)
                            ),
                            confirmText: this.env._t('Yes'),
                        });
                        if (confirmed) {
                            const { confirmed: confirmedClient, payload: newClient } = await this.showTempScreen(
                                'ClientListScreen'
                            );
                            if (confirmedClient) {
                                order.set_client(newClient);
                            }
                            const paylaterPayment = order.add_paymentline(paylaterPaymentMethod);
                            paylaterPayment.set_amount(-change);
                            return super.validateOrder(...arguments);
                        }
                    }
                } else {
                    return super.validateOrder(...arguments);
                }
            }





        }
};

Registries.Component.extend(KsPaymentScreen, ks_payment);

return KsPaymentScreen;

})
;

===== .\az_ks_pos_low_stock_alert\static\src\js\ks_product_list.js =====
/*
    @Author: KSOLVES India Private Limited
    @Email: sales@ksolves.com
*/

odoo.define('az_ks_pos_low_stock_alert.ks_product_list', function (require) {
    "use strict";
    const KsProductItem = require('point_of_sale.ProductItem');
    const Registries = require('point_of_sale.Registries');

    const ks_product_item = (KsProductItem) =>
        class extends KsProductItem {
            addOverlay (){

               let task;
               clearInterval(task);
               task = setTimeout(function () {
                   $(".overlay").parent().addClass('pointer-none');
               }, 100);
            }
        };

    Registries.Component.extend(KsProductItem,ks_product_item);
    return KsProductItem;
})

===== .\az_ks_pos_low_stock_alert\static\src\js\ks_product_screen.js =====
/*
    @Author: KSOLVES India Private Limited
    @Email: sales@ksolves.com
*/

odoo.define('az_ks_pos_low_stock_alert.ks_product_screen', function (require) {
    "use strict";
    const KsProductScreen = require('point_of_sale.ProductScreen');
    const ks_utils = require('az_ks_pos_low_stock_alert.utils');
    const Registries = require('point_of_sale.Registries');

    const ks_product_screen = (KsProductScreen) =>
        class extends KsProductScreen {
            _onClickPay() {
                let self = this;
                let order = self.env.pos.get_order();
                if(ks_utils.ks_validate_order_items_availability(self.env.pos.get_order(), self.env.pos.config)) {
                    let has_valid_product_lot = _.every(order.orderlines.models, function(line){
                        return line.has_valid_product_lot();
                    });
                    if(!has_valid_product_lot){
                        self.showPopup('ConfirmPopup',{
                            'title': _t('Empty Serial/Lot Number'),
                            'body':  _t('One or more product(s) required serial/lot number.'),
                            confirm: function(){
                                self.showScreen('PaymentScreen');
                            },
                        });
                    } else{
                        this.showScreen('PaymentScreen');
                    }
                }

        }
    };

    Registries.Component.extend(KsProductScreen,ks_product_screen);

    return KsProductScreen;
    });

===== .\az_ks_pos_low_stock_alert\static\src\js\ks_product_widget.js =====
odoo.define('az_ks_pos_low_stock_alert.ksProductWidget', function(require) {
    'use strict';

    const { useState } = owl;
    const { patch } = require('web.utils');
    const PosComponent = require('point_of_sale.ProductsWidget');
    const Registries = require('point_of_sale.Registries');

    patch(PosComponent.prototype, 'az_ks_pos_low_stock_alert.KsProductWidget', {
        get productsToDisplay() {
            const list = this._super();
            return list.sort((a, b) => b.qty_available - a.qty_available);
        }

    })

});


===== .\az_ks_pos_low_stock_alert\static\src\js\ks_utils.js =====
/*
    @Author: KSOLVES India Private Limited
    @Email: sales@ksolves.com
*/

odoo.define('az_ks_pos_low_stock_alert.utils', function (require) {
    "use strict";

    let _t = require('web.core')._t;
    const { Gui } = require('point_of_sale.Gui');

    function ks_validate_order_items_availability(ks_order, config, ks_gui) {

        let isValid = true, ks_order_line;

        if(!config.allow_order_when_product_out_of_stock) {
            for(let i = 0; i < ks_order.get_orderlines().length ; i++) {
                ks_order_line = ks_order.get_orderlines()[i];
                if(ks_order_line.get_product().type == 'product' && (ks_order_line.get_quantity() > ks_order_line.get_product().qty_available)) {
                    isValid = false;
                    break;
                }
            }
        }
        if(!isValid){
            Gui.showPopup('ErrorPopup', {
                title: _t('Cannot order a product more than its availability'),
                body: _t(ks_order_line.get_product().display_name + ' has only ' + ks_order_line.get_product().qty_available + ' items available. \n You\'re trying to order ' + ks_order_line.get_quantity() + '.'),
            });
        }
        return isValid;
    }

    return {
        ks_validate_order_items_availability: ks_validate_order_items_availability
    }
});

===== .\az_ks_pos_low_stock_alert\static\src\xml\ks_low_stock.xml =====
<?xml version="1.0" encoding="UTF-8"?>

<!--
    @Author: KSOLVES India Private Limited
    @Email: sales@ksolves.com
-->

<templates id="az_ks_pos_low_stock_alert.template" xml:space="preserve">
    <t t-name="ProductItem" t-inherit="point_of_sale.ProductItem" t-inherit-mode="extension" owl="1">
        <xpath expr="//div[hasclass('product-img')]" position="before">
            <t t-if="(props.product.type == 'product' and (env.pos.config.allow_order_when_product_out_of_stock == false) and props.product.qty_available lte 0)">
                <div class="overlay">
                    <t t-esc="addOverlay()"><span class="text">Out-Of-Stock</span></t>
                </div>
            </t>
        </xpath>

        <xpath expr="//div[hasclass('product-img')]" position="after">
            <t t-if="(props.product.type == 'product' and env.pos.config.display_stock)">
                <span t-attf-class="quantity-count {{props.product.qty_available lte env.pos.config.minimum_stock_alert ? 'warn' : 'normal'}}">
                    <t t-esc="props.product.qty_available"/>
                </span>
            </t>
        </xpath>
    </t>
</templates>

===== .\az_ks_pos_low_stock_alert\views\assets.xml =====
<?xml version="1.0" encoding="utf-8"?>

<!--
    @Author: KSOLVES India Private Limited
    @Email: sales@ksolves.com
-->

<odoo>
    <data>
        <template id="az_ks_pos_low_stock_alert.assets" inherit_id="point_of_sale.assets" name="point_of_sale assets">
            <xpath expr="." position="inside">
                <link rel="stylesheet" href="/az_ks_pos_low_stock_alert/static/src/css/ks_low_stock.css"/>
                <script type="text/javascript" src="/az_ks_pos_low_stock_alert/static/src/js/ks_utils.js"/>
                <script type="text/javascript" src="/az_ks_pos_low_stock_alert/static/src/js/ks_low_stock.js"/>
                <script type="text/javascript" src="/az_ks_pos_low_stock_alert/static/src/js/ks_product_list.js"/>
                <script type="text/javascript" src="/az_ks_pos_low_stock_alert/static/src/js/ks_product_screen.js"/>
            </xpath>
        </template>
    </data>
</odoo>


===== .\az_ks_pos_low_stock_alert\views\config.xml =====
<?xml version="1.0" encoding="utf-8"?>

<!--
    @Author: KSOLVES India Private Limited
    @Email: sales@ksolves.com
-->

<odoo>
    <record id="pos_config" model="ir.ui.view">
        <field name="name">pos.config</field>
        <field name="model">pos.config</field>
        <field name="inherit_id" ref="point_of_sale.pos_config_view_form"/>
        <field name="arch" type="xml">
            <xpath expr='//div[@id="inventory_location"]' position='after'>
                <h2>POS Low Stock Alert</h2>
                <div class="row mt16 o_settings_container" id="pos_session_stock">
                    <div class="col-xs-12 col-md-6 o_setting_box" title="Display Quantity of Products in POS">
                         <div class="o_setting_left_pane">
                            <field name="display_stock"/>
                        </div>
                        <div class="o_setting_right_pane">
                            <label for="display_stock" string="Display Product Stock"/>
                            <div class="text-muted">
                                Check this to display product stock
                            </div>
                        </div>
                    </div>

                    <div class="col-xs-12 col-md-6 o_setting_box" title="Allow Order when Product is Out of Stock">
                         <div class="o_setting_left_pane">
                            <field name="allow_order_when_product_out_of_stock"/>
                        </div>
                        <div class="o_setting_right_pane">
                            <label for="allow_order_when_product_out_of_stock" string="Allow order when product is out-of-stock"/>
                        </div>
                    </div>

                    <div class="col-xs-12 col-md-6 o_setting_box" attrs="{'invisible':[('display_stock', '=', False)]}">
                        <div class="o_setting_right_pane">
                            <label for="minimum_stock_alert" string="Minimum Stock Alert"/>
                            <div class="text-muted">
                                Show stock in red color when it is lower than
                            </div>
                            <field name="minimum_stock_alert"/>
                        </div>
                    </div>


                </div>
            </xpath>
        </field>
    </record>
</odoo>

===== .\az_sales_report\__init__.py =====
# -*- coding: utf-8 -*-

from . import wizard
from . import report

===== .\az_sales_report\__manifest__.py =====
# -*- coding: utf-8 -*-

{
    "name" : "AZ Sales Report",
    "version" : "15.0.0.0",
    "category" : "Sales",
    'summary': 'Sales Report by Product',
    "description": """Sales Report by Product""",
    "author": "Ehab Mosilhy",
    "depends" : ['base','sale_management'],
    "data": [
        'security/ir.model.access.csv',
        'report/sales_report.xml',
        'report/sales_report_template.xml',
        'wizard/sales_report_view.xml',
            ],
}


===== .\az_sales_report\i18n\ar.po =====
===== .\az_sales_report\i18n\ar_001.po =====
===== .\az_sales_report\report\sales_report.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <record id="paperformat_stock_card_report" model="report.paperformat">
        <field name="name">Sales Report Template</field>
        <field name="default" eval="True"/>
        <field name="format">A4</field>
        <field name="orientation">Portrait</field>
        <field name="margin_top">40</field>
        <field name="margin_bottom">15</field>
        <field name="margin_left">5</field>
        <field name="margin_right">5</field>
        <field name="header_line" eval="False"/>
        <field name="header_spacing">40</field>
        <field name="dpi">90</field>
    </record>

    <record id="sales_report_action_view" model="ir.actions.report">
        <field name="name">Sales Report</field>
        <field name="model">az.sales.report</field>
        <field name="binding_model_id" ref="model_az_sales_report"/>
        <field name="report_type">qweb-pdf</field>
        <field name="report_name">az_sales_report.sales_report_template</field>
        <field name="report_file">az_sales_report.sales_report_template</field>
        <field name="paperformat_id" ref="paperformat_stock_card_report"/>
        <field name="binding_type">report</field>
    </record>
</odoo>

===== .\az_sales_report\report\sales_report_template.xml =====
===== .\az_sales_report\report\sales_report_view.py =====
# -*- coding: utf-8 -*-

from odoo import models, api, fields, _
import operator
from datetime import datetime, date
from odoo.tools.float_utils import float_round


class SalesReportTemplate(models.AbstractModel):
    _name = 'report.az_sales_report.sales_report_template'
    _description = 'Stock Card Report Template'

    def get_product_detail(self, data):
        # Retrieve date range for filtering stock moves
        company_id  = data.get('company_id')
        start_date_data = data.get('date_from')
        end_date_data = data.get('date_to')

        # Depending on the report type, construct the product IDs SQL
        product_ids = data.get('product_ids')
        product_ids_clause = ""
        params = [start_date_data, end_date_data, company_id]

        if product_ids:
            product_ids_clause = "AND aml.product_id IN %s"
            params.append(tuple(product_ids.ids))

        # Construct the SQL to fetch all relevant stock moves
        stock_move_sql = f"""
               SELECT
            aml.product_id,
            pt.code as code,
            pt.name as name,
            SUM(aml.quantity) as quantity,
            SUM(aml.price_total) as total_price_tax,
            SUM(aml.price_subtotal) as total_price_no_tax
        FROM account_move_line aml
        JOIN account_move am ON aml.move_id = am.id
        JOIN product_product pp ON aml.product_id = pp.id
        JOIN product_template pt ON pp.product_tmpl_id = pt.id
        WHERE am.invoice_date BETWEEN %s AND %s
        AND am.state = 'posted'
        {product_ids_clause}
        AND am.move_type IN ('out_invoice', 'out_refund')
        and am.company_id = %s
        GROUP BY aml.product_id, pt.code, pt.name
        order by pt.code
        """
        self.env.cr.execute(stock_move_sql, tuple(params))
        stock_moves = self.env.cr.dictfetchall()

        sums={}
        for move in stock_moves:
            sums['qty'] = sums.get('qty', 0) + move.get('quantity', 0)
            sums['total_price_tax'] = sums.get('total_price_tax', 0) + move.get('total_price_tax', 0)
            sums['total_price_no_tax'] = sums.get('total_price_no_tax', 0) + move.get('total_price_no_tax', 0)

        stock_moves.append(sums)
        return stock_moves

    @api.model
    def _get_report_values(self, docids, data=None):
        date_from = data['form']['date_from']
        date_to = data['form']['date_to']
        company_id = data['form']['company_id'][0]
        product_ids = self.env['product.product'].search([('product_tmpl_id', 'in', data['form']['product_tmpl_ids'])])

        data = {
            'date_from': date_from,
            'date_to': date_to,
            'product_ids': product_ids,
            'company_id': company_id,
        }
        docargs = {
            'doc_model': 'az.sales.report',
            'data': data,
            'get_product_detail': self.get_product_detail,
        }
        return docargs


===== .\az_sales_report\report\__init__.py =====
# -*- coding: utf-8 -*-

from . import sales_report_view



===== .\az_sales_report\security\ir.model.access.csv =====
"id","name","model_id:id","group_id:id","perm_read","perm_write","perm_create","perm_unlink"
az_sales_report.access_sales_report,access_sales_report,az_sales_report.model_az_sales_report,base.group_user,1,1,1,1

===== .\az_sales_report\wizard\sales_report.py =====
# -*- coding: utf-8 -*-

from odoo import fields, models, api
from odoo.exceptions import  ValidationError

class SalesReport(models.TransientModel):
    _name = "az.sales.report"
    _description = "Sales Report"

    date_from = fields.Date('Start Date', required=True)
    date_to = fields.Date('End Date', required=True)
    company_id = fields.Many2one('res.company',string="Company", default=lambda self: self.env.company
                                 , required=True)
    product_tmpl_ids = fields.Many2many('product.template',string="Product")

    @api.constrains('date_from', 'date_to')
    def _check_dates(self):
        for record in self:
            if record.date_from and record.date_to:
                if record.date_to < record.date_from:
                    raise ValidationError("End date must be greater than start date!")

    def get_sales_report(self):
        [data] = self.read()
        datas = {
             'ids': [1],
             'model': 'az.sales.report',
             'form': data
        }
        action = self.env.ref('az_sales_report.sales_report_action_view').report_action(self, data=datas)
        return action


===== .\az_sales_report\wizard\sales_report_view.xml =====
<?xml version="1.0" encoding="utf-8"?>

<odoo>
    <data>
        <record id="sales_report_form" model="ir.ui.view">
            <field name="name">sales.report.form.view</field>
            <field name="model">az.sales.report</field>
            <field name="arch" type="xml">
                <form string="Sales Report">
                    <sheet>
                        <group>
                            <group>
                                <field name="company_id"/>
                            </group>
                            <group>
                                <field name="date_from"/>
                                <field name="date_to"/>
                            </group>
                        </group>
                        <div>
                            <group>
                                <field name="product_tmpl_ids">
                                    <tree>
                                        <field name="code" string="Code"/>
                                        <field name="name"/>
                                    </tree>
                                </field>
                            </group>
                        </div>
                    </sheet>
                    <footer>
                        <button name="get_sales_report" type="object" string="Print" class="btn btn-primary"/>
                        <button string="Cancel" class="btn-secondary" special="cancel"/>
                    </footer>
                </form>
            </field>
        </record>

        <record id="sales_report_action_form" model="ir.actions.act_window">
            <field name="name">Sales Report</field>
            <field name="res_model">az.sales.report</field>
            <field name="view_mode">form</field>
            <field name="target">new</field>
        </record>

        <menuitem id="sales_report_menu"
                  name="Sales Report📈"
                  parent="sale.menu_sale_report"
                  action="sales_report_action_form"
                  sequence="10"/>
    </data>
</odoo>

===== .\az_sales_report\wizard\__init__.py =====
# -*- coding: utf-8 -*-

from . import sales_report

===== .\az_temporary\__init__.py =====
from . import models


===== .\az_temporary\__manifest__.py =====
{
    "name": "Azbah - Temp",
    "version": "15.0.1",
    "license": "LGPL-3",
    "depends": ["base","account", "stock","az_account_batch_purchase"],
    "data": [
        "views/bank_statement.xml",
        "views/invoice_without_po.xml",
    ],
}


===== .\az_temporary\migrations\15.0.1\pre-migration.py =====
from odoo import apix, SUPERUSER_ID

def migrate(cr, version):
    env = api.Environment(cr, SUPERUSER_ID, {})
    invoices_to_update = env['account.move'].search([('invoice_origin', '=', False), ('batch_purchase_id', '!=', False)])
    for invoice in invoices_to_update:
        invoice.write({'invoice_origin': invoice.batch_purchase_id})


===== .\az_temporary\models\account_move.py =====
from odoo import models, fields, api
from datetime import timedelta


class AccountMove(models.Model):
    _inherit = 'account.move'

    def _fix_date(self, _move, picking, picking_out, _date):
        picking.date = _date
        picking.date_done
        picking.scheduled_date
        picking_out.date
        picking_out.date_done
        picking_out.scheduled_date
        _move.date = _date

    def get_serial(self, direction):
        last_picking = self.env['stock.picking'].search([
            ('name', 'like', f'S01/{direction.upper()}/X%')
        ], order='name desc', limit=1)

        if last_picking:
            last_count = int(last_picking.name.split('X')[-1])
            count = last_count + 1
        else:
            count = 1

        picking_name = f"S01/{direction.upper()}/X{str(count).zfill(4)}"
        return picking_name

    def action_solve_all_invoices(self):
        excluded_ids = sorted([252615,309713,197524,188653,187511,178693,176535,174604,161080,198559,154013,268762,132386,267511,267220,267210,266861,266376,266369,122170,121320,264511,102956,88269,79262,72766,261018,257539,36083,252272,251164])
        bills = self.env['account.move'].search([('invoice_origin', '=', False),
                                                 ('batch_purchase_id', '=', False)
                                                 ,('state', '=', 'posted')
                                                 ,('invoice_date', '!=', False)
                                                 ,('journal_id', '=',2) # Journal for Vendor Bills
                                                 , ('id', 'not in',excluded_ids )
                                                 ])
        for record in bills:
            try:
                record.action_create_stock_transfer(record)
            except Exception as e:
                # Roll back the transaction in case of an exception
                self.env.cr.rollback()
                print(f"Invoice: {record.name} - {record.id} - Error: {str(e)}")
                continue


    def action_create_stock_transfer(self, rec=None):

        if not rec:
            rec=self
        for record in rec:
            if not record.invoice_origin and not record.batch_purchase_id:
                    # Access move lines associated with the account move
                    move_lines = record.invoice_line_ids
                    picking_type = self.env['stock.picking.type'].search([], limit=1)  # Adjust the domain as needed

                    # Create the initial stock picking (Vendor to S1)
                    picking_vals = {
                        'move_type': 'direct',
                        'picking_type_id': picking_type.id,
                        'partner_id': record.partner_id.id,
                        'location_id': 4,  # Vendor location
                        'location_dest_id': 536,  # S1 location
                        'date': record.invoice_date,
                        'date_done': record.invoice_date,
                        'scheduled_date': record.invoice_date,
                        'origin': record.name,
                        'name': self.get_serial('IN')
                    }

                    picking = self.env['stock.picking'].create(picking_vals)
                    # print (f'record_id {record.id}')
                    # Create stock moves for the initial picking
                    for line in move_lines:
                        self.env['stock.move'].create({
                            'name': line.name or 'Vendor to S1',
                            'product_id': line.product_id.id,
                            'product_uom': line.product_uom_id.id,
                            'product_uom_qty': line.quantity,
                            'quantity_done': line.quantity,
                            'date': record.invoice_date,
                            'date_deadline': record.invoice_date,
                            'picking_id': picking.id,
                            'location_id': picking.location_id.id,
                            'location_dest_id': picking.location_dest_id.id,
                        })

                    # Confirm and mark as done the initial picking
                    picking.action_confirm()
                    picking.action_assign()

                    picking.button_validate()

                    del picking_vals['partner_id']
                    # Create the subsequent stock picking (S1 to Production)
                    picking_vals.update({
                        'picking_type_id': 552,  # (الرئيسى-القديمة) (MAIN-OLD) التسلسل للخارج
                        'location_id': 536,  # S1 location
                        'location_dest_id': 5,  # Production location
                        'date': fields.Datetime.add(record.invoice_date, hours=1),
                        'date_done': fields.Datetime.add(record.invoice_date, hours=1),
                        'scheduled_date': fields.Datetime.add(record.invoice_date, hours=1),
                        'name': self.get_serial('OUT')
                    })
                    picking_out = self.env['stock.picking'].create(picking_vals)

                    # Create stock moves for the subsequent picking
                    for line in move_lines:
                        _move = self.env['stock.move'].create({
                            'name': line.name or 'S1 to Production',
                            'product_id': line.product_id.id,
                            'product_uom': line.product_uom_id.id,
                            'quantity_done': line.quantity,
                            'product_uom_qty': line.quantity,
                            'date': fields.Datetime.add(record.invoice_date, hours=1),
                            'picking_id': picking_out.id,
                            'location_id': picking_out.location_id.id,
                            'location_dest_id': picking_out.location_dest_id.id,
                        })

                    # Confirm and mark as done the subsequent picking
                    picking_out.action_confirm()
                    picking_out.action_assign()
                    picking_out.button_validate()

                    record.invoice_origin = picking_out.name
                    self._fix_date(_move, picking, picking_out, record.invoice_date)



===== .\az_temporary\models\edit_amount.py =====
from odoo import fields, models, api


class AccountBankStatement(models.Model):
    _inherit = 'account.bank.statement'
    new_amount = fields.Char("القيمة الجديدة")

    def button_edit_amount(self):
        if self.new_amount:
            self.new_amount = float(self.new_amount.replace(",", ""))
            sql = f"update account_bank_statement_line set amount={self.new_amount} where statement_id={self.id}; "
            sql2 = """
                    UPDATE account_bank_statement AS s
                    SET balance_end = (
                    SELECT SUM(amount)
                    FROM account_bank_statement_line AS l
                    WHERE l.statement_id = s.id
                   ) + s.balance_start;
            """
            sql3 = """
            update account_bank_statement set balance_end_real=balance_end; -- where balance_end_real<>balance_end;
            """

            self.env.cr.execute(sql)
            self.env.cr.execute(sql2)
            self.env.cr.execute(sql3)


===== .\az_temporary\models\stock_picking.py =====
from odoo import fields, models, api


from odoo import SUPERUSER_ID, _, api, fields, models
from odoo.exceptions import UserError

class StockPicking(models.Model):
    _inherit = 'stock.picking'

    # The field date_done needs to be read-writeable because it is used for enetering old data
    date_done = fields.Datetime(readonly=False)


    def _action_done(self):
        """Call `_action_done` on the `stock.move` of the `stock.picking` in `self`.
        This method makes sure every `stock.move.line` is linked to a `stock.move` by either
        linking them to an existing one or a newly created one.

        If the context key `cancel_backorder` is present, backorders won't be created.

        :return: True
        :rtype: bool
        """
        self._check_company()

        todo_moves = self.mapped('move_lines').filtered(lambda self: self.state in ['draft', 'waiting', 'partially_available', 'assigned', 'confirmed'])
        for picking in self:
            if picking.owner_id:
                picking.move_lines.write({'restrict_partner_id': picking.owner_id.id})
                picking.move_line_ids.write({'owner_id': picking.owner_id.id})
        todo_moves._action_done(cancel_backorder=self.env.context.get('cancel_backorder'))

        # ______ (｡◔‿◔｡) ________ Disable changing Effective Date
        #self.write({'date_done': fields.Datetime.now(), 'priority': '0'})

        # if incoming moves make other confirmed/partially_available moves available, assign them
        done_incoming_moves = self.filtered(lambda p: p.picking_type_id.code == 'incoming').move_lines.filtered(lambda m: m.state == 'done')
        done_incoming_moves._trigger_assign()

        self._send_confirmation_email()
        return True


    def write(self, vals):
        if len(self) == 1:
            if 'date_done' in vals and vals.get('date_done'):
                vals['date'] = vals.get('date_done')
            elif 'date_done' in self and self.date_done:
                vals['date'] = self.date_done
        res = super(StockPicking, self).write(vals)
        ml= self.env['stock.move.line'].search([('picking_id', 'in', self.ids)])
        if 'date' in  vals:
            for l in ml:
                l.date=vals.get('date')
                l.move_id.date=vals.get('date')

        return res

===== .\az_temporary\models\__init__.py =====
from . import edit_amount
from . import stock_picking
from . import account_move


===== .\az_temporary\views\bank_statement.xml =====
<?xml version='1.0' encoding='utf-8'?>
<odoo>


    <record id="view_bank_statement_amount" model="ir.ui.view">
        <field name="name">account.bank.statement.amount</field>
        <field name="model">account.bank.statement</field>
        <field name="inherit_id" ref="account.view_bank_statement_form"/>

        <field name="arch" type="xml">
            <div name="button_box" position="inside">
                <button class="oe_stat_button" name="button_edit_amount"
                        type="object"
                        string="Edit Amount" icon="fa-pencil"/>
            </div>
            <xpath expr="//label[@for='balance_start']" position="before">
                <field name="new_amount"/>
            </xpath>
        </field>

    </record>

</odoo>


===== .\az_temporary\views\invoice_without_po.xml =====
<?xml version='1.0' encoding='utf-8'?>
<odoo>
    <data>
        <record id="az_account_move_inherited" model="ir.ui.view">
            <field name="name">az.account.move.no.po</field>
            <field name="model">account.move</field>
            <field name="inherit_id" ref="account.view_move_form"/>
            <field name="arch" type="xml">
                <xpath expr="//header" position="inside">
                    <button string="Create Stock Transfer" type="object"
                            name="action_create_stock_transfer"
                            attrs="{'invisible': [('invoice_origin', '!=', False)]}"
                            class="oe_highlight"/>


                     <button string="Automatic Invoices" type="object"
                            name="action_solve_all_invoices"
                            attrs="{'invisible': ['|',('invoice_origin', '!=', False), ('batch_purchase_id', '!=', False)]}"
                            class="oe_highlight"/>

                </xpath>
            </field>
        </record>
    </data>
</odoo>


===== .\bi_pos_restrict_zero_qty\LICENSE =====
Odoo Proprietary License v1.0

This software and associated files (the "Software") may only be used (executed,
modified, executed after modifications) if you have purchased a valid license
from the authors, typically via Odoo Apps, or if you have received a written
agreement from the authors of the Software (see the COPYRIGHT file).

You may develop Odoo modules that use the Software as a library (typically
by depending on it, importing it and using its resources), but without copying
any source code or material from the Software. You may distribute those
modules under the license of your choice, provided that this license is
compatible with the terms of the Odoo Proprietary License (For example:
LGPL, MIT, or proprietary licenses similar to this one).

It is forbidden to publish, distribute, sublicense, or sell copies of the Software
or modified copies of the Software.

The above copyright notice and this permission notice must be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.



===== .\bi_pos_restrict_zero_qty\ReadME.txt =====
=> 15.0.0.1(26/07/2023) :Remove quantity validation for service product. 


===== .\bi_pos_restrict_zero_qty\__init__.py =====
# -*- coding: utf-8 -*-
# Part of BrowseInfo. See LICENSE file for full copyright and licensing details.


from . import models



===== .\bi_pos_restrict_zero_qty\__manifest__.py =====
# -*- coding: utf-8 -*-
# Part of BrowseInfo. See LICENSE file for full copyright and licensing details.

{
    'name': 'POS Restrict Zero Quantity',
    'version': '15.0.0.1',
    'category': 'Point of Sale',
    'summary': 'Point Of Sale Restrict Zero Quantity pos restrict negative stock sales of products with zero or negative stock levels pos restrict zero stock product pos Restrict product with zero Quantity pos order line restriction with zero Quantity on pos',
    'description' :"""
       The Point Of Sale Restrict Zero Quantity Odoo App helps users to prevents the sales of products with zero or negative stock levels, ensuring that businesses never run out of stock. Additionally, the app can be configured to display a warning message when the stock level of a product is getting low. When a customer attempts to purchase a product with a stock level below the minimum, the app will display an error message, preventing the sale from going through.
    """,
    'author': 'BrowseInfo',
    'website': 'https://www.browseinfo.in',
    'depends': ['base','point_of_sale'],
    'data': [
        'views/pos_config_view.xml',
    ],
    'assets':{
        'point_of_sale.assets': [
            'bi_pos_restrict_zero_qty/static/src/css/**/*',
            'bi_pos_restrict_zero_qty/static/src/js/**/*',
         ],
        'web.assets_qweb': [
            'bi_pos_restrict_zero_qty/static/src/xml/**/*',
        ]
    },
    'demo': [],
    'test': [],
    'license':'OPL-1',
    'installable': True,
    'auto_install': False,
    'live_test_url':'https://youtu.be/6pUwaykhfQE',
    "images":['static/description/Banner.gif'],
}


===== .\bi_pos_restrict_zero_qty\models\pos.py =====
# -*- coding: utf-8 -*-
# Part of BrowseInfo. See LICENSE file for full copyright and licensing details.

from odoo import api, fields, models, _


class PosConfig(models.Model):
	_inherit = "pos.config"

	restrict_zero_qty = fields.Boolean(string='Restrict Zero Quantity')



===== .\bi_pos_restrict_zero_qty\models\product_product.py =====
from odoo import api, fields, models


class ProductProduct(models.Model):
    _inherit = 'product.product'

    def get_qty_in_location(self, pos_config_id):
        picking_type_id = self.env['pos.config'].search([('id', '=', pos_config_id)]).picking_type_id
        location_id = picking_type_id.default_location_src_id
        return self.env['stock.quant']._get_available_quantity(self, location_id)


===== .\bi_pos_restrict_zero_qty\models\__init__.py =====
# -*- coding: utf-8 -*-
# Part of BrowseInfo. See LICENSE file for full copyright and licensing details.

from . import pos
from . import product_product

===== .\bi_pos_restrict_zero_qty\security\ir.model.access.csv =====
id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink


===== .\bi_pos_restrict_zero_qty\static\description\index.html =====
<section class="oe_container lead mt64">
	<div>
		<div class="col-md-12 mt16" style="padding:0;">
            <div class="col-md-12" style="padding:0;">
                <div class="panel-group mb0 mt0" role="tablist" id="priceAccordeon" style="padding:0;">
                    <div class="panel-heading mb0 mt0 collapsed" role="tab" data-toggle="collapse" data-parent="#priceAccordeon" data-target="#priceAccordeon_area" aria-expanded="false" style="margin-left:0;padding:0 0 2px 0;text-align:right;">
                        <strong>
                        	<div style="background-color:#875A7B;color:white;padding:5px;margin-bottom:3px;text-align:center;border-radius:5px;white-space:nowrap;display: inline-block;">
                                <strong style="color:white;">
                                    Supported :
                                </strong>
                            </div>
                            <div style="background-color:#875A7B;color:white;padding:5px;margin-bottom:3px;text-align:center;border-radius:5px;white-space:nowrap;display: inline-block;">
                                <strong style="color:white;" title="The tool is compatible with the Odoo Enterprise version">
                                    <i class="fa fa-check" style="margin-left:4px;"> </i>
                                    Enterprise
                                </strong>
                            </div>
                            <div style="background-color:#875A7B;padding:5px;margin-top:3px;text-align:center;border-radius:5px;white-space:nowrap;display: inline-block;">
                                <strong style="color:white;" title="The tool is compatible with the Odoo Community version">
                                    <i class="fa fa-check" style="margin-left:4px;"> </i>
                                    Community
                                </strong>
                            </div>
                            <div style="background-color:#875A7B;color:white;padding:5px;margin-bottom:3px;text-align:center;border-radius:5px;white-space:nowrap;display: inline-block;">
                                <strong style="color:white;" title="The tool might be installed to Odoo.sh if you have a linked private git repository">
                                    <i class="fa fa-check" style="margin-left:4px;"> </i>
                                    Odoo.sh
                                </strong>
                            </div>
                        </strong>
                    </div>
                </div>
            </div>
        </div>
	</div>
</section>

<section class="oe_container lead bi_title_box">
	<div >
		<div >
			<h2 class="oe_slogan bi_title" style="color:#5082c4;">
				<b>Point of Sales Restrict Zero Quantity Odoo App</b>
			</h2>
			<h3 class="oe_slogan bi_title" style="color: ##201111;">
				<b>POS Order Line Restrict Zero Quantity Odoo Apps</b>
			</h3>
			<p class="oe_slogan">
				Point Of Sale Restrict Zero Quantity Odoo App helps users to prevent the sales of products with zero or negative stock levels, ensuring that businesses never run out of stock. Additionally, the app can be configured to display a warning message when the stock level of a product is getting low. When a customer attempts to purchase a product with a stock level below the minimum, the app will display an error message, preventing the sale from going through.
			</p>
		</div>
	</div>
</section>

<section class="oe_container lead bi_features">
	<div >
		<div>
			<h3 class="oe_slogan" style="opacity:1;background: linear-gradient(to right, #86bcf2 0%, #e2f2f8 100%);padding: 10px 0px;color: ##201111;letter-spacing: 0.2em;text-transform: uppercase;text-shadow: 0.1em .04em 0.1em #7d8c88;"><b>Features</b></h3>
		</div>
		<div class="row">
			<div class="col" style="margin: 10px;">
				<div class="row">
					<div class="col-md-3 text-center">
						<img class="img img-responsive" style="max-width:100%;" src="features/8021071.png"/>
					</div>
					<div class="col-md-9">
					  <h4><b>Restrict Zero Quantity Configuration</b></h4>
					  <span class="oe_slogan">User have option to enable or disable zero quantity configuration.</span>
					</div>
				</div>
			</div>
			<div class="col" style="margin: 10px;">
				<div class="row">
					<div class="col-md-3 text-center">
						<img class="img img-responsive" style="max-width:100%;" src="features/5139322.png"/>
					</div>
					<div class="col-md-9">
						<h4><b>Zero Quantity Product Validation</b></h4>
						<span class="oe_slogan">Raise warning on point of sale if product quantity is zero.</span>
					</div>
				</div>
			</div>
		</div>
	</div>
</section>

<section class="oe_container lead mt64">
	<div >
		<div class="oe_slogan oe_spaced text-center">
			<a class="btn mt8 mr8" title="Demo Request" style="background-color: #2875aa;color: #FFFFFF !important;font-size: 20px;font-weight: bold;border-radius: 7px;" href="mailto:sales@browseinfo.in?Subject=Demo Request for POS Restrict Zero Quantity Odoo App" target="_top"> Demo Request </a>
			<a class="btn mt8 ml8" title="Video Tutorial" style="background-color: #2875aa;color: #FFFFFF !important;font-size: 20px;font-weight: bold;border-radius: 7px;" href="https://youtu.be/6pUwaykhfQE" target="_blank"> Video Tutorial</a>
		</div>
	</div>
</section>

<section class="oe_container lead">
	<div>
		<div>
			<p class="oe_slogan" style="color: #49a3fe;font-size: 35px;font-style: italic;font-weight:bolder;">Restrict Zero Quantity Configuration</p>
			<p class="oe_slogan">User have option to enable and disable configuration for restrict zero quantity validatoin.</p>
			<img class="img-border img-responsive thumbnail mb16" style="border: 3px solid black;" src="1_pos_config.png">
		</div>
	</div>
</section>

<section class="oe_container lead">
	<div>
		<div>
			<p class="oe_slogan" style="color: #49a3fe;font-size: 35px;font-style: italic;font-weight:bolder;">On Hand Qty</p>
			<p class="oe_slogan">User can see product with zero on hand quantity.</p>
			<img class="img-border img-responsive thumbnail mb16" style="border: 3px solid black;" src="2_onhand.png">
		</div>
	</div>
</section>

<section class="oe_container lead">
	<div>
		<div>
			<p class="oe_slogan" style="color: #49a3fe;font-size: 35px;font-style: italic;font-weight:bolder;">Zero Quantity Product Validation</p>
			<p class="oe_slogan">User can see warning when user selects product with zero quantity and click "Payment" button in point of sale screen.</p>
			<img class="img-border img-responsive thumbnail mb16" style="border: 3px solid black;" src="3_warning.png">
		</div>
	</div>
</section>

<section class="oe_container oe_dark" style="min-width: 110%;margin-left: -5%;">
	<div>
		<div class="row">
			<div class="col-sm-4" style="margin: auto;">
				<p class="oe_slogan" style="font-size: 35px;color: #5082c4;font-style: italic;font-weight: bold;">Apps May You Like</p>
			</div>
		</div>
		<div class="row col-sm-12" style="margin-left: 1%;padding: 1% 8%;">
			<div class="col-sm-4" style="padding: 5px;padding-right: 10px;">
				<a href="https://apps.odoo.com/apps/modules/15.0/bi_pos_reprint_reorder/">
					<img class="img img-responsive" src="related/bi_pos_reprint_reorder.png" style="width: 100%;"/>
				</a>
			</div>
			<div class="col-sm-4" style="padding: 5px;padding-right: 10px;">
				<a href="https://apps.odoo.com/apps/modules/15.0/bi_pos_warranty/">
					<img class="img img-responsive" src="related/bi_pos_warranty.png" style="width: 100%;"/>
				</a>
			</div>
			<div class="col-sm-4" style="padding: 5px;padding-right: 10px;">
				<a href="https://apps.odoo.com/apps/modules/15.0/bi_pos_screen_margin/">
					<img class="img img-responsive" src="related/bi_pos_screen_margin.png" style="width: 100%;"/>
				</a>
			</div>
			<div class="col-sm-4" style="padding: 5px;padding-right: 10px;">
				<a href="https://apps.odoo.com/apps/modules/15.0/bi_pos_return_order/">
					<img class="img img-responsive" src="related/bi_pos_return_order.png" style="width: 100%;"/>
				</a>
			</div>
			<div class="col-sm-4" style="padding: 5px;padding-right: 10px;">
				<a href="https://apps.odoo.com/apps/modules/15.0/pos_coupons_gift_voucher/">
					<img class="img img-responsive" src="related/pos_coupons_gift_voucher.png" style="width: 100%;"/>
				</a>
			</div>
			<div class="col-sm-4" style="padding: 5px;padding-right: 10px;">
				<a href="https://apps.odoo.com/apps/modules/15.0/pos_home_delivery/">
					<img class="img img-responsive" src="related/pos_home_delivery.png" style="width: 100%;"/>
				</a>
			</div>
		</div>
	</div>
</section>

<section class="oe_container oe_dark" style="min-width: 110%;margin-left: -5%;">
	<div>
		<div class="row">
			<div class="col-sm-4" style="margin: auto;">
				<p class="oe_slogan" style="font-size: 35px;color: #5082c4;font-style: italic;font-weight: bold;">Most Demanded Apps</p>
			</div>
		</div>
		<div class="row col-sm-12" style="margin-left: 1%;padding: 1% 8%;">
			<div class="col-sm-4" style="padding: 5px;padding-right: 10px;">
				<a href="https://apps.odoo.com/apps/modules/15.0/pos_orders_all/">
					<img class="img img-responsive" src="demanded/all_in_one_pos.png" style="width: 100%;"/>
				</a>
			</div>
			<div class="col-sm-4" style="padding: 5px;padding-right: 10px;">
				<a href="https://apps.odoo.com/apps/modules/15.0/bi_customer_overdue_statement/">
					<img class="img img-responsive" src="demanded/customer_overdue.png" style="width: 100%;"/>
				</a>
			</div>
			<div class="col-sm-4" style="padding: 5px;padding-right: 10px;">
				<a href="https://apps.odoo.com/apps/modules/15.0/generic_excel_report/">
					<img class="img img-responsive" src="demanded/generic_excel_report.png" style="width: 100%;"/>
				</a>
			</div>
			<div class="col-sm-4" style="padding: 5px;padding-right: 10px;">
				<a href="https://apps.odoo.com/apps/modules/15.0/sales_commission_generic/">
					<img class="img img-responsive" src="demanded/sale_commision.png" style="width: 100%;"/>
				</a>
			</div>
			<div class="col-sm-4" style="padding: 5px;padding-right: 10px;">
				<a href="https://apps.odoo.com/apps/modules/15.0/bi_generic_import/">
					<img class="img img-responsive" src="demanded/bi_generic_import.png" style="width: 100%;"/>
				</a>
			</div>
			<div class="col-sm-4" style="padding: 5px;padding-right: 10px;">
				<a href="https://apps.odoo.com/apps/modules/15.0/branch/">
					<img class="img img-responsive" src="demanded/branch.png" style="width: 100%;"/>
				</a>
			</div>
		</div>	
	</div>
</section>

<section class="oe_container">
	<div >
		<div >
			<h2 class="oe_slogan">Free Support</h2>
			<h3 class="oe_slogan" style="font-size: 21px; color: #000000 !important;">You will get 90 Days free support incase any bugs or issue (Except data recovery).</h3>
			<p class="oe_slogan" style="font-size: 18px; ">
		At BrowseInfo we offer  end to end solution for Odoo services. Which includes analysis &amp; consultation on the workflows and integration part.  Please note that You're not allowed to distribute this module after purchase! Incase of any question regarding this module feel free to email us on <a href="mailto:ticket@browseinfo.in">ticket@browseinfo.in</a> or raise a ticket on support.
			</p>
		</div>
	</div>
</section>

<section class="oe_container lead">
	<div >
		<div >
			<div class="img img-responsive text-center">
				<a href="http://www.browseinfo.in" target="new" style="display: grid;">
					<img src="bi_logo.png" style="margin: auto;max-width: 350px;">
				</a>
			</div>
		</div>
		<div class="oe_slogan oe_spaced text-center">
			<a class="btn mt8" title="Query and Demo" style="background-color: #3497db;color: #FFFFFF !important;font-size: 20px;font-weight: bold;" href="mailto:sales@browseinfo.in?Subject=Demo Request for POS Restrict Zero Quantity Odoo App" target="_blank"> Query and Demo </a>
			<a class="btn mt8" title="Email on Support" style="background-color: #3497db;color: #FFFFFF !important;font-size: 20px;font-weight: bold;" href="mailto:ticket@browseinfo.in?Subject=Support Request for POS Restrict Zero Quantity Odoo App" target="_blank"> Support Request </a>
		</div>
	</div>
</section>

===== .\bi_pos_restrict_zero_qty\static\src\css\qty.css =====
/*
    @Author: KSOLVES India Private Limited
    @Email: sales@ksolves.com
*/

.pos .quantity-count{
    color: white;
    line-height: 13px;
    padding: 2px 7px;
    border-radius: 2px;
    font-weight: bold;
    position: absolute;
    top: 2px;
    left: 2px;
}

.pos .product{
    transition: all 1s ease;
}

.pos .quantity-count.warn{
    background: #EF5350;
}

.pos .quantity-count.normal{
    background: #32a868;
}

.pos .product .overlay {
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.4);
  z-index: 2;
  pointer-events: none;
  display: flex;
  align-items: center;
  justify-content: center;
}

.pointer-none {
    pointer-events: none;
}

.pos .popup.popup-error p.body {
     white-space:pre-wrap;
}

.pos .text{
  font-size: 15px;
  color: black;
  line-height: 1;
  text-align: center;
}

===== .\bi_pos_restrict_zero_qty\static\src\js\models.js =====
odoo.define('bi_pos_restrict_zero_qty.pos', function(require) {
	"use strict";

	const models = require('point_of_sale.models');
	var model_list = models.PosModel.prototype.models;
	var product_model = null;
	var exports = {};

	models.load_fields('product.product', ['qty_available','type']);


});

===== .\bi_pos_restrict_zero_qty\static\src\js\productItem.js =====
odoo.define('bi_pos_restrict_zero_qty.ProductItem', function(require) {
    'use strict';

    const ProductItem = require('point_of_sale.ProductItem');
    const Registries = require('point_of_sale.Registries');



    const ProductItemInherit = (ProductItem)=>
    class extends ProductItem {
         constructor() {
                super(...arguments);
            }

            async updateQtyAvailable() {
            let config_id = this.env.pos.config_id;
            let qty_available = await this.rpc({
                model: 'product.product',
                method: 'get_qty_in_location',
                args: [this.props.product.id, config_id],
            });
            this.props.product.qty_available = qty_available;
        }

        get price() {
            const unitPrice = this.props.product.get_display_price(this.pricelist, 1);
            const formattedUnitPrice = this.env.pos.format_currency(unitPrice.toFixed(2), 'Product Price');
            this.updateQtyAvailable();
            if (this.props.product.to_weight) {
                return `${formattedUnitPrice}/${
                    this.env.pos.units_by_id[this.props.product.uom_id[0]].name
                }`;
            } else {
                return formattedUnitPrice;
            }
        }
    }





    Registries.Component.extend(ProductItem, ProductItemInherit);

    return ProductItemInherit;
});


===== .\bi_pos_restrict_zero_qty\static\src\js\ProductScreen.js =====
odoo.define('bi_pos_restrict_zero_qty.productScreen', function(require) {
    "use strict";

    const ProductScreen = require('point_of_sale.ProductScreen');
    const Registries = require('point_of_sale.Registries');
    var rpc = require('web.rpc')

    const BiProductScreen = (ProductScreen) =>
        class extends ProductScreen {
            constructor() {
                super(...arguments);
            }
            async _onClickPay() {
                var self = this;
                let order = this.env.pos.get_order();
                let lines = order.get_orderlines();
                let pos_config = self.env.pos.config;
                let call_super = true;
                var config_id=self.env.pos.config.id;
                let prod_used_qty = {};
                if(pos_config.restrict_zero_qty){
                    for (let line of lines) {
                        let prd = line.product;
                        let prd_qty_available = await this.rpc({
                            model: 'product.product',
                            method: 'get_qty_in_location',
                            context: {current_pos_config_id: config_id},
                            args: [prd.id, config_id],
                        });
                        if (prd.type == 'product'){
                            if(prd.id in prod_used_qty){
                                let old_qty = prod_used_qty[prd.id][1];
                                prod_used_qty[prd.id] = [prd_qty_available,line.quantity+old_qty]
                            }else{
                                prod_used_qty[prd.id] = [prd_qty_available,line.quantity]
                            }
                        }
                        if(prd_qty_available <= 0){
                            if (prd.type == 'product'){
                                call_super = false;
                                let wrning = prd.display_name + ' is out of stock.';
                                self.showPopup('ErrorPopup', {
                                    title: self.env._t('Zero Quantity Not allowed'),
                                    body: self.env._t(wrning),
                                });
                            }
                        }
                    }

                    $.each(prod_used_qty, function( i, pq ){
                        let product = self.env.pos.db.get_product_by_id(i);
                        let check = pq[0] - pq[1];
                        let wrning = product.display_name + ' is out of stock.';
                        if (product.type == 'product'){
                            if (check < 0){
                                call_super = false;
                                self.showPopup('ErrorPopup', {
                                    title: self.env._t('Deny Order'),
                                    body: self.env._t(wrning),
                                });
                            }
                        }
                    });

                }
                if(call_super){
                    super._onClickPay();
                }
            }
        };

    Registries.Component.extend(ProductScreen, BiProductScreen);

    return ProductScreen;

});


===== .\bi_pos_restrict_zero_qty\static\src\xml\qty.xml =====
<?xml version="1.0" encoding="UTF-8"?>


<templates id="az_ks_pos_low_stock_alert.template" xml:space="preserve">
    <t t-name="ProductItem" t-inherit="point_of_sale.ProductItem" t-inherit-mode="extension" owl="1">

        <xpath expr="//div[hasclass('product-img')]" position="after">
                <span class="quantity-count normal" >
                    <t t-esc="props.product.qty_available"/>
                </span>
        </xpath>
    </t>
</templates>

===== .\bi_pos_restrict_zero_qty\views\pos_config_view.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>
        <record model="ir.ui.view" id="custom_pos_config_extended_form_view">
            <field name="name">pos.config.form.extended.view</field>
            <field name="model">pos.config</field>
            <field name="inherit_id" ref="point_of_sale.pos_config_view_form"/>
            <field name="arch" type="xml">
                <xpath expr="//div[@id='iface_orderline_customer_notes']" position="before">
                    <div class="col-12 col-lg-6 o_setting_box">
                        <div class="o_setting_left_pane">
                            <field name="restrict_zero_qty"/>
                        </div>
                        <div class="o_setting_right_pane">
                            <label for="restrict_zero_qty" string="Restrict Zero Quantity"/>
                            <div class="text-muted">
                                Zero Quantity Product Validation
                            </div>
                        </div>
                    </div>
                </xpath>    
            </field>
        </record>
    </data>
</odoo>


===== .\custom_invoice_templates\__init__.py =====
# -*- coding: utf-8 -*-
from . import models

===== .\custom_invoice_templates\__manifest__.py =====
# -*- coding: utf-8 -*-
{
    'name': 'Azbah Custom Invoice Templates',
    'version': '15.1',
    'summary': 'Custom Templates for Azbah Invoices',
    'description': "",
    'depends': ['base', 'account_accountant', 'web',  'account','sale'],
    'data': [
        'report/customer_invoice.xml',
        'report/payment_receipt.xml',
        'report/journal_entry.xml',
    ],

    'assets': {
        'web.assets_common': [
            'custom_invoice_templates/static/src/css/*.css',
            'custom_invoice_templates/static/src/fonts/*.ttf',
        ],
    }
}


===== .\custom_invoice_templates\models\account_move.py =====

from odoo import api, models, modules, fields


class AccountMoveLine(models.Model):
    _inherit = 'account.move.line'
    
    
    amount_tax = fields.Monetary(string='Tax Amount', compute='compute_amount_taxed_per_line',currency_field='company_currency_id',store=True)
    
    
    @api.depends('product_id','tax_ids','quantity','price_subtotal')
    def compute_amount_taxed_per_line(self):
        for rec in self:
            total_tax = 0
            if rec.tax_ids:
                for tax_line in rec.tax_ids:
                    total_tax += tax_line.amount
            rec.amount_tax = ( rec.price_subtotal * total_tax) / 100

===== .\custom_invoice_templates\models\delegate_move.py =====
from odoo import models, api, fields, _ 
from werkzeug.routing import ValidationError


class delegate(models.Model):

    _inherit = 'account.move'
    delegate_id = fields.Many2one('hr.employee', tracking=True, domain = [('is_delegate', '=', True)])


===== .\custom_invoice_templates\models\delegate_sale_order.py =====
from datetime import time, datetime, timedelta
from functools import partial
from itertools import groupby

from odoo import models, api, fields, _


class SaleAdvancePaymentInv(models.Model):
    _inherit = 'sale.order'
    _description = "Sales Advance Payment Invoice"
    _order = 'date_order desc, id desc'
    _check_company_auto = True


    delegate = fields.Many2one('res.partner', tracking=True, string="Delegate")


    def _prepare_invoice(self):
        values= super(SaleAdvancePaymentInv, self)._prepare_invoice()


        values.update( {

            'delegate_id': self.delegate.id,

        })
        return values





===== .\custom_invoice_templates\models\res_company_inherit.py =====
# -*- coding: utf-8 -*-
###############################################################################
#
#    ATIT.
#    Copyright (C) 2020-TODAY ATIT.
#
###############################################################################
from odoo import models, api, fields, _


class Company(models.Model):
    _inherit = 'res.company'
    iso_number = fields.Char(default='ISO 22000:2005')

===== .\custom_invoice_templates\models\__init__.py =====
# -*- coding: utf-8 -*-
from . import res_company_inherit
from . import account_move
from . import delegate_move
from . import delegate_sale_order

===== .\custom_invoice_templates\report\customer_invoice.xml =====
===== .\custom_invoice_templates\report\journal_entry.xml =====
===== .\custom_invoice_templates\report\payment_receipt.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>
        <template id="inherit_account_payment_receipt"
                  inherit_id="account.report_payment_receipt_document">

            <xpath expr="//div[@class='page']" position="replace">

                <div class="page">
                    <h3>
                        <strong>Payment Receipt:
                            <span t-field="o.name"/>
                        </strong>
                    </h3>
                    <div class="row mt64">
                        <div class="col-6" t-if="o.date">
                            <strong>Payment Date:</strong>
                            <span t-field="o.date"/>
                        </div>
                        <div class="col-6" t-if="o.payment_type and o.payment_type == 'transfer'">
                            <strong>Payment Type:</strong>
                            <span t-field="o.payment_type"/>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6" t-if="o.partner_type">
                            <t t-if="o.partner_type == 'customer'">
                                <strong>Customer:</strong>
                            </t>
                            <t t-if="o.partner_type == 'supplier'">
                                <strong>Vendor:</strong>
                            </t>
                            <span t-field="o.partner_id"/>
                        </div>
                        <div class="col-6" t-if="o.payment_method_id">
                            <strong>Payment Method:</strong>
                            <span t-field="o.payment_method_id.name"/>
                        </div>
                        <div class="col-6" t-if="o.journal_id and o.payment_type == 'transfer'">
                            <strong>Journal:</strong>
                            <span t-field="o.journal_id"/>
                        </div>
                    </div>
                    <div class="row mb64">
                        <div class="col-6" t-if="o.amount">
                            <strong>Payment Amount:</strong>
                            <span t-field="o.amount"
                                  t-options="{'widget': 'monetary', 'display_currency': o.currency_id}"/>
                        </div>
                        <div class="col-6" t-if="o.destination_journal_id and o.payment_type == 'transfer'">
                            <strong>Transfer To:</strong>
                            <span t-field="o.destination_journal_id"/>
                        </div>

                    </div>
                    <div class="row mb64">
                        <div class="col-6" t-if="o.ref">
                            <strong>Memo:</strong>
                            <span t-field="o.ref"/>
                        </div>
                    </div>
                    <t t-if="o.payment_type != 'transfer'">
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>
                                        <span>Invoice Date</span>
                                    </th>
                                    <th>
                                        <span>Invoice Number</span>
                                    </th>
                                    <th>
                                        <span>Reference</span>
                                    </th>
                                    <th class="text-right">
                                        <span>Original Amount</span>
                                    </th>
                                    <th class="text-right">
                                        <span>Amount Paid</span>
                                    </th>
                                    <th class="text-right">
                                        <span>Balance</span>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr t-foreach="o.reconciled_invoice_ids" t-as="inv">
                                    <td>
                                        <span t-field="inv.invoice_date"/>
                                    </td>
                                    <td>
                                        <span t-field="inv.name"/>
                                    </td>
                                    <td>
                                        <span t-field="inv.ref"/>
                                    </td>
                                    <td class="text-right">
                                        <span t-field="inv.amount_total"/>
                                    </td>
                                    <td class="text-right">
                                        <span t-esc="o.amount"
                                              t-options="{'widget': 'monetary', 'display_currency': inv.currency_id}"/>
                                    </td>
                                    <td class="text-right">
                                        <span t-field="inv.amount_residual"/>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </t>
                </div>
            </xpath>
        </template>


    </data>
</odoo>

===== .\custom_invoice_templates\report\sanad_template.xml =====
===== .\custom_invoice_templates\report\_trash\delivery_note_template.xml =====
===== .\custom_invoice_templates\report\_trash\journal_entries_report_template.xml =====
<?xml version="1.0" encoding="utf-8"?>
<odoo>

    <template id="azbah_journal_entries_header">
        <div class="header" style="direction:rtl !important;">
            <br/>
            <div class="row" style="direction:rtl !important;">
                <div class="col-4" style="font-size: 30px;direction:rtl !important;">
                    <center style="direction:ltr !important;">
                        <br/>
                        <strong style="direction:rtl !important;">التاريخ</strong>
                        <span t-field="o.date" style="direction:rtl !important;"/>
                        <strong style="direction:v !important;">Date</strong>
                    </center>
                </div>
                <div class="col-4" style="font-size: 30px;direction:ltr !important;">
                    <center style="direction:rtl !important;">
                        <br/>
                        <strong style="direction:rtl !important;">قيود اليومية</strong>
                        <br/>
                        <strong style="direction:rtl !important;">Journal entries</strong>
                    </center>
                </div>
                <div class="col-4" style="direction:rtl !important;">
                    <br/>
                    <center style="direction:rtl !important;margin-top:3px;">
                        <img t-if="o.company_id.logo"
                             t-att-src="image_data_uri(o.company_id.logo)" alt="Logo"
                             style="max-height:133px;direction:rtl !important;"/>
                    </center>
                </div>
            </div>
            <div class="row" style="direction:ltr !important;">
                <div class="col-4">
                    <div style="border-bottom: 2px solid black;margin-bottom: 5px;"/>
                    <div style="border-bottom: 2px solid black;margin-bottom: 5px;"/>
                    <div style="border-bottom: 2px solid black;margin-bottom: 5px;"/>
                </div>
                <div class="col-4"/>
                <div class="col-4">
                    <div style="border-bottom: 2px solid black;margin-bottom: 5px;"/>
                    <div style="border-bottom: 2px solid black;margin-bottom: 5px;"/>
                    <div style="border-bottom: 2px solid black;margin-bottom: 5px;"/>
                </div>
            </div>
            <br/>
        </div>
        <div class="article" t-att-data-oe-model="o and o._name"
             t-att-data-oe-id="o and o.id"
             t-att-data-oe-lang="o and o.env.context.get('lang')">
            <t t-raw="0"/>
        </div>

    </template>
    <template id="azbah_template_journal_entries_report">
        <t t-call="web.html_container">
            <t t-foreach="docs" t-as="o">
                <t t-call="custom_invoice_templates.azbah_journal_entries_header">
                    <style>
                        @font-face {
                        font-family: 'Almarai';
                        font-style: normal;}
                        td, th {
                        border: 1px solid black;
                        text-align:center;
                        }
                    </style>
                    <br/>
                    <div class="page" style="padding-top:55px">
                        <div>
                            <div style="text-align:center;margin-top:170px;margin-left:60px;font-size: 25px;">
                                <div>
                                    <strong>
                                        <span t-esc="o.name"/>
                                    </strong>

                                </div>
                            </div>
                        </div>
                        <div style="float:left;text-align:right; margin-top: 40px !important;">
                            <div class="col-md-12"
                                 style=" font-size: 18px; direction:rtl !important;direction:ltr !important;">

                                <div class="col-md-6" style=" width:100%;">

                                    <table class="table table-borderless"
                                           style="text-align:left;margin-top:10px;float:right;">
                                        <tr style="text-align:right;" t-if="o.delegate_id.name">
                                            <td style="text-align:right;padding:5px;">
                                                <strong>Delegate name :</strong>
                                                <span t-esc="o.delegate_id.name"/>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="text-align:right;padding:5px;">
                                                <strong>
                                                    Reference:
                                                </strong>

                                                <span t-esc="o.ref"/>
                                            </td>
                                        </tr>
                                    </table>

                                </div>

                            </div>
                        </div>
                        <div style="text-align:right; ;margin-left:550px;  margin-top: 37px !important;direction:ltr !important;">
                            <div class="col-md-12"
                                 style=" font-size: 18px; direction:rtl !important;">
                                <div class="col-md-6" style=" width:100%;">

                                    <table class="table table-borderless"
                                           style="text-align:left;margin-top:10px;float:left;">
                                        <tr style="text-align:left;">
                                            <td style="text-align:right;">
                                                <strong>
                                                   Journal :
                                                </strong>
                                                <span t-esc="o.journal_id.name"/>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="text-align:right;">
                                                <strong>
                                                    Accounting Date:
                                                </strong>
                                                <span t-field="o.date"/>
                                            </td>
                                        </tr>
                                    </table>
                                </div>

                            </div>
                        </div>
                        <div style="font-size: 10px; direction:rtl !important;margin-top:25px;direction:rtl !important;">

                            <table class="table table-bordered">
                                <thead style="background-color:#326fa8;">
                                    <tr>
                                        <th style="vertical-align: middle;font-size: 15px;text-align:center;width:20px;">
                                            Account
                                        </th>
                                        <th scope="col"
                                            style="vertical-align: middle;font-size: 15px;text-align:center;width:20px;">
                                            Partner
                                        </th>
                                        <th scope="col"
                                            style="vertical-align: middle;font-size: 15px;text-align:center;;width:20px;">
                                            Taxes

                                        </th>
                                        <th scope="col"
                                            style="vertical-align: middle;font-size: 15px;text-align:center;">
                                            Label
                                        </th>

                                        <th scope="col"
                                            style="vertical-align: middle;font-size: 15px;text-align:center;;width:20px;">
                                            Debit
                                        </th>
                                        <th scope="col"
                                            style="vertical-align: middle;font-size: 15px;text-align:center;;width:20px;">
                                            Crédit
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr t-foreach="o.line_ids" t-as="lines">
                                        <td style="text-align:left;font-size: 20px;width:20px;">
                                            <div>
                                                <span style="text-align:left;font-size: 16px;"
                                                      t-esc="lines.account_id.name"/>

                                            </div>

                                        </td>
                                        <td style="vertical-align: middle;font-size: 13px;;width:20px;">


                                            <div>
                                                <span style="text-align:left;font-size: 16px;"
                                                      t-esc="lines.partner_id.name"/>

                                            </div>


                                        </td>
                                        <td style="vertical-align: middle;text-align:center;font-size: 13px;width:40px;">
                                            <div>
                                                <span style="text-align:left;font-size: 16px;"
                                                      t-esc="lines.tax_ids.name"/>
                                            </div>
                                        </td>
                                        <td style="width:25px;vertical-align: middle;text-align:center;font-size: 13px;">
                                            <div>
                                                <span style="text-align:left;font-size: 16px;"
                                                      t-esc="lines.name"/>

                                            </div>
                                        </td>
                                        <td style="vertical-align: middle;text-align:center;font-size: 13px;;width:20px;">
                                            <div>
                                                <span style="text-align:left;font-size: 16px;"
                                                      t-esc="lines.debit"/>

                                            </div>
                                        </td>
                                        <td style="vertical-align: middle;text-align:center;font-size: 13px;;width:20px;">
                                            <div>
                                                <span style="text-align:left;font-size: 16px;"
                                                      t-esc="lines.credit"/>

                                            </div>
                                        </td>

                                    </tr>
                                </tbody>
                            </table>

                        </div>

                    </div>


                </t>
            </t>

        </t>

    </template>


    <record id="paperformat_azbah_id" model="report.paperformat">
        <field name="name">AZBAH Paper format</field>
        <field name="default" eval="True"/>
        <field name="format">custom</field>
        <field name="page_height">297</field>
        <field name="page_width">210</field>
        <field name="orientation">Portrait</field>
        <field name="margin_top">1</field>
        <field name="margin_bottom">5</field>
        <field name="margin_left">1</field>
        <field name="margin_right">1</field>
        <field name="header_line" eval="False"/>
        <field name="header_spacing">10</field>
        <field name="dpi">90</field>
    </record>

    <record id="report_azbah_journal_entriess" model="ir.actions.report">
        <field name="name">custom_invoice_templates.azbah_template_journal_entries_report</field>
        <field name="model">account.move</field>
        <field name="report_type">qweb-pdf</field>
        <field name="report_name">odoo_process_costing_manufacturing.report_mrporder_cost</field>
        <field name="report_file">custom_invoice_templates.azbah_template_journal_entries_report</field>
        <field name="paper_format">custom_invoice_templates.paperformat_azbah_id</field>
    </record>



</odoo>

===== .\custom_invoice_templates\report\_trash\loading_unloading_sheet_template.xml =====
===== .\custom_invoice_templates\report\_trash\purchase_order_template.xml =====
===== .\custom_invoice_templates\report\_trash\receipt_review_report_template.xml =====
===== .\custom_invoice_templates\report\_trash\report.xml =====
===== .\custom_invoice_templates\static\src\fonts\Cairo\OFL.txt =====
Copyright 2009 The Cairo Project Authors (gaber@gaberism.net)

This Font Software is licensed under the SIL Open Font License, Version 1.1.
This license is copied below, and is also available with a FAQ at:
http://scripts.sil.org/OFL


-----------------------------------------------------------
SIL OPEN FONT LICENSE Version 1.1 - 26 February 2007
-----------------------------------------------------------

PREAMBLE
The goals of the Open Font License (OFL) are to stimulate worldwide
development of collaborative font projects, to support the font creation
efforts of academic and linguistic communities, and to provide a free and
open framework in which fonts may be shared and improved in partnership
with others.

The OFL allows the licensed fonts to be used, studied, modified and
redistributed freely as long as they are not sold by themselves. The
fonts, including any derivative works, can be bundled, embedded, 
redistributed and/or sold with any software provided that any reserved
names are not used by derivative works. The fonts and derivatives,
however, cannot be released under any other type of license. The
requirement for fonts to remain under this license does not apply
to any document created using the fonts or their derivatives.

DEFINITIONS
"Font Software" refers to the set of files released by the Copyright
Holder(s) under this license and clearly marked as such. This may
include source files, build scripts and documentation.

"Reserved Font Name" refers to any names specified as such after the
copyright statement(s).

"Original Version" refers to the collection of Font Software components as
distributed by the Copyright Holder(s).

"Modified Version" refers to any derivative made by adding to, deleting,
or substituting -- in part or in whole -- any of the components of the
Original Version, by changing formats or by porting the Font Software to a
new environment.

"Author" refers to any designer, engineer, programmer, technical
writer or other person who contributed to the Font Software.

PERMISSION & CONDITIONS
Permission is hereby granted, free of charge, to any person obtaining
a copy of the Font Software, to use, study, copy, merge, embed, modify,
redistribute, and sell modified and unmodified copies of the Font
Software, subject to the following conditions:

1) Neither the Font Software nor any of its individual components,
in Original or Modified Versions, may be sold by itself.

2) Original or Modified Versions of the Font Software may be bundled,
redistributed and/or sold with any software, provided that each copy
contains the above copyright notice and this license. These can be
included either as stand-alone text files, human-readable headers or
in the appropriate machine-readable metadata fields within text or
binary files as long as those fields can be easily viewed by the user.

3) No Modified Version of the Font Software may use the Reserved Font
Name(s) unless explicit written permission is granted by the corresponding
Copyright Holder. This restriction only applies to the primary font name as
presented to the users.

4) The name(s) of the Copyright Holder(s) or the Author(s) of the Font
Software shall not be used to promote, endorse or advertise any
Modified Version, except to acknowledge the contribution(s) of the
Copyright Holder(s) and the Author(s) or with their explicit written
permission.

5) The Font Software, modified or unmodified, in part or in whole,
must be distributed entirely under this license, and must not be
distributed under any other license. The requirement for fonts to
remain under this license does not apply to any document created
using the Font Software.

TERMINATION
This license becomes null and void if any of the above conditions are
not met.

DISCLAIMER
THE FONT SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL THE
COPYRIGHT HOLDER BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL
DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM
OTHER DEALINGS IN THE FONT SOFTWARE.


===== .\custom_invoice_templates\static\src\scss\report.scss =====
@font-face{
	  font-family: 'Cairo';
  font-style: normal;
  font-weight: 700;
	src:url('/custom_invoice_templates/static/src/font/Cairo/Cairo-Regular.ttf') format('truetype');
	}
	@font-face{
	  font-family: 'Almarai';
  font-style: normal;
  font-weight: 700;
	src:url('/custom_invoice_templates/static/src/font/Almarai/Almarai-Regular.ttf') format('truetype');
	}

$o-company-font: 'Cairo' !important;


body {
   
   font-family:'Cairo' !important;
}
.page {
   
    font-family:'Cairo' !important;
    
}
.article {
   
    font-family:'Cairo' !important;
    
}
.address{
font-family:'Cairo' !important;
}
.footer{
font-family:'Cairo' !important;
}
.article.o_report_layout_standard.o_company_1_layout {
    font-family: "Cairo" !important;
}

===== .\custom_invoice_templates\views\delegate.xml =====
<?xml version="1.0" encoding="utf-8"?>
        <odoo>

    <record id="delegate_move_view" model="ir.ui.view">
            <field name="name">delegate</field>
            <field name="model">account.move</field>
            <field name="inherit_id" ref="account.view_move_form"></field>
            <field name="arch" type="xml">
                <field name="ref" position="after">
                    <field name="delegate_id"   string="delegate"/>
                </field>


            </field>
        </record>
</odoo>

===== .\dashboard_pos\README.rst =====
POS Dashboard v15
=================
POS Dashboard

Installation
============
	- www.odoo.com/documentation/14.0/setup/install.html
	- Install our custom addon

Configuration
=============

    No additional configurations needed

Credits
=======
Developer: Irfan v13 @ cybrosys, Contact: odoo@cybrosys.com
           Jibin James V14 @ cybrosys, Contact: odoo@cybrosys.com
           Irfan V15 @ cybrosys, Contact: odoo@cybrosys.com



===== .\dashboard_pos\__init__.py =====
# -*- coding: utf-8 -*-
###################################################################################
#
#    Cybrosys Technologies Pvt. Ltd.
#    Copyright (C) 2020-TODAY Cybrosys Technologies (<https://www.cybrosys.com>).
#    Author: Irfan (<https://www.cybrosys.com>)
#
#    This program is free software: you can modify
#    it under the terms of the GNU Affero General Public License (AGPL) as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
###################################################################################

from . import models


===== .\dashboard_pos\__manifest__.py =====
# -*- coding: utf-8 -*-
###################################################################################
#
#    Cybrosys Technologies Pvt. Ltd.
#    Copyright (C) 2020-TODAY Cybrosys Technologies (<https://www.cybrosys.com>).
#    Author: Irfan (<https://www.cybrosys.com>)
#
#    This program is free software: you can modify
#    it under the terms of the GNU Affero General Public License (AGPL) as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
###################################################################################
{
    'name': "POS Dashboard",
    'version': '15.0.1.0.0',
    'summary': """POS Dashboard""",
    'description': """POS Dashboard""",
    'category': 'Point of Sale',
    'author': 'Cybrosys Techno Solutions',
    'company': 'Cybrosys Techno Solutions',
    'maintainer': 'Cybrosys Techno Solutions',
    'website': "https://www.cybrosys.com",
    'depends': ['hr', 'point_of_sale'],
    'external_dependencies': {
        'python': ['pandas'],
    },
    'data': [
        'views/dashboard_views.xml'
    ],
     'assets': {
        'web.assets_backend': [
            'dashboard_pos/static/src/js/pos_dashboard.js',
            'dashboard_pos/static/src/css/pos_dashboard.css',
            'https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.js',
        ],
        'web.assets_qweb': [
            'dashboard_pos/static/src/xml/pos_dashboard.xml',
        ],
    },
    'images': ['static/description/banner.png'],
    'license': "AGPL-3",
    'installable': True,
    'application': False,
}

===== .\dashboard_pos\doc\RELEASE_NOTES.md =====
## Module <pos_dashboard>

#### 09.10.2021
#### Version 15.0.1.0.0

##### Initial Commit for pos_dashboard



===== .\dashboard_pos\models\pos_dashboard.py =====
# -*- coding: utf-8 -*-
###################################################################################
#
#    Cybrosys Technologies Pvt. Ltd.
#    Copyright (C) 2020-TODAY Cybrosys Technologies (<https://www.cybrosys.com>).
#    Author: Irfan (<https://www.cybrosys.com>)
#
#    This program is free software: you can modify
#    it under the terms of the GNU Affero General Public License (AGPL) as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
###################################################################################
import pytz
from odoo import models, fields, api
from datetime import timedelta, datetime, date


class PosDashboard(models.Model):
    _inherit = 'pos.order'

    @api.model
    def get_department(self, option):
        company_id = self.env.company.id
        if option == 'pos_hourly_sales':

            user_tz = self.env.user.tz if self.env.user.tz else pytz.UTC
            query = '''select  EXTRACT(hour FROM date_order at time zone 'utc' at time zone '{}') 
                       as date_month,sum(amount_total) from pos_order where  
                       EXTRACT(month FROM date_order::date) = EXTRACT(month FROM CURRENT_DATE) 
                       AND pos_order.company_id = ''' + str(
                       company_id) + ''' group by date_month '''
            query = query.format(user_tz)
            label = 'HOURS'
        elif option == 'pos_monthly_sales':
            query = '''select  date_order::date as date_month,sum(amount_total) from pos_order where 
             EXTRACT(month FROM date_order::date) = EXTRACT(month FROM CURRENT_DATE) AND pos_order.company_id = ''' + str(
                company_id) + '''  group by date_month '''
            label = 'DAYS'
        else:
            query = '''select TO_CHAR(date_order,'MON')date_month,sum(amount_total) from pos_order where
             EXTRACT(year FROM date_order::date) = EXTRACT(year FROM CURRENT_DATE) AND pos_order.company_id = ''' + str(
                company_id) + ''' group by date_month'''
            label = 'MONTHS'

        self._cr.execute(query)
        docs = self._cr.dictfetchall()
        order = []
        for record in docs:
            order.append(record.get('sum'))
        today = []
        for record in docs:
            today.append(record.get('date_month'))
        final = [order, today, label]
        return final

    @api.model
    def get_details(self):
        company_id = self.env.company.id
        cr = self._cr
        cr.execute(
            """select pos_payment_method.name,sum(amount) from pos_payment inner join pos_payment_method on 
            pos_payment_method.id=pos_payment.payment_method_id group by pos_payment_method.name ORDER 
            BY sum(amount) DESC; """)
        payment_details = cr.fetchall()
        cr.execute(
            '''select hr_employee.name,sum(pos_order.amount_paid) as total,count(pos_order.amount_paid) as orders 
            from pos_order inner join hr_employee on pos_order.user_id = hr_employee.user_id 
            where pos_order.company_id =''' + str(company_id) + '''GROUP BY hr_employee.name order by total DESC;''')
        salesperson = cr.fetchall()
        total_sales = []
        for rec in salesperson:
            rec = list(rec)
            sym_id = rec[1]
            company = self.env.company
            if company.currency_id.position == 'after':
                rec[1] = "%s %s" % (sym_id, company.currency_id.symbol)
            else:
                rec[1] = "%s %s" % (company.currency_id.symbol, sym_id)
            rec = tuple(rec)
            total_sales.append(rec)
        cr.execute(
            '''select DISTINCT(product_template.name) as product_name,sum(qty) as total_quantity from 
       pos_order_line inner join product_product on product_product.id=pos_order_line.product_id inner join 
       product_template on product_product.product_tmpl_id = product_template.id  where pos_order_line.company_id =''' + str(
                company_id) + ''' group by product_template.id ORDER 
       BY total_quantity DESC Limit 10 ''')
        selling_product = cr.fetchall()
        sessions = self.env['pos.config'].search([])
        sessions_list = []
        dict = {
            'closing_control': 'Closed',
            'opened': 'Opened',
            'new_session': 'New Session',
            'opening_control': "Opening Control"
        }
        for session in sessions:
            sessions_list.append({
                'session': session.name,
                'status': dict.get(session.pos_session_state)
            })
        payments =[]
        for rec in payment_details:
            rec = list(rec)
            sym_id = rec[1]
            company = self.env.company
            if company.currency_id.position == 'after':
                rec[1] = "%s %s" % (sym_id, company.currency_id.symbol)
            else:
                rec[1] = "%s %s" % (company.currency_id.symbol, sym_id)
            rec = tuple(rec)
            payments.append(rec)
        return {
            'payment_details': payments,
            'salesperson': total_sales,
            'selling_product': sessions_list,
        }

    @api.model
    def get_refund_details(self):
        default_date = datetime.today().date()
        pos_order = self.env['pos.order'].search([])
        total = 0
        today_refund_total = 0
        total_order_count = 0
        total_refund_count = 0
        today_sale = 0
        a = 0
        for rec in pos_order:
            if rec.amount_total < 0.0 and rec.date_order.date() == default_date:
                today_refund_total = today_refund_total + 1
            total_sales = rec.amount_total
            total = total + total_sales
            total_order_count = total_order_count + 1
            if rec.date_order.date() == default_date:
                today_sale = today_sale + 1
            if rec.amount_total < 0.0:
                total_refund_count = total_refund_count + 1
        magnitude = 0
        while abs(total) >= 1000:
            magnitude += 1
            total /= 1000.0
        # add more suffixes if you need them
        val = '%.2f%s' % (total, ['', 'K', 'M', 'G', 'T', 'P'][magnitude])
        pos_session = self.env['pos.session'].search([])
        total_session = 0
        for record in pos_session:
            total_session = total_session + 1
        return {
            'total_sale': val,
            'total_order_count': total_order_count,
            'total_refund_count': total_refund_count,
            'total_session': total_session,
            'today_refund_total': today_refund_total,
            'today_sale': today_sale,
        }

    @api.model
    def get_the_top_customer(self, ):
        company_id = self.env.company.id
        query = '''select res_partner.name as customer,pos_order.partner_id,sum(pos_order.amount_paid) as amount_total from pos_order 
        inner join res_partner on res_partner.id = pos_order.partner_id where pos_order.company_id = ''' + str(
            company_id) + ''' GROUP BY pos_order.partner_id,
        res_partner.name  ORDER BY amount_total  DESC LIMIT 10;'''
        self._cr.execute(query)
        docs = self._cr.dictfetchall()
        print(docs)

        order = []
        for record in docs:
            order.append(record.get('amount_total'))
        day = []
        for record in docs:
            day.append(record.get('customer'))
        final = [order, day]
        return final

    @api.model
    def get_the_top_products(self):
        company_id = self.env.company.id

        query = '''select DISTINCT(product_template.name) as product_name,sum(qty) as total_quantity from 
       pos_order_line inner join product_product on product_product.id=pos_order_line.product_id inner join 
       product_template on product_product.product_tmpl_id = product_template.id where pos_order_line.company_id = ''' + str(
            company_id) + ''' group by product_template.id ORDER 
       BY total_quantity DESC Limit 10 '''

        self._cr.execute(query)
        top_product = self._cr.dictfetchall()

        total_quantity = []
        for record in top_product:
            # if record.get('total_quantity') != 0:
            #     print(total_quantity.append(record.get('total_quantity')))
            total_quantity.append(record.get('total_quantity'))
        product_name = []
        for record in top_product:
            product_name.append(record.get('product_name'))
        final = [total_quantity, product_name]
        return final

    @api.model
    def get_the_top_categories(self):
        company_id = self.env.company.id
        query = '''select DISTINCT(product_category.complete_name) as product_category,sum(qty) as total_quantity 
        from pos_order_line inner join product_product on product_product.id=pos_order_line.product_id  inner join 
        product_template on product_product.product_tmpl_id = product_template.id inner join product_category on 
        product_category.id =product_template.categ_id where pos_order_line.company_id = ''' + str(
            company_id) + ''' group by product_category ORDER BY total_quantity DESC '''
        self._cr.execute(query)
        top_product = self._cr.dictfetchall()
        total_quantity = []
        for record in top_product:
            total_quantity.append(record.get('total_quantity'))
        product_categ = []
        for record in top_product:
            product_categ.append(record.get('product_category'))
        final = [total_quantity, product_categ]
        return final


===== .\dashboard_pos\models\__init__.py =====
# -*- coding: utf-8 -*-
###################################################################################
#
#    Cybrosys Technologies Pvt. Ltd.
#    Copyright (C) 2020-TODAY Cybrosys Technologies (<https://www.cybrosys.com>).
#    Author: Irfan (<https://www.cybrosys.com>)
#
#    This program is free software: you can modify
#    it under the terms of the GNU Affero General Public License (AGPL) as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
###################################################################################

from . import pos_dashboard


===== .\dashboard_pos\static\description\index.html =====
<div class="container" style="padding: 4rem 1.5rem !important">
    <div class="row" style="height: 900px !important;">
        <div class="col-sm-12 col-md-12 col-lg-12"
            style="padding: 4rem 1rem !important; background-color: #714B67 !important; height: 600px !important; border-radius: 20px !important;">
            <h1
                style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #FFFFFF !important;  font-size: 3.5rem !important; text-align: center !important;">
                POS Dashboard</h1>
            <p
                style="font-family: 'Montserrat', sans-serif !important; font-weight: 300 !important; color: #FFFFFF !important;  font-size: 1.4rem !important; text-align: center !important;">
                Detailed Dashboard View for POS
            </p>
            <img src="./assets/screenshots/hero.png" class="img-responsive" width="100%" height="auto" />
        </div>
    </div>

    <div class="row">
        <div class="col-md-12" style="border-bottom: 1px solid #d5d5d5 !important; margin-bottom: 2rem !important">
            <h2
                style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #714B67 !important; font-size: 1.5rem !important;">
                <i class="fa fa-compass mr-2"></i>Explore this module
            </h2>
        </div>
        <div class="col-md-6">
            <a href="#overview" style="text-decoration: none !important;">
                <div class="row"
                    style="background-color: #f5f2f5 !important; border-radius: 10px !important; margin: 1rem !important; padding: 1.5em !important; height: 100px !important;">
                    <div class="col-8">
                        <h3
                            style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #714B67 !important; font-size: 1.2rem !important;">
                            Overview</h3>
                        <p
                            style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #714B67 !important; font-size: 0.9rem !important;">
                            Learn more about this module</p>
                    </div>
                    <div class="col-4 text-right d-flex justify-content-end align-items-center">
                        <i class="fa fa-chevron-right" style="color: #714B67 !important;"></i>
                    </div>
                </div>
            </a>
        </div>

        <div class="col-md-6">
            <a href="#features" style="text-decoration: none !important;">
                <div class="row"
                    style="background-color: #f5f2f5 !important; border-radius: 10px !important; margin: 1rem !important; padding: 1.5em !important; height: 100px !important;">
                    <div class="col-8">
                        <h3
                            style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #714B67 !important; font-size: 1.2rem !important;">
                            Features</h3>
                        <p
                            style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #714B67 !important; font-size: 0.9rem !important;">
                            View features of this module</p>
                    </div>
                    <div class="col-4 text-right d-flex justify-content-end align-items-center">
                        <i class="fa fa-chevron-right" style="color: #714B67 !important;"></i>
                    </div>
                </div>
            </a>
        </div>
        <div class="col-md-6">
            <a href="#screenshots" style="text-decoration: none !important;">
                <div class="row"
                    style="background-color: #f5f2f5 !important; border-radius: 10px !important; margin: 1rem !important; padding: 1.5em !important; height: 100px !important;">
                    <div class="col-8">
                        <h3
                            style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #714B67 !important; font-size: 1.2rem !important;">
                            Screenshots</h3>
                        <p
                            style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #714B67 !important; font-size: 0.9rem !important;">
                            See key screenshots of this module</p>
                    </div>
                    <div class="col-4 text-right d-flex justify-content-end align-items-center">
                        <i class="fa fa-chevron-right" style="color: #714B67 !important;"></i>
                    </div>
                </div>
            </a>
        </div>

    </div>


    <div class="row" id="overview">
        <div class="col-md-12" style="border-bottom: 1px solid #d5d5d5 !important; margin: 2rem 0 !important">
            <h2
                style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #714B67 !important; font-size: 1.5rem !important;">
                <i class="fa fa-pie-chart mr-2"></i>Overview
            </h2>
        </div>

        <div class="col-mg-12 pl-3">
            <p
                style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #282F33 !important; font-size: 1rem !important; line-height: 30px !important;">
                This module helps you to see the Overview of POS, here You can see the total orders, sessions, top
                customers, top products etc.</p>

        </div>
    </div>

    <div class="row" id="features">
        <div class="col-md-12" style="border-bottom: 1px solid #d5d5d5 !important; margin: 2rem 0 !important">
            <h2
                style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #714B67 !important; font-size: 1.5rem !important;">
                <i class="fa fa-star mr-2"></i>Features
            </h2>
        </div>

        <div class="col-md-6 pl-3 py-3 d-flex">
            <div>
                <img src="assets/icons/check.png">
            </div>
            <div>
                <h4
                    style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
                    Total POS Orders</h4>
                <p
                    style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #282F33 !important; font-size: 1rem !important;">
                    View total POS order count.</p>
            </div>
        </div>

        <div class="col-md-6 pl-3 py-3 d-flex">
            <div>
                <img src="assets/icons/check.png">
            </div>
            <div>
                <h4
                    style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
                    Session Details</h4>
                <p
                    style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #282F33 !important; font-size: 1rem !important;">
                    See session details.</p>
            </div>
        </div>

        <div class="col-md-6 pl-3 py-3 d-flex">
            <div>
                <img src="assets/icons/check.png">
            </div>
            <div>
                <h4
                    style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
                    Refund Details</h4>
                <p
                    style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #282F33 !important; font-size: 1rem !important;">
                    View refund details.</p>
            </div>
        </div>

        <div class="col-md-6 pl-3 py-3 d-flex">
            <div>
                <img src="assets/icons/check.png">
            </div>
            <div>
                <h4
                    style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
                    Sale Details </h4>
                <p
                    style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #282F33 !important; font-size: 1rem !important;">
                    View sale details.</p>
            </div>
        </div>

        <div class="col-md-6 pl-3 py-3 d-flex">
            <div>
                <img src="assets/icons/check.png">
            </div>
            <div>
                <h4
                    style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
                    Sale Report Charts</h4>
                <p
                    style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #282F33 !important; font-size: 1rem !important;">
                    View Sale Report Charts.</p>
            </div>
        </div>

        <div class="col-md-6 pl-3 py-3 d-flex">
            <div>
                <img src="assets/icons/check.png">
            </div>
            <div>
                <h4
                    style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
                    Top Products</h4>
                <p
                    style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #282F33 !important; font-size: 1rem !important;">
                    View top products.</p>
            </div>
        </div>

    </div>

    <div class="row" id="screenshots">
        <div class="col-md-12" style="border-bottom: 1px solid #d5d5d5 !important; margin: 2rem 0 !important">
            <h2
                style="font-family: 'Montserrat', sans-serif !important; font-weight: 600 !important; color: #714B67 !important; font-size: 1.5rem !important;">
                <i class="fa fa-image mr-2"></i>Screenshots
            </h2>
        </div>

        <div class="col-lg-12 my-2">
            <h4 class="mt-2"
                style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
                Open POS</h4>
            <p
                style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #282F33 !important; font-size: 1rem !important;">
                After installation, open POS</p>

            <img src="assets/screenshots/screenshot1.png" class="img-responsive img-thumbnail border" width="100%"
                height="auto" />
        </div>

        <div class="col-lg-12 my-2">
            <h4 class="mt-2"
                style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
                Order and Session details.</h4>
            <p
                style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #282F33 !important; font-size: 1rem !important;">
                Order and Session counts are displayed in the dashboard.
            </p>

            <img src="assets/screenshots/screenshot2.png" class="img-responsive img-thumbnail border" width="100%"
                height="auto" />
        </div>


        <div class="col-lg-12 my-2">
            <h4 class="mt-2"
                style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
                Details in Charts</h4>
            <p
                style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #282F33 !important; font-size: 1rem !important;">
                Possible to see the POS details in different charts.</p>
            <img src="assets/screenshots/screenshot3.png" class="img-responsive img-thumbnail border" width="100%"
                height="auto" />
        </div>


        <div class="col-lg-12 my-2">
            <h4 class="mt-2"
                style="font-family: 'Roboto', sans-serif !important; font-weight: 600 !important; color: #282F33 !important; font-size: 1.3rem !important;">
                Bank, session &amp; salesperson details</h4>
            <p
                style="font-family: 'Roboto', sans-serif !important; font-weight: 400 !important; color: #282F33 !important; font-size: 1rem !important;">
                Details like bank, session status, salesperson details are listed.</p>
            <img src="assets/screenshots/screenshot4.png" class="img-responsive img-thumbnail border" width="100%"
                height="auto" />
        </div>

    </div>

    <!-- SUGGESTED PRODUCTS -->
    <div class="row">
        <div class="col-lg-12 d-flex flex-column justify-content-center"
            style="text-align: center; padding: 2.5rem 1rem !important;">
            <h2 style="color: #212529 !important;">Suggested Products</h2>
            <hr
                style="border: 3px solid #714B67 !important; background-color: #714B67 !important; width: 80px !important; margin-bottom: 2rem !important;" />

            <div id="demo1" class="row carousel slide" data-ride="carousel">
                <!-- The slideshow -->
                <div class="carousel-inner">
                    <div class="carousel-item active" style="min-height:0px">
                        <div class="col-xs-12 col-sm-4 col-md-4 mb16 mt16" style="float:left">
                            <a href="https://apps.odoo.com/apps/modules/15.0/sales_credit_limit/" target="_blank">
                                <div style="border-radius:10px">
                                    <img class="img img-responsive center-block"
                                        style="border-top-left-radius:10px; border-top-right-radius:10px"
                                        src="./assets/modules/1.png">
                                </div>
                            </a>
                        </div>
                        <div class="col-xs-12 col-sm-4 col-md-4 mb16 mt16" style="float:left">
                            <a href="https://apps.odoo.com/apps/modules/15.0/product_to_quotation/" target="_blank">
                                <div style="border-radius:10px">
                                    <img class="img img-responsive center-block"
                                        style="border-top-left-radius:10px; border-top-right-radius:10px"
                                        src="./assets/modules/2.png">
                                </div>
                            </a>
                        </div>
                        <div class="col-xs-12 col-sm-4 col-md-4 mb16 mt16" style="float:left">
                            <a href="https://apps.odoo.com/apps/modules/15.0/dynamic_accounts_report/" target="_blank">
                                <div style="border-radius:10px">
                                    <img class="img img-responsive center-block"
                                        style="border-top-left-radius:10px; border-top-right-radius:10px"
                                        src="./assets/modules/3.png">
                                </div>
                            </a>
                        </div>
                    </div>
                    <div class="carousel-item" style="min-height:0px">
                        <div class="col-xs-12 col-sm-4 col-md-4 mb16 mt16" style="float:left">
                            <a href="https://apps.odoo.com/apps/modules/15.0/hr_payroll_community/" target="_blank">
                                <div style="border-radius:10px">
                                    <img class="img img-responsive center-block"
                                        style="border-top-left-radius:10px; border-top-right-radius:10px"
                                        src="./assets/modules/4.png">
                                </div>
                            </a>
                        </div>
                        <div class="col-xs-12 col-sm-4 col-md-4 mb16 mt16" style="float:left">
                            <a href="https://apps.odoo.com/apps/modules/15.0/product_barcode/" target="_blank">
                                <div style="border-radius:10px">
                                    <img class="img img-responsive center-block"
                                        style="border-top-left-radius:10px; border-top-right-radius:10px"
                                        src="./assets/modules/5.png">
                                </div>
                            </a>
                        </div>
                        <div class="col-xs-12 col-sm-4 col-md-4 mb16 mt16" style="float:left">
                            <a href="https://apps.odoo.com/apps/modules/15.0/inventory_barcode_scanning/"
                                target="_blank">
                                <div style="border-radius:10px">
                                    <img class="img img-responsive center-block"
                                        style="border-top-left-radius:10px; border-top-right-radius:10px"
                                        src="./assets/modules/6.png">
                                </div>
                            </a>
                        </div>
                    </div>
                </div>
                <!-- Left and right controls -->
                <a class="carousel-control-prev" href="#demo1" data-slide="prev"
                    style="left:-25px;width: 35px;color: #000;"> <span class="carousel-control-prev-icon"><i
                            class="fa fa-chevron-left" style="font-size:24px"></i></span> </a> <a
                    class="carousel-control-next" href="#demo1" data-slide="next"
                    style="right:-25px;width: 35px;color: #000;">
                    <span class="carousel-control-next-icon"><i class="fa fa-chevron-right"
                            style="font-size:24px"></i></span>
                </a>
            </div>
        </div>
    </div>
    <!-- END OF SUGGESTED PRODUCTS -->

    <!-- OUR SERVICES -->
    <section class="container" style="margin-top: 6rem !important;">
        <div class="row">
            <div class="col-lg-12 d-flex flex-column justify-content-center align-items-center">
                <h2 style="color: #212529 !important;">Our Services</h2>
                <hr
                    style="border: 3px solid #714B67 !important; background-color: #714B67 !important; width: 80px !important; margin-bottom: 2rem !important;" />
            </div>

            <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
                <div class="d-flex justify-content-center align-items-center mx-3 my-3"
                    style="background-color: #1dd1a1 !important; border-radius: 15px !important; height: 80px; width: 80px;">
                    <img src="assets/icons/cogs.png" class="img-responsive" height="48px" width="48px">
                </div>
                <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
                    Odoo
                    Customization</h6>
            </div>

            <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
                <div class="d-flex justify-content-center align-items-center mx-3 my-3"
                    style="background-color: #ff6b6b !important; border-radius: 15px !important; height: 80px; width: 80px;">
                    <img src="assets/icons/wrench.png" class="img-responsive" height="48px" width="48px">
                </div>
                <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
                    Odoo
                    Implementation</h6>
            </div>

            <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
                <div class="d-flex justify-content-center align-items-center mx-3 my-3"
                    style="background-color: #6462CD !important; border-radius: 15px !important; height: 80px; width: 80px;">
                    <img src="assets/icons/lifebuoy.png" class="img-responsive" height="48px" width="48px">
                </div>
                <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
                    Odoo
                    Support</h6>
            </div>


            <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
                <div class="d-flex justify-content-center align-items-center mx-3 my-3"
                    style="background-color: #ffa801 !important; border-radius: 15px !important; height: 80px; width: 80px;">
                    <img src="assets/icons/user.png" class="img-responsive" height="48px" width="48px">
                </div>
                <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
                    Hire
                    Odoo
                    Developer</h6>
            </div>

            <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
                <div class="d-flex justify-content-center align-items-center mx-3 my-3"
                    style="background-color: #54a0ff  !important; border-radius: 15px !important; height: 80px; width: 80px;">
                    <img src="assets/icons/puzzle.png" class="img-responsive" height="48px" width="48px">
                </div>
                <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
                    Odoo
                    Integration</h6>
            </div>

            <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
                <div class="d-flex justify-content-center align-items-center mx-3 my-3"
                    style="background-color: #6d7680 !important; border-radius: 15px !important; height: 80px; width: 80px;">
                    <img src="assets/icons/update.png" class="img-responsive" height="48px" width="48px">
                </div>
                <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
                    Odoo
                    Migration</h6>
            </div>


            <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
                <div class="d-flex justify-content-center align-items-center mx-3 my-3"
                    style="background-color: #786fa6 !important; border-radius: 15px !important; height: 80px; width: 80px;">
                    <img src="assets/icons/consultation.png" class="img-responsive" height="48px" width="48px">
                </div>
                <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
                    Odoo
                    Consultancy</h6>
            </div>

            <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
                <div class="d-flex justify-content-center align-items-center mx-3 my-3"
                    style="background-color: #f8a5c2 !important; border-radius: 15px !important; height: 80px; width: 80px;">
                    <img src="assets/icons/training.png" class="img-responsive" height="48px" width="48px">
                </div>
                <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
                    Odoo
                    Implementation</h6>
            </div>

            <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center my-4">
                <div class="d-flex justify-content-center align-items-center mx-3 my-3"
                    style="background-color: #e6be26 !important; border-radius: 15px !important; height: 80px; width: 80px;">
                    <img src="assets/icons/license.png" class="img-responsive" height="48px" width="48px">
                </div>
                <h6 class="text-center" style="font-family: Montserrat, 'sans-serif' !important; font-weight: bold;">
                    Odoo
                    Licensing Consultancy</h6>
            </div>
        </div>
    </section>
    <!-- END OF END OF OUR SERVICES -->

    <!-- OUR INDUSTRIES -->
    <section class="container" style="margin-top: 6rem !important;">
        <div class="row">
            <div class="col-lg-12 d-flex flex-column justify-content-center align-items-center">
                <h2 style="color: #212529 !important;">Our Industries</h2>
                <hr
                    style="border: 3px solid #714B67 !important; background-color: #714B67 !important; width: 80px !important; margin-bottom: 2rem !important;" />
            </div>

            <div class="col-lg-3">
                <div class="my-4 d-flex flex-column justify-content-center"
                    style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
                    <img src="./assets/icons/trading-black.png" class="img-responsive mb-3" height="48px" width="48px">
                    <h5
                        style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
                        Trading
                    </h5>
                    <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
                        Easily procure
                        and
                        sell your products</p>
                </div>
            </div>

            <div class="col-lg-3">
                <div class="my-4 d-flex flex-column justify-content-center"
                    style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
                    <img src="./assets/icons/pos-black.png" class="img-responsive mb-3" height="48px" width="48px">
                    <h5
                        style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
                        POS
                    </h5>
                    <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
                        Easy
                        configuration
                        and convivial experience</p>
                </div>
            </div>

            <div class="col-lg-3">
                <div class="my-4 d-flex flex-column justify-content-center"
                    style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
                    <img src="./assets/icons/education-black.png" class="img-responsive mb-3" height="48px"
                        width="48px">
                    <h5
                        style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
                        Education
                    </h5>
                    <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
                        A platform for
                        educational management</p>
                </div>
            </div>

            <div class="col-lg-3">
                <div class="my-4 d-flex flex-column justify-content-center"
                    style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
                    <img src="./assets/icons/manufacturing-black.png" class="img-responsive mb-3" height="48px"
                        width="48px">
                    <h5
                        style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
                        Manufacturing
                    </h5>
                    <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
                        Plan, track and
                        schedule your operations</p>
                </div>
            </div>

            <div class="col-lg-3">
                <div class="my-4 d-flex flex-column justify-content-center"
                    style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
                    <img src="./assets/icons/ecom-black.png" class="img-responsive mb-3" height="48px" width="48px">
                    <h5
                        style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
                        E-commerce &amp; Website
                    </h5>
                    <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
                        Mobile
                        friendly,
                        awe-inspiring product pages</p>
                </div>
            </div>

            <div class="col-lg-3">
                <div class="my-4 d-flex flex-column justify-content-center"
                    style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
                    <img src="./assets/icons/service-black.png" class="img-responsive mb-3" height="48px" width="48px">
                    <h5
                        style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
                        Service Management
                    </h5>
                    <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
                        Keep track of
                        services and invoice</p>
                </div>
            </div>

            <div class="col-lg-3">
                <div class="my-4 d-flex flex-column justify-content-center"
                    style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
                    <img src="./assets/icons/restaurant-black.png" class="img-responsive mb-3" height="48px"
                        width="48px">
                    <h5
                        style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
                        Restaurant
                    </h5>
                    <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
                        Run your bar or
                        restaurant methodically</p>
                </div>
            </div>

            <div class="col-lg-3">
                <div class="my-4 d-flex flex-column justify-content-center"
                    style="background-color: #f6f8f9 !important; border-radius: 10px; padding: 2rem !important; height: 250px !important;">
                    <img src="./assets/icons/hotel-black.png" class="img-responsive mb-3" height="48px" width="48px">
                    <h5
                        style="font-family: Montserrat, sans-serif !important; color: #000 !important; font-weight: bold;">
                        Hotel Management
                    </h5>
                    <p style="font-family: Montserrat, sans-serif !important; font-size: 0.9rem !important;">
                        An
                        all-inclusive
                        hotel management application</p>
                </div>
            </div>

        </div>
    </section>

    <!-- END OF END OF OUR INDUSTRIES -->

    <!-- FOOTER -->
    <!-- Footer Section -->
    <section class="container" style="margin: 5rem auto 2rem;">
        <div class="row" style="max-width:1540px;">
            <div class="col-lg-12 d-flex flex-column justify-content-center align-items-center">
                <h2 style="color: #212529 !important;">Need Help?</h2>
                <hr
                    style="border: 3px solid #714B67 !important; background-color: #714B67 !important; width: 80px !important; margin-bottom: 2rem !important;" />
            </div>
        </div>

        <!-- Contact Cards -->
        <div class="row d-flex justify-content-center align-items-center"
            style="max-width:1540px; margin: 0 auto 2rem auto;">

            <div class="col-lg-12" style="padding: 0rem 3rem 2rem; border-radius: 10px; margin-right: 3rem; ">

                <div class="row mt-4">
                    <div class="col-lg-4">
                        <a href="mailto:odoo@cybrosys.com" target="_blank" class="btn btn-block mb-2 deep_hover"
                            style="text-decoration: none;  background-color: #4d4d4d; color: #FFF;  border-radius: 4px;"><i
                                class="fa fa-envelope mr-2"></i>odoo@cybrosys.com</a>
                    </div>
                    <div class="col-lg-4">
                        <a href="https://api.WhatsApp.com/send?phone=918606827707" target="_blank"
                            class="btn btn-block mb-2 deep_hover"
                            style="text-decoration: none;  background-color: #25D366; color: #FFF;  border-radius: 4px;"><i
                                class="fa fa-WhatsApp mr-2"></i>WhatsApp</a>
                    </div>
                    <div class="col-lg-4">
                        <a href="mailto:info@cybrosys.com" target="_blank" class="btn btn-block deep_hover"
                            style="text-decoration: none; background-color: #4d4d4d; color: #FFF;  border-radius: 4px;"><i
                                class="fa fa-envelope mr-2"></i>info@cybrosys.com</a>
                    </div>
                </div>
            </div>

        </div>
        <!-- End of Contact Cards -->
    </section>
    <!-- Footer -->
    <section class="oe_container" style="padding: 2rem 3rem 1rem;">
        <div class="row" style="max-width:1540px; margin: 0 auto; margin-right: 3rem; ">
            <!-- Logo -->
            <div class="col-lg-12 d-flex justify-content-center align-items-center" style="margin-top: 3rem;">
                <img src="https://www.cybrosys.com/images/logo.png" width="200px" height="auto" />
            </div>
            <!-- End of Logo -->
            <div class="col-lg-12">
                <hr
                    style="margin-top: 3rem;background: linear-gradient(90deg, rgba(2,0,36,0) 0%, rgba(229,229,229,1) 33%, rgba(229,229,229,1) 58%, rgba(0,212,255,0) 100%); height: 2px; border-style: none;">
                <!-- End of Footer Section -->
            </div>
        </div>
    </section>
    <!-- END OF FOOTER -->

</div>

===== .\dashboard_pos\static\src\css\pos_dashboard.css =====
.oh_dashboards{
    padding-top :15px;
    background-color: #f8faff !important;
}

.oh-card h4 {
    font-size: 1.1rem;
}
.breadcrumbs {
    margin-top: 0;
}

.buttons button {
  margin: 2px 0; }

/* Button Reset */
.btn, .button {
  display: inline-block;
  font-weight: 400;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  transition: all .15s ease-in-out;
  border-radius: 0;
  cursor: pointer; }


/*    Widget One
---------------------------*/
.stat-content {
    display: inline-block;
    width: 66%;
}
.stat-icon{
    display: inline-block;
}

.stat-widget-one .stat-icon {
    vertical-align: top;
    margin: auto;
    width: 100%;
    color: #01c490;
}

.stat-widget-one .stat-icon i {
  font-size: 30px;
  font-weight: 900;
  display: inline-block;
  color: #01c490;}

.stat-widget-one .stat-text {
    font-size: 14px;
    color: #868e96;
    font-weight: bold;
}

.stat-widget-one .stat-digit {
  font-size: 24px;
  color: #02448b; }

.stat-count {
  font-size: 20px;
  text-align: center;
  color: #00438b;}

.stat-title {
  font-size: 17px;
  text-align: center;
  color: #00438b; }

.mb-0{
    font-size: 20px;
    position: relative;
    text-align: center;
}
.mb-0 .dash-title {
    font-size: 20px;
    text-align: center;
    color: rgba(255, 255, 255, 0.81);
}
.hr_birthday {
    font-size: 28px;
    text-align: center;
    padding: 20px 0;
    color: #00438b;
    font-weight: 600;
}
body .text-color {
    color: #00438b;
}
.slice {
    stroke: #fff;
    stroke-width: 0px;
}

/* Leave graph */

path {  stroke: #fff; }
path:hover {  opacity:0.9; }
rect:hover {  fill:#934da5; }
.axis {  font: 10px sans-serif; }
.legend tr{    border-bottom:1px solid grey; }
.legend tr:first-child{    border-top:1px solid grey; }

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.x.axis path {  display: none; }
.legend{
    border-collapse: collapse;
    border-spacing: 0px;
    display: inline-block;
}
.legend td, .legend .legend_col{
    padding:4px 5px;
    vertical-align:bottom;
}
.legendFreq, .legendPerc{
    align:right;
    width:50px;
}

/* Leave broadfactor graph */

.broad_factor_graph .axis path,
.broad_factor_graph .axis line {
	fill: none;
	stroke: black;
	shape-rendering: crispEdges;
}
.broad_factor_graph .axis text {
	font-family: sans-serif;
	font-size: 11px;
}

.broad_factor_graph rect {
	-moz-transition: all 0.3s;
	-webkit-transition: all 0.3s;
	-o-transition: all 0.3s;
	transition: all 0.3s;
}
.broad_factor_graph rect:hover{
	fill: #ff618a;
}

#broad_factor_pdf {
    background-color: #ffffff;
    border: 0;
    color : #000000;
    float: right;
}
#broad_factor_pdf i {
    color: red;
}

.leave_broad_factor{
    overflow-x: auto !important;
    overflow-y: hidden !important;
    height: auto;
}

/*=====================New Dashboard===========================*/

.oh_dashboards {
    background-color: #f8faff !important;
    padding: 0px !important;

}
.container-fluid.o_pos_dashboard {
    padding: 0px !important;
}
.employee-prof {

    padding: 0px;
    height: 100%;
    background-color: #3e6282;
    /*background-image: linear-gradient(180deg, #3e6282, #41666f);*/
    position: fixed;
    z-index: 999;
}
.employee-prof .oh-card:hover {

    transform:none !important;
    box-shadow: none !important;

}

/*.dummy{
    height:130vh;
}*/
.oh-card {

    padding-top: 0px;
    padding: 0px;
    margin-bottom: 1.5rem;
    border-radius: 0px;
    box-shadow: none;
    background: none;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;

}
.oh-card:hover {

    transform: translateY(-2px) translateZ(0) !important;
    box-shadow: 0 10px 10px 0 rgba(62, 57, 107, 0.12), 0 0 0 transparent !important;

}
.employee-prof .employee-icon {

    float: left;
    padding-right: 0px;
    width: 100%;
    height: 185px;
    overflow: hidden;
    background: #fff;

}
.employee-prof .employee-icon img{
    width: 100%;
    background: #fff;
}

.employee-prof .employee-name h2 {

    text-align: center;
    font-weight: 300;
    text-transform: uppercase;
    font-size: 17px;
    margin-top: 12px;
    margin-bottom: 2px;
    color: #fff;

}
.media-body.employee-name {

    background: #466b8d;
    float: left;
    margin: 0;
    width: 100%

}
.employee-prof .employee-name p {

    margin: 0 0 9px;
    text-align: center;
    font-size: 12px;
    color: #f3f3f3;

}
.employee-prof p {
    margin: 0 0 9px;
    color: #fff;
}
.employee-gender {
    width: 40%;
    margin-left: 10%;
    padding: 8% 10% 4%;
    text-align: center;
    border-right: 1px solid #4d769b;
    margin-top: 14%;
    float: left;
    border-bottom: 1px solid #4d769b;
}
.employee-gender p {
    margin: 0px 0 4px !important;
    color: #fff;
}
.employee-age {
    width: 40%;
    margin-right: 10%;
    padding: 4% 10% 7%;
    text-align: center;
    margin-top: 18%;
    float: left;
    border-bottom: 1px solid #4d769b;
}
.employee-age p {
    margin: 0 0 1px;
    color: #fff;
}
.employee-experience {

    width: 100%;
    text-align: center;
    padding-top: 8%;
    float: left;
    padding-bottom: 3%;

}
.employee-country {
    width: 40%;
    margin-left: 10%;
    padding: 9% 0% 4%;
    text-align: center;
    border-right: 1px solid #4d769b;
    margin-top: 2%;
    float: left;
    border-top: 1px solid #4d769b;

}
.employee-country p {
    margin: 0px 0 1px !important;
    color: #fff;
}
.employee-mobile {
    width: 40%;
    margin-right: 10%;
    padding: 9% 0% 7%;
    text-align: center;
    margin-top: 2%;
    float: left;
    border-top: 1px solid #4d769b;
}
.employee-mobile p {
    margin: 0 0 1px;
    color: #fff;
}
.oh-payslip {

    margin-top: 4.5%;

}
.oh-payslip .stat-icon {

    width: 30%;
    height: 85px;
    text-align: center;
    background: #ff8762;
    color: #fff;
    width: 32%;
    padding-top: 2%;
    font-size: xxx-large;

}
.oh-payslip .oh-card {

    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);

}
.stat-widget-one .stat-text {

    font-size: 14px;
    color: #ff8762;
    margin-top: 2.3rem;
    margin-left: 1rem;

}
.stat-widget-one .stat-digit {
    font-size: 26px;
    color:#993232;
    margin-left: 1rem;
    margin-top: -1px;
    font-family: initial
}

.stat-widget-one .stat-icon i {

    font-size: 25px;
    font-weight: 900;
    display: inline-block;
    color: #fff;

}
.stat-widget-one {

    background-color: white;
    text-align: left;

}
.stat-widget-one {
    width: 100%;
}
.oh-payslip .stat-icon {

    width: 30%;
    height: 85px;
    text-align: center;
    padding-top: 2%;

}
.oh-timesheets .stat-icon{
    background: #5ebade !important;
}
.oh-contracts .stat-icon{
    background: #b298e1 !important;
}
.oh-broad-factor .stat-icon{
    background: #70cac1 !important;
}
.oh-timesheets .stat-widget-one .stat-text {
    color: #5ebade;
}
.oh-contracts .stat-widget-one .stat-text {
    color: #b298e1;
}
.oh-broad-factor .stat-widget-one .stat-text {
    color: #70cac1;
}
.leave-manager {

    background-color: #fff;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
    padding: 0px;
    margin: 15px;

}
.hr_leave_request_approve {
    padding: 0;
    padding-bottom: 0em;
    padding-top: 0em;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
}
.leaves_request_month {
    padding: 0;
        padding-top: 0px;
        padding-bottom: 0px;
    padding-bottom: 0em;
    padding-top: 0em;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    border-bottom: 1px solid #f1f1f133;
}
.leaves_request_today{
    padding: 0;
    padding-bottom: 0em;
    padding-top: 0em;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;

}
.hr_leave_request_approve:hover, .leaves_request_month:hover, .leaves_request_today:hover{
    transform: translateY(-2px) translateZ(0) !important;
    box-shadow: 0 10px 10px 0 rgba(62, 57, 107, 0.12), 0 0 0 transparent !important;
}
.hr_leave_request_approve p {
    font-size: 14px;
    color: #ff8762;
    margin-left: 1rem;
    margin-bottom: 0px;
    text-align: left;
    width: 64%;
    font-weight: bold;
    float: left;
}
.leaves_request_today p {
    font-size: 14px;
    color: #5ebade;
    margin-left: 1rem;
    margin-bottom: 0px;
    text-align: left;
    width:64%;
    float:left;
    font-weight: bold;
}
.leaves_request_month p{
    font-size: 14px;
    color: #b298e1;
    margin-left: 1rem;
    margin-bottom:0px;
    text-align: left;
    width:64%;
    float:left;
    font-weight: bold;
}
h4 .stat-count {
    font-size: 17px;
    text-align: center;
    color: #000 !important;
    margin-top: 0px;
    width: 100%;
    float: left;
    margin: 0;
}
.leave-manager h4 {
    float: left;
    width: 23%;

}
.hr_leave_request_approve h4 {

    padding: 5.2rem 0;
    margin: 0;
    background: #ff8762;
    color: #fff;

}
.leaves_request_today h4 {

    padding: 2.2rem 0;
    margin: 0 !important;
    background: #5ebade;
    color: #fff;

}
.leaves_request_month h4 {

    padding: 2.1rem 0;
    margin: 0 !important;
    background: #b298e1;
    color: #fff;

}
.leaves_request_today  h4 .stat-count ,.leaves_request_month h4 .stat-count , .hr_leave_request_approve h4 .stat-count
{
    color:#fff !important;
}
.graph_view .legend {
    margin-bottom: 27px;
    display: inline-block;
    border-collapse: collapse;
    border-spacing: 0px;
    margin-left: 29px;
}
.hr-chart-1{
    margin: 15px 0px;
    background: #fff;
    padding: 0px !important;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
}
.hr-chart-1:hover{
    transform: translateY(-2px) translateZ(0) !important;
    box-shadow: 0 10px 10px 0 rgba(62, 57, 107, 0.12), 0 0 0 transparent !important;
}
.stat-head {
    text-align: left !important;
    font-weight: 300;
    font-size: 15px;
    margin-bottom: 25px;
    margin-left: 24px;
    width: 100%;
}
.emp_graph {
    padding-left: 90px;
    height: auto;
    padding-bottom: 65px;
    text-align: center !important;
}
.hr_leave_allocations_approve p {
    font-size: 14px;
    color: #ff8762;
    margin-left: 1rem;
    margin-bottom: 0px;
    text-align: left;
    width: 70%;
    float: left;
    font-weight: bold;
}
.hr_leave_allocations_approve h4 {

    padding: 2.5rem 0;
    margin: 0;
    background: #ff8762;
    color: #fff;
    width: 26%;
    float: left;
}
.hr_leave_allocations_approve .stat-count {

    font-size: 17px;
    text-align: center;
    color: #fff !important;
    margin-top: 0px;
    width: 100%;
    float: left;
    margin: 0;

}
.hr_leave_allocations_approve {

    padding: 0;
    padding-top: 0px;
    padding-bottom: 0px;
    padding-bottom: 0em;
    padding-top: 0em;
    box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    background: #fff;
    height: 80px;

}
.hr_leave_allocations_approve:hover{
    transform: translateY(-2px) translateZ(0) !important;
    box-shadow: 0 10px 10px 0 rgba(62, 57, 107, 0.12), 0 0 0 transparent !important;
}
.leave-manager {

    background-color: #fff;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
    padding: 0px;
    margin: 15px;
        margin-right: 15px;
    margin-right: 0px;
    width: 95% !important;
    padding: 0;

}
.hr_job_application_approve {
    padding: 0;
        padding-top: 0px;
        padding-bottom: 0px;
    padding-top: 0px;
    padding-bottom: 0px;
    padding-top: 0px;
    padding-bottom: 0px;
    padding-bottom: 0em;
    padding-top: 0em;
    box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    background: #fff;
    margin-top: 15px;
    height: 80px;

}
.hr_job_application_approve p {
    font-size: 14px;
    color: #70cac1;
    margin-left: 1rem;
    margin-bottom: 0px;
    text-align: left;
    width: 70%;
    float: left;
    font-weight: bold;
}
.hr_job_application_approve h4 {

    padding: 2.5rem 0;
    margin: 0;
    background: #70cac1;
    color: #fff;
    width: 26%;
    float: left;

}
.hr_job_application_approve .stat-count {

    font-size: 17px !important;
    color: #fff !important;
    margin-top: 0px !important;
    width: 100%;
    float: left;
    margin: 0;
    margin: 0px !important;
    text-align: center !important;
    width: 100% !important;

}
.hr_job_application_approve:hover{
    transform: translateY(-2px) translateZ(0) !important;
    box-shadow: 0 10px 10px 0 rgba(62, 57, 107, 0.12), 0 0 0 transparent !important;
}
.hr_attendance_login .oh-card {
    margin: 0;
        margin-bottom: 0px;
    margin-bottom: 0px;
    background: #134c8a;
    padding-bottom: 7px;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
}
.hr_attendance_login .stat-widget-one {
    background: none;
}
.hr_attendance_login .stat-widget-one .stat-icon {
    text-align: center;
    padding-top: 9px;
}
.hr_attendance_login .stat-content {
    width: 100%;
    color: #fff !important;
}
.hr_attendance_login .stat-widget-one .stat-text {
    margin: 0;
    text-align: center;
    width: 100% !important;
    padding: 0;
    color: #fff;
}
.hr_attendance_login .stat-widget-one .stat-icon .fa {
    font-size: 50px;
}
.hr_attendance_login .stat-widget-one .stat-icon .fa {
    font-size: 50px;
    margin: 0px;
    box-shadow: none;
}
.hr_attendance_login {
    margin-top: 1.5%;
}
.monthly_leave_graph_view .oh-card {
    background: #fff;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
    padding: 15px;
}
.broad_factor_graph .oh-card {
    padding: 15px !important;
    background: #fff;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
    padding: 15px;
}
.leave_broad_factor {
    overflow-x: auto !important;
    overflow-y: hidden !important;
    height: 336px;
    padding: 0px;
        padding-left: 0px;
}
#broad_factor_pdf {

    background-color: #ffffff;
    float: right;
    border-radius: 30px;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
    border: 1px solid #4ec3b7;
    color: #757575;
    padding-top: 9px;
    color: #4ec3b7;

}
#broad_factor_pdf:hover{
    transform: translateY(-2px) translateZ(0) !important;
    box-shadow: 0 10px 10px 0 rgba(62, 57, 107, 0.12), 0 0 0 transparent !important;
}
.hr_birthday {
    font-size: 17px;
    text-align: center;
    padding: 20px 0;
    color: #00438b;
    font-weight: 300;
}
.hr_notification img {
    width: 40px;
    height: 40px;
    border-radius: 100%;
}
.hr_notification {
    background: #fff;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
    height: 316px;
    overflow-y: auto;
    margin-bottom: 15px;
}
.hr_notification .media {
    border-bottom: 1px solid #e6e6e6;
    padding-bottom: 6px;
    margin-bottom: 10px;
}
.hr_notification .text-color.display-6 {
    margin: 0px 0 3px;
    color: #2d2d2d;
}
.hr_notification p {
    margin: 0 0 1px;
    color: #666;
    font-size: 10px;
}
.hr_notification_head {
    font-size: 17px;
    text-align: center;
    padding: 12px 0;
    color: #fff;
    font-weight: 300;
    background: #de6a5e;
    margin-bottom: 9px;
}
.monthly_leave_trend .oh-card{
    background: #fff;
    transition: none !important;
    will-change: none !important;
    box-shadow: none !important;
    margin-bottom: 5px;
}

.monthly_leave_trend path {
    stroke: #70cac1;
    stroke-width: 2;
    fill: none;
}

.monthly_leave_trend .axis path,
.monthly_leave_trend .axis line {
    fill: none;
    stroke: grey;
    stroke-width: 1;
    shape-rendering: crispEdges;
}
.monthly_leave_trend circle{
    fill: #ffffff;
    stroke: #44b7ac;
    stroke-width: 1.5;
}
.hr-chart-1 {
    margin: 15px 0px;
    background: #fff;
    padding: 0px !important;
        padding-top: 0px;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
    padding-top: 3px !important;
}
.monthly_leave_trend {
    background: #fff;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
}
.monthly_leave_trend:hover{
    transform: translateY(-2px) translateZ(0) !important;
    box-shadow: 0 10px 10px 0 rgba(62, 57, 107, 0.12), 0 0 0 transparent !important;
}


/*----------------------*/
.monthly_join_resign_trend{
    padding-right: 0px !important;
}

.monthly_join_resign_trend .oh-card {
    background: #fff;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
    padding: 15px;
}

.monthly_join_resign_trend .axis path,
.monthly_join_resign_trend .axis line {
      fill: none;
      shape-rendering: crispEdges;
    }

.monthly_join_resign_trend .line {
      fill: none;
      stroke-width: 3px;

    }

.monthly_join_resign_trend .area {
      fill: steelblue;
      opacity: 0.5;
    }

.monthly_join_resign_trend .dot {
      fill: steelblue;
      stroke: steelblue;
      stroke-width: 1.5px;
    }

/*----------------------------------------*/


.monthly_attrition_rate path {
    stroke: #70cac1;
    stroke-width: 2;
    fill: none;
}

.monthly_attrition_rate .axis path,
.monthly_attrition_rate .axis line {
    fill: none;
    stroke: grey;
    stroke-width: 1;
    shape-rendering: crispEdges;
}
.monthly_attrition_rate circle{
    fill: #ffffff;
    stroke: #44b7ac;
    stroke-width: 1.5;
}

.monthly_attrition_rate .oh-card {
    background: #fff;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    will-change: transform, box-shadow;
    box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
    padding: 15px;
}

.monthly_attrition_rate .oh-card:hover{
    transform: translateY(-2px) translateZ(0) !important;
    box-shadow: 0 10px 10px 0 rgba(62, 57, 107, 0.12), 0 0 0 transparent !important;
}


.row.main-section {
    margin-right: 0px; !important;
}
/* width */
.hr_notification::-webkit-scrollbar {
  width: 4px;
}

/* Track */
.hr_notification::-webkit-scrollbar-track {
  background: #f1f1f1;
}

/* Handle */
.hr_notification::-webkit-scrollbar-thumb {
  background: #5ebade;
}

/* Handle on hover */
.hr_notification::-webkit-scrollbar-thumb:hover {
  background: #598da1;
}

.oh-card-body {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.oh-ribbon {
  position: absolute;
  left: -5px; top: -5px;
  z-index: 1;
  overflow: hidden;
  width: 150px; height: 150px;
  text-align: right;
}
.oh-ribbon span {
    font-size: 10px;
    font-weight: bold;
    color: #FFF;
    text-transform: uppercase;
    text-align: center;
    line-height: 20px;
    transform: rotate(-45deg);
    -webkit-transform: rotate(-45deg);
    width: 200px;
    display: block;
    background: #79A70A;
    background: linear-gradient(#2989d8 0%, #1e5799 100%);
    box-shadow: 0 3px 10px -5px rgba(0, 0, 0, 1);
    position: absolute;
    top: 56px;
    left: -35px;
}
.oh-ribbon span::before {
  content: "";
  position: absolute; left: 0px; top: 100%;
  z-index: -1;
  border-left: 3px solid #1e5799;
  border-right: 3px solid transparent;
  border-bottom: 3px solid transparent;
  border-top: 3px solid #1e5799;
}
.oh-ribbon span::after {
  content: "";
  position: absolute; right: 0px; top: 100%;
  z-index: -1;
  border-left: 3px solid transparent;
  border-right: 3px solid #1e5799;
  border-bottom: 3px solid transparent;
  border-top: 3px solid #1e5799;
}

.o_action_manager{
     overflow-y: scroll !important;
    max-width:100%;
 }

 .hr_notification {

    margin-top: 20px;
}

.stat_count{
    margin-top: -111px;
    margin-left: 35px;
    font-size: 48px;
}


.stat-head {
    text-align: left !important;
    font-weight: 300;
    font-size: 18px;
    margin-bottom: 25px;
    margin-left: 24px;
    width: 100%;
    margin-top: 57px;
}

===== .\dashboard_pos\static\src\js\pos_dashboard.js =====
odoo.define('dashboard_pos.Dashboard', function (require) {
"use strict";

var AbstractAction = require('web.AbstractAction');
var ajax = require('web.ajax');
var core = require('web.core');
var rpc = require('web.rpc');
var session = require('web.session');
var web_client = require('web.web_client');
var _t = core._t;
var QWeb = core.qweb;

var PosDashboard = AbstractAction.extend({
    template: 'PosDashboard',
    events: {
            'click .pos_order_today':'pos_order_today',
            'click .pos_order':'pos_order',
            'click .pos_total_sales':'pos_order',
            'click .pos_session':'pos_session',
            'click .pos_refund_orders':'pos_refund_orders',
            'click .pos_refund_today_orders':'pos_refund_today_orders',
            'change #pos_sales': 'onclick_pos_sales',
    },

    init: function(parent, context) {
        this._super(parent, context);
        this.dashboards_templates = ['PosOrders','PosChart','PosCustomer'];
        this.payment_details = [];
        this.top_salesperson = [];
        this.selling_product = [];
        this.total_sale = [];
        this.total_order_count = [];
        this.total_refund_count = [];
        this.total_session = [];
        this.today_refund_total = [];
        this.today_sale = [];
    },

    willStart: function() {
        var self = this;
        return $.when(ajax.loadLibs(this), this._super()).then(function() {
            return self.fetch_data();
        });
    },

    start: function() {
        var self = this;
        this.set("title", 'Dashboard');
        return this._super().then(function() {
            self.render_dashboards();
            self.render_graphs();
            self.$el.parent().addClass('oe_background_grey');
        });
    },

    fetch_data: function() {
        var self = this;
        var def1 =  this._rpc({
                model: 'pos.order',
                method: 'get_refund_details'
        }).then(function(result) {
           self.total_sale = result['total_sale'],
           self.total_order_count = result['total_order_count']
           self.total_refund_count = result['total_refund_count']
           self.total_session = result['total_session']
           self.today_refund_total = result['today_refund_total']
           self.today_sale = result['today_sale']
        });
      var def2 = self._rpc({
            model: "pos.order",
            method: "get_details",
        })
        .then(function (res) {
            self.payment_details = res['payment_details'];
            self.top_salesperson = res['salesperson'];
            self.selling_product = res['selling_product'];
        });
        return $.when(def1,def2);
    },

    render_dashboards: function() {
        var self = this;
            _.each(this.dashboards_templates, function(template) {
                self.$('.o_pos_dashboard').append(QWeb.render(template, {widget: self}));
            });
    },
      render_graphs: function(){
        var self = this;
         self.render_top_customer_graph();
         self.render_top_product_graph();
         self.render_product_category_graph();
    },
//      get_emp_image_url: function(employee){
//        return window.location.origin + '/web/image?model=pos.order&field=image&id='+employee;
//    },




       pos_order_today: function(e){
        var self = this;
        var date = new Date();
        var yesterday = new Date(date.getTime());
        yesterday.setDate(date.getDate() - 1);
        console.log(yesterday)
        e.stopPropagation();
        e.preventDefault();

        session.user_has_group('hr.group_hr_user').then(function(has_group){
            if(has_group){
                var options = {
                    on_reverse_breadcrumb: self.on_reverse_breadcrumb,
                };
                self.do_action({
                    name: _t("Today Order"),
                    type: 'ir.actions.act_window',
                    res_model: 'pos.order',
                    view_mode: 'tree,form,calendar',
                    view_type: 'form',
                    views: [[false, 'list'],[false, 'form']],
                    domain: [['date_order','<=', date],['date_order', '>=', yesterday]],
                    target: 'current'
                }, options)
            }
        });

    },


      pos_refund_orders: function(e){
        var self = this;
        var date = new Date();
//        alert(date,"date")
        var yesterday = new Date(date.getTime());
        yesterday.setDate(date.getDate() - 1);
        console.log(yesterday)
        e.stopPropagation();
        e.preventDefault();

        session.user_has_group('hr.group_hr_user').then(function(has_group){
            if(has_group){
                var options = {
                    on_reverse_breadcrumb: self.on_reverse_breadcrumb,
                };
                self.do_action({
                    name: _t("Refund Orders"),
                    type: 'ir.actions.act_window',
                    res_model: 'pos.order',
                    view_mode: 'tree,form,calendar',
                    view_type: 'form',
                    views: [[false, 'list'],[false, 'form']],
                    domain: [['amount_total', '<', 0.0]],

//                    domain: [['date_order', '=', date]],
                    target: 'current'
                }, options)
            }
        });

    },
    pos_refund_today_orders: function(e){
        var self = this;
        var date = new Date();
//        alert(date,"date")
        var yesterday = new Date(date.getTime());
        yesterday.setDate(date.getDate() - 1);
        console.log(yesterday)
        e.stopPropagation();
        e.preventDefault();

        session.user_has_group('hr.group_hr_user').then(function(has_group){
            if(has_group){
                var options = {
                    on_reverse_breadcrumb: self.on_reverse_breadcrumb,
                };
                self.do_action({
                    name: _t("Refund Orders"),
                    type: 'ir.actions.act_window',
                    res_model: 'pos.order',
                    view_mode: 'tree,form,calendar',
                    view_type: 'form',
                    views: [[false, 'list'],[false, 'form']],
                    domain: [['amount_total', '<', 0.0],['date_order','<=', date],['date_order', '>=', yesterday]],
//                    domain: [['date_order', '=', date]],
                    target: 'current'
                }, options)
            }
        });

    },

        pos_order: function(e){
        var self = this;
        var date = new Date();
        var yesterday = new Date(date.getTime());
        yesterday.setDate(date.getDate() - 1);
        console.log(yesterday)
        e.stopPropagation();
        e.preventDefault();
        session.user_has_group('hr.group_hr_user').then(function(has_group){
            if(has_group){
                var options = {
                    on_reverse_breadcrumb: self.on_reverse_breadcrumb,
                };
                self.do_action({
                    name: _t("Total Order"),
                    type: 'ir.actions.act_window',
                    res_model: 'pos.order',
                    view_mode: 'tree,form,calendar',
                    view_type: 'form',
                    views: [[false, 'list'],[false, 'form']],
//                    domain: [['amount_total', '<', 0.0]],
                    target: 'current'
                }, options)
            }
        });

    },
    pos_session: function(e){
        var self = this;
        e.stopPropagation();
        e.preventDefault();
        session.user_has_group('hr.group_hr_user').then(function(has_group){
            if(has_group){
                var options = {
                    on_reverse_breadcrumb: self.on_reverse_breadcrumb,
                };
                self.do_action({
                    name: _t("sessions"),
                    type: 'ir.actions.act_window',
                    res_model: 'pos.session',
                    view_mode: 'tree,form,calendar',
                    view_type: 'form',
                    views: [[false, 'list'],[false, 'form']],
//                     domain: [['state','=', In Progress]],
                    target: 'current'
                }, options)
            }
        });

    },

     onclick_pos_sales:function(events){
        var option = $(events.target).val();
        console.log('came monthly')
       var self = this
        var ctx = self.$("#canvas_1");
            rpc.query({
                model: "pos.order",
                method: "get_department",
                args: [option],
            }).then(function (arrays) {
            console.log(arrays)
          var data = {
            labels: arrays[1],
            datasets: [
              {
                label: arrays[2],
                data: arrays[0],
                backgroundColor: [
                  "rgba(255, 99, 132,1)",
                  "rgba(54, 162, 235,1)",
                  "rgba(75, 192, 192,1)",
                  "rgba(153, 102, 255,1)",
                  "rgba(10,20,30,1)"
                ],
                borderColor: [
                 "rgba(255, 99, 132, 0.2)",
                  "rgba(54, 162, 235, 0.2)",
                  "rgba(75, 192, 192, 0.2)",
                  "rgba(153, 102, 255, 0.2)",
                  "rgba(10,20,30,0.3)"
                ],
                borderWidth: 1
              },

            ]
          };

  //options
          var options = {
            responsive: true,
            title: {
              display: true,
              position: "top",
              text: "SALE DETAILS",
              fontSize: 18,
              fontColor: "#111"
            },
            legend: {
              display: true,
              position: "bottom",
              labels: {
                fontColor: "#333",
                fontSize: 16
              }
            },
            scales: {
              yAxes: [{
                ticks: {
                  min: 0
                }
              }]
            }
          };

          //create Chart class object
          if (window.myCharts != undefined)
          window.myCharts.destroy();
          window.myCharts = new Chart(ctx, {
//          var chart = new Chart(ctx, {
            type: "bar",
            data: data,
            options: options
          });

        });
        },


     render_top_customer_graph:function(){
       var self = this
        var ctx = self.$(".top_customer");
            rpc.query({
                model: "pos.order",
                method: "get_the_top_customer",
            }).then(function (arrays) {


          var data = {
            labels: arrays[1],
            datasets: [
              {
                label: "",
                data: arrays[0],
                backgroundColor: [
                  "rgb(148, 22, 227)",
                  "rgba(54, 162, 235)",
                  "rgba(75, 192, 192)",
                  "rgba(153, 102, 255)",
                  "rgba(10,20,30)"
                ],
                borderColor: [
                 "rgba(255, 99, 132,)",
                  "rgba(54, 162, 235,)",
                  "rgba(75, 192, 192,)",
                  "rgba(153, 102, 255,)",
                  "rgba(10,20,30,)"
                ],
                borderWidth: 1
              },

            ]
          };

  //options
          var options = {
            responsive: true,
            title: {
              display: true,
              position: "top",
              text: " Top Customer",
              fontSize: 18,
              fontColor: "#111"
            },
            legend: {
              display: true,
              position: "bottom",
              labels: {
                fontColor: "#333",
                fontSize: 16
              }
            },
            scales: {
              yAxes: [{
                ticks: {
                  min: 0
                }
              }]
            }
          };

          //create Chart class object
          var chart = new Chart(ctx, {
            type: "pie",
            data: data,
            options: options
          });

        });
        },

     render_top_product_graph:function(){
       var self = this
        var ctx = self.$(".top_selling_product");
            rpc.query({
                model: "pos.order",
                method: "get_the_top_products",
            }).then(function (arrays) {


          var data = {
            labels: arrays[1],
            datasets: [
              {
                label: "Quantity",
                data: arrays[0],
                backgroundColor: [
                  "rgba(255, 99, 132,1)",
                  "rgba(54, 162, 235,1)",
                  "rgba(75, 192, 192,1)",
                  "rgba(153, 102, 255,1)",
                  "rgba(10,20,30,1)"
                ],
                borderColor: [
                 "rgba(255, 99, 132, 0.2)",
                  "rgba(54, 162, 235, 0.2)",
                  "rgba(75, 192, 192, 0.2)",
                  "rgba(153, 102, 255, 0.2)",
                  "rgba(10,20,30,0.3)"
                ],
                borderWidth: 1
              },

            ]
          };

  //options
          var options = {
            responsive: true,
            title: {
              display: true,
              position: "top",
              text: " Top products",
              fontSize: 18,
              fontColor: "#111"
            },
            legend: {
              display: true,
              position: "bottom",
              labels: {
                fontColor: "#333",
                fontSize: 16
              }
            },
            scales: {
              yAxes: [{
                ticks: {
                  min: 0
                }
              }]
            }
          };

          //create Chart class object
          var chart = new Chart(ctx, {
            type: "horizontalBar",
            data: data,
            options: options
          });

        });
        },

     render_product_category_graph:function(){
           var self = this
        var ctx = self.$(".top_product_categories");
            rpc.query({
                model: "pos.order",
                method: "get_the_top_categories",
            }).then(function (arrays) {


          var data = {
            labels: arrays[1],
            datasets: [
              {
                label: "Quantity",
                data: arrays[0],
                backgroundColor: [
                  "rgba(255, 99, 132,1)",
                  "rgba(54, 162, 235,1)",
                  "rgba(75, 192, 192,1)",
                  "rgba(153, 102, 255,1)",
                  "rgba(10,20,30,1)"
                ],
                borderColor: [
                 "rgba(255, 99, 132, 0.2)",
                  "rgba(54, 162, 235, 0.2)",
                  "rgba(75, 192, 192, 0.2)",
                  "rgba(153, 102, 255, 0.2)",
                  "rgba(10,20,30,0.3)"
                ],
                borderWidth: 1
              },


            ]
          };

  //options
          var options = {
            responsive: true,
            title: {
              display: true,
              position: "top",
              text: " Top product categories",
              fontSize: 18,
              fontColor: "#111"
            },
            legend: {
              display: true,
              position: "bottom",
              labels: {
                fontColor: "#333",
                fontSize: 16
              }
            },
            scales: {
              yAxes: [{
                ticks: {
                  min: 0
                }
              }]
            }
          };

          //create Chart class object
          var chart = new Chart(ctx, {
            type: "horizontalBar",
            data: data,
            options: options
          });

        });
        },
});


core.action_registry.add('pos_dashboard', PosDashboard);

return PosDashboard;

});


===== .\dashboard_pos\static\src\xml\pos_dashboard.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">
    <t t-name="PosDashboard">
        <div class="oh_dashboards">
            <div class="container-fluid o_pos_dashboard">
            </div>
        </div>
    </t>
    <t t-name="PosOrders">
        <div class="row main-section">
            <div class="col-md-4 col-sm-6 pos_order_today oh-payslip">
                        <div class="oh-card" style="width: 288px;">
                            <div class="oh-card-body">
                                <div class="stat-widget-one">
<!--                                    <div class="stat-icon" style="background:#5bcbd0"><t t-esc="widget.today_sale"/></div>-->

                                    <div class="stat-icon" style="background:#5bcbd0"><i class="fa fa-shopping-bag"/></div>
                                    <div class="stat-content">
                                        <div class="stat-head">Today Orders</div>
                                        <div class="stat_count"><t t-esc="widget.today_sale"/></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
            <div class="col-md-4 col-sm-6 pos_order oh-payslip">
                                    <div class="oh-card" style="width: 288px;">
                                        <div class="oh-card-body">
                                            <div class="stat-widget-one">
<!--                                                <div class="stat-icon" style="background:#645bd0"><t t-esc="widget.total_order_count"/></div>-->
                                                <div class="stat-icon" style="background:#645bd0"><i class="fa fa-shopping-bag"/></div>
                                                <div class="stat-content">
                                                    <div class="stat-head">Total Orders</div>
                                                    <div class="stat_count"><t t-esc="widget.total_order_count"/></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
            <div class="col-md-4 col-sm-6 pos_total_sales oh-payslip">
                                    <div class="oh-card" style="width: 350px;">
                                        <div class="oh-card-body">
                                            <div class="stat-widget-one">
                                                <div class="stat-icon" style="background:#85d05b"><i class="fa fa-shopping-cart"/></div>
                                                <!--                                                <div class="stat-icon" style="width:150px;background:##85d05b"><t t-esc="widget.total_sale"/></div>-->
                                                <div class="stat-content">
                                                    <div class="stat-head">Total Sales</div>
                                                    <div class="stat_count"><t t-esc="widget.total_sale"/></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
            <div class="col-md-4 col-sm-6 pos_session oh-payslip">
                                            <div class="oh-card" style="width: 288px;">
                                                <div class="oh-card-body">
                                                    <div class="stat-widget-one">
                                                        <div class="stat-icon" style="background:#d05bb8"><i class="fa fa-signal"/></div>
                                                        <div class="stat-content">
                                                            <div class="stat-head">Sessions</div>
                                                            <div class="stat_count"><t t-esc="widget.total_session"/></div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                </div>

            <div class="col-md-4 col-sm-6 pos_refund_orders oh-payslip">
                                    <div class="oh-card" style="width: 288px;">
                                        <div class="oh-card-body">
                                            <div class="stat-widget-one">
                                                <div class="stat-icon" style="background:#d0c35b"><i class="fa fa-minus-circle"/></div>
                                                <div class="stat-content">
                                                    <div class="stat-head">Total Refund Orders</div>
                                                    <div class="stat_count"><t t-esc="widget.total_refund_count"/></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
            <div class="col-md-4 col-sm-6 pos_refund_today_orders oh-payslip">
                                    <div class="oh-card" style="width: 350px;">
                                        <div class="oh-card-body">
                                            <div class="stat-widget-one">
                                                <div class="stat-icon" style="background:#5b8ed0"><i class="fa fa-minus-circle"/></div>
                                                <div class="stat-content">
                                                    <div class="stat-head">Today Refund Order</div>
                                                    <div class="stat_count"><t t-esc="widget.today_refund_total"/></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

            </div>
        </t>
    <t t-name="PosChart">
        <div class="col-xs-12 col-sm-12 col-lg-12 col-md-12">
            <div class="row" style="margin:0px;">
                <div class="col-md-6" id="col-graph">
                    <div class="card">
                        <div class="card-header">
                            <div class="card-title">
                                <b>
                                    <h3 class="custom-h3">SALE REPORT</h3>
                                </b>
                            </div>
                            <div class="card-tools">
                            <select id="pos_sales">
<!--                                <option value="pos_hourly_sales">Select</option>-->
                                <option style="display:none;"> -- select an option -- </option>
                                <option value="pos_hourly_sales">Hourly</option>
                                <option value="pos_monthly_sales">Monthly</option>
                                <option value="pos_year_sales">Yearly</option>
                            </select>
                        </div>
                        </div>
                        <div class="card-body mt-3" id="in_ex_body_hide">
                             <div class="row">
                                <div class="col-md-12">
                                   <p id="myelement1"></p>
                                    <div class="chart">
                                      <canvas id="canvas_1" width="200" height="90"></canvas>
                                   </div>
                                </div>
                             </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6 col-lg-6  top_customer_graph_view">
                    <div class="oh-card text-color">
                        <div class="oh-card-body pb-0">
                            <h4 class="mb-0">
                            </h4>
                        </div>
                        <canvas class="top_customer" width="200" height="120"/>
                    </div>
                </div>
                <div class="col-sm-6 col-lg-6  selling_product_graph_view">
                    <div class="oh-card text-color">
                        <div class="oh-card-body pb-0">
                            <h4 class="mb-0">
                            </h4>
                        </div>
                        <canvas class="top_selling_product" width="200" height="120"/>
                    </div>
                </div>
                <div class="col-sm-6 col-lg-6  selling_product_graph_view">
                    <div class="oh-card text-color">
                        <div class="oh-card-body pb-0">
                            <h4 class="mb-0">
                            </h4>
                        </div>
                        <canvas class="top_product_categories" width="200" height="120"/>
                    </div>
                </div>
            </div>
        </div>

    </t>

    <t t-name="PosCustomer">
         <div class="employee_dashboard_main">
        <div class="row main-section">
            <div class="col-md-4 col-lg-4">
                <div class="hr_notification" style="background: #fff;transition: transform 0.2s ease, box-shadow 0.2s ease;will-change: transform, box-shadow;box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
                height: 316px;overflow-y: auto;margin-bottom: 15px;">
                    <div class="hr_notification_head"
                         style="font-size: 17px;text-align: center;padding: 12px 0;color: #fff;font-weight: 300;background: #de6a5e;margin-bottom: 9px;">
                   Sale by Salesperson
                    </div>
                    <div class="col-sm-12 col-lg-12" style="padding:0;">
                            <div class="text-color">
                                <div class="">
                                <div class="media">
                                <div class="media-body">
                                    <table class="table table-sm">
                                        <thead>
                                            <tr>
                                                <th rowspan="12">Name&#160;&#160;&#160;</th>
                                                <th rowspan="12">orders</th>
                                                <th rowspan="12">Amount</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                             <t t-foreach="widget.top_salesperson" t-as="salesperson">
                                                <tr>
                                                    <td>
                                                        <h2 class="text-color display-6" style="font-size: 15px;">
                                                            <t t-esc="salesperson[0]"/>
                                                        </h2>
                                                    </td>
                                                    <td>
                                                        <h2 class="text-color display-6" style="font-size: 15px;">
                                                            <t t-esc="salesperson[2]"/>
                                                        </h2>
                                                    </td>
                                                    <td>
                                                        <h2 class="text-color display-6" style="font-size: 15px;">
                                                            <t t-esc="salesperson[1]"/>
                                                        </h2>
                                                    </td>
                                                </tr>
                                            </t>
                                        </tbody>
                                    </table>
                                </div></div></div></div>
                            </div>
                    </div>
            </div>
            <div class="col-md-4 col-lg-4">
                    <div class="hr_notification" style="background: #fff;transition: transform 0.2s ease, box-shadow 0.2s ease;will-change: transform, box-shadow;box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
                    height: 316px;overflow-y: auto;margin-bottom: 15px;">
                        <div class="hr_notification_head"
                             style="font-size: 17px;text-align: center;padding: 12px 0;color: #fff;font-weight: 300;background:#de6a5e;;margin-bottom: 9px;">
                          Payment Method
                        </div>
                        <div class="col-sm-12 col-lg-12" style="padding:0;">
                                <div class="text-color">
                                    <div class="">
                                    <div class="media">
                                    <div class="media-body">
                                        <table class="table table-sm">
                                            <thead>
                                                <tr>
                                                    <th rowspan="12">Payment Method&#160;&#160;&#160;</th>
                                                    <th rowspan="12">Amount</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                 <t t-foreach="widget.payment_details" t-as="payment_method">
                                                    <tr>
                                                        <td>
                                                            <h2 class="text-color display-6" style="font-size: 15px;">
                                                                <t t-esc="payment_method[0]"/>
                                                            </h2>
                                                        </td>
                                                        <td>
                                                            <h2 class="text-color display-6" style="font-size: 15px;">
                                                                <t t-esc="payment_method[1]"/>
                                                            </h2>
                                                        </td>
                                                    </tr>
                                                </t>
                                            </tbody>
                                        </table>
                                    </div></div></div></div>
                                </div>
                    </div>
            </div>


            <div class="col-md-4 col-lg-4">
                <div class="hr_notification" style="background: #fff;transition: transform 0.2s ease, box-shadow 0.2s ease;will-change: transform, box-shadow;box-shadow: 0 10px 40px 0 rgba(62,57,107,0.07), 0 2px 9px 0 rgba(62,57,107,0.06);
                height: 316px;overflow-y: auto;margin-bottom: 15px;">
                    <div class="hr_notification_head"
                         style="font-size: 17px;text-align: center;padding: 12px 0;color: #fff;font-weight: 300;background: #de6a5e;margin-bottom: 9px;">
                 Session Status
                    </div>
                    <div class="col-sm-12 col-lg-12" style="padding:0;">
                            <div class="text-color">
                                <div class="">
                                <div class="media">
                                <div class="media-body">
                                    <table class="table table-sm">
                                        <thead>
                                            <tr>
                                                <th rowspan="12">Session&#160;&#160;&#160;</th>
                                                <th rowspan="12">Status</th>
                                                <!--                                                <th rowspan="12">Amount</th>-->
                                            </tr>
                                        </thead>
                                        <tbody>
                                             <t t-foreach="widget.selling_product" t-as="session">
                                                <tr>
                                                    <td>
                                                        <h2 class="text-color display-6" style="font-size: 15px;">
                                                            <t t-esc="session['session']"/>
                                                        </h2>
                                                    </td>
                                                    <td>
                                                        <h2 class="text-color display-6" style="font-size: 15px;">
                                                            <t t-esc="session['status']"/>
                                                        </h2>
                                                    </td>
                                                    <!--                                                    <td>-->
                                                    <!--                                                        <h2 class="text-color display-6" style="font-size: 15px;">-->
                                                    <!--                                                            <t t-esc="salesperson[1]"/>-->
                                                    <!--                                                        </h2>-->
                                                    <!--                                                    </td>-->
                                                </tr>
                                            </t>
                                        </tbody>
                                    </table>
                                </div></div></div></div>
                            </div>
                    </div>
            </div>

            </div>
         </div>


    </t>
</templates>


===== .\dashboard_pos\views\dashboard_views.xml =====
<odoo>
    <data>
        <record id="action_pos_dashboard" model="ir.actions.client">
            <field name="name">Dashboard</field>
            <field name="tag">pos_dashboard</field>
        </record>

        <menuitem name="Dashboard" id="pos_dashboard" parent="point_of_sale.menu_point_rep"
                  sequence="1"
                  groups="point_of_sale.group_pos_manager"
                  action="action_pos_dashboard"/>
    </data>

</odoo>


===== .\scripts\bk_script.sh =====

#!/bin/bash

# vars
now=$(date +"%Y_%m_%d_%H.%M")
bk_dir=/home/azbah/odoo/db_backup
db_name="AZBAH"
admin_pass=sam6
file_name=$db_name"_"$now".zip"

bk_path_and_file=${bk_dir}/$file_name


#read -p "Press [Enter] key to start backup..."

# create a backup
curl -X POST \
    -F "master_pwd=${admin_pass}" \
    -F "name=${db_name}" \
    -F "backup_format=zip" \
    -o ${bk_path_and_file} \
    http://127.0.0.1:8015/web/database/backup

rclone copy ${bk_path_and_file} gdrive:odoo15_bk

# delete old backups
#find ${bk_dir} -type f -mtime +7 -name "${db_name}.*.zip" -delete
#sudo find ${bk_dir} -type f -mtime +7 -name "${db_name}.*.zip" -delete 2>&1 | tee ./find_error.log
sudo find db_backup/ -name "AZB*" -type f -mtime +7 -delete 2>&1 | tee ./find_error.log


===== .\scripts\docker-compose.yml =====
version: '3.1'

networks:
  monitoring:
    driver: bridge

services:
  odoo15:
    image: odoo:15.0
    container_name: odoo15
    restart: always
    user: root
    depends_on:
      - db15
    ports:
      - "0.0.0.0:8015:8069"
      - "8075:8072"
    volumes:
      - odoo15:/var/lib/odoo
      - .:/etc/odoo
      - ../monitor/logs/odoo:/var/log/odoo
      - ../addons_azba/addons_ent:/mnt/addons_ent
      - ../addons_azba/ejad:/mnt/addons_ejad
      - ../addons_azba/misc:/mnt/misc
      - ../addons_azba/reporting:/mnt/addons_reporting
      - ../addons_azba/web_extra:/mnt/addons_web_extra
      - ../addons_azba/azba:/mnt/addons_azba
    environment:
      - HOST=db15
      - USER=odoo
      - PASSWORD=myodoo
      - POSTGRES_SUPERUSER=true
      - ODOO_HTTP_SOCKET_TIMEOUT=600
    networks:
      - monitoring

  db15:
    image: postgres:15.0
    container_name: db15
    restart: always
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=myodoo
      - POSTGRES_USER=odoo
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - db15:/var/lib/postgresql/data/pgdata
      - ./postgresql.conf:/var/lib/postgresql/data/pgdata/postgresql.conf
    ports:
      - "5432:5432"
    networks:
      - monitoring

  

volumes:
  odoo15:
  db15:
 


===== .\scripts\find_error.log =====
find: ‘db_backup/’: No such file or directory


===== .\scripts\index.html =====
<h1>Mooha1</h1>


===== .\scripts\log_rotate.sh =====
#!/bin/bash

# Define the log files to check
files=( "/home/azbah/odoo/monitor/logs/odoo/odoo.log" "/home/azbah/odoo/monitor/logs/postgresql/postgresql.log" )

# Define the size limit in MB
limit=100

# Define the sequence prefix
prefix="_0"

# Define the maximum number of files to keep
max_files=10


  for file in "${files[@]}"; do
    # Check the size of the file
    size=$(du -m "$file" | cut -f1)

    # If the size exceeds the limit, rotate the file
    if [ "$size" -gt "$limit" ]; then
      # Determine the next suffix
      suffix=$(ls "${file}${prefix}"* 2> /dev/null | awk -F "${prefix}" '{print $2}' | sort -nr | head -n 1)
      suffix=$((suffix + 1))

      # Rename the file and add the suffix
      new_file="${file}${prefix}${suffix}"
      mv "$file" "$new_file"

      # Compress the new file
      gzip "$new_file"

      # If the number of files exceeds the maximum, remove the last one
      num_files=$(ls "${file}${prefix}"* 2> /dev/null | wc -l)
      if [ "$num_files" -gt "$max_files" ]; then
        last_file=$(ls "${file}${prefix}"* 2> /dev/null | sort | head -n 1)
        rm "$last_file"
      fi
    fi
  done


===== .\scripts\odoo.conf =====
[options]

;workers = 17

limit_memory_hard = 15368706371
                    
limit_memory_soft = 14831835734
limit_request = 8192

limit_time_cpu = 1800
limit_time_real = 1800


admin_passwd=sam6
addons_path = /mnt/addons_ent,
		/mnt/addons_ejad,
		/mnt/misc,
		/mnt/addons_reporting,
		/mnt/addons_web_extra,
		/mnt/addons_azba
data_dir = /var/lib/odoo

proxy_mode = True

; Logging
log_handler = odoo.http:DEBUG,odoo.addons:DEBUG,odoo.modules:DEBUG,werkzeug:DEBUG,odoo:DEBUG
# logfile=/var/log/odoo/odoo.log

===== .\scripts\odoo.conf.before.chakanaya =====
[options]

workers = 20
limit_memory_hard = 123211874304
limit_memory_soft = 102676561920
limit_request = 81920

; Timeout for worker processes
timeout = 3600

limit_time_cpu = 600
limit_time_real = 1200
max_cron_threads = 2

db_maxconn=200
dbfilter = (?!.*_perf$)

admin_passwd=sam6
addons_path = /mnt/addons_ent,
		/mnt/addons_ejad,
		/mnt/misc,
		/mnt/addons_reporting,
		/mnt/addons_web_extra,
		/mnt/addons_azba
data_dir = /var/lib/odoo


proxy_mode = True
log_handler = odoo.http:DEBUG,werkzeug:DEBUG




===== .\scripts\postgresql.conf =====
# Generated by PGConfig 3.1.0 (1d600ea0d1d79f13dd7ed686f9e2befc1fcf9226)
# https://api.pgconfig.org/v1/tuning/get-config?format=conf&include_pgbadger=true&log_format=csvlog&max_connections=200&pg_version=15&environment_name=WEB&total_ram=16GB&cpus=8&drive_type=SSD&arch=x86-64&os_type=linux

# Memory Configuration
#shared_buffers = 4GB
#effective_cache_size = 12GB
#work_mem = 20MB
#maintenance_work_mem = 819MB

# Checkpoint Related Configuration
#min_wal_size = 2GB
#max_wal_size = 3GB
#checkpoint_completion_target = 0.9
#wal_buffers = -1

# Network Related Configuration
listen_addresses = '*'
#max_connections = 200

# Storage Configuration
random_page_cost = 1.1
effective_io_concurrency = 200

# Worker Processes Configuration
#max_worker_processes = 8
#max_parallel_workers_per_gather = 2
#max_parallel_workers = 2

# Logging configuration for pgbadger
logging_collector = on
log_checkpoints = on
log_connections = on
log_disconnections = on
log_lock_waits = on
log_temp_files = 0
lc_messages = 'C'

# Adjust the minimum time to collect the data
log_min_duration_statement = '10s'
log_autovacuum_min_duration = 0

# CSV Configuration
log_destination = 'csvlog'



===== .\scripts\postgresql.old =====
# Generated by PGConfig 3.1.0 (1d600ea0d1d79f13dd7ed686f9e2befc1fcf9226)
# https://api.pgconfig.org/v1/tuning/get-config?format=conf&include_pgbadger=true&log_format=csvlog&max_connections=200&pg_version=15&environment_name=WEB&total_ram=16GB&cpus=8&drive_type=SSD&arch=x86-64&os_type=linux

# Memory Configuration
shared_buffers = 4GB
effective_cache_size = 12GB
work_mem = 20MB
maintenance_work_mem = 819MB

# Checkpoint Related Configuration
min_wal_size = 2GB
max_wal_size = 3GB
checkpoint_completion_target = 0.9
wal_buffers = -1

# Network Related Configuration
listen_addresses = '*'
max_connections = 200

# Storage Configuration
random_page_cost = 1.1
effective_io_concurrency = 200

# Worker Processes Configuration
max_worker_processes = 8
max_parallel_workers_per_gather = 2
max_parallel_workers = 2

# Logging configuration for pgbadger
logging_collector = on
log_checkpoints = on
log_connections = on
log_disconnections = on
log_lock_waits = on
log_temp_files = 0
lc_messages = 'C'

# Adjust the minimum time to collect the data
log_min_duration_statement = '10s'
log_autovacuum_min_duration = 0

# CSV Configuration
log_destination = 'csvlog'



===== .\scripts\staging_azbah3.sh =====
#!/bin/bash

# Set the admin password
admin_pass=sam6

# Set the name of the database to be backed up
db_name=azbah3

# Set the path and file name for the backup file
bk_path_and_file=/home/azbah/staging/bk/${db_name}.zip
echo "Starting Backup ... "
# Backup the database from the live server
curl -X POST \
    -F "master_pwd=${admin_pass}" \
    -F "name=${db_name}" \
    -F "backup_format=zip" \
    -o ${bk_path_and_file} \
    http://127.0.0.1:8015/web/database/backup

echo "Starting Restore ... "
# Restore the backed up database to the staging server
curl -X POST -F "master_pwd=${admin_pass}" -F "backup_file=@./azbah3.zip" -F "name=azbah3" -F "copy=true" http://127.0.0.1:8055/web/database/restore


===== .\scripts\staging_bk.sh =====
#!/bin/bash

# Set the admin password
admin_pass=sam6

# Set the name of the database to be backed up
db_name=AZBAH

# Set the path and file name for the backup file
bk_path_and_file=/home/azbah/staging/bk/${db_name}.zip
echo "Starting Backup ... "
# Backup the database from the live server
curl -X POST \
    -F "master_pwd=${admin_pass}" \
    -F "name=${db_name}" \
    -F "backup_format=zip" \
    -o ${bk_path_and_file} \
    http://127.0.0.1:8099/web/database/backup

echo "Starting Restore ... "
# Restore the backed up database to the staging server
#curl -X POST -F "master_pwd=${admin_pass}" -F "backup_file=@./AZBAH.zip" -F "name=AZBAH" -F "copy=true" http://127.0.0.1:8055/web/database/restore


===== .\scripts\CI_CD\flow_01.py =====
import os
import time
import json
from git import Repo
from datetime import datetime
# from docker import DockerClient

# Initialize Docker client
# client = DockerClient.from_env()

# Define the path to your repository
repo_path = r'd:\odoo_15\odoo\addons_azba'

# Initialize the repository
repo = Repo(repo_path)

# Define the paths for production and staging
paths = {
    'production': 'odoo/addons_azba/',
    'staging': 'beta/addons_azba/'
}

# Define the docker-compose paths for production and staging
docker_compose_paths = {
    'production': 'odoo/scripts',
    'staging': 'beta'
}

while True:
    # Check for new commits every 30 seconds
    time.sleep(3)
    repo.remotes.origin.fetch()

    # Check if there are new commits
    if repo.head.commit.hexsha != repo.remotes.origin.refs.master.commit.hexsha:
        print ('New commits detected ...')
        input("Please enter to continue ...")
        # Read the .update file
        with open('~/odoo/addons_azba/.update', 'r') as file:
            data = json.load(file)

        # Get the current date/time stamp
        timestamp = datetime.now().strftime('%Y%m%d%H%M%S')

        print (f"""Will create a new branch for {data["target"]} with name {'master_' + {timestamp}} ...""")
        input("Please enter to continue ...")

        # Create a new branch without checking it out
        new_branch = repo.create_head('master_' + timestamp, 'origin/master')

        print(f"""Will Pull the changes into {paths[data['target']]} ...""")
        input("Please enter to continue ...")

        # Pull the changes in the selected target
        os.chdir(paths[data['target']])
        os.system('git pull')



        # Update the docker-compose file
        print(f"""Will Update the docker-compose file {paths[data['target']]} ...""")
        print(f"odoo -d {data['target']} -u {','.join(data['addons'])}")
        input("Please enter to continue ...")

        with open('docker-compose.yml', 'r') as file:
            docker_compose = yaml.safe_load(file)

        docker_compose['services']['odoo']['command'] = f"odoo -d {data['target']} -u {','.join(data['addons'])}"

        with open('docker-compose.yml', 'w') as file:
            yaml.dump(docker_compose, file)

        # Restart the selected installations
        os.chdir(docker_compose_paths[data['target']])
        os.system('docker-compose restart')


===== .\stock_card_report\README.rst =====
=================
Stock Card Report
=================

.. 
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! This file is generated by oca-gen-addon-readme !!
   !! changes will be overwritten.                   !!
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! source digest: sha256:99a8eb509031fd2e19d4ee059dab367e0f3f905238babb8ce9ce7105c43c1836
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png
    :target: https://odoo-community.org/page/development-status
    :alt: Beta
.. |badge2| image:: https://img.shields.io/badge/licence-AGPL--3-blue.png
    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html
    :alt: License: AGPL-3
.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Fstock--logistics--reporting-lightgray.png?logo=github
    :target: https://github.com/OCA/stock-logistics-reporting/tree/15.0/stock_card_report
    :alt: OCA/stock-logistics-reporting
.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png
    :target: https://translation.odoo-community.org/projects/stock-logistics-reporting-15-0/stock-logistics-reporting-15-0-stock_card_report
    :alt: Translate me on Weblate
.. |badge5| image:: https://img.shields.io/badge/runboat-Try%20me-875A7B.png
    :target: https://runboat.odoo-community.org/builds?repo=OCA/stock-logistics-reporting&target_branch=15.0
    :alt: Try me on Runboat

|badge1| |badge2| |badge3| |badge4| |badge5|

Stock Card Report is the report that display movement (in/out) of a product in a specified location and date range.

**Table of contents**

.. contents::
   :local:

Usage
=====

To use this module, you need to:

#. Go to Inventory > Reporting > Stock Card.
#. Select Start date, End date, Products, Location.
#. Choose View or Export PDF or Export XLSX or Cancel.

Bug Tracker
===========

Bugs are tracked on `GitHub Issues <https://github.com/OCA/stock-logistics-reporting/issues>`_.
In case of trouble, please check there if your issue has already been reported.
If you spotted it first, help us to smash it by providing a detailed and welcomed
`feedback <https://github.com/OCA/stock-logistics-reporting/issues/new?body=module:%20stock_card_report%0Aversion:%2015.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.

Do not contact contributors directly about support or help with technical issues.

Credits
=======

Authors
~~~~~~~

* Ecosoft

Contributors
~~~~~~~~~~~~

* Pimolnat Suntian <pimolnats@ecosoft.co.th>
* Prapassorn Sornkaew <prapassorn.s@prothaitechnology.com>
* Emad Shaaban <emad.shaaban92@gmail.com>

Maintainers
~~~~~~~~~~~

This module is maintained by the OCA.

.. image:: https://odoo-community.org/logo.png
   :alt: Odoo Community Association
   :target: https://odoo-community.org

OCA, or the Odoo Community Association, is a nonprofit organization whose
mission is to support the collaborative development of Odoo features and
promote its widespread use.

This module is part of the `OCA/stock-logistics-reporting <https://github.com/OCA/stock-logistics-reporting/tree/15.0/stock_card_report>`_ project on GitHub.

You are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.


===== .\stock_card_report\__init__.py =====
# Copyright 2019 Ecosoft Co., Ltd. (http://ecosoft.co.th)
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl).

from . import wizard
from . import reports


===== .\stock_card_report\__manifest__.py =====
# Copyright 2019 Ecosoft Co., Ltd. (http://ecosoft.co.th)
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl).

{
    "name": "Stock Card Report",
    "summary": "Add stock card report on Inventory Reporting.",
    "version": "15.0.1.0.0",
    "category": "Warehouse",
    "website": "https://github.com/OCA/stock-logistics-reporting",
    "author": "Ecosoft, Odoo Community Association (OCA)",
    "license": "AGPL-3",
    "depends": ["stock", "date_range", "report_xlsx_helper"],
    "data": [
        "security/ir.model.access.csv",
        "data/paper_format.xml",
        "data/report_data.xml",
        "reports/stock_card_report.xml",
        "wizard/stock_card_report_wizard_view.xml",
    ],
    "assets": {
        "web.assets_backend": [
            "stock_card_report/static/src/css/**/*",
            "stock_card_report/static/src/js/**/*",
        ]
    },
    "installable": True,
}


===== .\stock_card_report\data\paper_format.xml =====
<odoo>

    <record id="paperformat_stock_card" model="report.paperformat">
        <field name="name">Stock Card A4</field>
        <field name="default" eval="True" />
        <field name="format">A4</field>
        <field name="page_height">0</field>
        <field name="page_width">0</field>
        <field name="orientation">Portrait</field>
        <field name="margin_top">28</field>
        <field name="margin_bottom">28</field>
        <field name="margin_left">7</field>
        <field name="margin_right">7</field>
        <field name="header_line" eval="False" />
        <field name="header_spacing">24</field>
        <field name="dpi">90</field>
    </record>

</odoo>


===== .\stock_card_report\data\report_data.xml =====
<?xml version="1.0" encoding="utf-8" ?>
<odoo>

    <record id="action_report_stock_card_report_html" model="ir.actions.client">
        <field name="name">Stock Card Report</field>
        <field name="tag">stock_card_report_backend</field>
        <field name="context" eval="{'active_model': 'report.stock.card.report'}" />
    </record>

    <record id="action_stock_card_report_pdf" model="ir.actions.report">
        <field name="name">Stock Card PDF</field>
        <field name="model">report.stock.card.report</field>
        <field name="report_type">qweb-pdf</field>
        <field name="report_name">stock_card_report.report_stock_card_report_pdf</field>
        <field name="report_file">stock_card_report.report_stock_card_report_pdf</field>
        <field
            name="print_report_name"
        >'Stock Card Report - [%s]' % (object.location_id.complete_name)</field>
        <field name="paperformat_id" ref="stock_card_report.paperformat_stock_card" />
    </record>

    <record id="action_stock_card_report_xlsx" model="ir.actions.report">
        <field name="name">Stock Card XLSX</field>
        <field name="model">report.stock.card.report</field>
        <field name="report_type">xlsx</field>
        <field
            name="report_name"
        >stock_card_report.report_stock_card_report_xlsx</field>
        <field name="report_file">Stock Card Report</field>
    </record>

</odoo>


===== .\stock_card_report\i18n\es.po =====
# Translation of Odoo Server.
# This file contains the translation of the following modules:
# 	* stock_card_report
#
msgid ""
msgstr ""
"Project-Id-Version: Odoo Server 13.0\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: 2023-10-28 16:00+0000\n"
"Last-Translator: Ivorra78 <informatica@totmaterial.es>\n"
"Language-Team: none\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: \n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 4.17\n"

#. module: stock_card_report
#: model:ir.actions.report,print_report_name:stock_card_report.action_stock_card_report_pdf
msgid "'Stock Card Report - [%s]' % (object.location_id.complete_name)"
msgstr "'Stock Card Report - [%s]' % (object.location_id.complete_name)"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_buttons
msgid "<span class=\"fa fa-download\"/>Export"
msgstr "<span class=\"fa fa-download\"/>Exportar"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_buttons
msgid "<span class=\"fa fa-print\"/>Print"
msgstr "<span class=\"fa fa-print\"/>Imprimir"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.internal_layout
msgid "<span class=\"page\"/>/<span class=\"topage\"/>"
msgstr "<span class=\"page\"/>/<span class=\"topage\"/>"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_lines_header
msgid "Balance"
msgstr "Saldo"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.stock_card_report_wizard_form
msgid "Cancel"
msgstr "Cancelar"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__create_uid
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__create_uid
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__create_uid
msgid "Created by"
msgstr "Creado por"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__create_date
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__create_date
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__create_date
msgid "Created on"
msgstr "Creado el"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__date
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_lines_header
msgid "Date"
msgstr "Fecha"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__date_from
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_report_filters
msgid "Date From"
msgstr "Fecha Desde"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__date_to
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_report_filters
msgid "Date To"
msgstr "Fecha Hasta"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__display_name
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__display_name
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__display_name
msgid "Display Name"
msgstr "Mostrar Nombre"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__date_to
msgid "End Date"
msgstr "Fecha Fin"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.stock_card_report_wizard_form
msgid "Export PDF"
msgstr "Exportar a PDF"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.stock_card_report_wizard_form
msgid "Export XLSX"
msgstr "Exportar XLSX"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__id
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__id
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__id
msgid "ID"
msgstr "ID (identificación)"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_lines_header
msgid "In"
msgstr "En"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_report_base
msgid "Initial"
msgstr "Inicial"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__is_initial
msgid "Is Initial"
msgstr "Es Inicial"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report____last_update
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard____last_update
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view____last_update
msgid "Last Modified on"
msgstr "Última Modifiación el"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__write_uid
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__write_uid
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__write_uid
msgid "Last Updated by"
msgstr "Actualizado por Última vez por"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__write_date
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__write_date
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__write_date
msgid "Last Updated on"
msgstr "Ultima Actualización el"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__location_id
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__location_id
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__location_id
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_report_filters
msgid "Location"
msgstr "Localización"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__location_dest_id
msgid "Location Dest"
msgstr "Ubicación Destino"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_lines_header
msgid "Out"
msgstr "Fuera"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__date_range_id
msgid "Period"
msgstr "Periodo"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__picking_id
msgid "Picking"
msgstr "Recogida"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__product_ids
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_id
msgid "Product"
msgstr "Producto"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_in
msgid "Product In"
msgstr "Producto En"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_out
msgid "Product Out"
msgstr "Producto Fuera"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_qty
msgid "Product Qty"
msgstr "Cantd de Producto"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_uom
msgid "Product Uom"
msgstr "Udm del Producto"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_uom_qty
msgid "Product Uom Qty"
msgstr "Producto Uom Ctd"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__product_ids
msgid "Products"
msgstr "Productos"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__reference
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_lines_header
msgid "Reference"
msgstr "Referencia"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__results
msgid "Results"
msgstr "Resultados"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__date_from
msgid "Start Date"
msgstr "fecha de Inicio"

#. module: stock_card_report
#: model:ir.actions.act_window,name:stock_card_report.stock_card_report_action
#: model:ir.ui.menu,name:stock_card_report.stock_card_report_menu
msgid "Stock Card"
msgstr "Tarjeta de Inventario"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_report_base
msgid "Stock Card -"
msgstr "Tarjeta de Inventario -"

#. module: stock_card_report
#: model:ir.actions.report,name:stock_card_report.action_stock_card_report_pdf
msgid "Stock Card PDF"
msgstr "PDF Tarjeta de Inventario"

#. module: stock_card_report
#: model:ir.actions.client,name:stock_card_report.action_report_stock_card_report_html
#: model:ir.model,name:stock_card_report.model_report_stock_card_report
msgid "Stock Card Report"
msgstr "Informe de la Tarjeta de Inventario"

#. module: stock_card_report
#: model:ir.model,name:stock_card_report.model_stock_card_report_wizard
msgid "Stock Card Report Wizard"
msgstr "Asistente de Informe de Tarjeta de Inventario"

#. module: stock_card_report
#: model:ir.model,name:stock_card_report.model_report_stock_card_report_report_stock_card_report_xlsx
msgid "Stock Card Report XLSX"
msgstr "Informe de la Tarjeta de Inventario XLSX"

#. module: stock_card_report
#: model:ir.model,name:stock_card_report.model_stock_card_view
msgid "Stock Card View"
msgstr "Vista de la Tarjeta de Inventario"

#. module: stock_card_report
#: model:ir.actions.report,name:stock_card_report.action_stock_card_report_xlsx
msgid "Stock Card XLSX"
msgstr "Tarjeta de Inventario XLSX"

#. module: stock_card_report
#: model:ir.model.fields,help:stock_card_report.field_report_stock_card_report__results
msgid "Use compute fields, so there is nothing store in database"
msgstr ""
"Utilizar campos de cálculo, por lo que no se almacena nada en la base de "
"datos"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.stock_card_report_wizard_form
msgid "View"
msgstr "Vista"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.stock_card_report_wizard_form
msgid "or"
msgstr "o"


===== .\stock_card_report\i18n\es_EC.po =====
# Translation of Odoo Server.
# This file contains the translation of the following modules:
# 	* stock_card_report
#
msgid ""
msgstr ""
"Project-Id-Version: Odoo Server 13.0\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: 2020-09-29 16:03+0000\n"
"Last-Translator: johnnypiguave <jpiguave@spearhead.global>\n"
"Language-Team: none\n"
"Language: es_EC\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: \n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 3.10\n"

#. module: stock_card_report
#: model:ir.actions.report,print_report_name:stock_card_report.action_stock_card_report_pdf
msgid "'Stock Card Report - [%s]' % (object.location_id.complete_name)"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_buttons
msgid "<span class=\"fa fa-download\"/>Export"
msgstr "Exportar"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_buttons
msgid "<span class=\"fa fa-print\"/>Print"
msgstr "Imprimir"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.internal_layout
msgid "<span class=\"page\"/>/<span class=\"topage\"/>"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_lines_header
msgid "Balance"
msgstr "Saldo"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.stock_card_report_wizard_form
msgid "Cancel"
msgstr "Cancelar"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__create_uid
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__create_uid
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__create_uid
msgid "Created by"
msgstr "Creado por"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__create_date
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__create_date
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__create_date
msgid "Created on"
msgstr "Creado el"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__date
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_lines_header
msgid "Date"
msgstr "Fecha"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__date_from
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_report_filters
msgid "Date From"
msgstr "Fecha desde"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__date_to
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_report_filters
msgid "Date To"
msgstr "Fecha hasta"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__display_name
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__display_name
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__display_name
msgid "Display Name"
msgstr "Nombre a mostrar"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__date_to
msgid "End Date"
msgstr "Fecha final"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.stock_card_report_wizard_form
msgid "Export PDF"
msgstr "Exportar a PDF"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.stock_card_report_wizard_form
msgid "Export XLSX"
msgstr "Exportar XLSX"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__id
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__id
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__id
msgid "ID"
msgstr "ID"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_lines_header
msgid "In"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_report_base
msgid "Initial"
msgstr "Inicial"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__is_initial
msgid "Is Initial"
msgstr "Es inicial"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report____last_update
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard____last_update
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view____last_update
msgid "Last Modified on"
msgstr "Última modificación el"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__write_uid
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__write_uid
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__write_uid
msgid "Last Updated by"
msgstr "Última actualización por"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__write_date
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__write_date
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__write_date
msgid "Last Updated on"
msgstr "Ultima actualización en"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__location_id
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__location_id
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__location_id
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_report_filters
msgid "Location"
msgstr "Ubicación"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__location_dest_id
msgid "Location Dest"
msgstr "Ubicación destino"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_lines_header
msgid "Out"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__date_range_id
msgid "Period"
msgstr "Periodo"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__picking_id
msgid "Picking"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__product_ids
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_id
msgid "Product"
msgstr "Producto"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_in
msgid "Product In"
msgstr "Entrada"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_out
msgid "Product Out"
msgstr "Salida"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_qty
msgid "Product Qty"
msgstr "Cantidad"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_uom
msgid "Product Uom"
msgstr "Unidad de medida"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_uom_qty
msgid "Product Uom Qty"
msgstr "Cantidad uom"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__product_ids
msgid "Products"
msgstr "Productos"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__reference
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_lines_header
msgid "Reference"
msgstr "Referencia"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__results
msgid "Results"
msgstr "Resultado"

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__date_from
msgid "Start Date"
msgstr "Fecha inicio"

#. module: stock_card_report
#: model:ir.actions.act_window,name:stock_card_report.stock_card_report_action
#: model:ir.ui.menu,name:stock_card_report.stock_card_report_menu
msgid "Stock Card"
msgstr "Kardex"

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_report_base
msgid "Stock Card -"
msgstr "Kardex -"

#. module: stock_card_report
#: model:ir.actions.report,name:stock_card_report.action_stock_card_report_pdf
msgid "Stock Card PDF"
msgstr "Kardex PDF"

#. module: stock_card_report
#: model:ir.actions.client,name:stock_card_report.action_report_stock_card_report_html
#: model:ir.model,name:stock_card_report.model_report_stock_card_report
msgid "Stock Card Report"
msgstr "Reporte Kardex"

#. module: stock_card_report
#: model:ir.model,name:stock_card_report.model_stock_card_report_wizard
msgid "Stock Card Report Wizard"
msgstr "Kardex Wizard"

#. module: stock_card_report
#: model:ir.model,name:stock_card_report.model_report_stock_card_report_report_stock_card_report_xlsx
msgid "Stock Card Report XLSX"
msgstr "Reporte Kardex XLSX"

#. module: stock_card_report
#: model:ir.model,name:stock_card_report.model_stock_card_view
msgid "Stock Card View"
msgstr "Vista Kardex"

#. module: stock_card_report
#: model:ir.actions.report,name:stock_card_report.action_stock_card_report_xlsx
msgid "Stock Card XLSX"
msgstr "Kardex XLSX"

#. module: stock_card_report
#: model:ir.model.fields,help:stock_card_report.field_report_stock_card_report__results
msgid "Use compute fields, so there is nothing store in database"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.stock_card_report_wizard_form
msgid "View"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.stock_card_report_wizard_form
msgid "or"
msgstr ""

#~ msgid "'Stock Card Report - [%s]' % object.location_id.display_name"
#~ msgstr "Reporte kardex"

#~ msgid "Input"
#~ msgstr "Ingreso"

#~ msgid "Output"
#~ msgstr "Salida"


===== .\stock_card_report\i18n\stock_card_report.pot =====
# Translation of Odoo Server.
# This file contains the translation of the following modules:
# 	* stock_card_report
#
msgid ""
msgstr ""
"Project-Id-Version: Odoo Server 15.0\n"
"Report-Msgid-Bugs-To: \n"
"Last-Translator: \n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: \n"
"Plural-Forms: \n"

#. module: stock_card_report
#: model:ir.actions.report,print_report_name:stock_card_report.action_stock_card_report_pdf
msgid "'Stock Card Report - [%s]' % (object.location_id.complete_name)"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_buttons
msgid "<span class=\"fa fa-download\"/>Export"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_buttons
msgid "<span class=\"fa fa-print\"/>Print"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.internal_layout
msgid "<span class=\"page\"/>/<span class=\"topage\"/>"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_lines_header
msgid "Balance"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.stock_card_report_wizard_form
msgid "Cancel"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__create_uid
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__create_uid
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__create_uid
msgid "Created by"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__create_date
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__create_date
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__create_date
msgid "Created on"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__date
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_lines_header
msgid "Date"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__date_from
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_report_filters
msgid "Date From"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__date_to
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_report_filters
msgid "Date To"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__display_name
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__display_name
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__display_name
msgid "Display Name"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__date_to
msgid "End Date"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.stock_card_report_wizard_form
msgid "Export PDF"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.stock_card_report_wizard_form
msgid "Export XLSX"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__id
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__id
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__id
msgid "ID"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_lines_header
msgid "In"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_report_base
msgid "Initial"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__is_initial
msgid "Is Initial"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report____last_update
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard____last_update
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view____last_update
msgid "Last Modified on"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__write_uid
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__write_uid
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__write_uid
msgid "Last Updated by"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__write_date
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__write_date
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__write_date
msgid "Last Updated on"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__location_id
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__location_id
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__location_id
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_report_filters
msgid "Location"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__location_dest_id
msgid "Location Dest"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_lines_header
msgid "Out"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__date_range_id
msgid "Period"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__picking_id
msgid "Picking"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__product_ids
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_id
msgid "Product"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_in
msgid "Product In"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_out
msgid "Product Out"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_qty
msgid "Product Qty"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_uom
msgid "Product Uom"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__product_uom_qty
msgid "Product Uom Qty"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__product_ids
msgid "Products"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_view__reference
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_lines_header
msgid "Reference"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_report_stock_card_report__results
msgid "Results"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,field_description:stock_card_report.field_stock_card_report_wizard__date_from
msgid "Start Date"
msgstr ""

#. module: stock_card_report
#: model:ir.actions.act_window,name:stock_card_report.stock_card_report_action
#: model:ir.ui.menu,name:stock_card_report.stock_card_report_menu
msgid "Stock Card"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.report_stock_card_report_base
msgid "Stock Card -"
msgstr ""

#. module: stock_card_report
#: model:ir.actions.report,name:stock_card_report.action_stock_card_report_pdf
msgid "Stock Card PDF"
msgstr ""

#. module: stock_card_report
#: model:ir.actions.client,name:stock_card_report.action_report_stock_card_report_html
#: model:ir.model,name:stock_card_report.model_report_stock_card_report
msgid "Stock Card Report"
msgstr ""

#. module: stock_card_report
#: model:ir.model,name:stock_card_report.model_stock_card_report_wizard
msgid "Stock Card Report Wizard"
msgstr ""

#. module: stock_card_report
#: model:ir.model,name:stock_card_report.model_report_stock_card_report_report_stock_card_report_xlsx
msgid "Stock Card Report XLSX"
msgstr ""

#. module: stock_card_report
#: model:ir.model,name:stock_card_report.model_stock_card_view
msgid "Stock Card View"
msgstr ""

#. module: stock_card_report
#: model:ir.actions.report,name:stock_card_report.action_stock_card_report_xlsx
msgid "Stock Card XLSX"
msgstr ""

#. module: stock_card_report
#: model:ir.model.fields,help:stock_card_report.field_report_stock_card_report__results
msgid "Use compute fields, so there is nothing store in database"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.stock_card_report_wizard_form
msgid "View"
msgstr ""

#. module: stock_card_report
#: model_terms:ir.ui.view,arch_db:stock_card_report.stock_card_report_wizard_form
msgid "or"
msgstr ""


===== .\stock_card_report\readme\CONTRIBUTORS.rst =====
* Pimolnat Suntian <pimolnats@ecosoft.co.th>
* Prapassorn Sornkaew <prapassorn.s@prothaitechnology.com>
* Emad Shaaban <emad.shaaban92@gmail.com>


===== .\stock_card_report\readme\DESCRIPTION.rst =====
Stock Card Report is the report that display movement (in/out) of a product in a specified location and date range.


===== .\stock_card_report\readme\USAGE.rst =====
To use this module, you need to:

#. Go to Inventory > Reporting > Stock Card.
#. Select Start date, End date, Products, Location.
#. Choose View or Export PDF or Export XLSX or Cancel.


===== .\stock_card_report\reports\stock_card_report.py =====
# Copyright 2019 Ecosoft Co., Ltd. (http://ecosoft.co.th)
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl).

from odoo import api, fields, models


class StockCardView(models.TransientModel):
    _name = "stock.card.view"
    _description = "Stock Card View"
    _order = "date"

    date = fields.Datetime()
    product_id = fields.Many2one(comodel_name="product.product")
    product_qty = fields.Float()
    product_uom_qty = fields.Float()
    product_uom = fields.Many2one(comodel_name="uom.uom")
    reference = fields.Char()
    location_id = fields.Many2one(comodel_name="stock.location")
    location_dest_id = fields.Many2one(comodel_name="stock.location")
    is_initial = fields.Boolean()
    product_in = fields.Float()
    product_out = fields.Float()
    picking_id = fields.Many2one(comodel_name="stock.picking")

    def name_get(self):
        result = []
        for rec in self:
            name = rec.reference
            if rec.picking_id.origin:
                name = "{} ({})".format(name, rec.picking_id.origin)
            result.append((rec.id, name))
        return result


class StockCardReport(models.TransientModel):
    _name = "report.stock.card.report"
    _description = "Stock Card Report"

    # Filters fields, used for data computation
    date_from = fields.Date()
    date_to = fields.Date()
    product_ids = fields.Many2many(comodel_name="product.product")
    location_id = fields.Many2one(comodel_name="stock.location")

    # Data fields, used to browse report data
    results = fields.Many2many(
        comodel_name="stock.card.view",
        compute="_compute_results",
        help="Use compute fields, so there is nothing store in database",
    )

    def _compute_results(self):
        self.ensure_one()
        date_from = self.date_from or "0001-01-01"
        self.date_to = self.date_to or fields.Date.context_today(self)
        locations = self.env["stock.location"].search(
            [("id", "child_of", [self.location_id.id])]
        )
        self._cr.execute(
            """
            SELECT move.date, move.product_id, move.product_qty,
                move.product_uom_qty, move.product_uom, move.reference,
                move.location_id, move.location_dest_id,
                case when move.location_dest_id in %s
                    then move.product_qty end as product_in,
                case when move.location_id in %s
                    then move.product_qty end as product_out,
                case when move.date < %s then True else False end as is_initial,
                move.picking_id
            FROM stock_move move
            WHERE (move.location_id in %s or move.location_dest_id in %s)
                and move.state = 'done' and move.product_id in %s
                and CAST(move.date AS date) <= %s
            ORDER BY move.date, move.reference
        """,
            (
                tuple(locations.ids),
                tuple(locations.ids),
                date_from,
                tuple(locations.ids),
                tuple(locations.ids),
                tuple(self.product_ids.ids),
                self.date_to,
            ),
        )
        stock_card_results = self._cr.dictfetchall()
        ReportLine = self.env["stock.card.view"]
        self.results = [ReportLine.new(line).id for line in stock_card_results]

    def _get_initial(self, product_line):
        product_input_qty = sum(product_line.mapped("product_in"))
        product_output_qty = sum(product_line.mapped("product_out"))
        return product_input_qty - product_output_qty

    def print_report(self, report_type="qweb"):
        self.ensure_one()
        action = (
            report_type == "xlsx"
            and self.env.ref("stock_card_report.action_stock_card_report_xlsx")
            or self.env.ref("stock_card_report.action_stock_card_report_pdf")
        )
        return action.report_action(self, config=False)

    def _get_html(self):
        result = {}
        rcontext = {}
        report = self.browse(self._context.get("active_id"))
        if report:
            rcontext["o"] = report
            result["html"] = self.env.ref(
                "stock_card_report.report_stock_card_report_html"
            )._render(rcontext)
        return result

    @api.model
    def get_html(self, given_context=None):
        return self.with_context(**(given_context or {}))._get_html()


===== .\stock_card_report\reports\stock_card_report.xml =====
<odoo>

    <template id="stock_card_report.internal_layout">
        <div class="article">
            <link
                href="/stock_card_report/static/src/css/report.css"
                rel="stylesheet"
            />
            <t t-out="0" />
        </div>
        <div class="footer">
            <div class="row">
                <div class="col-6 custom_footer">
                    <span
                        t-out="context_timestamp(datetime.datetime.now()).strftime('%Y-%m-%d')"
                    />
                </div>
                <div class="col-6 text-right custom_footer">
                    <span class="page" />/<span class="topage" />
                </div>
            </div>
        </div>
    </template>

    <template id="report_buttons">
        <div class="button_row">
            <button class="o_stock_card_reports_print btn btn-sm oe_button"><span
                    class="fa fa-print"
                />Print</button>
            <button class="o_stock_card_reports_export btn btn-sm oe_button"><span
                    class="fa fa-download"
                />Export</button>
        </div>
    </template>

    <template id="report_stock_card_report_html">
        <div class="o_stock_card_reports_page">
            <t t-call="stock_card_report.report_buttons" />
            <t t-call="stock_card_report.report_stock_card_report_base" />
        </div>
    </template>

    <template id="stock_card_report.report_stock_card_report_pdf">
        <t t-call="web.html_container">
            <t t-foreach="docs" t-as="o">
                <t t-call="stock_card_report.internal_layout">
                    <t t-call="stock_card_report.report_stock_card_report_base" />
                </t>
            </t>
        </t>
    </template>

    <template id="stock_card_report.report_stock_card_report_base">
        <t t-foreach="o.product_ids" t-as="product">
            <div class="page">
                <div class="row">
                    <t t-set="title">[<t t-out="product.product_tmpl_id.code" />] <t t-out="product.name" /></t>
                    <h4 class="mt0" t-out="title" style="text-align: center;" />
                </div>
                <!-- Display filters -->
                <t t-call="stock_card_report.report_stock_card_report_filters" />
                <!-- Display stock card table -->
                <div class="act_as_table data_table mt4" style="width: 100%;">
                    <!-- Display header line-->
                    <t t-call="stock_card_report.report_stock_card_lines_header" />
                    <!-- Display initial lines -->
                    <t
                        t-set="initial"
                        t-value="o._get_initial(o.results.filtered(lambda l: l.product_id == product and l.is_initial))"
                    />
                    <div class="act_as_row lines">
                        <div class="act_as_cell" />
                        <div class="act_as_cell">
                            Initial
                        </div>
                        <div class="act_as_cell" />
                        <div class="act_as_cell" />
                        <div class="act_as_cell right">
                            <t t-out="'{0:,.3f}'.format(initial)" />
                        </div>
                    </div>
                    <!-- Display each lines -->
                    <t t-set="product_balance" t-value="initial" />
                    <t
                        t-foreach="o.results.filtered(lambda l: l.product_id == product and not l.is_initial)"
                        t-as="product_line"
                    >
                        <t
                            t-set="product_balance"
                            t-value="product_balance + product_line.product_in - product_line.product_out"
                        />
                        <t t-call="stock_card_report.report_stock_card_lines" />
                    </t>
                </div>
                <p style="page-break-before:always;" />
            </div>
        </t>
    </template>

    <template id="stock_card_report.report_stock_card_report_filters">
        <div class="act_as_table data_table" style="width: 100%;">
            <div class="act_as_row labels">
                <div class="act_as_cell">Date From</div>
                <div class="act_as_cell">Date To</div>
                <div class="act_as_cell">Location</div>
            </div>
            <div class="act_as_row">
                <div class="act_as_cell">
                    <span t-field="o.date_from" />
                </div>
                <div class="act_as_cell">
                    <span t-field="o.date_to" />
                </div>
                <div class="act_as_cell">
                    <span t-field="o.location_id" />
                </div>
            </div>
        </div>
    </template>

    <template id="stock_card_report.report_stock_card_lines_header">
        <div class="act_as_thead">
            <div class="act_as_row labels">
                <div class="act_as_cell">Date</div>
                <div class="act_as_cell">Reference</div>
                <div class="act_as_cell">In</div>
                <div class="act_as_cell">Out</div>
                <div class="act_as_cell">Balance</div>
            </div>
        </div>
    </template>

    <template id="stock_card_report.report_stock_card_lines">
        <div class="act_as_row lines">
            <div class="act_as_cell left">
                <t t-out="product_line.date.strftime('%Y-%m-%d')" />
            </div>
            <div class="act_as_cell left">
                <t t-out="product_line.display_name" />
            </div>
            <div class="act_as_cell right">
                <t t-out="'{0:,.3f}'.format(product_line.product_in)" />
            </div>
            <div class="act_as_cell right">
                <t t-out="'{0:,.3f}'.format(product_line.product_out)" />
            </div>
            <div class="act_as_cell right">
                <t t-out="'{0:,.3f}'.format(product_balance)" />
            </div>
        </div>
   </template>

</odoo>


===== .\stock_card_report\reports\stock_card_report_xlsx.py =====
# Copyright 2019 Ecosoft Co., Ltd. (http://ecosoft.co.th)
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl).

import logging

from odoo import models

from odoo.addons.report_xlsx_helper.report.report_xlsx_format import (
    FORMATS,
    XLS_HEADERS,
)

_logger = logging.getLogger(__name__)


class ReportStockCardReportXlsx(models.AbstractModel):
    _name = "report.stock_card_report.report_stock_card_report_xlsx"
    _description = "Stock Card Report XLSX"
    _inherit = "report.report_xlsx.abstract"

    def generate_xlsx_report(self, workbook, data, objects):
        self._define_formats(workbook)
        for product in objects.product_ids:
            for ws_params in self._get_ws_params(workbook, data, product):
                ws_name = ws_params.get("ws_name")
                ws_name = self._check_ws_name(ws_name)
                ws = workbook.add_worksheet(ws_name)
                generate_ws_method = getattr(self, ws_params["generate_ws_method"])
                generate_ws_method(workbook, ws, ws_params, data, objects, product)

    def _get_ws_params(self, wb, data, product):
        filter_template = {
            "1_date_from": {
                "header": {"value": "Date from"},
                "data": {
                    "value": self._render("date_from"),
                    "format": FORMATS["format_tcell_date_center"],
                },
            },
            "2_date_to": {
                "header": {"value": "Date to"},
                "data": {
                    "value": self._render("date_to"),
                    "format": FORMATS["format_tcell_date_center"],
                },
            },
            "3_location": {
                "header": {"value": "Location"},
                "data": {
                    "value": self._render("location"),
                    "format": FORMATS["format_tcell_center"],
                },
            },
        }
        initial_template = {
            "1_ref": {
                "data": {"value": "Initial", "format": FORMATS["format_tcell_center"]},
                "colspan": 4,
            },
            "2_balance": {
                "data": {
                    "value": self._render("balance"),
                    "format": FORMATS["format_tcell_amount_right"],
                }
            },
        }
        stock_card_template = {
            "1_date": {
                "header": {"value": "Date"},
                "data": {
                    "value": self._render("date"),
                    "format": FORMATS["format_tcell_date_left"],
                },
                "width": 25,
            },
            "2_reference": {
                "header": {"value": "Reference"},
                "data": {
                    "value": self._render("reference"),
                    "format": FORMATS["format_tcell_left"],
                },
                "width": 25,
            },
            "3_input": {
                "header": {"value": "In"},
                "data": {"value": self._render("input")},
                "width": 25,
            },
            "4_output": {
                "header": {"value": "Out"},
                "data": {"value": self._render("output")},
                "width": 25,
            },
            "5_balance": {
                "header": {"value": "Balance"},
                "data": {"value": self._render("balance")},
                "width": 25,
            },
        }

        ws_params = {
            "ws_name": product.name,
            "generate_ws_method": "_stock_card_report",
            "title": "Stock Card - {}".format(product.name),
            "wanted_list_filter": [k for k in sorted(filter_template.keys())],
            "col_specs_filter": filter_template,
            "wanted_list_initial": [k for k in sorted(initial_template.keys())],
            "col_specs_initial": initial_template,
            "wanted_list": [k for k in sorted(stock_card_template.keys())],
            "col_specs": stock_card_template,
        }
        return [ws_params]

    def _stock_card_report(self, wb, ws, ws_params, data, objects, product):
        ws.set_portrait()
        ws.fit_to_pages(1, 0)
        ws.set_header(XLS_HEADERS["xls_headers"]["standard"])
        ws.set_footer(XLS_HEADERS["xls_footers"]["standard"])
        self._set_column_width(ws, ws_params)
        # Title
        row_pos = 0
        row_pos = self._write_ws_title(ws, row_pos, ws_params, True)
        # Filter Table
        row_pos = self._write_line(
            ws,
            row_pos,
            ws_params,
            col_specs_section="header",
            default_format=FORMATS["format_theader_blue_center"],
            col_specs="col_specs_filter",
            wanted_list="wanted_list_filter",
        )
        row_pos = self._write_line(
            ws,
            row_pos,
            ws_params,
            col_specs_section="data",
            render_space={
                "date_from": objects.date_from or "",
                "date_to": objects.date_to or "",
                "location": objects.location_id.display_name or "",
            },
            col_specs="col_specs_filter",
            wanted_list="wanted_list_filter",
        )
        row_pos += 1
        # Stock Card Table
        row_pos = self._write_line(
            ws,
            row_pos,
            ws_params,
            col_specs_section="header",
            default_format=FORMATS["format_theader_blue_center"],
        )
        ws.freeze_panes(row_pos, 0)
        balance = objects._get_initial(
            objects.results.filtered(lambda l: l.product_id == product and l.is_initial)
        )
        row_pos = self._write_line(
            ws,
            row_pos,
            ws_params,
            col_specs_section="data",
            render_space={"balance": balance},
            col_specs="col_specs_initial",
            wanted_list="wanted_list_initial",
        )
        product_lines = objects.results.filtered(
            lambda l: l.product_id == product and not l.is_initial
        )
        for line in product_lines:
            balance += line.product_in - line.product_out
            row_pos = self._write_line(
                ws,
                row_pos,
                ws_params,
                col_specs_section="data",
                render_space={
                    "date": line.date or "",
                    "reference": line.display_name or "",
                    "input": line.product_in or 0,
                    "output": line.product_out or 0,
                    "balance": balance,
                },
                default_format=FORMATS["format_tcell_amount_right"],
            )


===== .\stock_card_report\reports\__init__.py =====
# Copyright 2019 Ecosoft Co., Ltd. (http://ecosoft.co.th)
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl).

from . import stock_card_report
from . import stock_card_report_xlsx


===== .\stock_card_report\security\ir.model.access.csv =====
id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
access_stock_card_report_wizard,access.stock.card.report.wizard,model_stock_card_report_wizard,base.group_user,1,1,1,0
access_report_stock_card_report,access.report.stock.card.report,model_report_stock_card_report,base.group_user,1,1,1,0
access_stock_card_view,access.stock.card.view,model_stock_card_view,base.group_user,1,1,1,0


===== .\stock_card_report\static\description\index.html =====
<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="generator" content="Docutils: https://docutils.sourceforge.io/" />
<title>Stock Card Report</title>
<style type="text/css">

/*
:Author: David Goodger (goodger@python.org)
:Id: $Id: html4css1.css 8954 2022-01-20 10:10:25Z milde $
:Copyright: This stylesheet has been placed in the public domain.

Default cascading style sheet for the HTML output of Docutils.

See https://docutils.sourceforge.io/docs/howto/html-stylesheets.html for how to
customize this style sheet.
*/

/* used to remove borders from tables and images */
.borderless, table.borderless td, table.borderless th {
  border: 0 }

table.borderless td, table.borderless th {
  /* Override padding for "table.docutils td" with "! important".
     The right padding separates the table cells. */
  padding: 0 0.5em 0 0 ! important }

.first {
  /* Override more specific margin styles with "! important". */
  margin-top: 0 ! important }

.last, .with-subtitle {
  margin-bottom: 0 ! important }

.hidden {
  display: none }

.subscript {
  vertical-align: sub;
  font-size: smaller }

.superscript {
  vertical-align: super;
  font-size: smaller }

a.toc-backref {
  text-decoration: none ;
  color: black }

blockquote.epigraph {
  margin: 2em 5em ; }

dl.docutils dd {
  margin-bottom: 0.5em }

object[type="image/svg+xml"], object[type="application/x-shockwave-flash"] {
  overflow: hidden;
}

/* Uncomment (and remove this text!) to get bold-faced definition list terms
dl.docutils dt {
  font-weight: bold }
*/

div.abstract {
  margin: 2em 5em }

div.abstract p.topic-title {
  font-weight: bold ;
  text-align: center }

div.admonition, div.attention, div.caution, div.danger, div.error,
div.hint, div.important, div.note, div.tip, div.warning {
  margin: 2em ;
  border: medium outset ;
  padding: 1em }

div.admonition p.admonition-title, div.hint p.admonition-title,
div.important p.admonition-title, div.note p.admonition-title,
div.tip p.admonition-title {
  font-weight: bold ;
  font-family: sans-serif }

div.attention p.admonition-title, div.caution p.admonition-title,
div.danger p.admonition-title, div.error p.admonition-title,
div.warning p.admonition-title, .code .error {
  color: red ;
  font-weight: bold ;
  font-family: sans-serif }

/* Uncomment (and remove this text!) to get reduced vertical space in
   compound paragraphs.
div.compound .compound-first, div.compound .compound-middle {
  margin-bottom: 0.5em }

div.compound .compound-last, div.compound .compound-middle {
  margin-top: 0.5em }
*/

div.dedication {
  margin: 2em 5em ;
  text-align: center ;
  font-style: italic }

div.dedication p.topic-title {
  font-weight: bold ;
  font-style: normal }

div.figure {
  margin-left: 2em ;
  margin-right: 2em }

div.footer, div.header {
  clear: both;
  font-size: smaller }

div.line-block {
  display: block ;
  margin-top: 1em ;
  margin-bottom: 1em }

div.line-block div.line-block {
  margin-top: 0 ;
  margin-bottom: 0 ;
  margin-left: 1.5em }

div.sidebar {
  margin: 0 0 0.5em 1em ;
  border: medium outset ;
  padding: 1em ;
  background-color: #ffffee ;
  width: 40% ;
  float: right ;
  clear: right }

div.sidebar p.rubric {
  font-family: sans-serif ;
  font-size: medium }

div.system-messages {
  margin: 5em }

div.system-messages h1 {
  color: red }

div.system-message {
  border: medium outset ;
  padding: 1em }

div.system-message p.system-message-title {
  color: red ;
  font-weight: bold }

div.topic {
  margin: 2em }

h1.section-subtitle, h2.section-subtitle, h3.section-subtitle,
h4.section-subtitle, h5.section-subtitle, h6.section-subtitle {
  margin-top: 0.4em }

h1.title {
  text-align: center }

h2.subtitle {
  text-align: center }

hr.docutils {
  width: 75% }

img.align-left, .figure.align-left, object.align-left, table.align-left {
  clear: left ;
  float: left ;
  margin-right: 1em }

img.align-right, .figure.align-right, object.align-right, table.align-right {
  clear: right ;
  float: right ;
  margin-left: 1em }

img.align-center, .figure.align-center, object.align-center {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

table.align-center {
  margin-left: auto;
  margin-right: auto;
}

.align-left {
  text-align: left }

.align-center {
  clear: both ;
  text-align: center }

.align-right {
  text-align: right }

/* reset inner alignment in figures */
div.align-right {
  text-align: inherit }

/* div.align-center * { */
/*   text-align: left } */

.align-top    {
  vertical-align: top }

.align-middle {
  vertical-align: middle }

.align-bottom {
  vertical-align: bottom }

ol.simple, ul.simple {
  margin-bottom: 1em }

ol.arabic {
  list-style: decimal }

ol.loweralpha {
  list-style: lower-alpha }

ol.upperalpha {
  list-style: upper-alpha }

ol.lowerroman {
  list-style: lower-roman }

ol.upperroman {
  list-style: upper-roman }

p.attribution {
  text-align: right ;
  margin-left: 50% }

p.caption {
  font-style: italic }

p.credits {
  font-style: italic ;
  font-size: smaller }

p.label {
  white-space: nowrap }

p.rubric {
  font-weight: bold ;
  font-size: larger ;
  color: maroon ;
  text-align: center }

p.sidebar-title {
  font-family: sans-serif ;
  font-weight: bold ;
  font-size: larger }

p.sidebar-subtitle {
  font-family: sans-serif ;
  font-weight: bold }

p.topic-title {
  font-weight: bold }

pre.address {
  margin-bottom: 0 ;
  margin-top: 0 ;
  font: inherit }

pre.literal-block, pre.doctest-block, pre.math, pre.code {
  margin-left: 2em ;
  margin-right: 2em }

pre.code .ln { color: grey; } /* line numbers */
pre.code, code { background-color: #eeeeee }
pre.code .comment, code .comment { color: #5C6576 }
pre.code .keyword, code .keyword { color: #3B0D06; font-weight: bold }
pre.code .literal.string, code .literal.string { color: #0C5404 }
pre.code .name.builtin, code .name.builtin { color: #352B84 }
pre.code .deleted, code .deleted { background-color: #DEB0A1}
pre.code .inserted, code .inserted { background-color: #A3D289}

span.classifier {
  font-family: sans-serif ;
  font-style: oblique }

span.classifier-delimiter {
  font-family: sans-serif ;
  font-weight: bold }

span.interpreted {
  font-family: sans-serif }

span.option {
  white-space: nowrap }

span.pre {
  white-space: pre }

span.problematic {
  color: red }

span.section-subtitle {
  /* font-size relative to parent (h1..h6 element) */
  font-size: 80% }

table.citation {
  border-left: solid 1px gray;
  margin-left: 1px }

table.docinfo {
  margin: 2em 4em }

table.docutils {
  margin-top: 0.5em ;
  margin-bottom: 0.5em }

table.footnote {
  border-left: solid 1px black;
  margin-left: 1px }

table.docutils td, table.docutils th,
table.docinfo td, table.docinfo th {
  padding-left: 0.5em ;
  padding-right: 0.5em ;
  vertical-align: top }

table.docutils th.field-name, table.docinfo th.docinfo-name {
  font-weight: bold ;
  text-align: left ;
  white-space: nowrap ;
  padding-left: 0 }

/* "booktabs" style (no vertical lines) */
table.docutils.booktabs {
  border: 0px;
  border-top: 2px solid;
  border-bottom: 2px solid;
  border-collapse: collapse;
}
table.docutils.booktabs * {
  border: 0px;
}
table.docutils.booktabs th {
  border-bottom: thin solid;
  text-align: left;
}

h1 tt.docutils, h2 tt.docutils, h3 tt.docutils,
h4 tt.docutils, h5 tt.docutils, h6 tt.docutils {
  font-size: 100% }

ul.auto-toc {
  list-style-type: none }

</style>
</head>
<body>
<div class="document" id="stock-card-report">
<h1 class="title">Stock Card Report</h1>

<!-- !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!! This file is generated by oca-gen-addon-readme !!
!! changes will be overwritten.                   !!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!! source digest: sha256:99a8eb509031fd2e19d4ee059dab367e0f3f905238babb8ce9ce7105c43c1836
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! -->
<p><a class="reference external image-reference" href="https://odoo-community.org/page/development-status"><img alt="Beta" src="https://img.shields.io/badge/maturity-Beta-yellow.png" /></a> <a class="reference external image-reference" href="http://www.gnu.org/licenses/agpl-3.0-standalone.html"><img alt="License: AGPL-3" src="https://img.shields.io/badge/licence-AGPL--3-blue.png" /></a> <a class="reference external image-reference" href="https://github.com/OCA/stock-logistics-reporting/tree/15.0/stock_card_report"><img alt="OCA/stock-logistics-reporting" src="https://img.shields.io/badge/github-OCA%2Fstock--logistics--reporting-lightgray.png?logo=github" /></a> <a class="reference external image-reference" href="https://translation.odoo-community.org/projects/stock-logistics-reporting-15-0/stock-logistics-reporting-15-0-stock_card_report"><img alt="Translate me on Weblate" src="https://img.shields.io/badge/weblate-Translate%20me-F47D42.png" /></a> <a class="reference external image-reference" href="https://runboat.odoo-community.org/builds?repo=OCA/stock-logistics-reporting&amp;target_branch=15.0"><img alt="Try me on Runboat" src="https://img.shields.io/badge/runboat-Try%20me-875A7B.png" /></a></p>
<p>Stock Card Report is the report that display movement (in/out) of a product in a specified location and date range.</p>
<p><strong>Table of contents</strong></p>
<div class="contents local topic" id="contents">
<ul class="simple">
<li><a class="reference internal" href="#usage" id="toc-entry-1">Usage</a></li>
<li><a class="reference internal" href="#bug-tracker" id="toc-entry-2">Bug Tracker</a></li>
<li><a class="reference internal" href="#credits" id="toc-entry-3">Credits</a><ul>
<li><a class="reference internal" href="#authors" id="toc-entry-4">Authors</a></li>
<li><a class="reference internal" href="#contributors" id="toc-entry-5">Contributors</a></li>
<li><a class="reference internal" href="#maintainers" id="toc-entry-6">Maintainers</a></li>
</ul>
</li>
</ul>
</div>
<div class="section" id="usage">
<h1><a class="toc-backref" href="#toc-entry-1">Usage</a></h1>
<p>To use this module, you need to:</p>
<ol class="arabic simple">
<li>Go to Inventory &gt; Reporting &gt; Stock Card.</li>
<li>Select Start date, End date, Products, Location.</li>
<li>Choose View or Export PDF or Export XLSX or Cancel.</li>
</ol>
</div>
<div class="section" id="bug-tracker">
<h1><a class="toc-backref" href="#toc-entry-2">Bug Tracker</a></h1>
<p>Bugs are tracked on <a class="reference external" href="https://github.com/OCA/stock-logistics-reporting/issues">GitHub Issues</a>.
In case of trouble, please check there if your issue has already been reported.
If you spotted it first, help us to smash it by providing a detailed and welcomed
<a class="reference external" href="https://github.com/OCA/stock-logistics-reporting/issues/new?body=module:%20stock_card_report%0Aversion:%2015.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**">feedback</a>.</p>
<p>Do not contact contributors directly about support or help with technical issues.</p>
</div>
<div class="section" id="credits">
<h1><a class="toc-backref" href="#toc-entry-3">Credits</a></h1>
<div class="section" id="authors">
<h2><a class="toc-backref" href="#toc-entry-4">Authors</a></h2>
<ul class="simple">
<li>Ecosoft</li>
</ul>
</div>
<div class="section" id="contributors">
<h2><a class="toc-backref" href="#toc-entry-5">Contributors</a></h2>
<ul class="simple">
<li>Pimolnat Suntian &lt;<a class="reference external" href="mailto:pimolnats&#64;ecosoft.co.th">pimolnats&#64;ecosoft.co.th</a>&gt;</li>
<li>Prapassorn Sornkaew &lt;<a class="reference external" href="mailto:prapassorn.s&#64;prothaitechnology.com">prapassorn.s&#64;prothaitechnology.com</a>&gt;</li>
<li>Emad Shaaban &lt;<a class="reference external" href="mailto:emad.shaaban92&#64;gmail.com">emad.shaaban92&#64;gmail.com</a>&gt;</li>
</ul>
</div>
<div class="section" id="maintainers">
<h2><a class="toc-backref" href="#toc-entry-6">Maintainers</a></h2>
<p>This module is maintained by the OCA.</p>
<a class="reference external image-reference" href="https://odoo-community.org"><img alt="Odoo Community Association" src="https://odoo-community.org/logo.png" /></a>
<p>OCA, or the Odoo Community Association, is a nonprofit organization whose
mission is to support the collaborative development of Odoo features and
promote its widespread use.</p>
<p>This module is part of the <a class="reference external" href="https://github.com/OCA/stock-logistics-reporting/tree/15.0/stock_card_report">OCA/stock-logistics-reporting</a> project on GitHub.</p>
<p>You are welcome to contribute. To learn how please visit <a class="reference external" href="https://odoo-community.org/page/Contribute">https://odoo-community.org/page/Contribute</a>.</p>
</div>
</div>
</div>
</body>
</html>


===== .\stock_card_report\static\src\css\report.css =====
.act_as_table {
    display: table !important;
    background-color: white;
}
.act_as_row {
    display: table-row !important;
    page-break-inside: avoid;
}
.act_as_cell {
    display: table-cell !important;
    page-break-inside: avoid;
}
.act_as_thead {
    display: table-header-group !important;
}
.act_as_row.labels {
    background-color: #f0f0f0 !important;
}
.data_table {
    width: 100% !important;
    border-left: 0px;
    border-right: 0px;
    text-align: center;
    font-size: 15px;
    padding-right: 3px;
    padding-left: 3px;
    padding-top: 2px;
    padding-bottom: 2px;
    border-collapse: collapse;
}
.data_table .act_as_cell {
    border: 1px solid lightGrey;
    text-align: center;
}
.data_table .act_as_cell {
    word-wrap: break-word;
}
.data_table .act_as_row.labels {
    font-weight: bold;
}
.act_as_cell.left {
    text-align: left;
}
.act_as_cell.right {
    text-align: right;
}
.custom_footer {
    font-size: 10px !important;
}
.button_row {
    padding-bottom: 10px;
}
.o_stock_card_reports_page {
    padding-top: 10px;
    width: 90%;
    margin-right: auto;
    margin-left: auto;
    font-family: Helvetica, Arial;
}


===== .\stock_card_report\static\src\js\stock_card_report_backend.esm.js =====
/** @odoo-module **/

import AbstractAction from "web.AbstractAction";
import ReportWidget from "web.Widget";
import core from "web.core";

export const report_backend = AbstractAction.extend({
    hasControlPanel: true,
    // Stores all the parameters of the action.
    events: {
        "click .o_stock_card_reports_print": "print",
        "click .o_stock_card_reports_export": "export",
    },
    init: function (parent, action) {
        this._super.apply(this, arguments);
        this.actionManager = parent;
        this.given_context = {};
        this.odoo_context = action.context;
        this.controller_url = action.context.url;
        if (action.context.context) {
            this.given_context = action.context.context;
        }
        this.given_context.active_id =
            action.context.active_id || action.params.active_id;
        this.given_context.model = action.context.active_model || false;
        this.given_context.ttype = action.context.ttype || false;
    },
    willStart: function () {
        return Promise.all([this._super.apply(this, arguments), this.get_html()]);
    },
    set_html: function () {
        var self = this;
        var def = Promise.resolve();
        if (!this.report_widget) {
            this.report_widget = new ReportWidget(this, this.given_context);
            def = this.report_widget.appendTo(this.$(".o_content"));
        }
        def.then(function () {
            self.report_widget.$el.html(self.html);
        });
    },
    start: function () {
        this.set_html();
        return this._super();
    },
    // Fetches the html and is previous report.context if any,
    // else create it
    get_html: function () {
        var self = this;
        var defs = [];
        return this._rpc({
            model: this.given_context.model,
            method: "get_html",
            args: [self.given_context],
            context: self.odoo_context,
        }).then(function (result) {
            self.html = result.html;
            defs.push(self.update_cp());
            return $.when.apply($, defs);
        });
    },
    // Updates the control panel and render the elements that have yet
    // to be rendered
    update_cp: function () {
        if (this.$buttons) {
            var status = {
                breadcrumbs: this.actionManager.get_breadcrumbs(),
                cp_content: {$buttons: this.$buttons},
            };
            return this.update_control_panel(status);
        }
    },
    do_show: function () {
        this._super();
        this.update_cp();
    },
    print: function () {
        var self = this;
        this._rpc({
            model: this.given_context.model,
            method: "print_report",
            args: [this.given_context.active_id, "qweb-pdf"],
            context: self.odoo_context,
        }).then(function (result) {
            self.do_action(result);
        });
    },
    export: function () {
        var self = this;
        this._rpc({
            model: this.given_context.model,
            method: "print_report",
            args: [this.given_context.active_id, "xlsx"],
            context: self.odoo_context,
        }).then(function (result) {
            self.do_action(result);
        });
    },
    canBeRemoved: function () {
        return Promise.resolve();
    },
});
core.action_registry.add("stock_card_report_backend", report_backend);


===== .\stock_card_report\tests\test_stock_card_report.py =====
# Copyright 2019 Ecosoft Co., Ltd. (http://ecosoft.co.th)
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl.html).

import logging
import time
from datetime import date

from odoo.tests import common
from odoo.tools import test_reports

_logger = logging.getLogger(__name__)


class TestStockCard(common.TransactionCase):
    def setUp(self):
        super().setUp()

        # Create uom:
        uom_id = self.ref("uom.product_uom_unit")

        # Create products:
        self.product_A = self.env["product.product"].create(
            {
                "name": "Product A",
                "type": "product",
                "uom_id": uom_id,
                "uom_po_id": uom_id,
            }
        )

        # Create location:
        self.location_1 = self.env.ref("stock.stock_location_stock")
        self.location_2 = self.env.ref("stock.stock_location_customers")

        # Create operation type:
        operation_type = self.env.ref("stock.picking_type_in")

        # Create stock picking:
        picking = self.env["stock.picking"].create(
            {
                "location_id": self.location_2.id,
                "location_dest_id": self.location_1.id,
                "picking_type_id": operation_type.id,
            }
        )
        self.env["stock.move"].create(
            {
                "name": self.product_A.name,
                "product_id": self.product_A.id,
                "product_uom_qty": 50.000,
                "product_uom": self.product_A.uom_id.id,
                "picking_id": picking.id,
                "location_id": self.location_2.id,
                "location_dest_id": self.location_1.id,
            }
        )
        picking.action_confirm()
        picking.move_ids_without_package.quantity_done = 50.000
        picking.button_validate()

        self.model = self._getReportModel()

        self.qweb_report_name = self._getQwebReportName()
        self.xlsx_report_name = self._getXlsxReportName()
        self.xlsx_action_name = self._getXlsxReportActionName()

        self.report_title = self._getReportTitle()

        self.base_filters = self._getBaseFilters()

        self.report = self.model.create(self.base_filters)
        self.report._compute_results()

    def test_html(self):
        test_reports.try_report(
            self.env.cr,
            self.env.uid,
            self.qweb_report_name,
            [self.report.id],
            report_type="qweb-html",
        )

    def test_qweb(self):
        test_reports.try_report(
            self.env.cr,
            self.env.uid,
            self.qweb_report_name,
            [self.report.id],
            report_type="qweb-pdf",
        )

    def test_xlsx(self):
        test_reports.try_report(
            self.env.cr,
            self.env.uid,
            self.xlsx_report_name,
            [self.report.id],
            report_type="xlsx",
        )

    def test_print(self):
        self.report.print_report("qweb")
        self.report.print_report("xlsx")

    def _getReportModel(self):
        return self.env["report.stock.card.report"]

    def _getQwebReportName(self):
        return "stock_card_report.report_stock_card_report_pdf"

    def _getXlsxReportName(self):
        return "stock_card_report.report_stock_card_report_xlsx"

    def _getXlsxReportActionName(self):
        return "stock_card_report.action_report_stock_card_report_xlsx"

    def _getReportTitle(self):
        return "Stock Card Report"

    def _getBaseFilters(self):
        return {
            "product_ids": [(6, 0, [self.product_A.id])],
            "location_id": self.location_1.id,
        }


class TestStockCardReport(common.TransactionCase):
    def setUp(self):
        super().setUp()

        # Create uom:
        uom_id = self.ref("uom.product_uom_unit")

        # Create products:
        self.product_A = self.env["product.product"].create(
            {
                "name": "Product A",
                "type": "product",
                "uom_id": uom_id,
                "uom_po_id": uom_id,
            }
        )
        self.product_B = self.env["product.product"].create(
            {
                "name": "Product B",
                "type": "product",
                "uom_id": uom_id,
                "uom_po_id": uom_id,
            }
        )

        # Create location:
        self.location_1 = self.env.ref("stock.stock_location_stock")
        self.location_2 = self.env.ref("stock.stock_location_customers")

        # Create operation type:
        operation_type = self.env.ref("stock.picking_type_in")

        # Create stock picking:
        picking_1 = self.env["stock.picking"].create(
            {
                "location_id": self.location_2.id,
                "location_dest_id": self.location_1.id,
                "picking_type_id": operation_type.id,
            }
        )
        self.env["stock.move"].create(
            {
                "name": self.product_A.name,
                "product_id": self.product_A.id,
                "product_uom_qty": 50.000,
                "product_uom": self.product_A.uom_id.id,
                "picking_id": picking_1.id,
                "location_id": self.location_2.id,
                "location_dest_id": self.location_1.id,
            }
        )
        picking_1.action_confirm()
        picking_1.move_ids_without_package.quantity_done = 50.000
        picking_1.button_validate()

        picking_2 = self.env["stock.picking"].create(
            {
                "location_id": self.location_2.id,
                "location_dest_id": self.location_1.id,
                "picking_type_id": operation_type.id,
            }
        )
        self.env["stock.move"].create(
            {
                "name": self.product_B.name,
                "product_id": self.product_B.id,
                "product_uom_qty": 100.000,
                "product_uom": self.product_B.uom_id.id,
                "picking_id": picking_2.id,
                "location_id": self.location_2.id,
                "location_dest_id": self.location_1.id,
            }
        )
        picking_2.action_confirm()
        picking_2.move_ids_without_package.quantity_done = 100.000
        picking_2.button_validate()

    def test_reports(self):
        report = self.env["report.stock.card.report"].create(
            {
                "product_ids": [(6, 0, [self.product_A.id, self.product_B.id])],
                "location_id": self.location_1.id,
            }
        )
        report._compute_results()
        report.print_report("qweb")
        report.print_report("xlsx")

    def test_get_report_html(self):
        report = self.env["report.stock.card.report"].create(
            {
                "product_ids": [(6, 0, [self.product_A.id, self.product_B.id])],
                "location_id": self.location_1.id,
            }
        )
        report._compute_results()
        report.get_html(given_context={"active_id": report.id})

    def test_wizard_date_range(self):
        date_range = self.env["date.range"]
        self.type = self.env["date.range.type"].create(
            {"name": "Month", "company_id": False, "allow_overlap": False}
        )
        dt = date_range.create(
            {
                "name": "FiscalYear",
                "date_start": time.strftime("%Y-%m-01"),
                "date_end": time.strftime("%Y-%m-28"),
                "type_id": self.type.id,
            }
        )
        wizard = self.env["stock.card.report.wizard"].create(
            {
                "date_range_id": dt.id,
                "date_from": time.strftime("%Y-%m-28"),
                "date_to": time.strftime("%Y-%m-01"),
                "product_ids": [(6, 0, [self.product_A.id, self.product_B.id])],
                "location_id": self.location_1.id,
            }
        )
        wizard._onchange_date_range_id()
        self.assertEqual(
            wizard.date_from, date(date.today().year, date.today().month, 1)
        )
        self.assertEqual(
            wizard.date_to, date(date.today().year, date.today().month, 28)
        )
        wizard._export("qweb-pdf")
        wizard.button_export_html()
        wizard.button_export_pdf()
        wizard.button_export_xlsx()


===== .\stock_card_report\tests\__init__.py =====
# Copyright 2019 Ecosoft Co., Ltd. (http://ecosoft.co.th)
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl).

from . import test_stock_card_report


===== .\stock_card_report\wizard\stock_card_report_wizard.py =====
# Copyright 2019 Ecosoft Co., Ltd. (http://ecosoft.co.th)
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl).

from odoo import api, fields, models
from odoo.tools.safe_eval import safe_eval


class StockCardReportWizard(models.TransientModel):
    _name = "stock.card.report.wizard"
    _description = "Stock Card Report Wizard"

    date_range_id = fields.Many2one(comodel_name="date.range", string="Period")
    date_from = fields.Date(string="Start Date")
    date_to = fields.Date(string="End Date")
    location_id = fields.Many2one(
        comodel_name="stock.location", string="Location", required=True
    )
    product_ids = fields.Many2many(
        comodel_name="product.product", string="Products", required=True
    )

    @api.onchange("date_range_id")
    def _onchange_date_range_id(self):
        self.date_from = self.date_range_id.date_start
        self.date_to = self.date_range_id.date_end

    def button_export_html(self):
        self.ensure_one()
        action = self.env.ref("stock_card_report.action_report_stock_card_report_html")
        vals = action.sudo().read()[0]
        context = vals.get("context", {})
        if context:
            context = safe_eval(context)
        model = self.env["report.stock.card.report"]
        report = model.create(self._prepare_stock_card_report())
        context["active_id"] = report.id
        context["active_ids"] = report.ids
        vals["context"] = context
        return vals

    def button_export_pdf(self):
        self.ensure_one()
        report_type = "qweb-pdf"
        return self._export(report_type)

    def button_export_xlsx(self):
        self.ensure_one()
        report_type = "xlsx"
        return self._export(report_type)

    def _prepare_stock_card_report(self):
        self.ensure_one()
        return {
            "date_from": self.date_from,
            "date_to": self.date_to or fields.Date.context_today(self),
            "product_ids": [(6, 0, self.product_ids.ids)],
            "location_id": self.location_id.id,
        }

    def _export(self, report_type):
        model = self.env["report.stock.card.report"]
        report = model.create(self._prepare_stock_card_report())
        return report.print_report(report_type)


===== .\stock_card_report\wizard\stock_card_report_wizard_view.xml =====
<odoo>

    <record id="stock_card_report_wizard_form" model="ir.ui.view">
        <field name="name">stock.card.report.wizard.form</field>
        <field name="model">stock.card.report.wizard</field>
        <field name="arch" type="xml">
            <form>
                <group name="criteria">
                    <group>
                        <field name="date_range_id" />
                        <field name="date_from" />
                        <field name="date_to" />
                    </group>
                    <group>
                        <field name="product_ids" widget="many2many_tags" />
                        <field name="location_id" />
                    </group>
                </group>
                <footer>
                    <button
                        name="button_export_html"
                        string="View"
                        type="object"
                        default_focus="1"
                        class="oe_highlight"
                    />
                    or
                    <button
                        name="button_export_pdf"
                        string="Export PDF"
                        type="object"
                    />
                    or
                    <button
                        name="button_export_xlsx"
                        string="Export XLSX"
                        type="object"
                    />
                    or
                    <button string="Cancel" class="oe_link" special="cancel" />
                </footer>
            </form>
        </field>
    </record>

    <record id="stock_card_report_action" model="ir.actions.act_window">
        <field name="name">Stock Card</field>
        <field name="res_model">stock.card.report.wizard</field>
        <field name="view_mode">form</field>
        <field name="target">new</field>
    </record>

    <menuitem
        id="stock_card_report_menu"
        action="stock_card_report_action"
        parent="stock.menu_warehouse_report"
        sequence="30"
    />

</odoo>


===== .\stock_card_report\wizard\__init__.py =====
# Copyright 2019 Ecosoft Co., Ltd. (http://ecosoft.co.th)
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl).

from . import stock_card_report_wizard


